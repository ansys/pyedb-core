name: GitHub CI
on:
  pull_request:
  push:
    tags:
      - '*'
    branches:
      - release-*
      - main
  workflow_dispatch:

env:
  PACKAGE_NAME: 'ansys-edb-core'
  DOCUMENTATION_CNAME: 'edb.core.docs.pyansys.com'
  MAIN_PYTHON_VERSION: '3.10'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  doc-style:
      name: Documentation Style Check
      runs-on: ubuntu-latest
      steps:
        - name: PyAnsys documentation style checks
          uses: ansys/actions/doc-style@21c9de9bee9692173780696d4a39964f20b9cfa3 # v10.1.5
          with:
            token: ${{ secrets.GITHUB_TOKEN }}
            fail-level: 'warning'

  doc-build:
    name: Documentation build
    runs-on: ubuntu-latest
    needs: [doc-style]
    steps:
      - name: Documentation build
        uses: ansys/actions/doc-build@21c9de9bee9692173780696d4a39964f20b9cfa3 # v10.1.5
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
          use-python-cache: false
          sphinxopts: '-j auto -w build_errors.txt -N -q'

  smoke-tests:
    name: Build and Smoke tests
    runs-on: ${{ matrix.os }}
    permissions:
      attestations: write
      contents: read
      id-token: write
    needs: [doc-style]
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]
        python-version: ['3.10', '3.11', '3.12', '3.13']
    steps:
      - name: Build wheelhouse and perform smoke test
        uses: ansys/actions/build-wheelhouse@21c9de9bee9692173780696d4a39964f20b9cfa3 # v10.1.5
        with:
          library-name: ${{ env.PACKAGE_NAME }}
          operating-system: ${{ matrix.os }}
          python-version: ${{ matrix.python-version }}
          attest-provenance: true

  tests:
    name: Tests and coverage
    needs: [smoke-tests]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        python-version: ['3.10', '3.11', '3.12', '3.13']
      fail-fast: false
    steps:
      - name: Install Git and checkout project
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Setup Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade .[tests]
          python -m pip install --upgrade tox-gh-actions
      - name: Test with tox
        # Only the tox environment specified in the tox.ini gh-actions is run
        run: tox -e test -- --ignore=tests/e2e

  package:
    name: Package library
    runs-on: ubuntu-latest
    needs: [tests, doc-build]
    permissions:
      attestations: write
      contents: read
      id-token: write
    steps:
      - name: Build library source and wheel artifacts
        uses: ansys/actions/build-library@21c9de9bee9692173780696d4a39964f20b9cfa3 # v10.1.5
        with:
          library-name: ${{ env.PACKAGE_NAME }}
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
          attest-provenance: true

  release:
    name: Release project
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    needs: [package]
    runs-on: ubuntu-latest
    # Specifying a GitHub environment is optional, but strongly encouraged
    environment: release
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Download the library artifacts from build-library step
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: ${{ env.PACKAGE_NAME }}-artifacts
          path: ${{ env.PACKAGE_NAME }}-artifacts
      - name: Release to PyPI using trusted publisher
        uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e # v1.13.0
        with:
          repository-url: "https://upload.pypi.org/legacy/"
          print-hash: true
          packages-dir: ${{ env.PACKAGE_NAME }}-artifacts
          skip-existing: false
      - name: Release to GitHub
        uses: ansys/actions/release-github@21c9de9bee9692173780696d4a39964f20b9cfa3 # v10.1.5
        with:
          library-name: ${{ env.PACKAGE_NAME }}
          token: ${{ secrets.GITHUB_TOKEN }}
          add-artifact-attestation-notes: true

  doc-deploy-dev:
    name: "Deploy development documentation"
    # Deploy development only when merging or pushing to the 'main' branch
    if: github.event_name == 'push' && !contains(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs: [package, tests, doc-build]
    steps:
      - uses: ansys/actions/doc-deploy-dev@21c9de9bee9692173780696d4a39964f20b9cfa3 # v10.1.5
        with:
          cname: ${{ env.DOCUMENTATION_CNAME }}
          token: ${{ secrets.GITHUB_TOKEN }}
          doc-artifact-name: documentation-html
          bot-user: ${{ secrets.PYANSYS_CI_BOT_USERNAME }}
          bot-email: ${{ secrets.PYANSYS_CI_BOT_EMAIL }}

  doc-deploy-stable:
    name: "Deploy stable documentation"
    # Deploy release documentation when creating a new tag
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: ansys/actions/doc-deploy-stable@21c9de9bee9692173780696d4a39964f20b9cfa3 # v10.1.5
        with:
          cname: ${{ env.DOCUMENTATION_CNAME }}
          token: ${{ secrets.GITHUB_TOKEN }}
          doc-artifact-name: documentation-html
          bot-user: ${{ secrets.PYANSYS_CI_BOT_USERNAME }}
          bot-email: ${{ secrets.PYANSYS_CI_BOT_EMAIL }}
