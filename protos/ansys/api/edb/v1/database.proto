// Proto file representing the EDB Database class

syntax = "proto3";

package ansys.api.edb.v1;

import "edb_messages.proto";

enum ProductIdType {
  DESIGNER = 0;
  SI_WAVE = 1;
  GENERIC_TRANSLATOR = 2;
  USER_DEFINED = 3;
  INVALID_PRODUCT = -1;
}

service DatabaseService {
  // Creates a database
  rpc Create (google.protobuf.StringValue) returns (EDBObjMessage) {}

  // Opens a database
  rpc Open (OpenDatabaseMessage) returns (EDBObjMessage) {}

  // Deletes a database
  rpc Delete (google.protobuf.StringValue) returns (google.protobuf.BoolValue) {}
  
  // Saves a database
  rpc Save (EDBObjMessage) returns (google.protobuf.BoolValue) {}
  
  // Closes a database
  rpc Close (EDBObjMessage) returns (google.protobuf.BoolValue) {} 

  // Determines whether the database is read only
  rpc IsReadOnly(EDBObjMessage) returns (google.protobuf.BoolValue) {}

  // Gets the top circuits in a database
  rpc GetTopCircuits (EDBObjMessage) returns (EDBObjCollectionMessage) {}

  // Gets the id of a database
  rpc GetId (EDBObjMessage) returns (google.protobuf.Int64Value) {} 

  // Finds a database with the provided id
  rpc FindById (google.protobuf.Int64Value) returns (EDBObjMessage) {}
}

// Message for Open
message OpenDatabaseMessage {
  google.protobuf.StringValue edb_path = 1;
  google.protobuf.BoolValue read_only = 2;
}

message ProductPropertyIdMessage {
  ProductIdType product_id = 1;
  uint64 attribute_id = 2;
}

message GetProductPropertyMessage {
  EDBObjMessage edb_obj = 1;
  ProductPropertyIdMessage product_prop_id = 2;
}

message SetProductPropertyMessage {
  EDBObjMessage edb_obj = 1;
  ProductPropertyIdMessage product_prop_id = 2;
  string property_value = 3;
}

message GetProductPropertyIdsMessage {
  EDBObjMessage edb_obj = 1;
  ProductIdType product_id = 2;
}

message ProductPropertyIdsMessage {
  repeated uint64 ids = 1;
}
