# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import ansys.api.edb.v1.circle_pb2 as circle__pb2
import ansys.api.edb.v1.edb_messages_pb2 as edb__messages__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2


class CircleServiceStub(object):
    """Circle service definition
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Create = channel.unary_unary(
                '/ansys.api.edb.v1.CircleService/Create',
                request_serializer=circle__pb2.CircleCreationMessage.SerializeToString,
                response_deserializer=edb__messages__pb2.EDBObjMessage.FromString,
                )
        self.Render = channel.unary_unary(
                '/ansys.api.edb.v1.CircleService/Render',
                request_serializer=circle__pb2.CircleRenderMessage.SerializeToString,
                response_deserializer=edb__messages__pb2.EDBObjMessage.FromString,
                )
        self.GetParameters = channel.unary_unary(
                '/ansys.api.edb.v1.CircleService/GetParameters',
                request_serializer=edb__messages__pb2.EDBObjMessage.SerializeToString,
                response_deserializer=circle__pb2.CircleParametersMessage.FromString,
                )
        self.SetParameters = channel.unary_unary(
                '/ansys.api.edb.v1.CircleService/SetParameters',
                request_serializer=circle__pb2.SetCircleParametersMessage.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_wrappers__pb2.BoolValue.FromString,
                )


class CircleServiceServicer(object):
    """Circle service definition
    """

    def Create(self, request, context):
        """Create a circle
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Render(self, request, context):
        """Render Circle
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetParameters(self, request, context):
        """Get Parameters
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetParameters(self, request, context):
        """Set Parameters
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CircleServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=circle__pb2.CircleCreationMessage.FromString,
                    response_serializer=edb__messages__pb2.EDBObjMessage.SerializeToString,
            ),
            'Render': grpc.unary_unary_rpc_method_handler(
                    servicer.Render,
                    request_deserializer=circle__pb2.CircleRenderMessage.FromString,
                    response_serializer=edb__messages__pb2.EDBObjMessage.SerializeToString,
            ),
            'GetParameters': grpc.unary_unary_rpc_method_handler(
                    servicer.GetParameters,
                    request_deserializer=edb__messages__pb2.EDBObjMessage.FromString,
                    response_serializer=circle__pb2.CircleParametersMessage.SerializeToString,
            ),
            'SetParameters': grpc.unary_unary_rpc_method_handler(
                    servicer.SetParameters,
                    request_deserializer=circle__pb2.SetCircleParametersMessage.FromString,
                    response_serializer=google_dot_protobuf_dot_wrappers__pb2.BoolValue.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ansys.api.edb.v1.CircleService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CircleService(object):
    """Circle service definition
    """

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.edb.v1.CircleService/Create',
            circle__pb2.CircleCreationMessage.SerializeToString,
            edb__messages__pb2.EDBObjMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Render(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.edb.v1.CircleService/Render',
            circle__pb2.CircleRenderMessage.SerializeToString,
            edb__messages__pb2.EDBObjMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetParameters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.edb.v1.CircleService/GetParameters',
            edb__messages__pb2.EDBObjMessage.SerializeToString,
            circle__pb2.CircleParametersMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetParameters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.edb.v1.CircleService/SetParameters',
            circle__pb2.SetCircleParametersMessage.SerializeToString,
            google_dot_protobuf_dot_wrappers__pb2.BoolValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
