# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import database_pb2 as database__pb2
import edb_messages_pb2 as edb__messages__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2


class DatabaseServiceStub(object):
  """Database service definition
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Create = channel.unary_unary(
        '/ansys.api.edb.v1.DatabaseService/Create',
        request_serializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
        response_deserializer=edb__messages__pb2.EDBObjMessage.FromString,
        )
    self.Open = channel.unary_unary(
        '/ansys.api.edb.v1.DatabaseService/Open',
        request_serializer=database__pb2.OpenDatabaseMessage.SerializeToString,
        response_deserializer=edb__messages__pb2.EDBObjMessage.FromString,
        )
    self.Delete = channel.unary_unary(
        '/ansys.api.edb.v1.DatabaseService/Delete',
        request_serializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_wrappers__pb2.BoolValue.FromString,
        )
    self.Save = channel.unary_unary(
        '/ansys.api.edb.v1.DatabaseService/Save',
        request_serializer=edb__messages__pb2.EDBObjMessage.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_wrappers__pb2.BoolValue.FromString,
        )
    self.Close = channel.unary_unary(
        '/ansys.api.edb.v1.DatabaseService/Close',
        request_serializer=edb__messages__pb2.EDBObjMessage.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_wrappers__pb2.BoolValue.FromString,
        )
    self.IsReadOnly = channel.unary_unary(
        '/ansys.api.edb.v1.DatabaseService/IsReadOnly',
        request_serializer=edb__messages__pb2.EDBObjMessage.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_wrappers__pb2.BoolValue.FromString,
        )
    self.GetTopCircuits = channel.unary_unary(
        '/ansys.api.edb.v1.DatabaseService/GetTopCircuits',
        request_serializer=edb__messages__pb2.EDBObjMessage.SerializeToString,
        response_deserializer=edb__messages__pb2.EDBObjCollectionMessage.FromString,
        )
    self.GetId = channel.unary_unary(
        '/ansys.api.edb.v1.DatabaseService/GetId',
        request_serializer=edb__messages__pb2.EDBObjMessage.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_wrappers__pb2.Int64Value.FromString,
        )
    self.FindById = channel.unary_unary(
        '/ansys.api.edb.v1.DatabaseService/FindById',
        request_serializer=google_dot_protobuf_dot_wrappers__pb2.Int64Value.SerializeToString,
        response_deserializer=edb__messages__pb2.EDBObjMessage.FromString,
        )


class DatabaseServiceServicer(object):
  """Database service definition
  """

  def Create(self, request, context):
    """Creates a database
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Open(self, request, context):
    """Opens a database
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Delete(self, request, context):
    """Deletes a database
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Save(self, request, context):
    """Saves a database
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Close(self, request, context):
    """Closes a database
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def IsReadOnly(self, request, context):
    """Determines whether the database is read only
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetTopCircuits(self, request, context):
    """Gets the top circuits in a database
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetId(self, request, context):
    """Gets the id of a database
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FindById(self, request, context):
    """Finds a database with the provided id
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DatabaseServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Create': grpc.unary_unary_rpc_method_handler(
          servicer.Create,
          request_deserializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.FromString,
          response_serializer=edb__messages__pb2.EDBObjMessage.SerializeToString,
      ),
      'Open': grpc.unary_unary_rpc_method_handler(
          servicer.Open,
          request_deserializer=database__pb2.OpenDatabaseMessage.FromString,
          response_serializer=edb__messages__pb2.EDBObjMessage.SerializeToString,
      ),
      'Delete': grpc.unary_unary_rpc_method_handler(
          servicer.Delete,
          request_deserializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.FromString,
          response_serializer=google_dot_protobuf_dot_wrappers__pb2.BoolValue.SerializeToString,
      ),
      'Save': grpc.unary_unary_rpc_method_handler(
          servicer.Save,
          request_deserializer=edb__messages__pb2.EDBObjMessage.FromString,
          response_serializer=google_dot_protobuf_dot_wrappers__pb2.BoolValue.SerializeToString,
      ),
      'Close': grpc.unary_unary_rpc_method_handler(
          servicer.Close,
          request_deserializer=edb__messages__pb2.EDBObjMessage.FromString,
          response_serializer=google_dot_protobuf_dot_wrappers__pb2.BoolValue.SerializeToString,
      ),
      'IsReadOnly': grpc.unary_unary_rpc_method_handler(
          servicer.IsReadOnly,
          request_deserializer=edb__messages__pb2.EDBObjMessage.FromString,
          response_serializer=google_dot_protobuf_dot_wrappers__pb2.BoolValue.SerializeToString,
      ),
      'GetTopCircuits': grpc.unary_unary_rpc_method_handler(
          servicer.GetTopCircuits,
          request_deserializer=edb__messages__pb2.EDBObjMessage.FromString,
          response_serializer=edb__messages__pb2.EDBObjCollectionMessage.SerializeToString,
      ),
      'GetId': grpc.unary_unary_rpc_method_handler(
          servicer.GetId,
          request_deserializer=edb__messages__pb2.EDBObjMessage.FromString,
          response_serializer=google_dot_protobuf_dot_wrappers__pb2.Int64Value.SerializeToString,
      ),
      'FindById': grpc.unary_unary_rpc_method_handler(
          servicer.FindById,
          request_deserializer=google_dot_protobuf_dot_wrappers__pb2.Int64Value.FromString,
          response_serializer=edb__messages__pb2.EDBObjMessage.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ansys.api.edb.v1.DatabaseService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
