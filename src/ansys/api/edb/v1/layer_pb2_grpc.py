# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import edb_messages_pb2 as edb__messages__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2
import layer_pb2 as layer__pb2


class LayerServiceStub(object):
  """Layer service definition
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Cleanup = channel.unary_unary(
        '/ansys.api.edb.v1.LayerService/Cleanup',
        request_serializer=edb__messages__pb2.EDBObjMessage.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.GetLayerType = channel.unary_unary(
        '/ansys.api.edb.v1.LayerService/GetLayerType',
        request_serializer=edb__messages__pb2.EDBObjMessage.SerializeToString,
        response_deserializer=layer__pb2.LayerTypeMessage.FromString,
        )
    self.IsViaLayer = channel.unary_unary(
        '/ansys.api.edb.v1.LayerService/IsViaLayer',
        request_serializer=edb__messages__pb2.EDBObjMessage.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_wrappers__pb2.BoolValue.FromString,
        )
    self.GetName = channel.unary_unary(
        '/ansys.api.edb.v1.LayerService/GetName',
        request_serializer=edb__messages__pb2.EDBObjMessage.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.FromString,
        )


class LayerServiceServicer(object):
  """Layer service definition
  """

  def Cleanup(self, request, context):
    """Clean up the layer pointer
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetLayerType(self, request, context):
    """Get the layer type of the layer
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def IsViaLayer(self, request, context):
    """Check whether or not this layer is a via layer
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetName(self, request, context):
    """Get the name of this layer
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_LayerServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Cleanup': grpc.unary_unary_rpc_method_handler(
          servicer.Cleanup,
          request_deserializer=edb__messages__pb2.EDBObjMessage.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'GetLayerType': grpc.unary_unary_rpc_method_handler(
          servicer.GetLayerType,
          request_deserializer=edb__messages__pb2.EDBObjMessage.FromString,
          response_serializer=layer__pb2.LayerTypeMessage.SerializeToString,
      ),
      'IsViaLayer': grpc.unary_unary_rpc_method_handler(
          servicer.IsViaLayer,
          request_deserializer=edb__messages__pb2.EDBObjMessage.FromString,
          response_serializer=google_dot_protobuf_dot_wrappers__pb2.BoolValue.SerializeToString,
      ),
      'GetName': grpc.unary_unary_rpc_method_handler(
          servicer.GetName,
          request_deserializer=edb__messages__pb2.EDBObjMessage.FromString,
          response_serializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ansys.api.edb.v1.LayerService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class StackupLayerServiceStub(object):
  """Stackup layer service definition
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Create = channel.unary_unary(
        '/ansys.api.edb.v1.StackupLayerService/Create',
        request_serializer=layer__pb2.StackupLayerCreationMessage.SerializeToString,
        response_deserializer=edb__messages__pb2.EDBObjMessage.FromString,
        )
    self.SetNegative = channel.unary_unary(
        '/ansys.api.edb.v1.StackupLayerService/SetNegative',
        request_serializer=layer__pb2.SetNegativeMessage.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )


class StackupLayerServiceServicer(object):
  """Stackup layer service definition
  """

  def Create(self, request, context):
    """Creates a stackup layer
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetNegative(self, request, context):
    """Set the negative property of the stackup layer
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_StackupLayerServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Create': grpc.unary_unary_rpc_method_handler(
          servicer.Create,
          request_deserializer=layer__pb2.StackupLayerCreationMessage.FromString,
          response_serializer=edb__messages__pb2.EDBObjMessage.SerializeToString,
      ),
      'SetNegative': grpc.unary_unary_rpc_method_handler(
          servicer.SetNegative,
          request_deserializer=layer__pb2.SetNegativeMessage.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ansys.api.edb.v1.StackupLayerService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class ViaLayerServiceStub(object):
  """Via layer service definition
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Create = channel.unary_unary(
        '/ansys.api.edb.v1.ViaLayerService/Create',
        request_serializer=layer__pb2.ViaLayerCreationMessage.SerializeToString,
        response_deserializer=edb__messages__pb2.EDBObjMessage.FromString,
        )


class ViaLayerServiceServicer(object):
  """Via layer service definition
  """

  def Create(self, request, context):
    """Creates a via layer
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ViaLayerServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Create': grpc.unary_unary_rpc_method_handler(
          servicer.Create,
          request_deserializer=layer__pb2.ViaLayerCreationMessage.FromString,
          response_serializer=edb__messages__pb2.EDBObjMessage.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ansys.api.edb.v1.ViaLayerService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
