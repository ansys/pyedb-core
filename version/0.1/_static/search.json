[
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.component",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.component.html#component",
        "title": "component",
        "section": "component",
        "text": "ComponentGroup:         Component of the Connectable object.\ncomponent\nComponentGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.component",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.component.html#ansys.edb.core.hierarchy.pin_group.PinGroup.component",
        "title": "component > component > component",
        "section": "component > component",
        "text": "property PinGroup.component\n\nComponentGroup:         Component of the Connectable object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.set_start_elevation",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.set_start_elevation.html#set_start_elevation",
        "title": "set_start_elevation",
        "section": "set_start_elevation",
        "text": "Set the start elevation of the bondwire.\nStart cell context of the bondwire. None means top-level.\nStart layer of the bondwire.\nset_start_elevation\nCellInstance\nNone\npython:str\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.set_start_elevation",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.set_start_elevation.html#ansys.edb.core.primitive.primitive.Bondwire.set_start_elevation",
        "title": "set_start_elevation > set_start_elevation > set_start_elevation",
        "section": "set_start_elevation > set_start_elevation",
        "text": "Bondwire.set_start_elevation(start_context, layer)\n\nSet the start elevation of the bondwire.\n\nParameters\n\nstart_context\n\nCellInstance\n\nStart cell context of the bondwire. None means top-level.\n\nlayer\n\npython:str or Layer\n\nStart layer of the bondwire.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.find_by_id.html#find_by_id",
        "title": "find_by_id",
        "section": "find_by_id",
        "text": "Find a Connectable object by database ID in a given layout.\nLayout to search for the Connectable object.\nDatabase ID.\nConnectable object with the given database ID.\nfind_by_id\nLayout\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.find_by_id.html#ansys.edb.core.primitive.primitive.PadstackInstance.find_by_id",
        "title": "find_by_id > find_by_id > find_by_id",
        "section": "find_by_id > find_by_id",
        "text": "classmethod PadstackInstance.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the Connectable object.\n\nuid\n\npython:int\n\nDatabase ID.\n\nReturns\n\nConnectable\n\nConnectable object with the given database ID.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.name",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the terminal.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.name",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.name.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property TerminalInstanceTerminal.name\n\nstr: Name of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.plane_projection_factor",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.plane_projection_factor.html#plane_projection_factor",
        "title": "plane_projection_factor",
        "section": "plane_projection_factor",
        "text": "float: Plane projection factor for reducing the mesh complexity of large metal planes.\nplane_projection_factor\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.plane_projection_factor",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.plane_projection_factor.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.plane_projection_factor",
        "title": "plane_projection_factor > plane_projection_factor > plane_projection_factor",
        "section": "plane_projection_factor > plane_projection_factor",
        "text": "property RaptorXAdvancedSettings.plane_projection_factor\n\nfloat: Plane projection factor for reducing the mesh complexity of large metal planes.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.simulation_setups",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.simulation_setups.html#simulation_setups",
        "title": "simulation_setups",
        "section": "simulation_setups",
        "text": "list of         [SimulationSetup]:         List of all simulation setups of the cell.\nadd_simulation_setup, delete_simulation_setup\nsimulation_setups\nlist\nSimulationSetup\nadd_simulation_setup\ndelete_simulation_setup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.simulation_setups",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.simulation_setups.html#ansys.edb.core.layout.cell.Cell.simulation_setups",
        "title": "simulation_setups > simulation_setups > simulation_setups",
        "section": "simulation_setups > simulation_setups",
        "text": "property Cell.simulation_setups\n\nlist of         [SimulationSetup]:         List of all simulation setups of the cell.\n\nadd_simulation_setup, delete_simulation_setup\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the product property.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.get_product_property.html#ansys.edb.core.terminal.terminals.TerminalInstance.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "TerminalInstance.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nReturns\n\npython:str\n\nString stored in the product property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.has_voids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.has_voids.html#has_voids",
        "title": "has_voids",
        "section": "has_voids",
        "text": "bool: Flag indicating if a primitive has voids inside.\nThis property is read-only.\nhas_voids\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.has_voids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.has_voids.html#ansys.edb.core.primitive.primitive.Circle.has_voids",
        "title": "has_voids > has_voids > has_voids",
        "section": "has_voids > has_voids",
        "text": "property Circle.has_voids\n\nbool: Flag indicating if a primitive has voids inside.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.num_active_power_modules",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.num_active_power_modules.html#num_active_power_modules",
        "title": "num_active_power_modules",
        "section": "num_active_power_modules",
        "text": "int: Number of active power modules.\nThis attribute is read-only\nnum_active_power_modules"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.num_active_power_modules",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.num_active_power_modules.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.num_active_power_modules",
        "title": "num_active_power_modules > num_active_power_modules > num_active_power_modules",
        "section": "num_active_power_modules > num_active_power_modules",
        "text": "property VoltageRegulator.num_active_power_modules\n\nObj\n\nint: Number of active power modules.\n\nThis attribute is read-only\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.set_reference_size",
        "href": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.set_reference_size.html#set_reference_size",
        "title": "set_reference_size",
        "section": "set_reference_size",
        "text": "Set the X and Y reference sizes for the port property.\nX reference size.\nY reference size.\nset_reference_size"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.set_reference_size",
        "href": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.set_reference_size.html#ansys.edb.core.definition.port_property.PortProperty.set_reference_size",
        "title": "set_reference_size > set_reference_size > set_reference_size",
        "section": "set_reference_size > set_reference_size",
        "text": "PortProperty.set_reference_size(ref_x, ref_y)\n\nSet the X and Y reference sizes for the port property.\n\nParameters\n\nref_x\n\nValueLike\n\nX reference size.\n\nref_y\n\nValueLike\n\nY reference size.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.set_material",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.set_material.html#set_material",
        "title": "set_material",
        "section": "set_material",
        "text": "Set material name of a MCAD model part at a given index.\nIndex of the MCAD model part.\nNew material name.\nset_material\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.set_material",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.set_material.html#ansys.edb.core.layout.mcad_model.McadModel.set_material",
        "title": "set_material > set_material > set_material",
        "section": "set_material > set_material",
        "text": "McadModel.set_material(index, material)\n\nSet material name of a MCAD model part at a given index.\n\nParameters\n\nindex\n\npython:int\n\nIndex of the MCAD model part.\n\nmaterial\n\npython:str\n\nNew material name.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel",
        "href": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.html#debyemodel",
        "title": "DebyeModel",
        "section": "DebyeModel",
        "text": "Representa a Debye dielectric material model object.\nDebyeModel.create()\nCreate a Debye dielectric material model.\nDebyeModel.dc_conductivity\nfloat: DC conductivity nominal value.\nDebyeModel.frequency_range\ntuple of float, float: Frequency range (low, high).\nDebyeModel.id\nint: Unique ID of the EDB object.\nDebyeModel.is_null\nbool: Flag indicating if the object exists in the database.\nDebyeModel.is_relative_permitivity_enabled_at_optical_frequency\nbool: Flag indicating if the relative permitivity at optical frequency is enabled.\nDebyeModel.loss_tangent_at_high_low_frequency\ntuple of float, float: Loss tangent frequency range (low, high).\nDebyeModel.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nDebyeModel.relative_permitivity_at_high_low_frequency\ntuple of float, float: Relative permitivity frequency range (low, high).\nDebyeModel.relative_permitivity_at_optical_frequency\nfloat: Relative permitivity at the optical frequency.\nDebyeModel.type\nDielectricMaterialModelType: Type of the dielectric material model.\nDebyeModel.use_dc_conductivity\nbool: Flag indicating if the DC conductivity nominal value is used.\nDebyeModel\nDebyeModel.create\nDebyeModel.dc_conductivity\nfloat\nDebyeModel.frequency_range\ntuple\nfloat\nfloat\nDebyeModel.id\nint\nDebyeModel.is_null\nbool\nDebyeModel.is_relative_permitivity_enabled_at_optical_frequency\nbool\nDebyeModel.loss_tangent_at_high_low_frequency\ntuple\nfloat\nfloat\nDebyeModel.msg\nEDBObjMessage\nDebyeModel.relative_permitivity_at_high_low_frequency\ntuple\nfloat\nfloat\nDebyeModel.relative_permitivity_at_optical_frequency\nfloat\nDebyeModel.type\nDielectricMaterialModelType\nDebyeModel.use_dc_conductivity\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel",
        "href": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.html#ansys.edb.core.definition.debye_model.DebyeModel",
        "title": "DebyeModel > DebyeModel > DebyeModel",
        "section": "DebyeModel > DebyeModel",
        "text": "class ansys.edb.core.definition.debye_model.DebyeModel(msg)\n\nRepresenta a Debye dielectric material model object.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nDebyeModel.create()\n\nCreate a Debye dielectric material model.\n\n\n\nAttributes\n\n\n\n\n\n\n\nDebyeModel.dc_conductivity\n\nfloat: DC conductivity nominal value.\n\nDebyeModel.frequency_range\n\ntuple of float, float: Frequency range (low, high).\n\nDebyeModel.id\n\nint: Unique ID of the EDB object.\n\nDebyeModel.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nDebyeModel.is_relative_permitivity_enabled_at_optical_frequency\n\nbool: Flag indicating if the relative permitivity at optical frequency is enabled.\n\nDebyeModel.loss_tangent_at_high_low_frequency\n\ntuple of float, float: Loss tangent frequency range (low, high).\n\nDebyeModel.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nDebyeModel.relative_permitivity_at_high_low_frequency\n\ntuple of float, float: Relative permitivity frequency range (low, high).\n\nDebyeModel.relative_permitivity_at_optical_frequency\n\nfloat: Relative permitivity at the optical frequency.\n\nDebyeModel.type\n\nDielectricMaterialModelType: Type of the dielectric material model.\n\nDebyeModel.use_dc_conductivity\n\nbool: Flag indicating if the DC conductivity nominal value is used.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin.find",
        "href": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin.find.html#find",
        "title": "find",
        "section": "find",
        "text": "Find a component pin in a given component definition.\nComponent definition to search for the component pin.\nName of the component pin.\nComponent pin found, None otherwise.\nfind\nComponentDef\npython:str\nComponentPin\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin.find",
        "href": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin.find.html#ansys.edb.core.definition.component_pin.ComponentPin.find",
        "title": "find > find > find",
        "section": "find > find",
        "text": "classmethod ComponentPin.find(comp_def, name)\n\nFind a component pin in a given component definition.\n\nParameters\n\ncomp_def\n\nComponentDef\n\nComponent definition to search for the component pin.\n\nname\n\npython:str\n\nName of the component pin.\n\nReturns\n\nComponentPin\n\nComponent pin found, None otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModelType",
        "href": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModelType.html#dielectricmaterialmodeltype",
        "title": "DielectricMaterialModelType",
        "section": "DielectricMaterialModelType",
        "text": "Provides an eum representing dielectric material model types.\nDielectricMaterialModelType.DEBYE\n\nDielectricMaterialModelType.MULTIPOLE_DEBYE\n\nDielectricMaterialModelType.DJORDJECVIC_SARKAR\n\nDielectricMaterialModelType\nDielectricMaterialModelType.DEBYE\nDielectricMaterialModelType.MULTIPOLE_DEBYE\nDielectricMaterialModelType.DJORDJECVIC_SARKAR"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModelType",
        "href": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModelType.html#ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModelType",
        "title": "DielectricMaterialModelType > DielectricMaterialModelType > DielectricMaterialModelType",
        "section": "DielectricMaterialModelType > DielectricMaterialModelType",
        "text": "class ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModelType(value)\n\nProvides an eum representing dielectric material model types.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nDielectricMaterialModelType.DEBYE\n\n\n\nDielectricMaterialModelType.MULTIPOLE_DEBYE\n\n\n\nDielectricMaterialModelType.DJORDJECVIC_SARKAR\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_back_drill_by_depth",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_back_drill_by_depth.html#get_back_drill_by_depth",
        "title": "get_back_drill_by_depth",
        "section": "get_back_drill_by_depth",
        "text": "Get the back drill type by depth.\nWhether to get the back drill type from the bottom.\nbool,\nValue\nReturns a tuple in this format:\n(drill_depth, diameter)\ndrill_depth : Drilling depth, may not align with layer.\ndiameter : Drilling diameter.\nget_back_drill_by_depth\npython:tuple\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_back_drill_by_depth",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_back_drill_by_depth.html#ansys.edb.core.primitive.primitive.PadstackInstance.get_back_drill_by_depth",
        "title": "get_back_drill_by_depth > get_back_drill_by_depth > get_back_drill_by_depth",
        "section": "get_back_drill_by_depth > get_back_drill_by_depth",
        "text": "PadstackInstance.get_back_drill_by_depth(from_bottom)\n\nGet the back drill type by depth.\n\nParameters\n\nfrom_bottom\n\nbool\n\nWhether to get the back drill type from the bottom.\n\nReturns\n\npython:tuple[\n\nbool,\nValue\n\n]\n\nReturns a tuple in this format:\n\n(drill_depth, diameter)\n\ndrill_depth : Drilling depth, may not align with layer.\n\ndiameter : Drilling diameter.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.LAYER_TYPES_COUNT",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.LAYER_TYPES_COUNT.html#layer_types_count",
        "title": "LAYER_TYPES_COUNT",
        "section": "LAYER_TYPES_COUNT",
        "text": "LAYER_TYPES_COUNT"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.LAYER_TYPES_COUNT",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.LAYER_TYPES_COUNT.html#ansys.edb.core.layer.layer_collection.LayerType.LAYER_TYPES_COUNT",
        "title": "LAYER_TYPES_COUNT > LAYER_TYPES_COUNT > LAYER_TYPES_COUNT",
        "section": "LAYER_TYPES_COUNT > LAYER_TYPES_COUNT",
        "text": "LayerType.LAYER_TYPES_COUNT = 19\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.use_reference_from_hierarchy",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.use_reference_from_hierarchy.html#use_reference_from_hierarchy",
        "title": "use_reference_from_hierarchy",
        "section": "use_reference_from_hierarchy",
        "text": "bool: Flag indicating if the terminal can use references from the hierarchy.\nuse_reference_from_hierarchy\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.use_reference_from_hierarchy",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.use_reference_from_hierarchy.html#ansys.edb.core.terminal.terminals.PointTerminal.use_reference_from_hierarchy",
        "title": "use_reference_from_hierarchy > use_reference_from_hierarchy > use_reference_from_hierarchy",
        "section": "use_reference_from_hierarchy > use_reference_from_hierarchy",
        "text": "property PointTerminal.use_reference_from_hierarchy\n\nbool: Flag indicating if the terminal can use references from the hierarchy.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.dc_min_plane_area_to_mesh",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.dc_min_plane_area_to_mesh.html#dc_min_plane_area_to_mesh",
        "title": "dc_min_plane_area_to_mesh",
        "section": "dc_min_plane_area_to_mesh",
        "text": "str: Geometry with an area smaller than this value is ignored.\ndc_min_plane_area_to_mesh\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.dc_min_plane_area_to_mesh",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.dc_min_plane_area_to_mesh.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.dc_min_plane_area_to_mesh",
        "title": "dc_min_plane_area_to_mesh > dc_min_plane_area_to_mesh > dc_min_plane_area_to_mesh",
        "section": "dc_min_plane_area_to_mesh > dc_min_plane_area_to_mesh",
        "text": "property SIWaveDCAdvancedSettings.dc_min_plane_area_to_mesh\n\nstr: Geometry with an area smaller than this value is ignored.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.remove_component_model",
        "href": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.remove_component_model.html#remove_component_model",
        "title": "remove_component_model",
        "section": "remove_component_model",
        "text": "Remove a component model from this component def.\nComponent Model to be removed.\nOnce a component model is added to one component def, it cannot be added to any other, even when removed.\nremove_component_model\nComponent Model"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.remove_component_model",
        "href": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.remove_component_model.html#ansys.edb.core.definition.component_def.ComponentDef.remove_component_model",
        "title": "remove_component_model > remove_component_model > remove_component_model",
        "section": "remove_component_model > remove_component_model",
        "text": "ComponentDef.remove_component_model(value)\n\nRemove a component model from this component def.\n\nParameters\n\nvalue\n\nComponent Model\n\nComponent Model to be removed.\n\nNotes\n\nOnce a component model is added to one component def, it cannot be added to any other, even when removed.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.INVALID_PROPERTY",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.INVALID_PROPERTY.html#invalid_property",
        "title": "INVALID_PROPERTY",
        "section": "INVALID_PROPERTY",
        "text": "INVALID_PROPERTY"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.INVALID_PROPERTY",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.INVALID_PROPERTY.html#ansys.edb.core.definition.material_def.MaterialProperty.INVALID_PROPERTY",
        "title": "INVALID_PROPERTY > INVALID_PROPERTY > INVALID_PROPERTY",
        "section": "INVALID_PROPERTY > INVALID_PROPERTY",
        "text": "MaterialProperty.INVALID_PROPERTY = 71\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.layout",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.layout.html#layout",
        "title": "layout",
        "section": "layout",
        "text": "Layout: Layout of the cell.\nThis property is read-only.\nlayout\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.layout",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.layout.html#ansys.edb.core.layout.cell.Cell.layout",
        "title": "layout > layout > layout",
        "section": "layout > layout",
        "text": "property Cell.layout\n\nLayout: Layout of the cell.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.ProductIdType.HFSS_3D_LAYOUT",
        "href": "api/_autosummary/ansys.edb.core.database.ProductIdType.HFSS_3D_LAYOUT.html#hfss_3d_layout",
        "title": "HFSS_3D_LAYOUT",
        "section": "HFSS_3D_LAYOUT",
        "text": "HFSS_3D_LAYOUT"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.ProductIdType.HFSS_3D_LAYOUT",
        "href": "api/_autosummary/ansys.edb.core.database.ProductIdType.HFSS_3D_LAYOUT.html#ansys.edb.core.database.ProductIdType.HFSS_3D_LAYOUT",
        "title": "HFSS_3D_LAYOUT > HFSS_3D_LAYOUT > HFSS_3D_LAYOUT",
        "section": "HFSS_3D_LAYOUT > HFSS_3D_LAYOUT",
        "text": "ProductIdType.HFSS_3D_LAYOUT = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_property.ComponentProperty.clone",
        "href": "api/_autosummary/ansys.edb.core.definition.component_property.ComponentProperty.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Clone the component property.\nComponent property cloned.\nclone\nComponentProperty"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_property.ComponentProperty.clone",
        "href": "api/_autosummary/ansys.edb.core.definition.component_property.ComponentProperty.clone.html#ansys.edb.core.definition.component_property.ComponentProperty.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "ComponentProperty.clone()\n\nClone the component property.\n\nReturns\n\nComponentProperty\n\nComponent property cloned.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.ExtentType",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.ExtentType.html#extenttype",
        "title": "ExtentType",
        "section": "ExtentType",
        "text": "Provides an enum representing extent types for geometries.\nExtentType.CONFORMING\n\nExtentType.BOUNDING_BOX\n\nExtentType\nExtentType.CONFORMING\nExtentType.BOUNDING_BOX"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.ExtentType",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.ExtentType.html#ansys.edb.core.geometry.polygon_data.ExtentType",
        "title": "ExtentType > ExtentType > ExtentType",
        "section": "ExtentType > ExtentType",
        "text": "class ansys.edb.core.geometry.polygon_data.ExtentType(value)\n\nProvides an enum representing extent types for geometries.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nExtentType.CONFORMING\n\n\n\nExtentType.BOUNDING_BOX\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.description",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.description.html#description",
        "title": "description",
        "section": "description",
        "text": "str : Description of the net class.\ndescription\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.description",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.description.html#ansys.edb.core.net.net_class.NetClass.description",
        "title": "description > description > description",
        "section": "description > description",
        "text": "property NetClass.description\n\nstr : Description of the net class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.theta_jc",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.theta_jc.html#theta_jc",
        "title": "theta_jc",
        "section": "theta_jc",
        "text": "Value: Theta JC (junction to case) of the package.\ntheta_jc\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.theta_jc",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.theta_jc.html#ansys.edb.core.definition.package_def.PackageDef.theta_jc",
        "title": "theta_jc > theta_jc > theta_jc",
        "section": "theta_jc > theta_jc",
        "text": "property PackageDef.theta_jc\n\nValue: Theta JC (junction to case) of the package.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.remove_terminal",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.remove_terminal.html#remove_terminal",
        "title": "remove_terminal",
        "section": "remove_terminal",
        "text": "Remove a terminal.\nTerminal name.\nremove_terminal\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.remove_terminal",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.remove_terminal.html#ansys.edb.core.hierarchy.spice_model.SPICEModel.remove_terminal",
        "title": "remove_terminal > remove_terminal > remove_terminal",
        "section": "remove_terminal > remove_terminal",
        "text": "SPICEModel.remove_terminal(terminal)\n\nRemove a terminal.\n\nParameters\n\nterminal\n\npython:str\n\nTerminal name.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.product_solver_names",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.product_solver_names.html#product_solver_names",
        "title": "product_solver_names",
        "section": "product_solver_names",
        "text": "Get the list of solver names.\nID of the product.\nproduct_solver_names\nProductIdType\npython:list\nof\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.product_solver_names",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.product_solver_names.html#ansys.edb.core.terminal.terminals.Terminal.product_solver_names",
        "title": "product_solver_names > product_solver_names > product_solver_names",
        "section": "product_solver_names > product_solver_names",
        "text": "Terminal.product_solver_names(product_id)\n\nGet the list of solver names.\n\nParameters\n\nproduct_id\n\nProductIdType\n\nID of the product.\n\nReturns\n\npython:list of python:str\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.type",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.type.html#type",
        "title": "type",
        "section": "type",
        "text": "SimulationSetupType: Type of the simulation setup.\ntype\nSimulationSetupType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.type",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.type.html#ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.type",
        "title": "type > type > type",
        "section": "type > type",
        "text": "property SimulationSetup.type\n\nSimulationSetupType: Type of the simulation setup.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_null",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_null",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_null.html#ansys.edb.core.terminal.terminals.EdgeTerminal.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property EdgeTerminal.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.layer",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.layer.html#layer",
        "title": "layer",
        "section": "layer",
        "text": "Layer: Layer the terminal is placed on.\nlayer\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.layer",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.layer.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.layer",
        "title": "layer > layer > layer",
        "section": "layer > layer",
        "text": "property PadstackInstanceTerminal.layer\n\nLayer: Layer the terminal is placed on.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.reference_layer",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.reference_layer.html#reference_layer",
        "title": "reference_layer",
        "section": "reference_layer",
        "text": "Layer: Layer that the terminal references, if any, by either layer object or name.\nreference_layer\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.reference_layer",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.reference_layer.html#ansys.edb.core.terminal.terminals.BundleTerminal.reference_layer",
        "title": "reference_layer > reference_layer > reference_layer",
        "section": "reference_layer > reference_layer",
        "text": "property BundleTerminal.reference_layer\n\nLayer: Layer that the terminal references, if any, by either layer object or name.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.is_mcad_3d_comp.html#is_mcad_3d_comp",
        "title": "is_mcad_3d_comp",
        "section": "is_mcad_3d_comp",
        "text": "bool: Flag indicating if this is a 3D composite MCAD model.\nThis property is read-only.\nis_mcad_3d_comp\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.is_mcad_3d_comp.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.is_mcad_3d_comp",
        "title": "is_mcad_3d_comp > is_mcad_3d_comp > is_mcad_3d_comp",
        "section": "is_mcad_3d_comp > is_mcad_3d_comp",
        "text": "property VoltageRegulator.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.edb_uid.html#edb_uid",
        "title": "edb_uid",
        "section": "edb_uid",
        "text": "int: Unique, persistent ID for the Connectable object.\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\nThis property is read-only.\nedb_uid\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.edb_uid.html#ansys.edb.core.terminal.terminals.Terminal.edb_uid",
        "title": "edb_uid > edb_uid > edb_uid",
        "section": "edb_uid > edb_uid",
        "text": "property Terminal.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.name",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the terminal.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.name",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.name.html#ansys.edb.core.terminal.terminals.BundleTerminal.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property BundleTerminal.name\n\nstr: Name of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin.component_def",
        "href": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin.component_def.html#component_def",
        "title": "component_def",
        "section": "component_def",
        "text": "ComponentDef: Component definition that the component pin belongs to.\nThis property is read-only.\ncomponent_def\nComponentDef"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin.component_def",
        "href": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin.component_def.html#ansys.edb.core.definition.component_pin.ComponentPin.component_def",
        "title": "component_def > component_def > component_def",
        "section": "component_def > component_def",
        "text": "property ComponentPin.component_def\n\nComponentDef: Component definition that the component pin belongs to.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.id.html#ansys.edb.core.terminal.terminals.BundleTerminal.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property BundleTerminal.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.netlist_model.NetlistModel.msg",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.netlist_model.NetlistModel.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.netlist_model.NetlistModel.msg",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.netlist_model.NetlistModel.msg.html#ansys.edb.core.hierarchy.netlist_model.NetlistModel.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property NetlistModel.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.CURRENT_SOURCE",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.CURRENT_SOURCE.html#current_source",
        "title": "CURRENT_SOURCE",
        "section": "CURRENT_SOURCE",
        "text": "CURRENT_SOURCE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.CURRENT_SOURCE",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.CURRENT_SOURCE.html#ansys.edb.core.terminal.terminals.BoundaryType.CURRENT_SOURCE",
        "title": "CURRENT_SOURCE > CURRENT_SOURCE > CURRENT_SOURCE",
        "section": "CURRENT_SOURCE > CURRENT_SOURCE",
        "text": "BoundaryType.CURRENT_SOURCE = 3\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.ComponentModel.id",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.ComponentModel.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.ComponentModel.id",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.ComponentModel.id.html#ansys.edb.core.definition.component_model.ComponentModel.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property ComponentModel.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.name",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the net class.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.name",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.name.html#ansys.edb.core.net.differential_pair.DifferentialPair.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property DifferentialPair.name\n\nstr: Name of the net class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.source_amplitude",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.source_amplitude.html#source_amplitude",
        "title": "source_amplitude",
        "section": "source_amplitude",
        "text": "Value: Source amplitude of the terminal.\nsource_amplitude\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.source_amplitude",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.source_amplitude.html#ansys.edb.core.terminal.terminals.PointTerminal.source_amplitude",
        "title": "source_amplitude > source_amplitude > source_amplitude",
        "section": "source_amplitude > source_amplitude",
        "text": "property PointTerminal.source_amplitude\n\nValue: Source amplitude of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.html#padgeometrytype",
        "title": "PadGeometryType",
        "section": "PadGeometryType",
        "text": "Provides an enum representing pad geometry types.\nPadGeometryType.PADGEOMTYPE_NO_GEOMETRY\n\nPadGeometryType.PADGEOMTYPE_CIRCLE\n\nPadGeometryType.PADGEOMTYPE_SQUARE\n\nPadGeometryType.PADGEOMTYPE_RECTANGLE\n\nPadGeometryType.PADGEOMTYPE_OVAL\n\nPadGeometryType.PADGEOMTYPE_BULLET\n\nPadGeometryType.PADGEOMTYPE_NSIDED_POLYGON\n\nPadGeometryType.PADGEOMTYPE_POLYGON\n\nPadGeometryType.PADGEOMTYPE_ROUND45\n\nPadGeometryType.PADGEOMTYPE_ROUND90\n\nPadGeometryType.PADGEOMTYPE_SQUARE45\n\nPadGeometryType.PADGEOMTYPE_SQUARE90\n\nPadGeometryType.PADGEOMTYPE_INVALID_GEOMETRY\n\nPadGeometryType\nPadGeometryType.PADGEOMTYPE_NO_GEOMETRY\nPadGeometryType.PADGEOMTYPE_CIRCLE\nPadGeometryType.PADGEOMTYPE_SQUARE\nPadGeometryType.PADGEOMTYPE_RECTANGLE\nPadGeometryType.PADGEOMTYPE_OVAL\nPadGeometryType.PADGEOMTYPE_BULLET\nPadGeometryType.PADGEOMTYPE_NSIDED_POLYGON\nPadGeometryType.PADGEOMTYPE_POLYGON\nPadGeometryType.PADGEOMTYPE_ROUND45\nPadGeometryType.PADGEOMTYPE_ROUND90\nPadGeometryType.PADGEOMTYPE_SQUARE45\nPadGeometryType.PADGEOMTYPE_SQUARE90\nPadGeometryType.PADGEOMTYPE_INVALID_GEOMETRY"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.html#ansys.edb.core.definition.padstack_def_data.PadGeometryType",
        "title": "PadGeometryType > PadGeometryType > PadGeometryType",
        "section": "PadGeometryType > PadGeometryType",
        "text": "class ansys.edb.core.definition.padstack_def_data.PadGeometryType(value)\n\nProvides an enum representing pad geometry types.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nPadGeometryType.PADGEOMTYPE_NO_GEOMETRY\n\n\n\nPadGeometryType.PADGEOMTYPE_CIRCLE\n\n\n\nPadGeometryType.PADGEOMTYPE_SQUARE\n\n\n\nPadGeometryType.PADGEOMTYPE_RECTANGLE\n\n\n\nPadGeometryType.PADGEOMTYPE_OVAL\n\n\n\nPadGeometryType.PADGEOMTYPE_BULLET\n\n\n\nPadGeometryType.PADGEOMTYPE_NSIDED_POLYGON\n\n\n\nPadGeometryType.PADGEOMTYPE_POLYGON\n\n\n\nPadGeometryType.PADGEOMTYPE_ROUND45\n\n\n\nPadGeometryType.PADGEOMTYPE_ROUND90\n\n\n\nPadGeometryType.PADGEOMTYPE_SQUARE45\n\n\n\nPadGeometryType.PADGEOMTYPE_SQUARE90\n\n\n\nPadGeometryType.PADGEOMTYPE_INVALID_GEOMETRY\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.reference_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.reference_terminal.html#reference_terminal",
        "title": "reference_terminal",
        "section": "reference_terminal",
        "text": "Terminal: Terminal that the terminal references, if any.\nreference_terminal\nTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.reference_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.reference_terminal.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.reference_terminal",
        "title": "reference_terminal > reference_terminal > reference_terminal",
        "section": "reference_terminal > reference_terminal",
        "text": "property TerminalInstanceTerminal.reference_terminal\n\nTerminal: Terminal that the terminal references, if any.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.get_all_properties",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.get_all_properties.html#get_all_properties",
        "title": "get_all_properties",
        "section": "get_all_properties",
        "text": "Get all properties of the material.\nAll properties for the material definition.\nget_all_properties\nof\nMaterialProperty"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.get_all_properties",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.get_all_properties.html#ansys.edb.core.definition.material_def.MaterialDef.get_all_properties",
        "title": "get_all_properties > get_all_properties > get_all_properties",
        "section": "get_all_properties > get_all_properties",
        "text": "MaterialDef.get_all_properties()\n\nGet all properties of the material.\n\nReturns\n\nlist of MaterialProperty\n\nAll properties for the material definition.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.create",
        "href": "api/_autosummary/ansys.edb.core.database.Database.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a database in a given location.\nPath to the top-level database directory.\ncreate\npython:str\nDatabase"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.create",
        "href": "api/_autosummary/ansys.edb.core.database.Database.create.html#ansys.edb.core.database.Database.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod Database.create(db_path)\n\nCreate a database in a given location.\n\nParameters\n\ndb_path\n\npython:str\n\nPath to the top-level database directory.\n\nReturns\n\nDatabase\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.is_mcad_stride.html#is_mcad_stride",
        "title": "is_mcad_stride",
        "section": "is_mcad_stride",
        "text": "bool: Flag indicating if this is a Stride MCAD model.\nThis property is read-only.\nis_mcad_stride\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.is_mcad_stride.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.is_mcad_stride",
        "title": "is_mcad_stride > is_mcad_stride > is_mcad_stride",
        "section": "is_mcad_stride > is_mcad_stride",
        "text": "property ComponentGroup.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.remove_member",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.remove_member.html#remove_member",
        "title": "remove_member",
        "section": "remove_member",
        "text": "Remove an object from the group.\nObject to remove from the group.\nremove_member"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.remove_member",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.remove_member.html#ansys.edb.core.hierarchy.group.Group.remove_member",
        "title": "remove_member > remove_member > remove_member",
        "section": "remove_member > remove_member",
        "text": "Group.remove_member(member)\n\nRemove an object from the group.\n\nParameters\n\nmember\n\nConnectable\n\nObject to remove from the group.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance.LayoutInstance",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance.LayoutInstance.html#layoutinstance",
        "title": "LayoutInstance",
        "section": "LayoutInstance",
        "text": "Represents a layout instance object.\nLayoutInstance.get_connected_objects(...)\nGet the layout object instance connected to the origin layout object instance.\nLayoutInstance.get_layout_obj_instance_in_context(...)\nGet the layout object instance of the given connectable in the provided context.\nLayoutInstance.query_layout_obj_instances([...])\nQuery layout object instances using the provided filters.\nLayoutInstance.refresh()\nRefresh the layout instance so it contains an up-to-date geometry.\nLayoutInstance.id\nint: Unique ID of the EDB object.\nLayoutInstance.is_null\nbool: Flag indicating if the object exists in the database.\nLayoutInstance.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nLayoutInstance\nLayoutInstance.get_connected_objects\nLayoutInstance.get_layout_obj_instance_in_context\nLayoutInstance.query_layout_obj_instances\nLayoutInstance.refresh\nLayoutInstance.id\nint\nLayoutInstance.is_null\nbool\nLayoutInstance.msg\nEDBObjMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance.LayoutInstance",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance.LayoutInstance.html#ansys.edb.core.layout_instance.layout_instance.LayoutInstance",
        "title": "LayoutInstance > LayoutInstance > LayoutInstance",
        "section": "LayoutInstance > LayoutInstance",
        "text": "class ansys.edb.core.layout_instance.layout_instance.LayoutInstance(msg)\n\nRepresents a layout instance object.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nLayoutInstance.get_connected_objects(...)\n\nGet the layout object instance connected to the origin layout object instance.\n\nLayoutInstance.get_layout_obj_instance_in_context(...)\n\nGet the layout object instance of the given connectable in the provided context.\n\nLayoutInstance.query_layout_obj_instances([...])\n\nQuery layout object instances using the provided filters.\n\nLayoutInstance.refresh()\n\nRefresh the layout instance so it contains an up-to-date geometry.\n\n\n\nAttributes\n\n\n\n\n\n\n\nLayoutInstance.id\n\nint: Unique ID of the EDB object.\n\nLayoutInstance.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nLayoutInstance.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.reference_layer",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.reference_layer.html#reference_layer",
        "title": "reference_layer",
        "section": "reference_layer",
        "text": "Layer: Layer that the terminal references, if any, by either layer object or name.\nreference_layer\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.reference_layer",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.reference_layer.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.reference_layer",
        "title": "reference_layer > reference_layer > reference_layer",
        "section": "reference_layer > reference_layer",
        "text": "property PadstackInstanceTerminal.reference_layer\n\nLayer: Layer that the terminal references, if any, by either layer object or name.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballShape.SOLDERBALL_SPHEROID",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballShape.SOLDERBALL_SPHEROID.html#solderball_spheroid",
        "title": "SOLDERBALL_SPHEROID",
        "section": "SOLDERBALL_SPHEROID",
        "text": "SOLDERBALL_SPHEROID"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballShape.SOLDERBALL_SPHEROID",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballShape.SOLDERBALL_SPHEROID.html#ansys.edb.core.definition.padstack_def_data.SolderballShape.SOLDERBALL_SPHEROID",
        "title": "SOLDERBALL_SPHEROID > SOLDERBALL_SPHEROID > SOLDERBALL_SPHEROID",
        "section": "SOLDERBALL_SPHEROID > SOLDERBALL_SPHEROID",
        "text": "SolderballShape.SOLDERBALL_SPHEROID = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_parameterized",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_parameterized.html#is_parameterized",
        "title": "is_parameterized",
        "section": "is_parameterized",
        "text": "bool: Whether the primitive is parametrized.\nThis property is read-only.\nis_parameterized\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_parameterized",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_parameterized.html#ansys.edb.core.primitive.primitive.BoardBendDef.is_parameterized",
        "title": "is_parameterized > is_parameterized > is_parameterized",
        "section": "is_parameterized > is_parameterized",
        "text": "property BoardBendDef.is_parameterized\n\nbool: Whether the primitive is parametrized.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.material_defs",
        "href": "api/_autosummary/ansys.edb.core.database.Database.material_defs.html#material_defs",
        "title": "material_defs",
        "section": "material_defs",
        "text": "list of MaterialDef: All material definitions in the database.\nmaterial_defs\nlist\nMaterialDef"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.material_defs",
        "href": "api/_autosummary/ansys.edb.core.database.Database.material_defs.html#ansys.edb.core.database.Database.material_defs",
        "title": "material_defs > material_defs > material_defs",
        "section": "material_defs > material_defs",
        "text": "property Database.material_defs\n\nlist of MaterialDef: All material definitions in the database.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty",
        "href": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.html#solderballproperty",
        "title": "SolderBallProperty",
        "section": "SolderBallProperty",
        "text": "Represents a solder ball property.\nSolderBallProperty.clone()\nClone a solder ball property.\nSolderBallProperty.create()\nCreate a solder ball property.\nSolderBallProperty.get_diameter()\nGet the diameter parameters of the solder ball property.\nSolderBallProperty.set_diameter(diameter1, ...)\nSet the diameter parameters of the solder ball property.\nSolderBallProperty.height\nValueLike: Height of the solder ball.\nSolderBallProperty.id\nint: Unique ID of the EDB object.\nSolderBallProperty.is_null\nbool: Flag indicating if the object exists in the database.\nSolderBallProperty.material_name\nstr: Name of the solder ball material.\nSolderBallProperty.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nSolderBallProperty.placement\nSolderballPlacement: Solder ball placement.\nSolderBallProperty.shape\nSolderballShape: Solder ball shape.\nSolderBallProperty.uses_solderball\nbool: Flag indicating if the solder ball is used.\nSolderBallProperty\nSolderBallProperty.clone\nSolderBallProperty.create\nSolderBallProperty.get_diameter\nSolderBallProperty.set_diameter\nSolderBallProperty.height\nSolderBallProperty.id\nint\nSolderBallProperty.is_null\nbool\nSolderBallProperty.material_name\nstr\nSolderBallProperty.msg\nEDBObjMessage\nSolderBallProperty.placement\nSolderballPlacement\nSolderBallProperty.shape\nSolderballShape\nSolderBallProperty.uses_solderball\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty",
        "href": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.html#ansys.edb.core.definition.solder_ball_property.SolderBallProperty",
        "title": "SolderBallProperty > SolderBallProperty > SolderBallProperty",
        "section": "SolderBallProperty > SolderBallProperty",
        "text": "class ansys.edb.core.definition.solder_ball_property.SolderBallProperty(msg)\n\nRepresents a solder ball property.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nSolderBallProperty.clone()\n\nClone a solder ball property.\n\nSolderBallProperty.create()\n\nCreate a solder ball property.\n\nSolderBallProperty.get_diameter()\n\nGet the diameter parameters of the solder ball property.\n\nSolderBallProperty.set_diameter(diameter1, ...)\n\nSet the diameter parameters of the solder ball property.\n\n\n\nAttributes\n\n\n\n\n\n\n\nSolderBallProperty.height\n\nValueLike: Height of the solder ball.\n\nSolderBallProperty.id\n\nint: Unique ID of the EDB object.\n\nSolderBallProperty.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nSolderBallProperty.material_name\n\nstr: Name of the solder ball material.\n\nSolderBallProperty.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nSolderBallProperty.placement\n\nSolderballPlacement: Solder ball placement.\n\nSolderBallProperty.shape\n\nSolderballShape: Solder ball shape.\n\nSolderBallProperty.uses_solderball\n\nbool: Flag indicating if the solder ball is used.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.sparameter_model.SParameterModel.id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.sparameter_model.SParameterModel.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.sparameter_model.SParameterModel.id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.sparameter_model.SParameterModel.id.html#ansys.edb.core.hierarchy.sparameter_model.SParameterModel.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property SParameterModel.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.is_mcad.html#is_mcad",
        "title": "is_mcad",
        "section": "is_mcad",
        "text": "bool: Flag indicating if this is an MCAD model.\nThis property is read-only.\nis_mcad\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.is_mcad.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.is_mcad",
        "title": "is_mcad > is_mcad > is_mcad",
        "section": "is_mcad > is_mcad",
        "text": "property VoltageRegulator.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.component",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.component.html#component",
        "title": "component",
        "section": "component",
        "text": "ComponentGroup:         Component of the Connectable object.\ncomponent\nComponentGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.component",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.component.html#ansys.edb.core.hierarchy.structure3d.Structure3D.component",
        "title": "component > component > component",
        "section": "component > component",
        "text": "property Structure3D.component\n\nComponentGroup:         Component of the Connectable object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.is_null",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.is_null",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.is_null.html#ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property LayoutObjInstance.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.remove_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.remove_hfss_prop.html#remove_hfss_prop",
        "title": "remove_hfss_prop",
        "section": "remove_hfss_prop",
        "text": "Remove HFSS properties.\nremove_hfss_prop"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.remove_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.remove_hfss_prop.html#ansys.edb.core.primitive.primitive.Primitive.remove_hfss_prop",
        "title": "remove_hfss_prop > remove_hfss_prop > remove_hfss_prop",
        "section": "remove_hfss_prop > remove_hfss_prop",
        "text": "Primitive.remove_hfss_prop()\n\nRemove HFSS properties.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_mesh_frequency",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_mesh_frequency.html#use_mesh_frequency",
        "title": "use_mesh_frequency",
        "section": "use_mesh_frequency",
        "text": "bool: Flag indicating if the default meshing frequency is overridden.\nuse_mesh_frequency\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_mesh_frequency",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_mesh_frequency.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_mesh_frequency",
        "title": "use_mesh_frequency > use_mesh_frequency > use_mesh_frequency",
        "section": "use_mesh_frequency > use_mesh_frequency",
        "text": "property RaptorXAdvancedSettings.use_mesh_frequency\n\nbool: Flag indicating if the default meshing frequency is overridden.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.is_mcad_hfss.html#is_mcad_hfss",
        "title": "is_mcad_hfss",
        "section": "is_mcad_hfss",
        "text": "bool: Flag indicating if this is an HFSS MCAD model.\nThis property is read-only.\nis_mcad_hfss\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.is_mcad_hfss.html#ansys.edb.core.hierarchy.structure3d.Structure3D.is_mcad_hfss",
        "title": "is_mcad_hfss > is_mcad_hfss > is_mcad_hfss",
        "section": "is_mcad_hfss > is_mcad_hfss",
        "text": "property Structure3D.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.port_post_processing_prop",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.port_post_processing_prop.html#port_post_processing_prop",
        "title": "port_post_processing_prop",
        "section": "port_post_processing_prop",
        "text": "PortPostProcessingProp: Port postprocessing properties.\nport_post_processing_prop\nPortPostProcessingProp"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.port_post_processing_prop",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.port_post_processing_prop.html#ansys.edb.core.terminal.terminals.Terminal.port_post_processing_prop",
        "title": "port_post_processing_prop > port_post_processing_prop > port_post_processing_prop",
        "section": "port_post_processing_prop > port_post_processing_prop",
        "text": "property Terminal.port_post_processing_prop\n\nPortPostProcessingProp: Port postprocessing properties.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.net",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.net.html#net",
        "title": "net",
        "section": "net",
        "text": "Net: Net of the Connectable object.\nThis property can be set with a Net instance, a string, or None.\nnet\nNet\nNet\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.net",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.net.html#ansys.edb.core.hierarchy.inst_array.InstArray.net",
        "title": "net > net > net",
        "section": "net > net",
        "text": "property InstArray.net\n\nNet: Net of the Connectable object.\n\nThis property can be set with a Net instance, a string, or None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.find",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.find.html#find",
        "title": "find",
        "section": "find",
        "text": "Find an instance array by name in a given layout.\nLayout to search for the instance array.\nName of the instance array.\nInstance array that is found, None otherwise.\nfind\nLayout\npython:str\nInstArray\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.find",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.find.html#ansys.edb.core.hierarchy.inst_array.InstArray.find",
        "title": "find > find > find",
        "section": "find > find",
        "text": "classmethod InstArray.find(layout, name)\n\nFind an instance array by name in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the instance array.\n\nname\n\npython:str\n\nName of the instance array.\n\nReturns\n\nInstArray\n\nInstance array that is found, None otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireType.JEDEC5",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireType.JEDEC5.html#jedec5",
        "title": "JEDEC5",
        "section": "JEDEC5",
        "text": "JEDEC5"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireType.JEDEC5",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireType.JEDEC5.html#ansys.edb.core.primitive.primitive.BondwireType.JEDEC5",
        "title": "JEDEC5 > JEDEC5 > JEDEC5",
        "section": "JEDEC5 > JEDEC5",
        "text": "BondwireType.JEDEC5 = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.end",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.end.html#end",
        "title": "end",
        "section": "end",
        "text": "PointData: End point of the arc.\nend\nPointData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.end",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.end.html#ansys.edb.core.geometry.arc_data.ArcData.end",
        "title": "end > end > end",
        "section": "end > end",
        "text": "property ArcData.end\n\nPointData: End point of the arc.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.id",
        "href": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.id",
        "href": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.id.html#ansys.edb.core.definition.solder_ball_property.SolderBallProperty.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property SolderBallProperty.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_extract_floating_metals_dummy",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_extract_floating_metals_dummy.html#use_extract_floating_metals_dummy",
        "title": "use_extract_floating_metals_dummy",
        "section": "use_extract_floating_metals_dummy",
        "text": "bool: Flag indicating if floating metals are modeled as dummy fills.\nuse_extract_floating_metals_dummy\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_extract_floating_metals_dummy",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_extract_floating_metals_dummy.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_extract_floating_metals_dummy",
        "title": "use_extract_floating_metals_dummy > use_extract_floating_metals_dummy > use_extract_floating_metals_dummy",
        "section": "use_extract_floating_metals_dummy > use_extract_floating_metals_dummy",
        "text": "property RaptorXAdvancedSettings.use_extract_floating_metals_dummy\n\nbool: Flag indicating if floating metals are modeled as dummy fills.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.transform",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.transform.html#transform",
        "title": "transform",
        "section": "transform",
        "text": "Transform:         Transformation information of the hierarchy object.\ntransform\nTransform"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.transform",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.transform.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.transform",
        "title": "transform > transform > transform",
        "section": "transform > transform",
        "text": "property ComponentGroup.transform\n\nTransform:         Transformation information of the hierarchy object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireType.NUM_OF_TYPE",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireType.NUM_OF_TYPE.html#num_of_type",
        "title": "NUM_OF_TYPE",
        "section": "NUM_OF_TYPE",
        "text": "NUM_OF_TYPE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireType.NUM_OF_TYPE",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireType.NUM_OF_TYPE.html#ansys.edb.core.primitive.primitive.BondwireType.NUM_OF_TYPE",
        "title": "NUM_OF_TYPE > NUM_OF_TYPE > NUM_OF_TYPE",
        "section": "NUM_OF_TYPE > NUM_OF_TYPE",
        "text": "BondwireType.NUM_OF_TYPE = 3\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.find",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.find.html#find",
        "title": "find",
        "section": "find",
        "text": "Find a terminal by name in a given layout.\nLayout to search for the terminal.\nName of the terminal.\nfind\nLayout\nstr\nTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.find",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.find.html#ansys.edb.core.terminal.terminals.BundleTerminal.find",
        "title": "find > find > find",
        "section": "find > find",
        "text": "classmethod BundleTerminal.find(layout, name)\n\nFind a terminal by name in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the terminal.\n\nname\n\nstr\n\nName of the terminal.\n\nReturns\n\nTerminal\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.create_3d_comp.html#create_3d_comp",
        "title": "create_3d_comp",
        "section": "create_3d_comp",
        "text": "Create a 3D composite model from an MCAD file.\n3D composite model created.\ncreate_3d_comp\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.create_3d_comp.html#ansys.edb.core.terminal.terminals.TerminalInstance.create_3d_comp",
        "title": "create_3d_comp > create_3d_comp > create_3d_comp",
        "section": "create_3d_comp > create_3d_comp",
        "text": "TerminalInstance.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nReturns\n\nMcadModel\n\n3D composite model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.set_variable_value",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.set_variable_value.html#set_variable_value",
        "title": "set_variable_value",
        "section": "set_variable_value",
        "text": "Set a variable to a new value.\nVariable name.\nNew value.\nset_variable_value\npython:str\npython:str\npython:int\npython:float\ncomplex\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.set_variable_value",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.set_variable_value.html#ansys.edb.core.layout.cell.Cell.set_variable_value",
        "title": "set_variable_value > set_variable_value > set_variable_value",
        "section": "set_variable_value > set_variable_value",
        "text": "Cell.set_variable_value(name, new_value)\n\nSet a variable to a new value.\n\nParameters\n\nname\n\npython:str\n\nVariable name.\n\nnew_value\n\npython:str, python:int, python:float, complex, Value\n\nNew value.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.SingleFrequencyAdaptiveSolution.max_passes",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.SingleFrequencyAdaptiveSolution.max_passes.html#max_passes",
        "title": "max_passes",
        "section": "max_passes",
        "text": "int: Maximum number of adaptive passes.\nmax_passes\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.SingleFrequencyAdaptiveSolution.max_passes",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.SingleFrequencyAdaptiveSolution.max_passes.html#ansys.edb.core.simulation_setup.adaptive_solutions.SingleFrequencyAdaptiveSolution.max_passes",
        "title": "max_passes > max_passes > max_passes",
        "section": "max_passes > max_passes",
        "text": "property SingleFrequencyAdaptiveSolution.max_passes\n\nint: Maximum number of adaptive passes.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents this object’s ID.\nThis property is read-only.\nmsg\nEDBObjMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.msg.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property RaptorXAdvancedSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object’s ID.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.is_mcad.html#is_mcad",
        "title": "is_mcad",
        "section": "is_mcad",
        "text": "bool: Flag indicating if this is an MCAD model.\nThis property is read-only.\nis_mcad\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.is_mcad.html#ansys.edb.core.hierarchy.group.Group.is_mcad",
        "title": "is_mcad > is_mcad > is_mcad",
        "section": "is_mcad > is_mcad",
        "text": "property Group.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.POISSONS_RATIO",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.POISSONS_RATIO.html#poissons_ratio",
        "title": "POISSONS_RATIO",
        "section": "POISSONS_RATIO",
        "text": "POISSONS_RATIO"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.POISSONS_RATIO",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.POISSONS_RATIO.html#ansys.edb.core.definition.material_def.MaterialProperty.POISSONS_RATIO",
        "title": "POISSONS_RATIO > POISSONS_RATIO > POISSONS_RATIO",
        "section": "POISSONS_RATIO > POISSONS_RATIO",
        "text": "MaterialProperty.POISSONS_RATIO = 40\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin.id",
        "href": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin.id",
        "href": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin.id.html#ansys.edb.core.definition.component_pin.ComponentPin.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property ComponentPin.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.create_3d_comp.html#create_3d_comp",
        "title": "create_3d_comp",
        "section": "create_3d_comp",
        "text": "Create a 3D composite model from an MCAD file.\n3D composite model created.\ncreate_3d_comp\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.create_3d_comp.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.create_3d_comp",
        "title": "create_3d_comp > create_3d_comp > create_3d_comp",
        "section": "create_3d_comp > create_3d_comp",
        "text": "CellInstance.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nReturns\n\nMcadModel\n\n3D composite model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.OUTLINE_LAYER",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.OUTLINE_LAYER.html#outline_layer",
        "title": "OUTLINE_LAYER",
        "section": "OUTLINE_LAYER",
        "text": "OUTLINE_LAYER"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.OUTLINE_LAYER",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.OUTLINE_LAYER.html#ansys.edb.core.layer.layer_collection.LayerType.OUTLINE_LAYER",
        "title": "OUTLINE_LAYER > OUTLINE_LAYER > OUTLINE_LAYER",
        "section": "OUTLINE_LAYER > OUTLINE_LAYER",
        "text": "LayerType.OUTLINE_LAYER = 18\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.LayerVisibility",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.LayerVisibility.html#layervisibility",
        "title": "LayerVisibility",
        "section": "LayerVisibility",
        "text": "Provides an enum representing visibility options for layers.\nLayerVisibility.PRIMITIVE_VISIBLE\n\nLayerVisibility.PATH_VISIBLE\n\nLayerVisibility.PAD_VISIBLE\n\nLayerVisibility.HOLE_VISIBLE\n\nLayerVisibility.COMPONENT_VISIBLE\n\nLayerVisibility.ALL_VISIBLE\n\nLayerVisibility\nLayerVisibility.PRIMITIVE_VISIBLE\nLayerVisibility.PATH_VISIBLE\nLayerVisibility.PAD_VISIBLE\nLayerVisibility.HOLE_VISIBLE\nLayerVisibility.COMPONENT_VISIBLE\nLayerVisibility.ALL_VISIBLE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.LayerVisibility",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.LayerVisibility.html#ansys.edb.core.layer.layer.LayerVisibility",
        "title": "LayerVisibility > LayerVisibility > LayerVisibility",
        "section": "LayerVisibility > LayerVisibility",
        "text": "class ansys.edb.core.layer.layer.LayerVisibility(value)\n\nProvides an enum representing visibility options for layers.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nLayerVisibility.PRIMITIVE_VISIBLE\n\n\n\nLayerVisibility.PATH_VISIBLE\n\n\n\nLayerVisibility.PAD_VISIBLE\n\n\n\nLayerVisibility.HOLE_VISIBLE\n\n\n\nLayerVisibility.COMPONENT_VISIBLE\n\n\n\nLayerVisibility.ALL_VISIBLE\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.set_material",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.set_material.html#set_material",
        "title": "set_material",
        "section": "set_material",
        "text": "Set the name of the material of the layer.\nNew name of the material.\nset_material\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.set_material",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.set_material.html#ansys.edb.core.layer.via_layer.ViaLayer.set_material",
        "title": "set_material > set_material > set_material",
        "section": "set_material > set_material",
        "text": "ViaLayer.set_material(material_name)\n\nSet the name of the material of the layer.\n\nParameters\n\nmaterial_name\n\npython:str\n\nNew name of the material.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.html#hfssadvancedmeshingsettings",
        "title": "HFSSAdvancedMeshingSettings",
        "section": "HFSSAdvancedMeshingSettings",
        "text": "Represents advanced meshing settings for HFSS simulations.\nHFSSAdvancedMeshingSettings.arc_step_size\nstr: Arc step size used when approximating arcs.\nHFSSAdvancedMeshingSettings.arc_to_chord_error\nstr: Maximum allowable arc to chord error.\nHFSSAdvancedMeshingSettings.circle_start_azimuth\nstr: Starting azimuth used when approximating arcs.\nHFSSAdvancedMeshingSettings.layer_snap_tol\nstr: Snapping tolerance for hierarchical layer alignment.\nHFSSAdvancedMeshingSettings.max_num_arc_points\nstr: Maximum number of points used to approximate arcs.\nHFSSAdvancedMeshingSettings.msg\nEDBObjMessage: Protobuf message that represents this object's ID.\nHFSSAdvancedMeshingSettings.use_arc_chord_error_approx\nbool: Flag indicating if arc chord error approximation is used.\nHFSSAdvancedMeshingSettings\nHFSSAdvancedMeshingSettings.arc_step_size\nstr\nHFSSAdvancedMeshingSettings.arc_to_chord_error\nstr\nHFSSAdvancedMeshingSettings.circle_start_azimuth\nstr\nHFSSAdvancedMeshingSettings.layer_snap_tol\nstr\nHFSSAdvancedMeshingSettings.max_num_arc_points\nstr\nHFSSAdvancedMeshingSettings.msg\nEDBObjMessage\nHFSSAdvancedMeshingSettings.use_arc_chord_error_approx\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings",
        "title": "HFSSAdvancedMeshingSettings > HFSSAdvancedMeshingSettings > HFSSAdvancedMeshingSettings",
        "section": "HFSSAdvancedMeshingSettings > HFSSAdvancedMeshingSettings",
        "text": "class ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings(sim_setup)\n\nRepresents advanced meshing settings for HFSS simulations.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nHFSSAdvancedMeshingSettings.arc_step_size\n\nstr: Arc step size used when approximating arcs.\n\nHFSSAdvancedMeshingSettings.arc_to_chord_error\n\nstr: Maximum allowable arc to chord error.\n\nHFSSAdvancedMeshingSettings.circle_start_azimuth\n\nstr: Starting azimuth used when approximating arcs.\n\nHFSSAdvancedMeshingSettings.layer_snap_tol\n\nstr: Snapping tolerance for hierarchical layer alignment.\n\nHFSSAdvancedMeshingSettings.max_num_arc_points\n\nstr: Maximum number of points used to approximate arcs.\n\nHFSSAdvancedMeshingSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object's ID.\n\nHFSSAdvancedMeshingSettings.use_arc_chord_error_approx\n\nbool: Flag indicating if arc chord error approximation is used.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.loss_tangent_at_high_low_frequency",
        "href": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.loss_tangent_at_high_low_frequency.html#loss_tangent_at_high_low_frequency",
        "title": "loss_tangent_at_high_low_frequency",
        "section": "loss_tangent_at_high_low_frequency",
        "text": "tuple of float, float: Loss tangent frequency range (low, high).\nloss_tangent_at_high_low_frequency\ntuple\nfloat\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.loss_tangent_at_high_low_frequency",
        "href": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.loss_tangent_at_high_low_frequency.html#ansys.edb.core.definition.debye_model.DebyeModel.loss_tangent_at_high_low_frequency",
        "title": "loss_tangent_at_high_low_frequency > loss_tangent_at_high_low_frequency > loss_tangent_at_high_low_frequency",
        "section": "loss_tangent_at_high_low_frequency > loss_tangent_at_high_low_frequency",
        "text": "property DebyeModel.loss_tangent_at_high_low_frequency\n\ntuple of float, float: Loss tangent frequency range (low, high).\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_null",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_null",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_null.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property PadstackInstanceTerminal.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.set_variable_desc",
        "href": "api/_autosummary/ansys.edb.core.database.Database.set_variable_desc.html#set_variable_desc",
        "title": "set_variable_desc",
        "section": "set_variable_desc",
        "text": "Set a variable to have a new description.\nVariable name.\nNew variable description.\nset_variable_desc\npython:str\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.set_variable_desc",
        "href": "api/_autosummary/ansys.edb.core.database.Database.set_variable_desc.html#ansys.edb.core.database.Database.set_variable_desc",
        "title": "set_variable_desc > set_variable_desc > set_variable_desc",
        "section": "set_variable_desc > set_variable_desc",
        "text": "Database.set_variable_desc(name, desc)\n\nSet a variable to have a new description.\n\nParameters\n\nname\n\npython:str\n\nVariable name.\n\ndesc\n\npython:str\n\nNew variable description.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.dielectric_material_model",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.dielectric_material_model.html#dielectric_material_model",
        "title": "dielectric_material_model",
        "section": "dielectric_material_model",
        "text": "DielectricMaterialModel:         Dielectric material model of the material definition.\ndielectric_material_model\nDielectricMaterialModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.dielectric_material_model",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.dielectric_material_model.html#ansys.edb.core.definition.material_def.MaterialDef.dielectric_material_model",
        "title": "dielectric_material_model > dielectric_material_model > dielectric_material_model",
        "section": "dielectric_material_model > dielectric_material_model",
        "text": "property MaterialDef.dielectric_material_model\n\nDielectricMaterialModel:         Dielectric material model of the material definition.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.set_all_constant",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.set_all_constant.html#set_all_constant",
        "title": "set_all_constant",
        "section": "set_all_constant",
        "text": "Set all entries in the matrix to have the given magnitude and phase values.\nMagnitude limit.\nPhase limit.\nList of port names.\nset_all_constant\npython:float\npython:float\npython:list\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.set_all_constant",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.set_all_constant.html#ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.set_all_constant",
        "title": "set_all_constant > set_all_constant > set_all_constant",
        "section": "set_all_constant > set_all_constant",
        "text": "MatrixConvergenceData.set_all_constant(mag_limit, phase_limit, port_names)\n\nSet all entries in the matrix to have the given magnitude and phase values.\n\nParameters\n\nmag_limit\n\npython:float\n\nMagnitude limit.\n\nphase_limit\n\npython:float\n\nPhase limit.\n\nport_names\n\npython:list[str]\n\nList of port names.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.layer",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.layer.html#layer",
        "title": "layer",
        "section": "layer",
        "text": "Layer: Layer that the primitive object is on.\nlayer\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.layer",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.layer.html#ansys.edb.core.primitive.primitive.BoardBendDef.layer",
        "title": "layer > layer > layer",
        "section": "layer > layer",
        "text": "property BoardBendDef.layer\n\nLayer: Layer that the primitive object is on.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.make_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.make_zone_primitive.html#make_zone_primitive",
        "title": "make_zone_primitive",
        "section": "make_zone_primitive",
        "text": "Make the primitive a zone primitive with a zone specified by the provided ID.\nID of the zone primitive to use.\nmake_zone_primitive\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.make_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.make_zone_primitive.html#ansys.edb.core.primitive.primitive.Primitive.make_zone_primitive",
        "title": "make_zone_primitive > make_zone_primitive > make_zone_primitive",
        "section": "make_zone_primitive > make_zone_primitive",
        "text": "Primitive.make_zone_primitive(zone_id)\n\nMake the primitive a zone primitive with a zone specified by the provided ID.\n\nParameters\n\nzone_id\n\npython:int\n\nID of the zone primitive to use.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents this object’s ID.\nThis property is read-only.\nmsg\nEDBObjMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.msg.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property HFSSAdvancedMeshingSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object’s ID.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ViaStyle",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ViaStyle.html#viastyle",
        "title": "ViaStyle",
        "section": "ViaStyle",
        "text": "Enum representing via modeling styles.\nViaStyle.WIREBOND\n\nViaStyle.RIBBON\n\nViaStyle.MESH\n\nViaStyle.FIELD\n\nViaStyle.NUM_VIA_STYLE\n\nViaStyle\nViaStyle.WIREBOND\nViaStyle.RIBBON\nViaStyle.MESH\nViaStyle.FIELD\nViaStyle.NUM_VIA_STYLE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ViaStyle",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ViaStyle.html#ansys.edb.core.simulation_setup.simulation_settings.ViaStyle",
        "title": "ViaStyle > ViaStyle > ViaStyle",
        "section": "ViaStyle > ViaStyle",
        "text": "class ansys.edb.core.simulation_setup.simulation_settings.ViaStyle(value)\n\nEnum representing via modeling styles.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nViaStyle.WIREBOND\n\n\n\nViaStyle.RIBBON\n\n\n\nViaStyle.MESH\n\n\n\nViaStyle.FIELD\n\n\n\nViaStyle.NUM_VIA_STYLE\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDs for a given product ID for the layer collection.\nProduct ID.\nList of attribute IDs for the given product ID.\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.get_product_property_ids.html#ansys.edb.core.layer.layer_collection.LayerCollection.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "LayerCollection.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs for a given product ID for the layer collection.\n\nParameters\n\nprod_id\n\nProductIdType\n\nProduct ID.\n\nReturns\n\npython:list[python:int]\n\nList of attribute IDs for the given product ID.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.obj_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.obj_type.html#obj_type",
        "title": "obj_type",
        "section": "obj_type",
        "text": "LayoutObjType: Layout object type.\nThis property is read-only.\nobj_type\nLayoutObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.obj_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.obj_type.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.obj_type",
        "title": "obj_type > obj_type > obj_type",
        "section": "obj_type > obj_type",
        "text": "property TerminalInstanceTerminal.obj_type\n\nLayoutObjType: Layout object type.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.is_mcad_stride.html#is_mcad_stride",
        "title": "is_mcad_stride",
        "section": "is_mcad_stride",
        "text": "bool: Flag indicating if this is a Stride MCAD model.\nThis property is read-only.\nis_mcad_stride\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.is_mcad_stride.html#ansys.edb.core.hierarchy.via_group.ViaGroup.is_mcad_stride",
        "title": "is_mcad_stride > is_mcad_stride > is_mcad_stride",
        "section": "is_mcad_stride > is_mcad_stride",
        "text": "property ViaGroup.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.perform_adaptive_refinement",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.perform_adaptive_refinement.html#perform_adaptive_refinement",
        "title": "perform_adaptive_refinement",
        "section": "perform_adaptive_refinement",
        "text": "bool: Flag indicating if adaptive refinement is performed.\nperform_adaptive_refinement\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.perform_adaptive_refinement",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.perform_adaptive_refinement.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.perform_adaptive_refinement",
        "title": "perform_adaptive_refinement > perform_adaptive_refinement > perform_adaptive_refinement",
        "section": "perform_adaptive_refinement > perform_adaptive_refinement",
        "text": "property SIWaveDCAdvancedSettings.perform_adaptive_refinement\n\nbool: Flag indicating if adaptive refinement is performed.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.is_mcad_stride.html#is_mcad_stride",
        "title": "is_mcad_stride",
        "section": "is_mcad_stride",
        "text": "bool: Flag indicating if this is a Stride MCAD model.\nThis property is read-only.\nis_mcad_stride\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.is_mcad_stride.html#ansys.edb.core.hierarchy.pin_group.PinGroup.is_mcad_stride",
        "title": "is_mcad_stride > is_mcad_stride > is_mcad_stride",
        "section": "is_mcad_stride > is_mcad_stride",
        "text": "property PinGroup.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_mcad_stride.html#is_mcad_stride",
        "title": "is_mcad_stride",
        "section": "is_mcad_stride",
        "text": "bool: Flag indicating if this is a Stride MCAD model.\nThis property is read-only.\nis_mcad_stride\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_mcad_stride.html#ansys.edb.core.terminal.terminals.EdgeTerminal.is_mcad_stride",
        "title": "is_mcad_stride > is_mcad_stride > is_mcad_stride",
        "section": "is_mcad_stride > is_mcad_stride",
        "text": "property EdgeTerminal.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_zone_primitive.html#is_zone_primitive",
        "title": "is_zone_primitive",
        "section": "is_zone_primitive",
        "text": "bool: Flag indicating if the primitive object is a zone.\nThis property is read-only.\nis_zone_primitive\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_zone_primitive.html#ansys.edb.core.primitive.primitive.Bondwire.is_zone_primitive",
        "title": "is_zone_primitive > is_zone_primitive > is_zone_primitive",
        "section": "is_zone_primitive > is_zone_primitive",
        "text": "property Bondwire.is_zone_primitive\n\nbool: Flag indicating if the primitive object is a zone.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.union_polygons",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.union_polygons.html#union_polygons",
        "title": "union_polygons",
        "section": "union_polygons",
        "text": "bool: Flag indicating if polygons are unioned before meshing.\nunion_polygons\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.union_polygons",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.union_polygons.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.union_polygons",
        "title": "union_polygons > union_polygons > union_polygons",
        "section": "union_polygons > union_polygons",
        "text": "property HFSSAdvancedSettings.union_polygons\n\nbool: Flag indicating if polygons are unioned before meshing.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.locked",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.locked.html#locked",
        "title": "locked",
        "section": "locked",
        "text": "bool: Flag indicating if the layer is locked.\nlocked\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.locked",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.locked.html#ansys.edb.core.layer.layer.Layer.locked",
        "title": "locked > locked > locked",
        "section": "locked > locked",
        "text": "property Layer.locked\n\nbool: Flag indicating if the layer is locked.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.model",
        "href": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.model.html#model",
        "title": "model",
        "section": "model",
        "text": "Model: Model object.\nThis is a copy of the model object. Use the setter for any modifications to be reflected.\nmodel\nModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.model",
        "href": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.model.html#ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.model",
        "title": "model > model > model",
        "section": "model > model",
        "text": "property RLCComponentProperty.model\n\nModel: Model object.\n\nThis is a copy of the model object. Use the setter for any modifications to be reflected.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.set_product_solver_option",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.set_product_solver_option.html#set_product_solver_option",
        "title": "set_product_solver_option",
        "section": "set_product_solver_option",
        "text": "Set the product solver option.\nID of the product.\nName of the solver.\nName of the product solver option.\nset_product_solver_option\nProductIdType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.set_product_solver_option",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.set_product_solver_option.html#ansys.edb.core.terminal.terminals.BundleTerminal.set_product_solver_option",
        "title": "set_product_solver_option > set_product_solver_option > set_product_solver_option",
        "section": "set_product_solver_option > set_product_solver_option",
        "text": "BundleTerminal.set_product_solver_option(product_id, solver_name, option)\n\nSet the product solver option.\n\nParameters\n\nproduct_id\n\nProductIdType\n\nID of the product.\n\nsolver_name\n\nobj:str\n\nName of the solver.\n\noption\n\nobj:str\n\nName of the product solver option.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_mcad.html#is_mcad",
        "title": "is_mcad",
        "section": "is_mcad",
        "text": "bool: Flag indicating if this is an MCAD model.\nThis property is read-only.\nis_mcad\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_mcad.html#ansys.edb.core.primitive.primitive.BoardBendDef.is_mcad",
        "title": "is_mcad > is_mcad > is_mcad",
        "section": "is_mcad > is_mcad",
        "text": "property BoardBendDef.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_null",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_null",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_null.html#ansys.edb.core.primitive.primitive.Path.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property Path.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.pin_groups",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.pin_groups.html#pin_groups",
        "title": "pin_groups",
        "section": "pin_groups",
        "text": "list of PinGroup : List of all         pin groups in the layout.\nThis property is read-only.\npin_groups\nlist\nPinGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.pin_groups",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.pin_groups.html#ansys.edb.core.layout.layout.Layout.pin_groups",
        "title": "pin_groups > pin_groups > pin_groups",
        "section": "pin_groups > pin_groups",
        "text": "property Layout.pin_groups\n\nlist of PinGroup : List of all         pin groups in the layout.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.html#raptorxsimulationsetup",
        "title": "RaptorXSimulationSetup",
        "section": "RaptorXSimulationSetup",
        "text": "Represents RaptorX simulation setup data.\nRaptorXSimulationSetup.cast()\nCast the base SimulationSetup object to correct subclass, if possible.\nRaptorXSimulationSetup.create(cell, name)\nCreate a RaptorX simulation setup.\nRaptorXSimulationSetup.id\nint: Unique ID of the EDB object.\nRaptorXSimulationSetup.is_null\nbool: Flag indicating if the object exists in the database.\nRaptorXSimulationSetup.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nRaptorXSimulationSetup.name\nstr: Name of simulation setup.\nRaptorXSimulationSetup.position\nint: Position of the simulation in the setup order.\nRaptorXSimulationSetup.settings\nRaptorXSimulationSettings: Simulation settings of the RaptorX simulation setup.\nRaptorXSimulationSetup.sweep_data\nlist of SweepData: Frequency sweeps of the simulation setup.\nRaptorXSimulationSetup.type\nSimulationSetupType: Type of the simulation setup.\nRaptorXSimulationSetup\nRaptorXSimulationSetup.cast\nRaptorXSimulationSetup.create\nRaptorXSimulationSetup.id\nint\nRaptorXSimulationSetup.is_null\nbool\nRaptorXSimulationSetup.msg\nEDBObjMessage\nRaptorXSimulationSetup.name\nstr\nRaptorXSimulationSetup.position\nint\nRaptorXSimulationSetup.settings\nRaptorXSimulationSettings\nRaptorXSimulationSetup.sweep_data\nlist\nSweepData\nRaptorXSimulationSetup.type\nSimulationSetupType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.html#ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup",
        "title": "RaptorXSimulationSetup > RaptorXSimulationSetup > RaptorXSimulationSetup",
        "section": "RaptorXSimulationSetup > RaptorXSimulationSetup",
        "text": "class ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup(msg)\n\nRepresents RaptorX simulation setup data.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nRaptorXSimulationSetup.cast()\n\nCast the base SimulationSetup object to correct subclass, if possible.\n\nRaptorXSimulationSetup.create(cell, name)\n\nCreate a RaptorX simulation setup.\n\n\n\nAttributes\n\n\n\n\n\n\n\nRaptorXSimulationSetup.id\n\nint: Unique ID of the EDB object.\n\nRaptorXSimulationSetup.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nRaptorXSimulationSetup.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nRaptorXSimulationSetup.name\n\nstr: Name of simulation setup.\n\nRaptorXSimulationSetup.position\n\nint: Position of the simulation in the setup order.\n\nRaptorXSimulationSetup.settings\n\nRaptorXSimulationSettings: Simulation settings of the RaptorX simulation setup.\n\nRaptorXSimulationSetup.sweep_data\n\nlist of SweepData: Frequency sweeps of the simulation setup.\n\nRaptorXSimulationSetup.type\n\nSimulationSetupType: Type of the simulation setup.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_zone_primitive.html#is_zone_primitive",
        "title": "is_zone_primitive",
        "section": "is_zone_primitive",
        "text": "bool: Flag indicating if the primitive object is a zone.\nThis property is read-only.\nis_zone_primitive\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_zone_primitive.html#ansys.edb.core.primitive.primitive.Rectangle.is_zone_primitive",
        "title": "is_zone_primitive > is_zone_primitive > is_zone_primitive",
        "section": "is_zone_primitive > is_zone_primitive",
        "text": "property Rectangle.is_zone_primitive\n\nbool: Flag indicating if the primitive object is a zone.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.clone",
        "href": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Clone the component property.\nComponent property cloned.\nclone\nComponentProperty"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.clone",
        "href": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.clone.html#ansys.edb.core.definition.io_component_property.IOComponentProperty.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "IOComponentProperty.clone()\n\nClone the component property.\n\nReturns\n\nComponentProperty\n\nComponent property cloned.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.description",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.description.html#description",
        "title": "description",
        "section": "description",
        "text": "str : Description of the net class.\ndescription\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.description",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.description.html#ansys.edb.core.net.extended_net.ExtendedNet.description",
        "title": "description > description > description",
        "section": "description > description",
        "text": "property ExtendedNet.description\n\nstr : Description of the net class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.set_text_data",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.set_text_data.html#set_text_data",
        "title": "set_text_data",
        "section": "set_text_data",
        "text": "Set the data for the text object.\nX value of the center point.\nY value of the center point.\nString value for the text object.\nset_text_data\nValue\nValue\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.set_text_data",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.set_text_data.html#ansys.edb.core.primitive.primitive.Text.set_text_data",
        "title": "set_text_data > set_text_data > set_text_data",
        "section": "set_text_data > set_text_data",
        "text": "Text.set_text_data(center_x, center_y, text)\n\nSet the data for the text object.\n\nParameters\n\ncenter_x\n\nValue\n\nX value of the center point.\n\ncenter_y\n\nValue\n\nY value of the center point.\n\ntext\n\npython:str\n\nString value for the text object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.create_hfss.html#create_hfss",
        "title": "create_hfss",
        "section": "create_hfss",
        "text": "Create an HFSS model from an MCAD file.\nHFSS model created.\ncreate_hfss\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.create_hfss.html#ansys.edb.core.hierarchy.inst_array.InstArray.create_hfss",
        "title": "create_hfss > create_hfss > create_hfss",
        "section": "create_hfss > create_hfss",
        "text": "InstArray.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nReturns\n\nMcadModel\n\nHFSS model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.model.Model",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.model.Model.html#model",
        "title": "Model",
        "section": "Model",
        "text": "Represents a base hierarchy model object.\nModel.clone()\nClone a model.\nModel.id\nint: Unique ID of the EDB object.\nModel.is_null\nbool: Flag indicating if the object exists in the database.\nModel.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nModel\nModel.clone\nModel.id\nint\nModel.is_null\nbool\nModel.msg\nEDBObjMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.model.Model",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.model.Model.html#ansys.edb.core.hierarchy.model.Model",
        "title": "Model > Model > Model",
        "section": "Model > Model",
        "text": "class ansys.edb.core.hierarchy.model.Model(msg)\n\nRepresents a base hierarchy model object.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nModel.clone()\n\nClone a model.\n\n\n\nAttributes\n\n\n\n\n\n\n\nModel.id\n\nint: Unique ID of the EDB object.\n\nModel.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nModel.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDef.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDef.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDef.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDef.is_null.html#ansys.edb.core.definition.bondwire_def.BondwireDef.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property BondwireDef.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadType.REGULAR_PAD",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadType.REGULAR_PAD.html#regular_pad",
        "title": "REGULAR_PAD",
        "section": "REGULAR_PAD",
        "text": "REGULAR_PAD"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadType.REGULAR_PAD",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadType.REGULAR_PAD.html#ansys.edb.core.definition.padstack_def_data.PadType.REGULAR_PAD",
        "title": "REGULAR_PAD > REGULAR_PAD > REGULAR_PAD",
        "section": "REGULAR_PAD > REGULAR_PAD",
        "text": "PadType.REGULAR_PAD = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.polygon_data",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.polygon_data.html#polygon_data",
        "title": "polygon_data",
        "section": "polygon_data",
        "text": "PolygonData: Polygon data of this Path.\npolygon_data\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.polygon_data",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.polygon_data.html#ansys.edb.core.primitive.primitive.Path.polygon_data",
        "title": "polygon_data > polygon_data > polygon_data",
        "section": "polygon_data > polygon_data",
        "text": "property Path.polygon_data\n\nPolygonData: Polygon data of this Path.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.is_null",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.is_null",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.is_null.html#ansys.edb.core.layout.cell.Cell.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property Cell.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PathEndCapType.CLIPPED",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PathEndCapType.CLIPPED.html#clipped",
        "title": "CLIPPED",
        "section": "CLIPPED",
        "text": "CLIPPED"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PathEndCapType.CLIPPED",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PathEndCapType.CLIPPED.html#ansys.edb.core.primitive.primitive.PathEndCapType.CLIPPED",
        "title": "CLIPPED > CLIPPED > CLIPPED",
        "section": "CLIPPED > CLIPPED",
        "text": "PathEndCapType.CLIPPED = 3\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.html#siwavedcirsimulationsettings",
        "title": "SIWaveDCIRSimulationSettings",
        "section": "SIWaveDCIRSimulationSettings",
        "text": "Represents SIWave DCIR simulation settings.\nSIWaveDCIRSimulationSettings.advanced\nSIWaveAdvancedSettings: Advanced settings for SIWave simulations.\nSIWaveDCIRSimulationSettings.dc\nSIWaveDCSettings: DC settings for SIWave simulations.\nSIWaveDCIRSimulationSettings.dc_advanced\nSIWaveDCAdvancedSettings: Advanced DC settings for SIWave simulations.\nSIWaveDCIRSimulationSettings.dc_report_config_file\nstr: Configuration file for the DC report.\nSIWaveDCIRSimulationSettings.dc_report_show_active_devices\nbool: Flag indicating if active devices are shown in the DC report.\nSIWaveDCIRSimulationSettings.enabled\nbool: Flag indicating if the simulation setup is enabled.\nSIWaveDCIRSimulationSettings.export_dc_thermal_data\nbool: Flag indicating if DC thermal data is exported.\nSIWaveDCIRSimulationSettings.full_dc_report_path\nstr: Path to the DC report.\nSIWaveDCIRSimulationSettings.general\nSIWaveGeneralSettings: General settings for SIWave simulations.\nSIWaveDCIRSimulationSettings.icepak_temp_file\nbool: Path to the file containing the Icepak temperature map to import.\nSIWaveDCIRSimulationSettings.import_thermal_data\nbool: Flag indicating if thermal data is imported.\nSIWaveDCIRSimulationSettings.msg\nEDBObjMessage: Protobuf message that represents this object's ID.\nSIWaveDCIRSimulationSettings.per_pin_res_path\nstr: Path to the per pin resolution.\nSIWaveDCIRSimulationSettings.per_pin_use_pin_format\nbool: Flag indicating if the per pin uses the pin format.\nSIWaveDCIRSimulationSettings.s_parameter\nSIWaveSParameterSettings: S parameter settings for SIWave simulations.\nSIWaveDCIRSimulationSettings.source_terms_to_ground\ndict { str : int }: Dictionary of SourceName, NodeToGround pairs.\nSIWaveDCIRSimulationSettings.use_loop_res_for_per_pin\nbool: Flag indicating if the per pin uses the loop resolution.\nSIWaveDCIRSimulationSettings.via_report_path\nstr: Path to the via report.\nSIWaveDCIRSimulationSettings\nSIWaveDCIRSimulationSettings.advanced\nSIWaveAdvancedSettings\nSIWaveDCIRSimulationSettings.dc\nSIWaveDCSettings\nSIWaveDCIRSimulationSettings.dc_advanced\nSIWaveDCAdvancedSettings\nSIWaveDCIRSimulationSettings.dc_report_config_file\nstr\nSIWaveDCIRSimulationSettings.dc_report_show_active_devices\nbool\nSIWaveDCIRSimulationSettings.enabled\nbool\nSIWaveDCIRSimulationSettings.export_dc_thermal_data\nbool\nSIWaveDCIRSimulationSettings.full_dc_report_path\nstr\nSIWaveDCIRSimulationSettings.general\nSIWaveGeneralSettings\nSIWaveDCIRSimulationSettings.icepak_temp_file\nbool\nSIWaveDCIRSimulationSettings.import_thermal_data\nbool\nSIWaveDCIRSimulationSettings.msg\nEDBObjMessage\nSIWaveDCIRSimulationSettings.per_pin_res_path\nstr\nSIWaveDCIRSimulationSettings.per_pin_use_pin_format\nbool\nSIWaveDCIRSimulationSettings.s_parameter\nSIWaveSParameterSettings\nSIWaveDCIRSimulationSettings.source_terms_to_ground\ndict\nstr\nint\nSourceName, NodeToGround\nSIWaveDCIRSimulationSettings.use_loop_res_for_per_pin\nbool\nSIWaveDCIRSimulationSettings.via_report_path\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.html#ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings",
        "title": "SIWaveDCIRSimulationSettings > SIWaveDCIRSimulationSettings > SIWaveDCIRSimulationSettings",
        "section": "SIWaveDCIRSimulationSettings > SIWaveDCIRSimulationSettings",
        "text": "class ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings(sim_setup)\n\nRepresents SIWave DCIR simulation settings.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nSIWaveDCIRSimulationSettings.advanced\n\nSIWaveAdvancedSettings: Advanced settings for SIWave simulations.\n\nSIWaveDCIRSimulationSettings.dc\n\nSIWaveDCSettings: DC settings for SIWave simulations.\n\nSIWaveDCIRSimulationSettings.dc_advanced\n\nSIWaveDCAdvancedSettings: Advanced DC settings for SIWave simulations.\n\nSIWaveDCIRSimulationSettings.dc_report_config_file\n\nstr: Configuration file for the DC report.\n\nSIWaveDCIRSimulationSettings.dc_report_show_active_devices\n\nbool: Flag indicating if active devices are shown in the DC report.\n\nSIWaveDCIRSimulationSettings.enabled\n\nbool: Flag indicating if the simulation setup is enabled.\n\nSIWaveDCIRSimulationSettings.export_dc_thermal_data\n\nbool: Flag indicating if DC thermal data is exported.\n\nSIWaveDCIRSimulationSettings.full_dc_report_path\n\nstr: Path to the DC report.\n\nSIWaveDCIRSimulationSettings.general\n\nSIWaveGeneralSettings: General settings for SIWave simulations.\n\nSIWaveDCIRSimulationSettings.icepak_temp_file\n\nbool: Path to the file containing the Icepak temperature map to import.\n\nSIWaveDCIRSimulationSettings.import_thermal_data\n\nbool: Flag indicating if thermal data is imported.\n\nSIWaveDCIRSimulationSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object's ID.\n\nSIWaveDCIRSimulationSettings.per_pin_res_path\n\nstr: Path to the per pin resolution.\n\nSIWaveDCIRSimulationSettings.per_pin_use_pin_format\n\nbool: Flag indicating if the per pin uses the pin format.\n\nSIWaveDCIRSimulationSettings.s_parameter\n\nSIWaveSParameterSettings: S parameter settings for SIWave simulations.\n\nSIWaveDCIRSimulationSettings.source_terms_to_ground\n\ndict { str : int }: Dictionary of SourceName, NodeToGround pairs.\n\nSIWaveDCIRSimulationSettings.use_loop_res_for_per_pin\n\nbool: Flag indicating if the per pin uses the loop resolution.\n\nSIWaveDCIRSimulationSettings.via_report_path\n\nstr: Path to the via report.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.add_variable",
        "href": "api/_autosummary/ansys.edb.core.database.Database.add_variable.html#add_variable",
        "title": "add_variable",
        "section": "add_variable",
        "text": "Add a variable.\nVariable name.\nValue, which can be any type that can be converted to a Value\ninstance.\nWhether the new variable is a parameter. The default is False, which means it is a local variable.\nVariables can be added to the following EDB objects:\nDatabase (Variable names must begin with a ‘$’.)\nComponentDef\nCell\nLayout (Adds variable to the corresponding\nCell instance.)\nAdd variables to a cell and create a value that references these variables.\nadd_variable\npython:str\npython:str\npython:int\npython:float\ncomplex\nValue\nValue\npython:False\nFalse\nDatabase\nComponentDef\nCell\nLayout\nCell"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.add_variable",
        "href": "api/_autosummary/ansys.edb.core.database.Database.add_variable.html#ansys.edb.core.database.Database.add_variable",
        "title": "add_variable > add_variable > add_variable",
        "section": "add_variable > add_variable",
        "text": "Database.add_variable(name, value, is_param=False)\n\nAdd a variable.\n\nParameters\n\nname\n\npython:str\n\nVariable name.\n\nvalue\n\npython:str, python:int, python:float, complex, Value\n\nValue, which can be any type that can be converted to a Value\ninstance.\n\nis_param\n\nbool, default: python:False\n\nWhether the new variable is a parameter. The default is False, which means it is a local variable.\n\nNotes\n\nVariables can be added to the following EDB objects:\n\nDatabase (Variable names must begin with a ‘$’.)\n\nComponentDef\n\nCell\n\nLayout (Adds variable to the corresponding\nCell instance.)\n\nExamples\n\nAdd variables to a cell and create a value that references these variables.\n\n>>> param = Value(33.1)\n>>> cell.add_variable(\"blue1\", param)\n>>> cell.add_variable(\"blue2\", \"25mm\")\n>>> vv = cell.create_value(\"blue1 + blue2\")\n>>> print(vv.double)\n33.125\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.package_mounting_offset",
        "href": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.package_mounting_offset.html#package_mounting_offset",
        "title": "package_mounting_offset",
        "section": "package_mounting_offset",
        "text": "Value: Mounting offset of the package definition object.\nThis property can be set with ValueLike.\npackage_mounting_offset\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.package_mounting_offset",
        "href": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.package_mounting_offset.html#ansys.edb.core.definition.io_component_property.IOComponentProperty.package_mounting_offset",
        "title": "package_mounting_offset > package_mounting_offset > package_mounting_offset",
        "section": "package_mounting_offset > package_mounting_offset",
        "text": "property IOComponentProperty.package_mounting_offset\n\nValue: Mounting offset of the package definition object.\n\nThis property can be set with ValueLike.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.set_thermal_modifier",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.set_thermal_modifier.html#set_thermal_modifier",
        "title": "set_thermal_modifier",
        "section": "set_thermal_modifier",
        "text": "Set the thermal modifier of the material definition.\nProperty ID.\nThermal modifier to set to the material definition.\nset_thermal_modifier\nMaterialProperty\nThermalModifier"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.set_thermal_modifier",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.set_thermal_modifier.html#ansys.edb.core.definition.material_def.MaterialDef.set_thermal_modifier",
        "title": "set_thermal_modifier > set_thermal_modifier > set_thermal_modifier",
        "section": "set_thermal_modifier > set_thermal_modifier",
        "text": "MaterialDef.set_thermal_modifier(material_property_id, thermal_modifier)\n\nSet the thermal modifier of the material definition.\n\nParameters\n\nmaterial_property_id\n\nMaterialProperty\n\nProperty ID.\n\nthermal_modifier\n\nThermalModifier\n\nThermal modifier to set to the material definition.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.layout_component.LayoutComponent",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.layout_component.LayoutComponent.html#layoutcomponent",
        "title": "LayoutComponent",
        "section": "LayoutComponent",
        "text": "Class representing a layout component.\nLayoutComponent.export_layout_component(...)\nExport a layout component of the provided cell to the specified output file path.\nLayoutComponent.import_layout_component(...)\nImport a layout component from the .aedbcomp file at the specified file path into the provided layout.\nLayoutComponent.cell_instance\nCellInstance: The underlying cell instance of the layout component.\nLayoutComponent.id\nint: Unique ID of the EDB object.\nLayoutComponent.is_null\nbool: Flag indicating if the object exists in the database.\nLayoutComponent.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nLayoutComponent\nLayoutComponent.export_layout_component\nLayoutComponent.import_layout_component\nLayoutComponent.cell_instance\nCellInstance\nLayoutComponent.id\nint\nLayoutComponent.is_null\nbool\nLayoutComponent.msg\nEDBObjMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.layout_component.LayoutComponent",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.layout_component.LayoutComponent.html#ansys.edb.core.hierarchy.layout_component.LayoutComponent",
        "title": "LayoutComponent > LayoutComponent > LayoutComponent",
        "section": "LayoutComponent > LayoutComponent",
        "text": "class ansys.edb.core.hierarchy.layout_component.LayoutComponent(msg)\n\nClass representing a layout component.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nLayoutComponent.export_layout_component(...)\n\nExport a layout component of the provided cell to the specified output file path.\n\nLayoutComponent.import_layout_component(...)\n\nImport a layout component from the .aedbcomp file at the specified file path into the provided layout.\n\n\n\nAttributes\n\n\n\n\n\n\n\nLayoutComponent.cell_instance\n\nCellInstance: The underlying cell instance of the layout component.\n\nLayoutComponent.id\n\nint: Unique ID of the EDB object.\n\nLayoutComponent.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nLayoutComponent.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.component_models",
        "href": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.component_models.html#component_models",
        "title": "component_models",
        "section": "component_models",
        "text": "list of ComponentModel: All component models associated with the component definition.\nThis property is read-only.\ncomponent_models\nlist\nComponentModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.component_models",
        "href": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.component_models.html#ansys.edb.core.definition.component_def.ComponentDef.component_models",
        "title": "component_models > component_models > component_models",
        "section": "component_models > component_models",
        "text": "property ComponentDef.component_models\n\nlist of ComponentModel: All component models associated with the component definition.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.ComponentModel.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.ComponentModel.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.ComponentModel.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.ComponentModel.is_null.html#ansys.edb.core.definition.component_model.ComponentModel.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property ComponentModel.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.obj_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.obj_type.html#obj_type",
        "title": "obj_type",
        "section": "obj_type",
        "text": "LayoutObjType: Layout object type.\nThis property is read-only.\nobj_type\nLayoutObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.obj_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.obj_type.html#ansys.edb.core.terminal.terminals.BundleTerminal.obj_type",
        "title": "obj_type > obj_type > obj_type",
        "section": "obj_type > obj_type",
        "text": "property BundleTerminal.obj_type\n\nLayoutObjType: Layout object type.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.is_identity",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.is_identity.html#is_identity",
        "title": "is_identity",
        "section": "is_identity",
        "text": "Get identity of the 3D transformation.\nis_identity\nbool\nfloat\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.is_identity",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.is_identity.html#ansys.edb.core.utility.transform3d.Transform3D.is_identity",
        "title": "is_identity > is_identity > is_identity",
        "section": "is_identity > is_identity",
        "text": "Transform3D.is_identity(eps, rotation)\n\nGet identity of the 3D transformation.\n\nParameters\n\nrotation\n\nbool\n\n\n\neps\n\nfloat\n\n\n\nReturns\n\nbool\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PathCornerType.SHARP",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PathCornerType.SHARP.html#sharp",
        "title": "SHARP",
        "section": "SHARP",
        "text": "SHARP"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PathCornerType.SHARP",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PathCornerType.SHARP.html#ansys.edb.core.primitive.primitive.PathCornerType.SHARP",
        "title": "SHARP > SHARP > SHARP",
        "section": "SHARP > SHARP",
        "text": "PathCornerType.SHARP = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.name",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the mesh operation.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.name",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.name.html#ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property SkinDepthMeshOperation.name\n\nstr: Name of the mesh operation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.create",
        "href": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a dataset definition object.\nDatabase to create the dataset definition in.\nName of the dataset to create.\ncreate\nDatabase\nstr\nDatasetDef"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.create",
        "href": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.create.html#ansys.edb.core.definition.dataset_def.DatasetDef.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod DatasetDef.create(database, name)\n\nCreate a dataset definition object.\n\nParameters\n\ndatabase\n\nDatabase\n\nDatabase to create the dataset definition in.\n\nname\n\nstr\n\nName of the dataset to create.\n\nReturns\n\nDatasetDef\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.suppress_pads",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.suppress_pads.html#suppress_pads",
        "title": "suppress_pads",
        "section": "suppress_pads",
        "text": "bool: Flag indicating if the internal non-functional pads are suppressed from rendering/analysis.\nsuppress_pads\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.suppress_pads",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.suppress_pads.html#ansys.edb.core.layout.cell.Cell.suppress_pads",
        "title": "suppress_pads > suppress_pads > suppress_pads",
        "section": "suppress_pads > suppress_pads",
        "text": "property Cell.suppress_pads\n\nbool: Flag indicating if the internal non-functional pads are suppressed from rendering/analysis.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.remove_member",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.remove_member.html#remove_member",
        "title": "remove_member",
        "section": "remove_member",
        "text": "Remove an object from the group.\nObject to remove from the group.\nremove_member"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.remove_member",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.remove_member.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.remove_member",
        "title": "remove_member > remove_member > remove_member",
        "section": "remove_member > remove_member",
        "text": "ComponentGroup.remove_member(member)\n\nRemove an object from the group.\n\nParameters\n\nmember\n\nConnectable\n\nObject to remove from the group.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.create",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a group.\nLayout to create the group in.\nName of the group.\nGroup created.\ncreate\nLayout\npython:str\nGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.create",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.create.html#ansys.edb.core.hierarchy.group.Group.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod Group.create(layout, name)\n\nCreate a group.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to create the group in.\n\nname\n\npython:str\n\nName of the group.\n\nReturns\n\nGroup\n\nGroup created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.close",
        "href": "api/_autosummary/ansys.edb.core.database.Database.close.html#close",
        "title": "close",
        "section": "close",
        "text": "Close the database.\nUnsaved changes are lost.\nclose"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.close",
        "href": "api/_autosummary/ansys.edb.core.database.Database.close.html#ansys.edb.core.database.Database.close",
        "title": "close > close > close",
        "section": "close > close",
        "text": "Database.close()\n\nClose the database.\n\nUnsaved changes are lost.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.POLYGON",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.POLYGON.html#polygon",
        "title": "POLYGON",
        "section": "POLYGON",
        "text": "POLYGON"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.POLYGON",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.POLYGON.html#ansys.edb.core.primitive.primitive.PrimitiveType.POLYGON",
        "title": "POLYGON > POLYGON > POLYGON",
        "section": "POLYGON > POLYGON",
        "text": "PrimitiveType.POLYGON = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.model_type",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.model_type.html#model_type",
        "title": "model_type",
        "section": "model_type",
        "text": "ModelType: model type.\nmodel_type\nModelType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.model_type",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.model_type.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.model_type",
        "title": "model_type > model_type > model_type",
        "section": "model_type > model_type",
        "text": "property HFSSAdvancedSettings.model_type\n\nModelType: model type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.y_axis",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.y_axis.html#y_axis",
        "title": "y_axis",
        "section": "y_axis",
        "text": "PointData: Y axis of the instance array.\ny_axis\nPointData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.y_axis",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.y_axis.html#ansys.edb.core.hierarchy.inst_array.InstArray.y_axis",
        "title": "y_axis > y_axis > y_axis",
        "section": "y_axis > y_axis",
        "text": "property InstArray.y_axis\n\nPointData: Y axis of the instance array.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.delete",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the layout object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.delete",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.delete.html#ansys.edb.core.net.net_class.NetClass.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "NetClass.delete()\n\nDelete the layout object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_mcad.html#is_mcad",
        "title": "is_mcad",
        "section": "is_mcad",
        "text": "bool: Flag indicating if this is an MCAD model.\nThis property is read-only.\nis_mcad\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_mcad.html#ansys.edb.core.terminal.terminals.BundleTerminal.is_mcad",
        "title": "is_mcad > is_mcad > is_mcad",
        "section": "is_mcad > is_mcad",
        "text": "property BundleTerminal.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDs given a product ID for the layout object.\nID representing a product that supports the EDB.\nAll user-defined attribute IDs for properties stored in the object\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.get_product_property_ids.html#ansys.edb.core.net.net_class.NetClass.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "NetClass.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nReturns\n\npython:list[python:int]\n\nAll user-defined attribute IDs for properties stored in the object\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.solder_ball_property",
        "href": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.solder_ball_property.html#solder_ball_property",
        "title": "solder_ball_property",
        "section": "solder_ball_property",
        "text": "SolderBallProperty: Solder ball property.\nA copy is returned. Use the setter for any modifications to be reflected.\nsolder_ball_property\nSolderBallProperty"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.solder_ball_property",
        "href": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.solder_ball_property.html#ansys.edb.core.definition.ic_component_property.ICComponentProperty.solder_ball_property",
        "title": "solder_ball_property > solder_ball_property > solder_ball_property",
        "section": "solder_ball_property > solder_ball_property",
        "text": "property ICComponentProperty.solder_ball_property\n\nSolderBallProperty: Solder ball property.\n\nA copy is returned. Use the setter for any modifications to be reflected.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_mcad_3d_comp.html#is_mcad_3d_comp",
        "title": "is_mcad_3d_comp",
        "section": "is_mcad_3d_comp",
        "text": "bool: Flag indicating if this is a 3D composite MCAD model.\nThis property is read-only.\nis_mcad_3d_comp\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_mcad_3d_comp.html#ansys.edb.core.primitive.primitive.Circle.is_mcad_3d_comp",
        "title": "is_mcad_3d_comp > is_mcad_3d_comp > is_mcad_3d_comp",
        "section": "is_mcad_3d_comp > is_mcad_3d_comp",
        "text": "property Circle.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.enabled",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.enabled.html#enabled",
        "title": "enabled",
        "section": "enabled",
        "text": "bool: Flag indicating if the simulation setup is enabled.\nenabled\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.enabled",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.enabled.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.enabled",
        "title": "enabled > enabled > enabled",
        "section": "enabled > enabled",
        "text": "property SIWaveSimulationSettings.enabled\n\nbool: Flag indicating if the simulation setup is enabled.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SimulationSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SimulationSettings.html#simulationsettings",
        "title": "SimulationSettings",
        "section": "SimulationSettings",
        "text": "Class representing base simulation settings.\nSimulationSettings.enabled\nbool: Flag indicating if the simulation setup is enabled.\nSimulationSettings.msg\nEDBObjMessage: Protobuf message that represents this object's ID.\nSimulationSettings\nSimulationSettings.enabled\nbool\nSimulationSettings.msg\nEDBObjMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SimulationSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SimulationSettings.html#ansys.edb.core.simulation_setup.simulation_settings.SimulationSettings",
        "title": "SimulationSettings > SimulationSettings > SimulationSettings",
        "section": "SimulationSettings > SimulationSettings",
        "text": "class ansys.edb.core.simulation_setup.simulation_settings.SimulationSettings(sim_setup)\n\nClass representing base simulation settings.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nSimulationSettings.enabled\n\nbool: Flag indicating if the simulation setup is enabled.\n\nSimulationSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object's ID.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.group",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.group.html#group",
        "title": "group",
        "section": "group",
        "text": "Group object.\ngroup\nGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.group",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.group.html#ansys.edb.core.hierarchy.via_group.ViaGroup.group",
        "title": "group > group > group",
        "section": "group > group",
        "text": "property ViaGroup.group\n\nGroup object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.num_bw_sides",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.num_bw_sides.html#num_bw_sides",
        "title": "num_bw_sides",
        "section": "num_bw_sides",
        "text": "int: Number of sides to use to approximate cylindrical bondwires.\nnum_bw_sides\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.num_bw_sides",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.num_bw_sides.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.num_bw_sides",
        "title": "num_bw_sides > num_bw_sides > num_bw_sides",
        "section": "num_bw_sides > num_bw_sides",
        "text": "property SIWaveDCAdvancedSettings.num_bw_sides\n\nint: Number of sides to use to approximate cylindrical bondwires.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.get_variable_desc",
        "href": "api/_autosummary/ansys.edb.core.database.Database.get_variable_desc.html#get_variable_desc",
        "title": "get_variable_desc",
        "section": "get_variable_desc",
        "text": "Get the description of a variable.\nVariable name.\nDescription of the variable.\nget_variable_desc\npython:str\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.get_variable_desc",
        "href": "api/_autosummary/ansys.edb.core.database.Database.get_variable_desc.html#ansys.edb.core.database.Database.get_variable_desc",
        "title": "get_variable_desc > get_variable_desc > get_variable_desc",
        "section": "get_variable_desc > get_variable_desc",
        "text": "Database.get_variable_desc(name)\n\nGet the description of a variable.\n\nParameters\n\nname\n\npython:str\n\nVariable name.\n\nReturns\n\npython:str\n\nDescription of the variable.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.is_left",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.is_left.html#is_left",
        "title": "is_left",
        "section": "is_left",
        "text": "Determine if the arc rotates clockwise.\nThis method is the same as the is_cw method.\nTrue when the arc rotates clockwise, False otherwise.\nis_left\nis_cw\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.is_left",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.is_left.html#ansys.edb.core.geometry.arc_data.ArcData.is_left",
        "title": "is_left > is_left > is_left",
        "section": "is_left > is_left",
        "text": "ArcData.is_left()\n\nDetermine if the arc rotates clockwise.\n\nThis method is the same as the is_cw method.\n\nReturns\n\nbool\n\nTrue when the arc rotates clockwise, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.model.Model.is_null",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.model.Model.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.model.Model.is_null",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.model.Model.is_null.html#ansys.edb.core.hierarchy.model.Model.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property Model.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.is_mcad.html#is_mcad",
        "title": "is_mcad",
        "section": "is_mcad",
        "text": "bool: Flag indicating if this is an MCAD model.\nThis property is read-only.\nis_mcad\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.is_mcad.html#ansys.edb.core.hierarchy.inst_array.InstArray.is_mcad",
        "title": "is_mcad > is_mcad > is_mcad",
        "section": "is_mcad > is_mcad",
        "text": "property InstArray.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.edb_uid.html#edb_uid",
        "title": "edb_uid",
        "section": "edb_uid",
        "text": "int: Unique, persistent ID for the Connectable object.\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\nThis property is read-only.\nedb_uid\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.edb_uid.html#ansys.edb.core.terminal.terminals.PointTerminal.edb_uid",
        "title": "edb_uid > edb_uid > edb_uid",
        "section": "edb_uid > edb_uid",
        "text": "property PointTerminal.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.component",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.component.html#component",
        "title": "component",
        "section": "component",
        "text": "ComponentGroup:         Component of the Connectable object.\ncomponent\nComponentGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.component",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.component.html#ansys.edb.core.primitive.primitive.Circle.component",
        "title": "component > component > component",
        "section": "component > component",
        "text": "property Circle.component\n\nComponentGroup:         Component of the Connectable object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.min_plane_area_to_mesh",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.min_plane_area_to_mesh.html#min_plane_area_to_mesh",
        "title": "min_plane_area_to_mesh",
        "section": "min_plane_area_to_mesh",
        "text": "str: Minimum plane area to mesh.\nmin_plane_area_to_mesh\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.min_plane_area_to_mesh",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.min_plane_area_to_mesh.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.min_plane_area_to_mesh",
        "title": "min_plane_area_to_mesh > min_plane_area_to_mesh > min_plane_area_to_mesh",
        "section": "min_plane_area_to_mesh > min_plane_area_to_mesh",
        "text": "property SIWaveAdvancedSettings.min_plane_area_to_mesh\n\nstr: Minimum plane area to mesh.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.html#viagroup",
        "title": "ViaGroup",
        "section": "ViaGroup",
        "text": "Represents a via group object.\nViaGroup.add_member(member)\nAdd an object to the group.\nViaGroup.cast()\nCast the group object to the correct concrete type.\nViaGroup.create(layout, name)\nCreate a group.\nViaGroup.create_3d_comp()\nCreate a 3D composite model from an MCAD file.\nViaGroup.create_hfss()\nCreate an HFSS model from an MCAD file.\nViaGroup.create_stride()\nCreate a Stride model from an MCAD file.\nViaGroup.create_with_outline(layout, ...[, net])\nCreate a via group with a polygon outline.\nViaGroup.create_with_primitives(layout, ...)\nCreate one or more via groups with primitives.\nViaGroup.delete()\nDelete the layout object.\nViaGroup.find(layout, name)\nFind a via group by name in the given layout.\nViaGroup.find_by_id(layout, uid)\nFind a Connectable object by database ID in a given layout.\nViaGroup.get_product_property(prod_id, attr_id)\nGet the product property of the layout object for a given product ID and attribute ID.\nViaGroup.get_product_property_ids(prod_id)\nGet a list of attribute IDs given a product ID for the layout object.\nViaGroup.remove_member(member)\nRemove an object from the group.\nViaGroup.set_product_property(prod_id, ...)\nSet the product property of the layout object for a given product ID and attribute ID.\nViaGroup.ungroup(recursive)\nDissolve the group.\nViaGroup.component\nComponentGroup:         Component of the Connectable object.\nViaGroup.component_def\nComponentDef: Component definition for the         hierarchy object if it exists, None otherwise.\nViaGroup.conductor_percentage\nfloat: Conductor percentage of the via group.\nViaGroup.edb_uid\nint: Unique, persistent ID for the Connectable object.\nViaGroup.group\nGroup object.\nViaGroup.id\nint: Unique ID of the EDB object.\nViaGroup.is_mcad\nbool: Flag indicating if this is an MCAD model.\nViaGroup.is_mcad_3d_comp\nbool: Flag indicating if this is a 3D composite MCAD model.\nViaGroup.is_mcad_hfss\nbool: Flag indicating if this is an HFSS MCAD model.\nViaGroup.is_mcad_stride\nbool: Flag indicating if this is a Stride MCAD model.\nViaGroup.is_null\nbool: Flag indicating if the object exists in the database.\nViaGroup.layout\nLayout: Layout owning the object.\nViaGroup.layout_obj_type\n\nViaGroup.location\ntuple (Value,         Value):         Location [x, y] of the hierarchy object on the placement_layer object.\nViaGroup.members\nlist of Connectables: All group members.\nViaGroup.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nViaGroup.name\nstr: Name of the hierarchy object.\nViaGroup.net\nNet: Net of the Connectable object.\nViaGroup.obj_type\nLayoutObjType: Layout object type.\nViaGroup.outline\nPolygonData: Via group outline.\nViaGroup.persistent\nbool: Flag indicating if the primitives in the via group are persistent.\nViaGroup.placement_layer\nLayer: Placement layer for the hierarchy object.\nViaGroup.solve_independent_preference\nbool: Flag indicating if the object is assigned to solve independent of its parent context.\nViaGroup.transform\nTransform:         Transformation information of the hierarchy object.\nViaGroup\nViaGroup.add_member\nViaGroup.cast\nViaGroup.create\nViaGroup.create_3d_comp\nViaGroup.create_hfss\nViaGroup.create_stride\nViaGroup.create_with_outline\nViaGroup.create_with_primitives\nViaGroup.delete\nViaGroup.find\nViaGroup.find_by_id\nViaGroup.get_product_property\nViaGroup.get_product_property_ids\nViaGroup.remove_member\nViaGroup.set_product_property\nViaGroup.ungroup\nViaGroup.component\nComponentGroup\nViaGroup.component_def\nComponentDef\nNone\nViaGroup.conductor_percentage\nfloat\nViaGroup.edb_uid\nint\nViaGroup.group\nGroup\nViaGroup.id\nint\nViaGroup.is_mcad\nbool\nViaGroup.is_mcad_3d_comp\nbool\nViaGroup.is_mcad_hfss\nbool\nViaGroup.is_mcad_stride\nbool\nViaGroup.is_null\nbool\nViaGroup.layout\nLayout\nViaGroup.layout_obj_type\nViaGroup.location\ntuple\nValue\nValue\nplacement_layer\nViaGroup.members\nlist\nViaGroup.msg\nEDBObjMessage\nViaGroup.name\nstr\nViaGroup.net\nNet\nViaGroup.obj_type\nLayoutObjType\nViaGroup.outline\nPolygonData\nViaGroup.persistent\nbool\nViaGroup.placement_layer\nLayer\nViaGroup.solve_independent_preference\nbool\nViaGroup.transform\nTransform"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.html#ansys.edb.core.hierarchy.via_group.ViaGroup",
        "title": "ViaGroup > ViaGroup > ViaGroup",
        "section": "ViaGroup > ViaGroup",
        "text": "class ansys.edb.core.hierarchy.via_group.ViaGroup(msg)\n\nRepresents a via group object.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nViaGroup.add_member(member)\n\nAdd an object to the group.\n\nViaGroup.cast()\n\nCast the group object to the correct concrete type.\n\nViaGroup.create(layout, name)\n\nCreate a group.\n\nViaGroup.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nViaGroup.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nViaGroup.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nViaGroup.create_with_outline(layout, ...[, net])\n\nCreate a via group with a polygon outline.\n\nViaGroup.create_with_primitives(layout, ...)\n\nCreate one or more via groups with primitives.\n\nViaGroup.delete()\n\nDelete the layout object.\n\nViaGroup.find(layout, name)\n\nFind a via group by name in the given layout.\n\nViaGroup.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nViaGroup.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nViaGroup.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nViaGroup.remove_member(member)\n\nRemove an object from the group.\n\nViaGroup.set_product_property(prod_id, ...)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nViaGroup.ungroup(recursive)\n\nDissolve the group.\n\n\n\nAttributes\n\n\n\n\n\n\n\nViaGroup.component\n\nComponentGroup:         Component of the Connectable object.\n\nViaGroup.component_def\n\nComponentDef: Component definition for the         hierarchy object if it exists, None otherwise.\n\nViaGroup.conductor_percentage\n\nfloat: Conductor percentage of the via group.\n\nViaGroup.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nViaGroup.group\n\nGroup object.\n\nViaGroup.id\n\nint: Unique ID of the EDB object.\n\nViaGroup.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nViaGroup.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nViaGroup.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nViaGroup.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nViaGroup.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nViaGroup.layout\n\nLayout: Layout owning the object.\n\nViaGroup.layout_obj_type\n\n\n\nViaGroup.location\n\ntuple (Value,         Value):         Location [x, y] of the hierarchy object on the placement_layer object.\n\nViaGroup.members\n\nlist of Connectables: All group members.\n\nViaGroup.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nViaGroup.name\n\nstr: Name of the hierarchy object.\n\nViaGroup.net\n\nNet: Net of the Connectable object.\n\nViaGroup.obj_type\n\nLayoutObjType: Layout object type.\n\nViaGroup.outline\n\nPolygonData: Via group outline.\n\nViaGroup.persistent\n\nbool: Flag indicating if the primitives in the via group are persistent.\n\nViaGroup.placement_layer\n\nLayer: Placement layer for the hierarchy object.\n\nViaGroup.solve_independent_preference\n\nbool: Flag indicating if the object is assigned to solve independent of its parent context.\n\nViaGroup.transform\n\nTransform:         Transformation information of the hierarchy object.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.remove_power_module",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.remove_power_module.html#remove_power_module",
        "title": "remove_power_module",
        "section": "remove_power_module",
        "text": "Remove a power module from the voltage regulator.\nComponent group name of the power module.\nremove_power_module\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.remove_power_module",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.remove_power_module.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.remove_power_module",
        "title": "remove_power_module > remove_power_module > remove_power_module",
        "section": "remove_power_module > remove_power_module",
        "text": "VoltageRegulator.remove_power_module(name)\n\nRemove a power module from the voltage regulator.\n\nParameters\n\nname\n\npython:str\n\nComponent group name of the power module.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_mcad_3d_comp.html#is_mcad_3d_comp",
        "title": "is_mcad_3d_comp",
        "section": "is_mcad_3d_comp",
        "text": "bool: Flag indicating if this is a 3D composite MCAD model.\nThis property is read-only.\nis_mcad_3d_comp\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_mcad_3d_comp.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.is_mcad_3d_comp",
        "title": "is_mcad_3d_comp > is_mcad_3d_comp > is_mcad_3d_comp",
        "section": "is_mcad_3d_comp > is_mcad_3d_comp",
        "text": "property PinGroupTerminal.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDef.definition_type",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDef.definition_type.html#definition_type",
        "title": "definition_type",
        "section": "definition_type",
        "text": "DefinitionObjType: Object type of the bondwire definition.\ndefinition_type\nDefinitionObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDef.definition_type",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDef.definition_type.html#ansys.edb.core.definition.bondwire_def.BondwireDef.definition_type",
        "title": "definition_type > definition_type > definition_type",
        "section": "definition_type > definition_type",
        "text": "property BondwireDef.definition_type\n\nDefinitionObjType: Object type of the bondwire definition.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.small_void_area",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.small_void_area.html#small_void_area",
        "title": "small_void_area",
        "section": "small_void_area",
        "text": "float: Voids with an area smaller than this value are ignored during simulation.\nsmall_void_area\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.small_void_area",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.small_void_area.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.small_void_area",
        "title": "small_void_area > small_void_area > small_void_area",
        "section": "small_void_area > small_void_area",
        "text": "property HFSSAdvancedSettings.small_void_area\n\nfloat: Voids with an area smaller than this value are ignored during simulation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.min_pad_area_to_mesh",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.min_pad_area_to_mesh.html#min_pad_area_to_mesh",
        "title": "min_pad_area_to_mesh",
        "section": "min_pad_area_to_mesh",
        "text": "str: Minimum pad area to mesh.\nmin_pad_area_to_mesh\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.min_pad_area_to_mesh",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.min_pad_area_to_mesh.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.min_pad_area_to_mesh",
        "title": "min_pad_area_to_mesh > min_pad_area_to_mesh > min_pad_area_to_mesh",
        "section": "min_pad_area_to_mesh > min_pad_area_to_mesh",
        "text": "property SIWaveAdvancedSettings.min_pad_area_to_mesh\n\nstr: Minimum pad area to mesh.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.create_stride",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.create_stride.html#create_stride",
        "title": "create_stride",
        "section": "create_stride",
        "text": "Create a Stride model from an MCAD file.\nStride model created.\ncreate_stride\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.create_stride",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.create_stride.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.create_stride",
        "title": "create_stride > create_stride > create_stride",
        "section": "create_stride > create_stride",
        "text": "CellInstance.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nReturns\n\nMcadModel\n\nStride model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.footprint_cells",
        "href": "api/_autosummary/ansys.edb.core.database.Database.footprint_cells.html#footprint_cells",
        "title": "footprint_cells",
        "section": "footprint_cells",
        "text": "list of Cell: All footprint cells in the database.\nfootprint_cells\nlist\nCell"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.footprint_cells",
        "href": "api/_autosummary/ansys.edb.core.database.Database.footprint_cells.html#ansys.edb.core.database.Database.footprint_cells",
        "title": "footprint_cells > footprint_cells > footprint_cells",
        "section": "footprint_cells > footprint_cells",
        "text": "property Database.footprint_cells\n\nlist of Cell: All footprint cells in the database.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.transparency",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.transparency.html#transparency",
        "title": "transparency",
        "section": "transparency",
        "text": "int: Transparency value of the layer.\nThe transparency value is between 0 and 100, where 0 indicates a completely\nopaque layer and 100 indicates a completely transparent layer.\ntransparency\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.transparency",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.transparency.html#ansys.edb.core.layer.layer.Layer.transparency",
        "title": "transparency > transparency > transparency",
        "section": "transparency > transparency",
        "text": "property Layer.transparency\n\nint: Transparency value of the layer.\n\nThe transparency value is between 0 and 100, where 0 indicates a completely\nopaque layer and 100 indicates a completely transparent layer.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.triangle3d_data.Triangle3DData.point_3",
        "href": "api/_autosummary/ansys.edb.core.geometry.triangle3d_data.Triangle3DData.point_3.html#point_3",
        "title": "point_3",
        "section": "point_3",
        "text": "Point3DData: Third 3D point.\npoint_3\nPoint3DData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.triangle3d_data.Triangle3DData.point_3",
        "href": "api/_autosummary/ansys.edb.core.geometry.triangle3d_data.Triangle3DData.point_3.html#ansys.edb.core.geometry.triangle3d_data.Triangle3DData.point_3",
        "title": "point_3 > point_3 > point_3",
        "section": "point_3 > point_3",
        "text": "property Triangle3DData.point_3\n\nPoint3DData: Third 3D point.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.use_mesh_region",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.use_mesh_region.html#use_mesh_region",
        "title": "use_mesh_region",
        "section": "use_mesh_region",
        "text": "bool: Flag indicating if mesh regions are used.\nuse_mesh_region\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.use_mesh_region",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.use_mesh_region.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.use_mesh_region",
        "title": "use_mesh_region > use_mesh_region > use_mesh_region",
        "section": "use_mesh_region > use_mesh_region",
        "text": "property HFSSGeneralSettings.use_mesh_region\n\nbool: Flag indicating if mesh regions are used.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.add_net",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.add_net.html#add_net",
        "title": "add_net",
        "section": "add_net",
        "text": "Add a net to the net class.\nNet to add.\nadd_net\nNet"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.add_net",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.add_net.html#ansys.edb.core.net.net_class.NetClass.add_net",
        "title": "add_net > add_net > add_net",
        "section": "add_net > add_net",
        "text": "NetClass.add_net(net)\n\nAdd a net to the net class.\n\nParameters\n\nnet\n\nNet\n\nNet to add.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveGeneralSettings.use_si_settings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveGeneralSettings.use_si_settings.html#use_si_settings",
        "title": "use_si_settings",
        "section": "use_si_settings",
        "text": "bool: Flag indicating if SI or PI settings are used.\nuse_si_settings\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveGeneralSettings.use_si_settings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveGeneralSettings.use_si_settings.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveGeneralSettings.use_si_settings",
        "title": "use_si_settings > use_si_settings > use_si_settings",
        "section": "use_si_settings > use_si_settings",
        "text": "property SIWaveGeneralSettings.use_si_settings\n\nbool: Flag indicating if SI or PI settings are used.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the property.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.set_product_property.html#ansys.edb.core.primitive.primitive.Circle.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "Circle.set_product_property(prod_id, attr_id, prop_value)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nprop_value\n\npython:str\n\nString stored in the property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BackDrillType.NO_DRILL",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BackDrillType.NO_DRILL.html#no_drill",
        "title": "NO_DRILL",
        "section": "NO_DRILL",
        "text": "NO_DRILL"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BackDrillType.NO_DRILL",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BackDrillType.NO_DRILL.html#ansys.edb.core.primitive.primitive.BackDrillType.NO_DRILL",
        "title": "NO_DRILL > NO_DRILL > NO_DRILL",
        "section": "NO_DRILL > NO_DRILL",
        "text": "BackDrillType.NO_DRILL = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.open",
        "href": "api/_autosummary/ansys.edb.core.database.Database.open.html#open",
        "title": "open",
        "section": "open",
        "text": "Open a database in a given location.\nPath to the top-level database directory.\nWhether to open the database in read-only mode.\nDatabase object opened or None if no database object is found.\nopen\npython:str\nDatabase\nobject\npython:None\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.open",
        "href": "api/_autosummary/ansys.edb.core.database.Database.open.html#ansys.edb.core.database.Database.open",
        "title": "open > open > open",
        "section": "open > open",
        "text": "classmethod Database.open(db_path, read_only)\n\nOpen a database in a given location.\n\nParameters\n\ndb_path\n\npython:str\n\nPath to the top-level database directory.\n\nread_only\n\nbool\n\nWhether to open the database in read-only mode.\n\nReturns\n\nDatabase object or python:None\n\nDatabase object opened or None if no database object is found.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveGeneralSettings.use_custom_settings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveGeneralSettings.use_custom_settings.html#use_custom_settings",
        "title": "use_custom_settings",
        "section": "use_custom_settings",
        "text": "bool: Flag indicating if custom settings are used rather than SI or PI settings.\nuse_custom_settings\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveGeneralSettings.use_custom_settings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveGeneralSettings.use_custom_settings.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveGeneralSettings.use_custom_settings",
        "title": "use_custom_settings > use_custom_settings > use_custom_settings",
        "section": "use_custom_settings > use_custom_settings",
        "text": "property SIWaveGeneralSettings.use_custom_settings\n\nbool: Flag indicating if custom settings are used rather than SI or PI settings.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.cast",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.cast.html#cast",
        "title": "cast",
        "section": "cast",
        "text": "Cast the primitive object to the correct concrete type.\ncast\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.cast",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.cast.html#ansys.edb.core.primitive.primitive.Rectangle.cast",
        "title": "cast > cast > cast",
        "section": "cast > cast",
        "text": "Rectangle.cast()\n\nCast the primitive object to the correct concrete type.\n\nReturns\n\nPrimitive\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.set_product_solver_option",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.set_product_solver_option.html#set_product_solver_option",
        "title": "set_product_solver_option",
        "section": "set_product_solver_option",
        "text": "Set the product solver option.\nID of the product.\nName of the solver.\nName of the product solver option.\nset_product_solver_option\nProductIdType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.set_product_solver_option",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.set_product_solver_option.html#ansys.edb.core.terminal.terminals.PointTerminal.set_product_solver_option",
        "title": "set_product_solver_option > set_product_solver_option > set_product_solver_option",
        "section": "set_product_solver_option > set_product_solver_option",
        "text": "PointTerminal.set_product_solver_option(product_id, solver_name, option)\n\nSet the product solver option.\n\nParameters\n\nproduct_id\n\nProductIdType\n\nID of the product.\n\nsolver_name\n\nobj:str\n\nName of the solver.\n\noption\n\nobj:str\n\nName of the product solver option.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.name",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the terminal.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.name",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.name.html#ansys.edb.core.terminal.terminals.PointTerminal.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property PointTerminal.name\n\nstr: Name of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.port_post_processing_prop",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.port_post_processing_prop.html#port_post_processing_prop",
        "title": "port_post_processing_prop",
        "section": "port_post_processing_prop",
        "text": "PortPostProcessingProp: Port postprocessing properties.\nport_post_processing_prop\nPortPostProcessingProp"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.port_post_processing_prop",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.port_post_processing_prop.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.port_post_processing_prop",
        "title": "port_post_processing_prop > port_post_processing_prop > port_post_processing_prop",
        "section": "port_post_processing_prop > port_post_processing_prop",
        "text": "property PadstackInstanceTerminal.port_post_processing_prop\n\nPortPostProcessingProp: Port postprocessing properties.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.net",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.net.html#net",
        "title": "net",
        "section": "net",
        "text": "Net: Net of the Connectable object.\nThis property can be set with a Net instance, a string, or None.\nnet\nNet\nNet\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.net",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.net.html#ansys.edb.core.terminal.terminals.BundleTerminal.net",
        "title": "net > net > net",
        "section": "net > net",
        "text": "property BundleTerminal.net\n\nNet: Net of the Connectable object.\n\nThis property can be set with a Net instance, a string, or None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.model",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.model.html#model",
        "title": "model",
        "section": "model",
        "text": "str: S-parameter model.\nmodel\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.model",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.model.html#ansys.edb.core.terminal.terminals.BundleTerminal.model",
        "title": "model > model > model",
        "section": "model > model",
        "text": "property BundleTerminal.model\n\nstr: S-parameter model.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.msg",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.msg",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.msg.html#ansys.edb.core.net.net.Net.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property Net.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.set_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.set_hfss_prop.html#set_hfss_prop",
        "title": "set_hfss_prop",
        "section": "set_hfss_prop",
        "text": "Set HFSS properties.\nMaterial property name to set.\nWhether to solve inside.\nset_hfss_prop\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.set_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.set_hfss_prop.html#ansys.edb.core.primitive.primitive.Text.set_hfss_prop",
        "title": "set_hfss_prop > set_hfss_prop > set_hfss_prop",
        "section": "set_hfss_prop > set_hfss_prop",
        "text": "Text.set_hfss_prop(material, solve_inside)\n\nSet HFSS properties.\n\nParameters\n\nmaterial\n\npython:str\n\nMaterial property name to set.\n\nsolve_inside\n\nbool\n\nWhether to solve inside.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.definition_type",
        "href": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.definition_type.html#definition_type",
        "title": "definition_type",
        "section": "definition_type",
        "text": "DefinitionObjType: Definition type.\ndefinition_type\nDefinitionObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.definition_type",
        "href": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.definition_type.html#ansys.edb.core.definition.dataset_def.DatasetDef.definition_type",
        "title": "definition_type > definition_type > definition_type",
        "section": "definition_type > definition_type",
        "text": "property DatasetDef.definition_type\n\nDefinitionObjType: Definition type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.id.html#ansys.edb.core.terminal.terminals.PadEdge.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property PadEdge.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.layout_obj_type.html#layout_obj_type",
        "title": "layout_obj_type",
        "section": "layout_obj_type",
        "text": "layout_obj_type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.layout_obj_type.html#ansys.edb.core.net.net_class.NetClass.layout_obj_type",
        "title": "layout_obj_type > layout_obj_type > layout_obj_type",
        "section": "layout_obj_type > layout_obj_type",
        "text": "NetClass.layout_obj_type = 9\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.is_power_ground",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.is_power_ground.html#is_power_ground",
        "title": "is_power_ground",
        "section": "is_power_ground",
        "text": "bool: Flag indicating if the net belongs to a power/ground NetClass instance.\nThis property is read-only.\nis_power_ground\nbool\nNetClass"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.is_power_ground",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.is_power_ground.html#ansys.edb.core.net.net.Net.is_power_ground",
        "title": "is_power_ground > is_power_ground > is_power_ground",
        "section": "is_power_ground > is_power_ground",
        "text": "property Net.is_power_ground\n\nbool: Flag indicating if the net belongs to a power/ground NetClass instance.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.net",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.net.html#net",
        "title": "net",
        "section": "net",
        "text": "Net: Net of the Connectable object.\nThis property can be set with a Net instance, a string, or None.\nnet\nNet\nNet\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.net",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.net.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.net",
        "title": "net > net > net",
        "section": "net > net",
        "text": "property CellInstance.net\n\nNet: Net of the Connectable object.\n\nThis property can be set with a Net instance, a string, or None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.ComponentModel.reference_file",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.ComponentModel.reference_file.html#reference_file",
        "title": "reference_file",
        "section": "reference_file",
        "text": "str: Name of the reference file associated with the component model.\nreference_file\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.ComponentModel.reference_file",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.ComponentModel.reference_file.html#ansys.edb.core.definition.component_model.ComponentModel.reference_file",
        "title": "reference_file > reference_file > reference_file",
        "section": "reference_file > reference_file",
        "text": "property ComponentModel.reference_file\n\nstr: Name of the reference file associated with the component model.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.layout",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.layout.html#layout",
        "title": "layout",
        "section": "layout",
        "text": "Layout: Layout owning the object.\nThis property is read-only.\nlayout\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.layout",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.layout.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.layout",
        "title": "layout > layout > layout",
        "section": "layout > layout",
        "text": "property VoltageRegulator.layout\n\nLayout: Layout owning the object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.netlist_export_spectre",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.netlist_export_spectre.html#netlist_export_spectre",
        "title": "netlist_export_spectre",
        "section": "netlist_export_spectre",
        "text": "bool: Flag indicating if the netlist is exported in Spectre format.\nnetlist_export_spectre\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.netlist_export_spectre",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.netlist_export_spectre.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.netlist_export_spectre",
        "title": "netlist_export_spectre > netlist_export_spectre > netlist_export_spectre",
        "section": "netlist_export_spectre > netlist_export_spectre",
        "text": "property RaptorXGeneralSettings.netlist_export_spectre\n\nbool: Flag indicating if the netlist is exported in Spectre format.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.add_stackup_layer_at_elevation",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.add_stackup_layer_at_elevation.html#add_stackup_layer_at_elevation",
        "title": "add_stackup_layer_at_elevation",
        "section": "add_stackup_layer_at_elevation",
        "text": "Add a stackup layer at a user-specified elevation.\nThis method doe not change the elevenation of other stackup layers.\nadd_stackup_layer_at_elevation\nStackupLayer\nStackupLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.add_stackup_layer_at_elevation",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.add_stackup_layer_at_elevation.html#ansys.edb.core.layer.layer_collection.LayerCollection.add_stackup_layer_at_elevation",
        "title": "add_stackup_layer_at_elevation > add_stackup_layer_at_elevation > add_stackup_layer_at_elevation",
        "section": "add_stackup_layer_at_elevation > add_stackup_layer_at_elevation",
        "text": "LayerCollection.add_stackup_layer_at_elevation(stackup_layer_to_add)\n\nAdd a stackup layer at a user-specified elevation.\n\nThis method doe not change the elevenation of other stackup layers.\n\nParameters\n\nstackup_layer_to_add\n\nStackupLayer\n\n\n\nReturns\n\nStackupLayer\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.impedance",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.impedance.html#impedance",
        "title": "impedance",
        "section": "impedance",
        "text": "Value: Impedance of the terminal.\nimpedance\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.impedance",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.impedance.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.impedance",
        "title": "impedance > impedance > impedance",
        "section": "impedance > impedance",
        "text": "property PinGroupTerminal.impedance\n\nValue: Impedance of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.add_power_modules",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.add_power_modules.html#add_power_modules",
        "title": "add_power_modules",
        "section": "add_power_modules",
        "text": "Add multiple power modules to the voltage regulator.\nList of power modules to add.\nadd_power_modules\npython:list\nPowerModule"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.add_power_modules",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.add_power_modules.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.add_power_modules",
        "title": "add_power_modules > add_power_modules > add_power_modules",
        "section": "add_power_modules > add_power_modules",
        "text": "VoltageRegulator.add_power_modules(power_modules)\n\nAdd multiple power modules to the voltage regulator.\n\nParameters\n\npower_modules\n\npython:list[PowerModule]\n\nList of power modules to add.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.set_zone_name",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.set_zone_name.html#set_zone_name",
        "title": "set_zone_name",
        "section": "set_zone_name",
        "text": "Set the name for a given zone.\nZone ID.\nNew name to give the zone.\nset_zone_name\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.set_zone_name",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.set_zone_name.html#ansys.edb.core.layer.layer_collection.LayerCollection.set_zone_name",
        "title": "set_zone_name > set_zone_name > set_zone_name",
        "section": "set_zone_name > set_zone_name",
        "text": "LayerCollection.set_zone_name(zone, name)\n\nSet the name for a given zone.\n\nParameters\n\nzone\n\npython:int\n\nZone ID.\n\nname\n\npython:str\n\nNew name to give the zone.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.id",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.id",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.id.html#ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property SIWaveDCIRSimulationSetup.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.obj_type.html#obj_type",
        "title": "obj_type",
        "section": "obj_type",
        "text": "LayoutObjType: Layout object type.\nThis property is read-only.\nobj_type\nLayoutObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.obj_type.html#ansys.edb.core.primitive.primitive.BoardBendDef.obj_type",
        "title": "obj_type > obj_type > obj_type",
        "section": "obj_type > obj_type",
        "text": "property BoardBendDef.obj_type\n\nLayoutObjType: Layout object type.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.ExtentType.BOUNDING_BOX",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.ExtentType.BOUNDING_BOX.html#bounding_box",
        "title": "BOUNDING_BOX",
        "section": "BOUNDING_BOX",
        "text": "BOUNDING_BOX"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.ExtentType.BOUNDING_BOX",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.ExtentType.BOUNDING_BOX.html#ansys.edb.core.geometry.polygon_data.ExtentType.BOUNDING_BOX",
        "title": "BOUNDING_BOX > BOUNDING_BOX > BOUNDING_BOX",
        "section": "BOUNDING_BOX > BOUNDING_BOX",
        "text": "ExtentType.BOUNDING_BOX = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.RLC",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.RLC.html#rlc",
        "title": "RLC",
        "section": "RLC",
        "text": "RLC"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.RLC",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.RLC.html#ansys.edb.core.terminal.terminals.BoundaryType.RLC",
        "title": "RLC > RLC > RLC",
        "section": "RLC > RLC",
        "text": "BoundaryType.RLC = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.boundary_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.boundary_type.html#boundary_type",
        "title": "boundary_type",
        "section": "boundary_type",
        "text": "BoundaryType: Boundary type of the terminal.\nboundary_type\nBoundaryType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.boundary_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.boundary_type.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.boundary_type",
        "title": "boundary_type > boundary_type > boundary_type",
        "section": "boundary_type > boundary_type",
        "text": "property PinGroupTerminal.boundary_type\n\nBoundaryType: Boundary type of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.layout_obj_type.html#layout_obj_type",
        "title": "layout_obj_type",
        "section": "layout_obj_type",
        "text": "layout_obj_type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.layout_obj_type.html#ansys.edb.core.primitive.primitive.BoardBendDef.layout_obj_type",
        "title": "layout_obj_type > layout_obj_type > layout_obj_type",
        "section": "layout_obj_type > layout_obj_type",
        "text": "BoardBendDef.layout_obj_type = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.component",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.component.html#component",
        "title": "component",
        "section": "component",
        "text": "ComponentGroup:         Component of the Connectable object.\ncomponent\nComponentGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.component",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.component.html#ansys.edb.core.terminal.terminals.TerminalInstance.component",
        "title": "component > component > component",
        "section": "component > component",
        "text": "property TerminalInstance.component\n\nComponentGroup:         Component of the Connectable object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.msg",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.msg",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.msg.html#ansys.edb.core.terminal.terminals.PointTerminal.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property PointTerminal.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.clone",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a clone of the layer.\nID of the layer to clone.\nLayer cloned.\nclone\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.clone",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.clone.html#ansys.edb.core.layer.stackup_layer.StackupLayer.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "StackupLayer.clone(copy_id=True)\n\nCreate a clone of the layer.\n\nParameters\n\ncopy_id\n\nbool\n\nID of the layer to clone.\n\nReturns\n\nLayer\n\nLayer cloned.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_parameterized",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_parameterized.html#is_parameterized",
        "title": "is_parameterized",
        "section": "is_parameterized",
        "text": "bool: Whether the primitive is parametrized.\nThis property is read-only.\nis_parameterized\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_parameterized",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_parameterized.html#ansys.edb.core.primitive.primitive.Primitive.is_parameterized",
        "title": "is_parameterized > is_parameterized > is_parameterized",
        "section": "is_parameterized > is_parameterized",
        "text": "property Primitive.is_parameterized\n\nbool: Whether the primitive is parametrized.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.remove_net",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.remove_net.html#remove_net",
        "title": "remove_net",
        "section": "remove_net",
        "text": "Remove a net from the extended net.\nNet to remove.\nremove_net\nNet"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.remove_net",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.remove_net.html#ansys.edb.core.net.extended_net.ExtendedNet.remove_net",
        "title": "remove_net > remove_net > remove_net",
        "section": "remove_net > remove_net",
        "text": "ExtendedNet.remove_net(net)\n\nRemove a net from the extended net.\n\nParameters\n\nnet\n\nNet\n\nNet to remove.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.html#mcadmodel",
        "title": "McadModel",
        "section": "McadModel",
        "text": "Class representing an MCAD mdel.\nMcadModel.create_3d_comp([connectable, ...])\nCreate a 3D component model.\nMcadModel.create_hfss([connectable, layout, ...])\nCreate an HFSS model.\nMcadModel.create_stride([connectable, ...])\nCreate a Stride model.\nMcadModel.is_mcad(connectable)\nDetermine if a connectable object is an MCAD model.\nMcadModel.is_mcad_3d_comp(connectable)\nDetermine if a connectable object is a 3D component model.\nMcadModel.is_mcad_hfss(connectable)\nDetermine if a connectable object is an HFSS model.\nMcadModel.is_mcad_stride(connectable)\nDetermine if a connectable object is a Stride model.\nMcadModel.material(index)\nGet the material name of the MCAD model part at a given index.\nMcadModel.modeled(index)\nDetermine if an MCAD model part at a given index is included in the analysis.\nMcadModel.part_count()\nGet the MCAD model part count.\nMcadModel.part_index(name)\nGet the index of an MCAD model part with a given name.\nMcadModel.part_name(index)\nGet the name of an MCAD model part at a given index.\nMcadModel.set_material(index, material)\nSet material name of a MCAD model part at a given index.\nMcadModel.set_modeled(index, modeled)\nSet if an MCAD model part at a given index is to be modeled.\nMcadModel.set_rotation(axis_from, axis_to, angle)\nSet rotation from/to the axis and the angle in radians.\nMcadModel.set_visible(index, visible)\nSet visibility of an MCAD model part at a given index.\nMcadModel.visible(index)\nGet visibility of a MCAD model part at a given index.\nMcadModel.cell_instance\nCellInstance: Cell instance         of the MCAD model.\nMcadModel.design_name\nstr: Design name of the MCAD model.\nMcadModel.id\nint: Unique ID of the EDB object.\nMcadModel.is_null\nbool: Flag indicating if the object exists in the database.\nMcadModel.model_name\nstr: Name of the MCAD model.\nMcadModel.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nMcadModel.origin\nPoint3DData:         Origin 3D point of the MCAD model.\nMcadModel.rotation\ntuple[Point3DData, Point3DData, float]: Rotation from/to the axis and the angle.\nMcadModel.scale\nfloat: Scale of the MCAD model.\nMcadModel\nMcadModel.create_3d_comp\nMcadModel.create_hfss\nMcadModel.create_stride\nMcadModel.is_mcad\nMcadModel.is_mcad_3d_comp\nMcadModel.is_mcad_hfss\nMcadModel.is_mcad_stride\nMcadModel.material\nMcadModel.modeled\nMcadModel.part_count\nMcadModel.part_index\nMcadModel.part_name\nMcadModel.set_material\nMcadModel.set_modeled\nMcadModel.set_rotation\nMcadModel.set_visible\nMcadModel.visible\nMcadModel.cell_instance\nCellInstance\nMcadModel.design_name\nstr\nMcadModel.id\nint\nMcadModel.is_null\nbool\nMcadModel.model_name\nstr\nMcadModel.msg\nEDBObjMessage\nMcadModel.origin\nPoint3DData\nMcadModel.rotation\ntuple\nPoint3DData\nPoint3DData\nfloat\nMcadModel.scale\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.html#ansys.edb.core.layout.mcad_model.McadModel",
        "title": "McadModel > McadModel > McadModel",
        "section": "McadModel > McadModel",
        "text": "class ansys.edb.core.layout.mcad_model.McadModel(msg)\n\nClass representing an MCAD mdel.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nMcadModel.create_3d_comp([connectable, ...])\n\nCreate a 3D component model.\n\nMcadModel.create_hfss([connectable, layout, ...])\n\nCreate an HFSS model.\n\nMcadModel.create_stride([connectable, ...])\n\nCreate a Stride model.\n\nMcadModel.is_mcad(connectable)\n\nDetermine if a connectable object is an MCAD model.\n\nMcadModel.is_mcad_3d_comp(connectable)\n\nDetermine if a connectable object is a 3D component model.\n\nMcadModel.is_mcad_hfss(connectable)\n\nDetermine if a connectable object is an HFSS model.\n\nMcadModel.is_mcad_stride(connectable)\n\nDetermine if a connectable object is a Stride model.\n\nMcadModel.material(index)\n\nGet the material name of the MCAD model part at a given index.\n\nMcadModel.modeled(index)\n\nDetermine if an MCAD model part at a given index is included in the analysis.\n\nMcadModel.part_count()\n\nGet the MCAD model part count.\n\nMcadModel.part_index(name)\n\nGet the index of an MCAD model part with a given name.\n\nMcadModel.part_name(index)\n\nGet the name of an MCAD model part at a given index.\n\nMcadModel.set_material(index, material)\n\nSet material name of a MCAD model part at a given index.\n\nMcadModel.set_modeled(index, modeled)\n\nSet if an MCAD model part at a given index is to be modeled.\n\nMcadModel.set_rotation(axis_from, axis_to, angle)\n\nSet rotation from/to the axis and the angle in radians.\n\nMcadModel.set_visible(index, visible)\n\nSet visibility of an MCAD model part at a given index.\n\nMcadModel.visible(index)\n\nGet visibility of a MCAD model part at a given index.\n\n\n\nAttributes\n\n\n\n\n\n\n\nMcadModel.cell_instance\n\nCellInstance: Cell instance         of the MCAD model.\n\nMcadModel.design_name\n\nstr: Design name of the MCAD model.\n\nMcadModel.id\n\nint: Unique ID of the EDB object.\n\nMcadModel.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nMcadModel.model_name\n\nstr: Name of the MCAD model.\n\nMcadModel.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nMcadModel.origin\n\nPoint3DData:         Origin 3D point of the MCAD model.\n\nMcadModel.rotation\n\ntuple[Point3DData, Point3DData, float]: Rotation from/to the axis and the angle.\n\nMcadModel.scale\n\nfloat: Scale of the MCAD model.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.position",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.position.html#position",
        "title": "position",
        "section": "position",
        "text": "int: Position of the simulation in the setup order.\nposition\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.position",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.position.html#ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.position",
        "title": "position > position > position",
        "section": "position > position",
        "text": "property SimulationSetup.position\n\nint: Position of the simulation in the setup order.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.midpoint",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.midpoint.html#midpoint",
        "title": "midpoint",
        "section": "midpoint",
        "text": "PointData: Midpoint of the arc.\nmidpoint\nPointData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.midpoint",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.midpoint.html#ansys.edb.core.geometry.arc_data.ArcData.midpoint",
        "title": "midpoint > midpoint > midpoint",
        "section": "midpoint > midpoint",
        "text": "property ArcData.midpoint\n\nPointData: Midpoint of the arc.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.obj_type",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.obj_type.html#obj_type",
        "title": "obj_type",
        "section": "obj_type",
        "text": "LayoutObjType: Layout object type.\nThis property is read-only.\nobj_type\nLayoutObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.obj_type",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.obj_type.html#ansys.edb.core.hierarchy.pin_group.PinGroup.obj_type",
        "title": "obj_type > obj_type > obj_type",
        "section": "obj_type > obj_type",
        "text": "property PinGroup.obj_type\n\nLayoutObjType: Layout object type.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.SolverType.DIRECT_SOLVER",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.SolverType.DIRECT_SOLVER.html#direct_solver",
        "title": "DIRECT_SOLVER",
        "section": "DIRECT_SOLVER",
        "text": "DIRECT_SOLVER"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.SolverType.DIRECT_SOLVER",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.SolverType.DIRECT_SOLVER.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.SolverType.DIRECT_SOLVER",
        "title": "DIRECT_SOLVER > DIRECT_SOLVER > DIRECT_SOLVER",
        "section": "DIRECT_SOLVER > DIRECT_SOLVER",
        "text": "SolverType.DIRECT_SOLVER = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamInterpolation.LINEAR_IN",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamInterpolation.LINEAR_IN.html#linear_in",
        "title": "LINEAR_IN",
        "section": "LINEAR_IN",
        "text": "LINEAR_IN"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamInterpolation.LINEAR_IN",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamInterpolation.LINEAR_IN.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamInterpolation.LINEAR_IN",
        "title": "LINEAR_IN > LINEAR_IN > LINEAR_IN",
        "section": "LINEAR_IN > LINEAR_IN",
        "text": "SParamInterpolation.LINEAR_IN = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.layout_obj_type.html#layout_obj_type",
        "title": "layout_obj_type",
        "section": "layout_obj_type",
        "text": "layout_obj_type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.layout_obj_type.html#ansys.edb.core.primitive.primitive.Text.layout_obj_type",
        "title": "layout_obj_type > layout_obj_type > layout_obj_type",
        "section": "layout_obj_type > layout_obj_type",
        "text": "Text.layout_obj_type = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalType.PADSTACK_INST",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalType.PADSTACK_INST.html#padstack_inst",
        "title": "PADSTACK_INST",
        "section": "PADSTACK_INST",
        "text": "PADSTACK_INST"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalType.PADSTACK_INST",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalType.PADSTACK_INST.html#ansys.edb.core.terminal.terminals.TerminalType.PADSTACK_INST",
        "title": "PADSTACK_INST > PADSTACK_INST > PADSTACK_INST",
        "section": "PADSTACK_INST > PADSTACK_INST",
        "text": "TerminalType.PADSTACK_INST = 3\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.create_3d_comp.html#create_3d_comp",
        "title": "create_3d_comp",
        "section": "create_3d_comp",
        "text": "Create a 3D composite model from an MCAD file.\n3D composite model created.\ncreate_3d_comp\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.create_3d_comp.html#ansys.edb.core.terminal.terminals.PointTerminal.create_3d_comp",
        "title": "create_3d_comp > create_3d_comp > create_3d_comp",
        "section": "create_3d_comp > create_3d_comp",
        "text": "PointTerminal.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nReturns\n\nMcadModel\n\n3D composite model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.advanced",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.advanced.html#advanced",
        "title": "advanced",
        "section": "advanced",
        "text": "HFSSAdvancedSettings: Advanced settings for HFSS simulations.\nadvanced\nHFSSAdvancedSettings"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.advanced",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.advanced.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.advanced",
        "title": "advanced > advanced > advanced",
        "section": "advanced > advanced",
        "text": "property HFSSSimulationSettings.advanced\n\nHFSSAdvancedSettings: Advanced settings for HFSS simulations.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.is_null",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.is_null",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.is_null.html#ansys.edb.core.geometry.r_tree.RTree.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property RTree.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.start",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.start.html#start",
        "title": "start",
        "section": "start",
        "text": "PointData: Start point of the arc.\nstart\nPointData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.start",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.start.html#ansys.edb.core.geometry.arc_data.ArcData.start",
        "title": "start > start > start",
        "section": "start > start",
        "text": "property ArcData.start\n\nPointData: Start point of the arc.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.is_mcad_hfss.html#is_mcad_hfss",
        "title": "is_mcad_hfss",
        "section": "is_mcad_hfss",
        "text": "Determine if a connectable object is an HFSS model.\nThis method makes a call directly on a Connectable.\nis_mcad_hfss"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.is_mcad_hfss.html#ansys.edb.core.layout.mcad_model.McadModel.is_mcad_hfss",
        "title": "is_mcad_hfss > is_mcad_hfss > is_mcad_hfss",
        "section": "is_mcad_hfss > is_mcad_hfss",
        "text": "classmethod McadModel.is_mcad_hfss(connectable)\n\nDetermine if a connectable object is an HFSS model.\n\nThis method makes a call directly on a Connectable.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.set_definition_name",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.set_definition_name.html#set_definition_name",
        "title": "set_definition_name",
        "section": "set_definition_name",
        "text": "Set the definition name of a bondwire.\nBondwire definition name to set.\nset_definition_name\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.set_definition_name",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.set_definition_name.html#ansys.edb.core.primitive.primitive.Bondwire.set_definition_name",
        "title": "set_definition_name > set_definition_name > set_definition_name",
        "section": "set_definition_name > set_definition_name",
        "text": "Bondwire.set_definition_name(definition_name)\n\nSet the definition name of a bondwire.\n\nParameters\n\ndefinition_name\n\npython:str\n\nBondwire definition name to set.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.html#netclass",
        "title": "NetClass",
        "section": "NetClass",
        "text": "Represents a net class.\nNetClass.add_net(net)\nAdd a net to the net class.\nNetClass.contains_net(net)\nDetermine if a net exists in the net class.\nNetClass.create(layout, name)\nCreate a net.\nNetClass.delete()\nDelete the layout object.\nNetClass.find_by_name(layout, name)\nFind a net class by name in a given layout.\nNetClass.get_product_property(prod_id, attr_id)\nGet the product property of the layout object for a given product ID and attribute ID.\nNetClass.get_product_property_ids(prod_id)\nGet a list of attribute IDs given a product ID for the layout object.\nNetClass.remove_net(net)\nRemove a net from the net class.\nNetClass.set_product_property(prod_id, ...)\nSet the product property of the layout object for a given product ID and attribute ID.\nNetClass.description\nstr : Description of the net class.\nNetClass.id\nint: Unique ID of the EDB object.\nNetClass.is_null\nbool: Flag indicating if the object exists in the database.\nNetClass.is_power_ground\nbool: Flag indicating in the net class belongs to the power/ground             NetClass class.\nNetClass.layout\nLayout: Layout owning the object.\nNetClass.layout_obj_type\n\nNetClass.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nNetClass.name\nstr: Name of the net class.\nNetClass.nets\nlist of Net: List of nets in the net class.\nNetClass.obj_type\nLayoutObjType: Layout object type.\nNetClass\nNetClass.add_net\nNetClass.contains_net\nNetClass.create\nNetClass.delete\nNetClass.find_by_name\nNetClass.get_product_property\nNetClass.get_product_property_ids\nNetClass.remove_net\nNetClass.set_product_property\nNetClass.description\nstr\nNetClass.id\nint\nNetClass.is_null\nbool\nNetClass.is_power_ground\nbool\nNetClass\nNetClass.layout\nLayout\nNetClass.layout_obj_type\nNetClass.msg\nEDBObjMessage\nNetClass.name\nstr\nNetClass.nets\nlist\nNet\nNetClass.obj_type\nLayoutObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.html#ansys.edb.core.net.net_class.NetClass",
        "title": "NetClass > NetClass > NetClass",
        "section": "NetClass > NetClass",
        "text": "class ansys.edb.core.net.net_class.NetClass(msg)\n\nRepresents a net class.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nNetClass.add_net(net)\n\nAdd a net to the net class.\n\nNetClass.contains_net(net)\n\nDetermine if a net exists in the net class.\n\nNetClass.create(layout, name)\n\nCreate a net.\n\nNetClass.delete()\n\nDelete the layout object.\n\nNetClass.find_by_name(layout, name)\n\nFind a net class by name in a given layout.\n\nNetClass.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nNetClass.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nNetClass.remove_net(net)\n\nRemove a net from the net class.\n\nNetClass.set_product_property(prod_id, ...)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\n\n\nAttributes\n\n\n\n\n\n\n\nNetClass.description\n\nstr : Description of the net class.\n\nNetClass.id\n\nint: Unique ID of the EDB object.\n\nNetClass.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nNetClass.is_power_ground\n\nbool: Flag indicating in the net class belongs to the power/ground             NetClass class.\n\nNetClass.layout\n\nLayout: Layout owning the object.\n\nNetClass.layout_obj_type\n\n\n\nNetClass.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nNetClass.name\n\nstr: Name of the net class.\n\nNetClass.nets\n\nlist of Net: List of nets in the net class.\n\nNetClass.obj_type\n\nLayoutObjType: Layout object type.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents this object’s ID.\nThis property is read-only.\nmsg\nEDBObjMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings.msg.html#ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property AdvancedMeshingSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object’s ID.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.sparameter_model.SParameterModel.create",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.sparameter_model.SParameterModel.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create an S-parameter model.\nName of the S-parameter model.\nName of the reference net.\ncreate\npython:str\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.sparameter_model.SParameterModel.create",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.sparameter_model.SParameterModel.create.html#ansys.edb.core.hierarchy.sparameter_model.SParameterModel.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod SParameterModel.create(name, ref_net)\n\nCreate an S-parameter model.\n\nParameters\n\nname\n\npython:str\n\nName of the S-parameter model.\n\nref_net\n\npython:str\n\nName of the reference net.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.advanced_options",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.advanced_options.html#advanced_options",
        "title": "advanced_options",
        "section": "advanced_options",
        "text": "dict { str : list`[:obj:`str] }: Advanced options.\nadvanced_options\ndict\nstr\nlist`[:obj:`str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.advanced_options",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.advanced_options.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.advanced_options",
        "title": "advanced_options > advanced_options > advanced_options",
        "section": "advanced_options > advanced_options",
        "text": "property RaptorXAdvancedSettings.advanced_options\n\ndict { str : list`[:obj:`str] }: Advanced options.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.reference_height",
        "href": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.reference_height.html#reference_height",
        "title": "reference_height",
        "section": "reference_height",
        "text": "Value: Reference height of the port property.\nThis property can be set with ValueLike.\nreference_height\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.reference_height",
        "href": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.reference_height.html#ansys.edb.core.definition.port_property.PortProperty.reference_height",
        "title": "reference_height > reference_height > reference_height",
        "section": "reference_height > reference_height",
        "text": "property PortProperty.reference_height\n\nValue: Reference height of the port property.\n\nThis property can be set with ValueLike.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.name",
        "href": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the dataset definition.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.name",
        "href": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.name.html#ansys.edb.core.definition.dataset_def.DatasetDef.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property DatasetDef.name\n\nstr: Name of the dataset definition.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.is_mcad_hfss.html#is_mcad_hfss",
        "title": "is_mcad_hfss",
        "section": "is_mcad_hfss",
        "text": "bool: Flag indicating if this is an HFSS MCAD model.\nThis property is read-only.\nis_mcad_hfss\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.is_mcad_hfss.html#ansys.edb.core.terminal.terminals.TerminalInstance.is_mcad_hfss",
        "title": "is_mcad_hfss > is_mcad_hfss > is_mcad_hfss",
        "section": "is_mcad_hfss > is_mcad_hfss",
        "text": "property TerminalInstance.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.solve_independent_preference",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.solve_independent_preference.html#solve_independent_preference",
        "title": "solve_independent_preference",
        "section": "solve_independent_preference",
        "text": "bool: Flag indicating if the object is assigned to solve independent of its parent context.\nTrue if the object is assigned to solve independently, False if the object is embedded.\nFor a ComponentModel\ninstance, this flag indicates if the model is embedded with the field solver, when applicable.\nFor a CellInstance instance,\nit indicates if the design’s geometry is flattened/meshed with the parent, when applicable.\nsolve_independent_preference\nbool\nTrue\nFalse\nComponentModel\nCellInstance"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.solve_independent_preference",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.solve_independent_preference.html#ansys.edb.core.hierarchy.inst_array.InstArray.solve_independent_preference",
        "title": "solve_independent_preference > solve_independent_preference > solve_independent_preference",
        "section": "solve_independent_preference > solve_independent_preference",
        "text": "property InstArray.solve_independent_preference\n\nbool: Flag indicating if the object is assigned to solve independent of its parent context.\n\nReturns\n\nbool\n\nTrue if the object is assigned to solve independently, False if the object is embedded.\n\nNotes\n\nFor a ComponentModel\ninstance, this flag indicates if the model is embedded with the field solver, when applicable.\n\nFor a CellInstance instance,\nit indicates if the design’s geometry is flattened/meshed with the parent, when applicable.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_void",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_void.html#is_void",
        "title": "is_void",
        "section": "is_void",
        "text": "bool: Flag indicating if a primitive is a void.\nis_void\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_void",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_void.html#ansys.edb.core.primitive.primitive.BoardBendDef.is_void",
        "title": "is_void > is_void > is_void",
        "section": "is_void > is_void",
        "text": "property BoardBendDef.is_void\n\nbool: Flag indicating if a primitive is a void.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.create_stride",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.create_stride.html#create_stride",
        "title": "create_stride",
        "section": "create_stride",
        "text": "Create a Stride model from an MCAD file.\nStride model created.\ncreate_stride\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.create_stride",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.create_stride.html#ansys.edb.core.terminal.terminals.EdgeTerminal.create_stride",
        "title": "create_stride > create_stride > create_stride",
        "section": "create_stride > create_stride",
        "text": "EdgeTerminal.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nReturns\n\nMcadModel\n\nStride model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.is_mcad_3d_comp.html#is_mcad_3d_comp",
        "title": "is_mcad_3d_comp",
        "section": "is_mcad_3d_comp",
        "text": "Determine if a connectable object is a 3D component model.\nThis method makes a call directly on a Connectable.\nis_mcad_3d_comp"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.is_mcad_3d_comp.html#ansys.edb.core.layout.mcad_model.McadModel.is_mcad_3d_comp",
        "title": "is_mcad_3d_comp > is_mcad_3d_comp > is_mcad_3d_comp",
        "section": "is_mcad_3d_comp > is_mcad_3d_comp",
        "text": "classmethod McadModel.is_mcad_3d_comp(connectable)\n\nDetermine if a connectable object is a 3D component model.\n\nThis method makes a call directly on a Connectable.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_reference_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_reference_terminal.html#is_reference_terminal",
        "title": "is_reference_terminal",
        "section": "is_reference_terminal",
        "text": "bool: Flag indicating if the terminal is a reference terminal.\nis_reference_terminal\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_reference_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_reference_terminal.html#ansys.edb.core.terminal.terminals.EdgeTerminal.is_reference_terminal",
        "title": "is_reference_terminal > is_reference_terminal > is_reference_terminal",
        "section": "is_reference_terminal > is_reference_terminal",
        "text": "property EdgeTerminal.is_reference_terminal\n\nbool: Flag indicating if the terminal is a reference terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.dc_conductivity",
        "href": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.dc_conductivity.html#dc_conductivity",
        "title": "dc_conductivity",
        "section": "dc_conductivity",
        "text": "float: DC conductivity nominal value.\ndc_conductivity\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.dc_conductivity",
        "href": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.dc_conductivity.html#ansys.edb.core.definition.debye_model.DebyeModel.dc_conductivity",
        "title": "dc_conductivity > dc_conductivity > dc_conductivity",
        "section": "dc_conductivity > dc_conductivity",
        "text": "property DebyeModel.dc_conductivity\n\nfloat: DC conductivity nominal value.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData",
        "href": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.html#pointdata",
        "title": "PointData",
        "section": "PointData",
        "text": "Represents arbitrary (x, y) coordinates that exist on a 2D space.\nPointData.angle(other)\nGet the angle between this vector and another vector.\nPointData.closest(start, end)\nGet the closest point on a line segment from the point.\nPointData.cross(other)\nCompute the cross product of the point vector with another point vector.\nPointData.distance(start[, end])\nCompute the shortest distance from the point to a line segment when an end point is given.\nPointData.dot(other)\nPerform per-component multiplication (dot product) of this point and another point.\nPointData.equals(other[, tolerance])\nDetermine if two points are located at the same coordinates.\nPointData.magnitude()\nGet the magnitude of the point vector.\nPointData.move(vector)\nMove the point by a vector.\nPointData.normalized()\nNormalize the point vector.\nPointData.rotate(angle, center)\nRotate a point at a given center by a given angle.\nPointData.arc_height\nValue: Height of the arc.\nPointData.is_arc\nbool: Flag indicating if the point represents an arc.\nPointData.is_parametric\nbool: Flag indicating if the point contains parametric values (variable expressions).\nPointData.x\nValue: X coordinate.\nPointData.y\nValue: Y coordinate.\nPointData\nPointData.angle\nPointData.closest\nPointData.cross\nPointData.distance\nPointData.dot\nPointData.equals\nPointData.magnitude\nPointData.move\nPointData.normalized\nPointData.rotate\nPointData.arc_height\nValue\nPointData.is_arc\nbool\nPointData.is_parametric\nbool\nPointData.x\nValue\nPointData.y\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData",
        "href": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.html#ansys.edb.core.geometry.point_data.PointData",
        "title": "PointData > PointData > PointData",
        "section": "PointData > PointData",
        "text": "class ansys.edb.core.geometry.point_data.PointData(*data)\n\nRepresents arbitrary (x, y) coordinates that exist on a 2D space.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nPointData.angle(other)\n\nGet the angle between this vector and another vector.\n\nPointData.closest(start, end)\n\nGet the closest point on a line segment from the point.\n\nPointData.cross(other)\n\nCompute the cross product of the point vector with another point vector.\n\nPointData.distance(start[, end])\n\nCompute the shortest distance from the point to a line segment when an end point is given.\n\nPointData.dot(other)\n\nPerform per-component multiplication (dot product) of this point and another point.\n\nPointData.equals(other[, tolerance])\n\nDetermine if two points are located at the same coordinates.\n\nPointData.magnitude()\n\nGet the magnitude of the point vector.\n\nPointData.move(vector)\n\nMove the point by a vector.\n\nPointData.normalized()\n\nNormalize the point vector.\n\nPointData.rotate(angle, center)\n\nRotate a point at a given center by a given angle.\n\n\n\nAttributes\n\n\n\n\n\n\n\nPointData.arc_height\n\nValue: Height of the arc.\n\nPointData.is_arc\n\nbool: Flag indicating if the point represents an arc.\n\nPointData.is_parametric\n\nbool: Flag indicating if the point contains parametric values (variable expressions).\n\nPointData.x\n\nValue: X coordinate.\n\nPointData.y\n\nValue: Y coordinate.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.html#hfsssimulationsetup",
        "title": "HfssSimulationSetup",
        "section": "HfssSimulationSetup",
        "text": "Represents HFSS simulation setup data.\nHfssSimulationSetup.cast()\nCast the base SimulationSetup object to correct subclass, if possible.\nHfssSimulationSetup.create(cell, name)\nCreate an HFSS simulation setup.\nHfssSimulationSetup.id\nint: Unique ID of the EDB object.\nHfssSimulationSetup.is_null\nbool: Flag indicating if the object exists in the database.\nHfssSimulationSetup.mesh_operations\nlist of MeshOperation: Mesh operations of the HFSS simulation setup.\nHfssSimulationSetup.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nHfssSimulationSetup.name\nstr: Name of simulation setup.\nHfssSimulationSetup.position\nint: Position of the simulation in the setup order.\nHfssSimulationSetup.settings\nHfssSimulationSettings: Simulation settings of the HFSS simulation setup.\nHfssSimulationSetup.sweep_data\nlist of SweepData: Frequency sweeps of the simulation setup.\nHfssSimulationSetup.type\nSimulationSetupType: Type of the simulation setup.\nHfssSimulationSetup\nHfssSimulationSetup.cast\nHfssSimulationSetup.create\nHfssSimulationSetup.id\nint\nHfssSimulationSetup.is_null\nbool\nHfssSimulationSetup.mesh_operations\nlist\nMeshOperation\nHfssSimulationSetup.msg\nEDBObjMessage\nHfssSimulationSetup.name\nstr\nHfssSimulationSetup.position\nint\nHfssSimulationSetup.settings\nHfssSimulationSettings\nHfssSimulationSetup.sweep_data\nlist\nSweepData\nHfssSimulationSetup.type\nSimulationSetupType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.html#ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup",
        "title": "HfssSimulationSetup > HfssSimulationSetup > HfssSimulationSetup",
        "section": "HfssSimulationSetup > HfssSimulationSetup",
        "text": "class ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup(msg)\n\nRepresents HFSS simulation setup data.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nHfssSimulationSetup.cast()\n\nCast the base SimulationSetup object to correct subclass, if possible.\n\nHfssSimulationSetup.create(cell, name)\n\nCreate an HFSS simulation setup.\n\n\n\nAttributes\n\n\n\n\n\n\n\nHfssSimulationSetup.id\n\nint: Unique ID of the EDB object.\n\nHfssSimulationSetup.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nHfssSimulationSetup.mesh_operations\n\nlist of MeshOperation: Mesh operations of the HFSS simulation setup.\n\nHfssSimulationSetup.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nHfssSimulationSetup.name\n\nstr: Name of simulation setup.\n\nHfssSimulationSetup.position\n\nint: Position of the simulation in the setup order.\n\nHfssSimulationSetup.settings\n\nHfssSimulationSettings: Simulation settings of the HFSS simulation setup.\n\nHfssSimulationSetup.sweep_data\n\nlist of SweepData: Frequency sweeps of the simulation setup.\n\nHfssSimulationSetup.type\n\nSimulationSetupType: Type of the simulation setup.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge.point",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge.point.html#point",
        "title": "point",
        "section": "point",
        "text": "PointData: Coordinates (x, y) of the terminal.\npoint\nPointData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge.point",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge.point.html#ansys.edb.core.terminal.terminals.PrimitiveEdge.point",
        "title": "point > point > point",
        "section": "point > point",
        "text": "property PrimitiveEdge.point\n\nPointData: Coordinates (x, y) of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.get_traj",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.get_traj.html#get_traj",
        "title": "get_traj",
        "section": "get_traj",
        "text": "Get trajectory parameters of the bondwire.\nValue,\nValue,\nValue,\nValue\nReturns a tuple in this format:\n(x1, y1, x2, y2)\nx1 : X value of the start point.\ny1 : Y value of the start point.\nx1 : X value of the end point.\ny1 : Y value of the end point.\nget_traj\npython:tuple\nValue\nValue\nValue\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.get_traj",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.get_traj.html#ansys.edb.core.primitive.primitive.Bondwire.get_traj",
        "title": "get_traj > get_traj > get_traj",
        "section": "get_traj > get_traj",
        "text": "Bondwire.get_traj()\n\nGet trajectory parameters of the bondwire.\n\nReturns\n\npython:tuple[\n\nValue,\nValue,\nValue,\nValue\n\n]\n\nReturns a tuple in this format:\n\n(x1, y1, x2, y2)\n\nx1 : X value of the start point.\n\ny1 : Y value of the start point.\n\nx1 : X value of the end point.\n\ny1 : Y value of the end point.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef",
        "href": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.html#componentdef",
        "title": "ComponentDef",
        "section": "ComponentDef",
        "text": "Represents a component definition.\nComponentDef.add_component_model(value)\nAdd a component model to this component def.\nComponentDef.create(db, comp_def_name, fp)\nCreate a component definition in a given database.\nComponentDef.find(db, comp_def_name)\nFind a component definition in a given database.\nComponentDef.remove_component_model(value)\nRemove a component model from this component def.\nComponentDef.component_models\nlist of ComponentModel: All component models associated with the component definition.\nComponentDef.component_pins\nlist of ComponentPin: All component pins of the component definition.\nComponentDef.definition_type\nDefinitionObjType: Definition type.\nComponentDef.footprint\nCell: Footprint of the component definition.\nComponentDef.id\nint: Unique ID of the EDB object.\nComponentDef.is_null\nbool: Flag indicating if the object exists in the database.\nComponentDef.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nComponentDef.name\nstr: Name of the component definition.\nComponentDef\nComponentDef.add_component_model\nComponentDef.create\nComponentDef.find\nComponentDef.remove_component_model\nComponentDef.component_models\nlist\nComponentModel\nComponentDef.component_pins\nlist\nComponentPin\nComponentDef.definition_type\nDefinitionObjType\nComponentDef.footprint\nCell\nComponentDef.id\nint\nComponentDef.is_null\nbool\nComponentDef.msg\nEDBObjMessage\nComponentDef.name\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef",
        "href": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.html#ansys.edb.core.definition.component_def.ComponentDef",
        "title": "ComponentDef > ComponentDef > ComponentDef",
        "section": "ComponentDef > ComponentDef",
        "text": "class ansys.edb.core.definition.component_def.ComponentDef(msg)\n\nRepresents a component definition.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nComponentDef.add_component_model(value)\n\nAdd a component model to this component def.\n\nComponentDef.create(db, comp_def_name, fp)\n\nCreate a component definition in a given database.\n\nComponentDef.find(db, comp_def_name)\n\nFind a component definition in a given database.\n\nComponentDef.remove_component_model(value)\n\nRemove a component model from this component def.\n\n\n\nAttributes\n\n\n\n\n\n\n\nComponentDef.component_models\n\nlist of ComponentModel: All component models associated with the component definition.\n\nComponentDef.component_pins\n\nlist of ComponentPin: All component pins of the component definition.\n\nComponentDef.definition_type\n\nDefinitionObjType: Definition type.\n\nComponentDef.footprint\n\nCell: Footprint of the component definition.\n\nComponentDef.id\n\nint: Unique ID of the EDB object.\n\nComponentDef.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nComponentDef.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nComponentDef.name\n\nstr: Name of the component definition.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballShape.UNKNOWN_SOLDERBALL_SHAPE",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballShape.UNKNOWN_SOLDERBALL_SHAPE.html#unknown_solderball_shape",
        "title": "UNKNOWN_SOLDERBALL_SHAPE",
        "section": "UNKNOWN_SOLDERBALL_SHAPE",
        "text": "UNKNOWN_SOLDERBALL_SHAPE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballShape.UNKNOWN_SOLDERBALL_SHAPE",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballShape.UNKNOWN_SOLDERBALL_SHAPE.html#ansys.edb.core.definition.padstack_def_data.SolderballShape.UNKNOWN_SOLDERBALL_SHAPE",
        "title": "UNKNOWN_SOLDERBALL_SHAPE > UNKNOWN_SOLDERBALL_SHAPE > UNKNOWN_SOLDERBALL_SHAPE",
        "section": "UNKNOWN_SOLDERBALL_SHAPE > UNKNOWN_SOLDERBALL_SHAPE",
        "text": "SolderballShape.UNKNOWN_SOLDERBALL_SHAPE = 3\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.create",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a padstack instance.\nLayout to create the padstack instance in.\nNet of the padstack instance.\nName of the padstack instance.\nPadstack definition of the padstack instance.\nPosition x of the padstack instance.\nPosition y of the padstack instance.\nRotation of the padstack instance.\nTop layer of the padstack instance.\nBottom layer of the padstack instance.\nSolder ball layer of the padstack instance or None for none.\nLayer map of the padstack instance. None or empty results in\nauto-mapping.\nPadstack instance created.\ncreate\nLayout\nNet\npython:str\nPadstackDef\nValue\nValue\nValue\nLayer\nLayer\nLayer\nNone\nLayerMap\nNone\nPadstackInstance"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.create",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.create.html#ansys.edb.core.primitive.primitive.PadstackInstance.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod PadstackInstance.create(layout, net, name, padstack_def, position_x, position_y, rotation, top_layer, bottom_layer, solder_ball_layer, layer_map)\n\nCreate a padstack instance.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to create the padstack instance in.\n\nnet\n\nNet\n\nNet of the padstack instance.\n\nname\n\npython:str\n\nName of the padstack instance.\n\npadstack_def\n\nPadstackDef\n\nPadstack definition of the padstack instance.\n\nposition_x\n\nValue\n\nPosition x of the padstack instance.\n\nposition_y\n\nValue\n\nPosition y of the padstack instance.\n\nrotation\n\nValue\n\nRotation of the padstack instance.\n\ntop_layer\n\nLayer\n\nTop layer of the padstack instance.\n\nbottom_layer\n\nLayer\n\nBottom layer of the padstack instance.\n\nsolder_ball_layer\n\nLayer\n\nSolder ball layer of the padstack instance or None for none.\n\nlayer_map\n\nLayerMap\n\nLayer map of the padstack instance. None or empty results in\nauto-mapping.\n\nReturns\n\nPadstackInstance\n\nPadstack instance created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_from_axis",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_from_axis.html#create_from_axis",
        "title": "create_from_axis",
        "section": "create_from_axis",
        "text": "Create a 3D transformation with a rotation matrix from three axes.\nX axis.\nY axis.\nZ axis.\ncreate_from_axis\nTransform3D"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_from_axis",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_from_axis.html#ansys.edb.core.utility.transform3d.Transform3D.create_from_axis",
        "title": "create_from_axis > create_from_axis > create_from_axis",
        "section": "create_from_axis > create_from_axis",
        "text": "classmethod Transform3D.create_from_axis(x, y, z)\n\nCreate a 3D transformation with a rotation matrix from three axes.\n\nParameters\n\nx\n\nPoint3DLike\n\nX axis.\n\ny\n\nPoint3DLike\n\nY axis.\n\nz\n\nPoint3DLike\n\nZ axis.\n\nReturns\n\nTransform3D\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.set_is_in_zone",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.set_is_in_zone.html#set_is_in_zone",
        "title": "set_is_in_zone",
        "section": "set_is_in_zone",
        "text": "Set whether the layer exists in a given zone.\nZone.\nWhether the layer exists in this zone.\nset_is_in_zone\npython:int\npython:True"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.set_is_in_zone",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.set_is_in_zone.html#ansys.edb.core.layer.layer.Layer.set_is_in_zone",
        "title": "set_is_in_zone > set_is_in_zone > set_is_in_zone",
        "section": "set_is_in_zone > set_is_in_zone",
        "text": "Layer.set_is_in_zone(zone, in_zone=True)\n\nSet whether the layer exists in a given zone.\n\nParameters\n\nzone\n\npython:int\n\nZone.\n\nin_zone\n\nbool, default: python:True\n\nWhether the layer exists in this zone.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.html#boardbenddef",
        "title": "BoardBendDef",
        "section": "BoardBendDef",
        "text": "Represents a board bend definition instance.\nBoardBendDef.add_void(hole)\nAdd a void to the primitive.\nBoardBendDef.cast()\nCast the primitive object to the correct concrete type.\nBoardBendDef.create(layout, zone_prim, ...)\nCreate a board bend definition.\nBoardBendDef.create_3d_comp()\nCreate a 3D composite model from an MCAD file.\nBoardBendDef.create_hfss()\nCreate an HFSS model from an MCAD file.\nBoardBendDef.create_stride()\nCreate a Stride model from an MCAD file.\nBoardBendDef.delete()\nDelete the layout object.\nBoardBendDef.find_by_id(layout, uid)\nFind a Connectable object by database ID in a given layout.\nBoardBendDef.get_hfss_prop()\nGet HFSS properties.\nBoardBendDef.get_product_property(prod_id, ...)\nGet the product property of the layout object for a given product ID and attribute ID.\nBoardBendDef.get_product_property_ids(prod_id)\nGet a list of attribute IDs given a product ID for the layout object.\nBoardBendDef.make_zone_primitive(zone_id)\nMake the primitive a zone primitive with a zone specified by the provided ID.\nBoardBendDef.remove_hfss_prop()\nRemove HFSS properties.\nBoardBendDef.set_hfss_prop(material, ...)\nSet HFSS properties.\nBoardBendDef.set_product_property(prod_id, ...)\nSet the product property of the layout object for a given product ID and attribute ID.\nBoardBendDef.angle\nValueLike: Angle of the bend.\nBoardBendDef.bend_middle\n(Point2DLike, Point2DLike): Tuple of the bend middle based on starting and ending points.\nBoardBendDef.bent_regions\nlist of PolygonData: Bent region polygons.\nBoardBendDef.boundary_primitive\nPrimitive: Zone primitive the board bend is placed on.\nBoardBendDef.can_be_zone_primitive\nbool: Flag indicating if the primitive can be a zone.\nBoardBendDef.component\nComponentGroup:         Component of the Connectable object.\nBoardBendDef.edb_uid\nint: Unique, persistent ID for the Connectable object.\nBoardBendDef.group\nGroup object.\nBoardBendDef.has_voids\nbool: Flag indicating if a primitive has voids inside.\nBoardBendDef.id\nint: Unique ID of the EDB object.\nBoardBendDef.is_mcad\nbool: Flag indicating if this is an MCAD model.\nBoardBendDef.is_mcad_3d_comp\nbool: Flag indicating if this is a 3D composite MCAD model.\nBoardBendDef.is_mcad_hfss\nbool: Flag indicating if this is an HFSS MCAD model.\nBoardBendDef.is_mcad_stride\nbool: Flag indicating if this is a Stride MCAD model.\nBoardBendDef.is_negative\nbool: Flag indicating if the primitive is negative.\nBoardBendDef.is_null\nbool: Flag indicating if the object exists in the database.\nBoardBendDef.is_parameterized\nbool: Whether the primitive is parametrized.\nBoardBendDef.is_void\nbool: Flag indicating if a primitive is a void.\nBoardBendDef.is_zone_primitive\nbool: Flag indicating if the primitive object is a zone.\nBoardBendDef.layer\nLayer: Layer that the primitive object is on.\nBoardBendDef.layout\nLayout: Layout owning the object.\nBoardBendDef.layout_obj_type\n\nBoardBendDef.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nBoardBendDef.net\nNet: Net of the Connectable object.\nBoardBendDef.obj_type\nLayoutObjType: Layout object type.\nBoardBendDef.owner\nPrimitive: Owner of the primitive object.\nBoardBendDef.primitive_type\nPrimitiveType: Primitive type of the primitive.\nBoardBendDef.radius\nValueLike: Radius of the bend.\nBoardBendDef.voids\nlist of Primitive: List of void        primitive objects inside the primitive.\nBoardBendDef\nBoardBendDef.add_void\nBoardBendDef.cast\nBoardBendDef.create\nBoardBendDef.create_3d_comp\nBoardBendDef.create_hfss\nBoardBendDef.create_stride\nBoardBendDef.delete\nBoardBendDef.find_by_id\nBoardBendDef.get_hfss_prop\nBoardBendDef.get_product_property\nBoardBendDef.get_product_property_ids\nBoardBendDef.make_zone_primitive\nBoardBendDef.remove_hfss_prop\nBoardBendDef.set_hfss_prop\nBoardBendDef.set_product_property\nBoardBendDef.angle\nBoardBendDef.bend_middle\nBoardBendDef.bent_regions\nlist\nPolygonData\nBoardBendDef.boundary_primitive\nPrimitive\nBoardBendDef.can_be_zone_primitive\nbool\nBoardBendDef.component\nComponentGroup\nBoardBendDef.edb_uid\nint\nBoardBendDef.group\nGroup\nBoardBendDef.has_voids\nbool\nBoardBendDef.id\nint\nBoardBendDef.is_mcad\nbool\nBoardBendDef.is_mcad_3d_comp\nbool\nBoardBendDef.is_mcad_hfss\nbool\nBoardBendDef.is_mcad_stride\nbool\nBoardBendDef.is_negative\nbool\nBoardBendDef.is_null\nbool\nBoardBendDef.is_parameterized\nbool\nBoardBendDef.is_void\nbool\nBoardBendDef.is_zone_primitive\nbool\nBoardBendDef.layer\nLayer\nBoardBendDef.layout\nLayout\nBoardBendDef.layout_obj_type\nBoardBendDef.msg\nEDBObjMessage\nBoardBendDef.net\nNet\nBoardBendDef.obj_type\nLayoutObjType\nBoardBendDef.owner\nPrimitive\nBoardBendDef.primitive_type\nPrimitiveType\nBoardBendDef.radius\nBoardBendDef.voids\nlist\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.html#ansys.edb.core.primitive.primitive.BoardBendDef",
        "title": "BoardBendDef > BoardBendDef > BoardBendDef",
        "section": "BoardBendDef > BoardBendDef",
        "text": "class ansys.edb.core.primitive.primitive.BoardBendDef(msg)\n\nRepresents a board bend definition instance.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nBoardBendDef.add_void(hole)\n\nAdd a void to the primitive.\n\nBoardBendDef.cast()\n\nCast the primitive object to the correct concrete type.\n\nBoardBendDef.create(layout, zone_prim, ...)\n\nCreate a board bend definition.\n\nBoardBendDef.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nBoardBendDef.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nBoardBendDef.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nBoardBendDef.delete()\n\nDelete the layout object.\n\nBoardBendDef.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nBoardBendDef.get_hfss_prop()\n\nGet HFSS properties.\n\nBoardBendDef.get_product_property(prod_id, ...)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nBoardBendDef.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nBoardBendDef.make_zone_primitive(zone_id)\n\nMake the primitive a zone primitive with a zone specified by the provided ID.\n\nBoardBendDef.remove_hfss_prop()\n\nRemove HFSS properties.\n\nBoardBendDef.set_hfss_prop(material, ...)\n\nSet HFSS properties.\n\nBoardBendDef.set_product_property(prod_id, ...)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\n\n\nAttributes\n\n\n\n\n\n\n\nBoardBendDef.angle\n\nValueLike: Angle of the bend.\n\nBoardBendDef.bend_middle\n\n(Point2DLike, Point2DLike): Tuple of the bend middle based on starting and ending points.\n\nBoardBendDef.bent_regions\n\nlist of PolygonData: Bent region polygons.\n\nBoardBendDef.boundary_primitive\n\nPrimitive: Zone primitive the board bend is placed on.\n\nBoardBendDef.can_be_zone_primitive\n\nbool: Flag indicating if the primitive can be a zone.\n\nBoardBendDef.component\n\nComponentGroup:         Component of the Connectable object.\n\nBoardBendDef.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nBoardBendDef.group\n\nGroup object.\n\nBoardBendDef.has_voids\n\nbool: Flag indicating if a primitive has voids inside.\n\nBoardBendDef.id\n\nint: Unique ID of the EDB object.\n\nBoardBendDef.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nBoardBendDef.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nBoardBendDef.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nBoardBendDef.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nBoardBendDef.is_negative\n\nbool: Flag indicating if the primitive is negative.\n\nBoardBendDef.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nBoardBendDef.is_parameterized\n\nbool: Whether the primitive is parametrized.\n\nBoardBendDef.is_void\n\nbool: Flag indicating if a primitive is a void.\n\nBoardBendDef.is_zone_primitive\n\nbool: Flag indicating if the primitive object is a zone.\n\nBoardBendDef.layer\n\nLayer: Layer that the primitive object is on.\n\nBoardBendDef.layout\n\nLayout: Layout owning the object.\n\nBoardBendDef.layout_obj_type\n\n\n\nBoardBendDef.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nBoardBendDef.net\n\nNet: Net of the Connectable object.\n\nBoardBendDef.obj_type\n\nLayoutObjType: Layout object type.\n\nBoardBendDef.owner\n\nPrimitive: Owner of the primitive object.\n\nBoardBendDef.primitive_type\n\nPrimitiveType: Primitive type of the primitive.\n\nBoardBendDef.radius\n\nValueLike: Radius of the bend.\n\nBoardBendDef.voids\n\nlist of Primitive: List of void        primitive objects inside the primitive.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDs given a product ID for the layout object.\nID representing a product that supports the EDB.\nAll user-defined attribute IDs for properties stored in the object\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.get_product_property_ids.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "CellInstance.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nReturns\n\npython:list[python:int]\n\nAll user-defined attribute IDs for properties stored in the object\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_mcad_3d_comp.html#is_mcad_3d_comp",
        "title": "is_mcad_3d_comp",
        "section": "is_mcad_3d_comp",
        "text": "bool: Flag indicating if this is a 3D composite MCAD model.\nThis property is read-only.\nis_mcad_3d_comp\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_mcad_3d_comp.html#ansys.edb.core.primitive.primitive.Primitive.is_mcad_3d_comp",
        "title": "is_mcad_3d_comp > is_mcad_3d_comp > is_mcad_3d_comp",
        "section": "is_mcad_3d_comp > is_mcad_3d_comp",
        "text": "property Primitive.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the property.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.set_product_property.html#ansys.edb.core.net.net.Net.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "Net.set_product_property(prod_id, attr_id, prop_value)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nprop_value\n\npython:str\n\nString stored in the property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.reference_layout",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.reference_layout.html#reference_layout",
        "title": "reference_layout",
        "section": "reference_layout",
        "text": "Layout: Reference layout of the cell instance.\nThis property is read-only.\nreference_layout\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.reference_layout",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.reference_layout.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.reference_layout",
        "title": "reference_layout > reference_layout > reference_layout",
        "section": "reference_layout > reference_layout",
        "text": "property CellInstance.reference_layout\n\nLayout: Reference layout of the cell instance.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.id.html#ansys.edb.core.primitive.primitive.Bondwire.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property Bondwire.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.rlc_boundary_parameters",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.rlc_boundary_parameters.html#rlc_boundary_parameters",
        "title": "rlc_boundary_parameters",
        "section": "rlc_boundary_parameters",
        "text": "Rlc: RLC boundary parameters.\nrlc_boundary_parameters\nRlc"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.rlc_boundary_parameters",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.rlc_boundary_parameters.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.rlc_boundary_parameters",
        "title": "rlc_boundary_parameters > rlc_boundary_parameters > rlc_boundary_parameters",
        "section": "rlc_boundary_parameters > rlc_boundary_parameters",
        "text": "property TerminalInstanceTerminal.rlc_boundary_parameters\n\nRlc: RLC boundary parameters.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.apd_bondwire_defs",
        "href": "api/_autosummary/ansys.edb.core.database.Database.apd_bondwire_defs.html#apd_bondwire_defs",
        "title": "apd_bondwire_defs",
        "section": "apd_bondwire_defs",
        "text": "list of ApdBondwireDef: All APD bondwire definitions in the database.\napd_bondwire_defs\nlist\nApdBondwireDef"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.apd_bondwire_defs",
        "href": "api/_autosummary/ansys.edb.core.database.Database.apd_bondwire_defs.html#ansys.edb.core.database.Database.apd_bondwire_defs",
        "title": "apd_bondwire_defs > apd_bondwire_defs > apd_bondwire_defs",
        "section": "apd_bondwire_defs > apd_bondwire_defs",
        "text": "property Database.apd_bondwire_defs\n\nlist of ApdBondwireDef: All APD bondwire definitions in the database.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.remove_floating_geometry",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.remove_floating_geometry.html#remove_floating_geometry",
        "title": "remove_floating_geometry",
        "section": "remove_floating_geometry",
        "text": "bool: Flag indicating if a geometry not connected to any other geometry is removed.\nremove_floating_geometry\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.remove_floating_geometry",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.remove_floating_geometry.html#ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.remove_floating_geometry",
        "title": "remove_floating_geometry > remove_floating_geometry > remove_floating_geometry",
        "section": "remove_floating_geometry > remove_floating_geometry",
        "text": "property AdvancedSettings.remove_floating_geometry\n\nbool: Flag indicating if a geometry not connected to any other geometry is removed.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_parameterized",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_parameterized.html#is_parameterized",
        "title": "is_parameterized",
        "section": "is_parameterized",
        "text": "bool: Whether the primitive is parametrized.\nThis property is read-only.\nis_parameterized\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_parameterized",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_parameterized.html#ansys.edb.core.primitive.primitive.Bondwire.is_parameterized",
        "title": "is_parameterized > is_parameterized > is_parameterized",
        "section": "is_parameterized > is_parameterized",
        "text": "property Bondwire.is_parameterized\n\nbool: Whether the primitive is parametrized.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.component_type",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.component_type.html#component_type",
        "title": "component_type",
        "section": "component_type",
        "text": "ComponentType: Component type of the component group.\ncomponent_type\nComponentType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.component_type",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.component_type.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.component_type",
        "title": "component_type > component_type > component_type",
        "section": "component_type > component_type",
        "text": "property ComponentGroup.component_type\n\nComponentType: Component type of the component group.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.name",
        "href": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the component definition.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.name",
        "href": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.name.html#ansys.edb.core.definition.component_def.ComponentDef.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property ComponentDef.name\n\nstr: Name of the component definition.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.html#layer",
        "title": "Layer",
        "section": "Layer",
        "text": "Provides the base class representing a layer.\nLayer.cast()\nCast the layer object to the correct concrete type.\nLayer.clone([copy_id])\nCreate a clone of the layer.\nLayer.create(name, lyr_type)\nCreate a non-stackup layer.\nLayer.get_product_property(prod_id, attr_it)\nGet the product property of the layer for a given product ID and attribute ID.\nLayer.get_product_property_ids(prod_id)\nGet a list of attribute IDs for a given product ID for the layer.\nLayer.is_in_zone(zone)\nDetermine if the layer exists in the given zone.\nLayer.set_is_in_zone(zone[, in_zone])\nSet whether the layer exists in a given zone.\nLayer.set_product_property(prod_id, attr_it, ...)\nSet the product property of the layer for a given product ID and attribute ID.\nLayer.color\ntuple[int, int, int]: Color of the layer in (R,G,B) format.\nLayer.draw_override\nDrawOverride: Draw override of the layer.\nLayer.id\nint: Unique ID of the EDB object.\nLayer.is_null\nbool: Flag indicating if the object exists in the database.\nLayer.is_stackup_layer\nbool: Flag indicating if the layer is a StackupLayer instance.\nLayer.is_via_layer\nbool: Flag indicating if the layer is a ViaLayer instance.\nLayer.layer_id\nint: Layer ID.\nLayer.layout_obj_type\n\nLayer.locked\nbool: Flag indicating if the layer is locked.\nLayer.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nLayer.name\nstr: Name of the layer.\nLayer.top_bottom_association\nTopBottomAssociation: Top-bottom association of the layer.\nLayer.transparency\nint: Transparency value of the layer.\nLayer.type\nLayerType: Type of the layer.\nLayer.visibility_mask\nint: Visibility mask of the layer.\nLayer.zone\nint: Zone index associated with the owning layer collection.\nLayer.zones\nlist[int]: IDs of all zones containing the layer.\nLayer\nLayer.cast\nLayer.clone\nLayer.create\nLayer.get_product_property\nLayer.get_product_property_ids\nLayer.is_in_zone\nLayer.set_is_in_zone\nLayer.set_product_property\nLayer.color\ntuple\nint\nint\nint\nLayer.draw_override\nDrawOverride\nLayer.id\nint\nLayer.is_null\nbool\nLayer.is_stackup_layer\nbool\nStackupLayer\nLayer.is_via_layer\nbool\nViaLayer\nLayer.layer_id\nint\nLayer.layout_obj_type\nLayer.locked\nbool\nLayer.msg\nEDBObjMessage\nLayer.name\nstr\nLayer.top_bottom_association\nTopBottomAssociation\nLayer.transparency\nint\nLayer.type\nLayerType\nLayer.visibility_mask\nint\nLayer.zone\nint\nLayer.zones\nlist\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.html#ansys.edb.core.layer.layer.Layer",
        "title": "Layer > Layer > Layer",
        "section": "Layer > Layer",
        "text": "class ansys.edb.core.layer.layer.Layer(msg)\n\nProvides the base class representing a layer.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nLayer.cast()\n\nCast the layer object to the correct concrete type.\n\nLayer.clone([copy_id])\n\nCreate a clone of the layer.\n\nLayer.create(name, lyr_type)\n\nCreate a non-stackup layer.\n\nLayer.get_product_property(prod_id, attr_it)\n\nGet the product property of the layer for a given product ID and attribute ID.\n\nLayer.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs for a given product ID for the layer.\n\nLayer.is_in_zone(zone)\n\nDetermine if the layer exists in the given zone.\n\nLayer.set_is_in_zone(zone[, in_zone])\n\nSet whether the layer exists in a given zone.\n\nLayer.set_product_property(prod_id, attr_it, ...)\n\nSet the product property of the layer for a given product ID and attribute ID.\n\n\n\nAttributes\n\n\n\n\n\n\n\nLayer.color\n\ntuple[int, int, int]: Color of the layer in (R,G,B) format.\n\nLayer.draw_override\n\nDrawOverride: Draw override of the layer.\n\nLayer.id\n\nint: Unique ID of the EDB object.\n\nLayer.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nLayer.is_stackup_layer\n\nbool: Flag indicating if the layer is a StackupLayer instance.\n\nLayer.is_via_layer\n\nbool: Flag indicating if the layer is a ViaLayer instance.\n\nLayer.layer_id\n\nint: Layer ID.\n\nLayer.layout_obj_type\n\n\n\nLayer.locked\n\nbool: Flag indicating if the layer is locked.\n\nLayer.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nLayer.name\n\nstr: Name of the layer.\n\nLayer.top_bottom_association\n\nTopBottomAssociation: Top-bottom association of the layer.\n\nLayer.transparency\n\nint: Transparency value of the layer.\n\nLayer.type\n\nLayerType: Type of the layer.\n\nLayer.visibility_mask\n\nint: Visibility mask of the layer.\n\nLayer.zone\n\nint: Zone index associated with the owning layer collection.\n\nLayer.zones\n\nlist[int]: IDs of all zones containing the layer.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_auto_port",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_auto_port.html#is_auto_port",
        "title": "is_auto_port",
        "section": "is_auto_port",
        "text": "bool: Flag indicating if the terminal is an auto port.\nis_auto_port\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_auto_port",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_auto_port.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_auto_port",
        "title": "is_auto_port > is_auto_port > is_auto_port",
        "section": "is_auto_port > is_auto_port",
        "text": "property TerminalInstanceTerminal.is_auto_port\n\nbool: Flag indicating if the terminal is an auto port.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.value.Value.equals",
        "href": "api/_autosummary/ansys.edb.core.utility.value.Value.equals.html#equals",
        "title": "equals",
        "section": "equals",
        "text": "Check if this value and other value are equivalent when evaluated.\nOther value to compare to.\nTolerance.\nTrue` if this value and the other value are equivalent when evaluated.\nequals\npython:str\npython:int\npython:float\ncomplex\nValue\npython:float"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.value.Value.equals",
        "href": "api/_autosummary/ansys.edb.core.utility.value.Value.equals.html#ansys.edb.core.utility.value.Value.equals",
        "title": "equals > equals > equals",
        "section": "equals > equals",
        "text": "Value.equals(other, tolerance=1e-09)\n\nCheck if this value and other value are equivalent when evaluated.\n\nParameters\n\nother\n\npython:str, python:int, python:float, complex, Value\n\nOther value to compare to.\n\ntolerance\n\npython:float, default: 1e-9\n\nTolerance.\n\nReturns\n\nbool\n\nTrue` if this value and the other value are equivalent when evaluated.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.html#hfssadvancedsettings",
        "title": "HFSSAdvancedSettings",
        "section": "HFSSAdvancedSettings",
        "text": "Represents advanced settings for HFSS simulations.\nHFSSAdvancedSettings.defeature_absolute_length\nstr: Absolute length used as tolerance when defeaturing polygons.\nHFSSAdvancedSettings.defeature_ratio\nfloat: Extent ratio used as tolerance when defeaturing polygons.\nHFSSAdvancedSettings.healing_option\nint: Enable/disable healing of mis-aligned points and edges.\nHFSSAdvancedSettings.ic_mode_auto_resolution\nbool: Flag indicating if model resolution is automatically calculated for IC designs.\nHFSSAdvancedSettings.ic_mode_length\nstr: Model resolution to use when manually setting the model resolution of IC designs.\nHFSSAdvancedSettings.mesh_for_via_plating\nbool: Flag indicating if meshing for via plating is enabled.\nHFSSAdvancedSettings.model_type\nModelType: model type.\nHFSSAdvancedSettings.msg\nEDBObjMessage: Protobuf message that represents this object's ID.\nHFSSAdvancedSettings.num_via_density\nfloat: Spacing between vias.\nHFSSAdvancedSettings.num_via_sides\nint: Number of sides a via is considered to have.\nHFSSAdvancedSettings.remove_floating_geometry\nbool: Flag indicating if a geometry not connected to any other geometry is removed.\nHFSSAdvancedSettings.small_void_area\nfloat: Voids with an area smaller than this value are ignored during simulation.\nHFSSAdvancedSettings.union_polygons\nbool: Flag indicating if polygons are unioned before meshing.\nHFSSAdvancedSettings.use_defeature\nbool: Flag indicating if polygon defeaturing is performed.\nHFSSAdvancedSettings.use_defeature_absolute_length\nbool: Flag indicating if absolute length or extent ratio is used when defeaturing polygons.\nHFSSAdvancedSettings.via_material\nstr: Default via material.\nHFSSAdvancedSettings.via_model_type\nViaStyle: Via model type.\nHFSSAdvancedSettings\nHFSSAdvancedSettings.defeature_absolute_length\nstr\nHFSSAdvancedSettings.defeature_ratio\nfloat\nHFSSAdvancedSettings.healing_option\nint\nHFSSAdvancedSettings.ic_mode_auto_resolution\nbool\nHFSSAdvancedSettings.ic_mode_length\nstr\nHFSSAdvancedSettings.mesh_for_via_plating\nbool\nHFSSAdvancedSettings.model_type\nModelType\nHFSSAdvancedSettings.msg\nEDBObjMessage\nHFSSAdvancedSettings.num_via_density\nfloat\nHFSSAdvancedSettings.num_via_sides\nint\nHFSSAdvancedSettings.remove_floating_geometry\nbool\nHFSSAdvancedSettings.small_void_area\nfloat\nHFSSAdvancedSettings.union_polygons\nbool\nHFSSAdvancedSettings.use_defeature\nbool\nHFSSAdvancedSettings.use_defeature_absolute_length\nbool\nHFSSAdvancedSettings.via_material\nstr\nHFSSAdvancedSettings.via_model_type\nViaStyle"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings",
        "title": "HFSSAdvancedSettings > HFSSAdvancedSettings > HFSSAdvancedSettings",
        "section": "HFSSAdvancedSettings > HFSSAdvancedSettings",
        "text": "class ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings(sim_setup)\n\nRepresents advanced settings for HFSS simulations.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nHFSSAdvancedSettings.defeature_absolute_length\n\nstr: Absolute length used as tolerance when defeaturing polygons.\n\nHFSSAdvancedSettings.defeature_ratio\n\nfloat: Extent ratio used as tolerance when defeaturing polygons.\n\nHFSSAdvancedSettings.healing_option\n\nint: Enable/disable healing of mis-aligned points and edges.\n\nHFSSAdvancedSettings.ic_mode_auto_resolution\n\nbool: Flag indicating if model resolution is automatically calculated for IC designs.\n\nHFSSAdvancedSettings.ic_mode_length\n\nstr: Model resolution to use when manually setting the model resolution of IC designs.\n\nHFSSAdvancedSettings.mesh_for_via_plating\n\nbool: Flag indicating if meshing for via plating is enabled.\n\nHFSSAdvancedSettings.model_type\n\nModelType: model type.\n\nHFSSAdvancedSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object's ID.\n\nHFSSAdvancedSettings.num_via_density\n\nfloat: Spacing between vias.\n\nHFSSAdvancedSettings.num_via_sides\n\nint: Number of sides a via is considered to have.\n\nHFSSAdvancedSettings.remove_floating_geometry\n\nbool: Flag indicating if a geometry not connected to any other geometry is removed.\n\nHFSSAdvancedSettings.small_void_area\n\nfloat: Voids with an area smaller than this value are ignored during simulation.\n\nHFSSAdvancedSettings.union_polygons\n\nbool: Flag indicating if polygons are unioned before meshing.\n\nHFSSAdvancedSettings.use_defeature\n\nbool: Flag indicating if polygon defeaturing is performed.\n\nHFSSAdvancedSettings.use_defeature_absolute_length\n\nbool: Flag indicating if absolute length or extent ratio is used when defeaturing polygons.\n\nHFSSAdvancedSettings.via_material\n\nstr: Default via material.\n\nHFSSAdvancedSettings.via_model_type\n\nViaStyle: Via model type.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.create",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a component group with a component.\nLayout to create the component group in.\nName of the component group.\nName of the ComponentDef instance that             the component group refers to.\nComponent group created.\ncreate\nLayout\npython:str\npython:str\nComponentDef\nComponentGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.create",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.create.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod ComponentGroup.create(layout, name, comp_name)\n\nCreate a component group with a component.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to create the component group in.\n\nname\n\npython:str\n\nName of the component group.\n\ncomp_name\n\npython:str\n\nName of the ComponentDef instance that             the component group refers to.\n\nReturns\n\nComponentGroup\n\nComponent group created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.remove_net",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.remove_net.html#remove_net",
        "title": "remove_net",
        "section": "remove_net",
        "text": "Remove a net from the net class.\nNet to remove.\nremove_net\nNet"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.remove_net",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.remove_net.html#ansys.edb.core.net.net_class.NetClass.remove_net",
        "title": "remove_net > remove_net > remove_net",
        "section": "remove_net > remove_net",
        "text": "NetClass.remove_net(net)\n\nRemove a net from the net class.\n\nParameters\n\nnet\n\nNet\n\nNet to remove.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType.MATERIAL_DEF",
        "href": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType.MATERIAL_DEF.html#material_def",
        "title": "MATERIAL_DEF",
        "section": "MATERIAL_DEF",
        "text": "MATERIAL_DEF"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType.MATERIAL_DEF",
        "href": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType.MATERIAL_DEF.html#ansys.edb.core.edb_defs.DefinitionObjType.MATERIAL_DEF",
        "title": "MATERIAL_DEF > MATERIAL_DEF > MATERIAL_DEF",
        "section": "MATERIAL_DEF > MATERIAL_DEF",
        "text": "DefinitionObjType.MATERIAL_DEF = 3\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.bundle_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.bundle_terminal.html#bundle_terminal",
        "title": "bundle_terminal",
        "section": "bundle_terminal",
        "text": "BundleTerminal: Bundle terminal that the terminal belongs to, if any.\nbundle_terminal\nBundleTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.bundle_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.bundle_terminal.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.bundle_terminal",
        "title": "bundle_terminal > bundle_terminal > bundle_terminal",
        "section": "bundle_terminal > bundle_terminal",
        "text": "property PadstackInstanceTerminal.bundle_terminal\n\nBundleTerminal: Bundle terminal that the terminal belongs to, if any.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin.number",
        "href": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin.number.html#number",
        "title": "number",
        "section": "number",
        "text": "int: Serial number of the component pin inside its component definition.\nThis property is read-only.\nnumber\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin.number",
        "href": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin.number.html#ansys.edb.core.definition.component_pin.ComponentPin.number",
        "title": "number > number > number",
        "section": "number > number",
        "text": "property ComponentPin.number\n\nint: Serial number of the component pin inside its component definition.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.refine_vias",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.refine_vias.html#refine_vias",
        "title": "refine_vias",
        "section": "refine_vias",
        "text": "bool: Flag indicating if the mesh along vias is refined.\nrefine_vias\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.refine_vias",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.refine_vias.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.refine_vias",
        "title": "refine_vias > refine_vias > refine_vias",
        "section": "refine_vias > refine_vias",
        "text": "property SIWaveDCAdvancedSettings.refine_vias\n\nbool: Flag indicating if the mesh along vias is refined.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.min_triangles_for_wave_port",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.min_triangles_for_wave_port.html#min_triangles_for_wave_port",
        "title": "min_triangles_for_wave_port",
        "section": "min_triangles_for_wave_port",
        "text": "int: Minimum number of triangles to use for meshing waveports.\nmin_triangles_for_wave_port\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.min_triangles_for_wave_port",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.min_triangles_for_wave_port.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.min_triangles_for_wave_port",
        "title": "min_triangles_for_wave_port > min_triangles_for_wave_port > min_triangles_for_wave_port",
        "section": "min_triangles_for_wave_port > min_triangles_for_wave_port",
        "text": "property HFSSSolverSettings.min_triangles_for_wave_port\n\nint: Minimum number of triangles to use for meshing waveports.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.placement_3d",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.placement_3d.html#placement_3d",
        "title": "placement_3d",
        "section": "placement_3d",
        "text": "bool: Flag indicating if the cell instance is 3D placed in the owning layout.\nIf True, transformation can be set using the transform3d object.\nplacement_3d\nbool\nTrue\ntransform3d"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.placement_3d",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.placement_3d.html#ansys.edb.core.hierarchy.inst_array.InstArray.placement_3d",
        "title": "placement_3d > placement_3d > placement_3d",
        "section": "placement_3d > placement_3d",
        "text": "property InstArray.placement_3d\n\nbool: Flag indicating if the cell instance is 3D placed in the owning layout.\n\nIf True, transformation can be set using the transform3d object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.use_reference_from_hierarchy",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.use_reference_from_hierarchy.html#use_reference_from_hierarchy",
        "title": "use_reference_from_hierarchy",
        "section": "use_reference_from_hierarchy",
        "text": "bool: Flag indicating if the terminal can use references from the hierarchy.\nuse_reference_from_hierarchy\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.use_reference_from_hierarchy",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.use_reference_from_hierarchy.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.use_reference_from_hierarchy",
        "title": "use_reference_from_hierarchy > use_reference_from_hierarchy > use_reference_from_hierarchy",
        "section": "use_reference_from_hierarchy > use_reference_from_hierarchy",
        "text": "property PadstackInstanceTerminal.use_reference_from_hierarchy\n\nbool: Flag indicating if the terminal can use references from the hierarchy.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.ic_mode_length",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.ic_mode_length.html#ic_mode_length",
        "title": "ic_mode_length",
        "section": "ic_mode_length",
        "text": "str: Model resolution to use when manually setting the model resolution of IC designs.\nic_mode_length\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.ic_mode_length",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.ic_mode_length.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.ic_mode_length",
        "title": "ic_mode_length > ic_mode_length > ic_mode_length",
        "section": "ic_mode_length > ic_mode_length",
        "text": "property HFSSAdvancedSettings.ic_mode_length\n\nstr: Model resolution to use when manually setting the model resolution of IC designs.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.get_end_cap_style",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.get_end_cap_style.html#get_end_cap_style",
        "title": "get_end_cap_style",
        "section": "get_end_cap_style",
        "text": "Get end cap styles for the path.\nPathEndCapType,\nPathEndCapType\nReturns a tuple in this format:\n(end_cap1, end_cap2)\nend_cap1 : End cap style of path start end cap.\nend_cap2 : End cap style of path end end cap.\nget_end_cap_style\npython:tuple\nPathEndCapType\nPathEndCapType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.get_end_cap_style",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.get_end_cap_style.html#ansys.edb.core.primitive.primitive.Path.get_end_cap_style",
        "title": "get_end_cap_style > get_end_cap_style > get_end_cap_style",
        "section": "get_end_cap_style > get_end_cap_style",
        "text": "Path.get_end_cap_style()\n\nGet end cap styles for the path.\n\nReturns\n\npython:tuple[\n\nPathEndCapType,\nPathEndCapType\n\n]\n\nReturns a tuple in this format:\n\n(end_cap1, end_cap2)\n\nend_cap1 : End cap style of path start end cap.\n\nend_cap2 : End cap style of path end end cap.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.MeshOperation.enabled",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.MeshOperation.enabled.html#enabled",
        "title": "enabled",
        "section": "enabled",
        "text": "bool: Flag indicating if the mesh operation is enabled.\nenabled\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.MeshOperation.enabled",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.MeshOperation.enabled.html#ansys.edb.core.simulation_setup.mesh_operation.MeshOperation.enabled",
        "title": "enabled > enabled > enabled",
        "section": "enabled > enabled",
        "text": "property MeshOperation.enabled\n\nbool: Flag indicating if the mesh operation is enabled.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.layout_component.LayoutComponent.cell_instance",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.layout_component.LayoutComponent.cell_instance.html#cell_instance",
        "title": "cell_instance",
        "section": "cell_instance",
        "text": "CellInstance: The underlying cell instance of the layout component.\ncell_instance\nCellInstance"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.layout_component.LayoutComponent.cell_instance",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.layout_component.LayoutComponent.cell_instance.html#ansys.edb.core.hierarchy.layout_component.LayoutComponent.cell_instance",
        "title": "cell_instance > cell_instance > cell_instance",
        "section": "cell_instance > cell_instance",
        "text": "property LayoutComponent.cell_instance\n\nCellInstance: The underlying cell instance of the layout component.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.DrawOverride",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.DrawOverride.html#drawoverride",
        "title": "DrawOverride",
        "section": "DrawOverride",
        "text": "Provides an enum representing draw override options for layers.\nDrawOverride.NO_OVERRIDE\n\nDrawOverride.FILL\n\nDrawOverride.WIREFRAME\n\nDrawOverride\nDrawOverride.NO_OVERRIDE\nDrawOverride.FILL\nDrawOverride.WIREFRAME"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.DrawOverride",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.DrawOverride.html#ansys.edb.core.layer.layer.DrawOverride",
        "title": "DrawOverride > DrawOverride > DrawOverride",
        "section": "DrawOverride > DrawOverride",
        "text": "class ansys.edb.core.layer.layer.DrawOverride(value)\n\nProvides an enum representing draw override options for layers.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nDrawOverride.NO_OVERRIDE\n\n\n\nDrawOverride.FILL\n\n\n\nDrawOverride.WIREFRAME\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.group",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.group.html#group",
        "title": "group",
        "section": "group",
        "text": "Group object.\ngroup\nGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.group",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.group.html#ansys.edb.core.primitive.primitive.Bondwire.group",
        "title": "group > group > group",
        "section": "group > group",
        "text": "property Bondwire.group\n\nGroup object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.html#layoutobjinstance2dgeometry",
        "title": "LayoutObjInstance2DGeometry",
        "section": "LayoutObjInstance2DGeometry",
        "text": "Represents a layout object instance 2D geometry.\nLayoutObjInstance2DGeometry.get_polygon_data([...])\nGet the underlying polygon data of the geometry.\nLayoutObjInstance2DGeometry.color\nint: Color of the geometry.\nLayoutObjInstance2DGeometry.id\nint: Unique ID of the EDB object.\nLayoutObjInstance2DGeometry.is_negative\nbool: Flag indicating if the geometry is negative.\nLayoutObjInstance2DGeometry.is_null\nbool: Flag indicating if the object exists in the database.\nLayoutObjInstance2DGeometry.material\nstr: Material of the geometry.\nLayoutObjInstance2DGeometry.msg\nProtobuf message that represents this object's ID.\nLayoutObjInstance2DGeometry\nLayoutObjInstance2DGeometry.get_polygon_data\nLayoutObjInstance2DGeometry.color\nint\nLayoutObjInstance2DGeometry.id\nint\nLayoutObjInstance2DGeometry.is_negative\nbool\nLayoutObjInstance2DGeometry.is_null\nbool\nLayoutObjInstance2DGeometry.material\nstr\nLayoutObjInstance2DGeometry.msg"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.html#ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry",
        "title": "LayoutObjInstance2DGeometry > LayoutObjInstance2DGeometry > LayoutObjInstance2DGeometry",
        "section": "LayoutObjInstance2DGeometry > LayoutObjInstance2DGeometry",
        "text": "class ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry(geometry, owning_drawing, placement_lyr)\n\nRepresents a layout object instance 2D geometry.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nLayoutObjInstance2DGeometry.get_polygon_data([...])\n\nGet the underlying polygon data of the geometry.\n\n\n\nAttributes\n\n\n\n\n\n\n\nLayoutObjInstance2DGeometry.color\n\nint: Color of the geometry.\n\nLayoutObjInstance2DGeometry.id\n\nint: Unique ID of the EDB object.\n\nLayoutObjInstance2DGeometry.is_negative\n\nbool: Flag indicating if the geometry is negative.\n\nLayoutObjInstance2DGeometry.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nLayoutObjInstance2DGeometry.material\n\nstr: Material of the geometry.\n\nLayoutObjInstance2DGeometry.msg\n\nProtobuf message that represents this object's ID.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.is_null",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.is_null",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.is_null.html#ansys.edb.core.hierarchy.inst_array.InstArray.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property InstArray.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/primitive",
        "href": "api/primitive.html#primitives",
        "title": "Primitives",
        "section": "Primitives",
        "text": "Primitives"
    },
    {
        "objectID": "api/primitive",
        "href": "api/primitive.html#classes",
        "title": "Primitives > Classes",
        "section": "Classes",
        "text": "BoardBendDef(msg)\nRepresents a board bend definition instance.\nBondwire(msg)\nRepresents a bondwire object.\nCircle(msg)\nRepresents a circle object.\nPadstackInstance(msg)\nRepresentis a padstack instance object.\nPath(msg)\nRepresents a path object.\nPrimitive(msg)\nRepresents a primitive object.\nPolygon(msg)\nRepresents a polygon object.\nRectangle(msg)\nRepresents a rectangle object.\nText(msg)\nRepresents a text object.\nClasses\nBoardBendDef\nBondwire\nCircle\nPadstackInstance\nPath\nPrimitive\nPolygon\nRectangle\nText"
    },
    {
        "objectID": "api/primitive",
        "href": "api/primitive.html#enums",
        "title": "Primitives > Enums",
        "section": "Enums",
        "text": "BondwireCrossSectionType(value)\nProvides an enum representing bondwire cross section types.\nBondwireType(value)\nProvides an enum representing bondwire types.\nBackDrillType(value)\nProvides an enum representing back drill types.\nPathCornerType(value)\nProvides an enum representing corner types.\nPathEndCapType(value)\nProvides an enum representing end cap types.\nPrimitiveType(value)\nProvides an enum representing primitive types.\nRectangleRepresentationType(value)\nProvides an enum representing rectangle types.\nEnums\nBondwireCrossSectionType\nBondwireType\nBackDrillType\nPathCornerType\nPathEndCapType\nPrimitiveType\nRectangleRepresentationType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.polygon_data",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.polygon_data.html#polygon_data",
        "title": "polygon_data",
        "section": "polygon_data",
        "text": "PolygonData:         Polygon data object of the circle.\npolygon_data\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.polygon_data",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.polygon_data.html#ansys.edb.core.primitive.primitive.Circle.polygon_data",
        "title": "polygon_data > polygon_data > polygon_data",
        "section": "polygon_data > polygon_data",
        "text": "property Circle.polygon_data\n\nPolygonData:         Polygon data object of the circle.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.name",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the terminal.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.name",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.name.html#ansys.edb.core.terminal.terminals.EdgeTerminal.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property EdgeTerminal.name\n\nstr: Name of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.placement_layer",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.placement_layer.html#placement_layer",
        "title": "placement_layer",
        "section": "placement_layer",
        "text": "Layer: Placement layer for the hierarchy object.\nplacement_layer\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.placement_layer",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.placement_layer.html#ansys.edb.core.hierarchy.group.Group.placement_layer",
        "title": "placement_layer > placement_layer > placement_layer",
        "section": "placement_layer > placement_layer",
        "text": "property Group.placement_layer\n\nLayer: Placement layer for the hierarchy object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.create_stride",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.create_stride.html#create_stride",
        "title": "create_stride",
        "section": "create_stride",
        "text": "Create a Stride model.\nThis method makes a call directly on a Connectable or\nLayout.\ncreate_stride\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.create_stride",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.create_stride.html#ansys.edb.core.layout.mcad_model.McadModel.create_stride",
        "title": "create_stride > create_stride > create_stride",
        "section": "create_stride > create_stride",
        "text": "classmethod McadModel.create_stride(connectable=None, layout=None, filename=None)\n\nCreate a Stride model.\n\nThis method makes a call directly on a Connectable or\nLayout.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.layout",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.layout.html#layout",
        "title": "layout",
        "section": "layout",
        "text": "Layout: Layout owning the object.\nThis property is read-only.\nlayout\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.layout",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.layout.html#ansys.edb.core.hierarchy.inst_array.InstArray.layout",
        "title": "layout > layout > layout",
        "section": "layout > layout",
        "text": "property InstArray.layout\n\nLayout: Layout owning the object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.is_mcad_hfss.html#is_mcad_hfss",
        "title": "is_mcad_hfss",
        "section": "is_mcad_hfss",
        "text": "bool: Flag indicating if this is an HFSS MCAD model.\nThis property is read-only.\nis_mcad_hfss\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.is_mcad_hfss.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.is_mcad_hfss",
        "title": "is_mcad_hfss > is_mcad_hfss > is_mcad_hfss",
        "section": "is_mcad_hfss > is_mcad_hfss",
        "text": "property ComponentGroup.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.create_hfss.html#create_hfss",
        "title": "create_hfss",
        "section": "create_hfss",
        "text": "Create an HFSS model from an MCAD file.\nHFSS model created.\ncreate_hfss\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.create_hfss.html#ansys.edb.core.primitive.primitive.Polygon.create_hfss",
        "title": "create_hfss > create_hfss > create_hfss",
        "section": "create_hfss > create_hfss",
        "text": "Polygon.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nReturns\n\nMcadModel\n\nHFSS model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.create",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a padstack instance terminal.\nLayout to create the padstack instance terminal in.\nName of the padstack instance terminal.\nPadstack instance.\nLayer to place the padstack instance terminal on.\nNet.\nWhether the padstack instance terminal is a reference terminal.\ncreate\nLayout\nstr\nPadstackInstance\nLayer\nstr\nNet\nstr\npython:None\nbool\npython:False\nPadstackInstanceTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.create",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.create.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod PadstackInstanceTerminal.create(layout, name, padstack_instance, layer, net, is_ref=False)\n\nCreate a padstack instance terminal.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to create the padstack instance terminal in.\n\nname\n\nstr\n\nName of the padstack instance terminal.\n\npadstack_instance\n\nPadstackInstance\n\nPadstack instance.\n\nlayer\n\nLayer or str\n\nLayer to place the padstack instance terminal on.\n\nnet\n\nNet or str or python:None\n\nNet.\n\nis_ref\n\nbool, default: python:False\n\nWhether the padstack instance terminal is a reference terminal.\n\nReturns\n\nPadstackInstanceTerminal\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.MeshClosure",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.MeshClosure.html#meshclosure",
        "title": "MeshClosure",
        "section": "MeshClosure",
        "text": "Provides an enum representing mesh closure types.\nMeshClosure.OPEN_ENDED\n\nMeshClosure.ENDS_CLOSED\n\nMeshClosure.FILLED_CLOSED\n\nMeshClosure.UNDEFINED_CLOSURE\n\nMeshClosure\nMeshClosure.OPEN_ENDED\nMeshClosure.ENDS_CLOSED\nMeshClosure.FILLED_CLOSED\nMeshClosure.UNDEFINED_CLOSURE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.MeshClosure",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.MeshClosure.html#ansys.edb.core.hierarchy.structure3d.MeshClosure",
        "title": "MeshClosure > MeshClosure > MeshClosure",
        "section": "MeshClosure > MeshClosure",
        "text": "class ansys.edb.core.hierarchy.structure3d.MeshClosure(value)\n\nProvides an enum representing mesh closure types.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nMeshClosure.OPEN_ENDED\n\n\n\nMeshClosure.ENDS_CLOSED\n\n\n\nMeshClosure.FILLED_CLOSED\n\n\n\nMeshClosure.UNDEFINED_CLOSURE\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.height",
        "href": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.height.html#height",
        "title": "height",
        "section": "height",
        "text": "ValueLike: Height of the solder ball.\nheight"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.height",
        "href": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.height.html#ansys.edb.core.definition.solder_ball_property.SolderBallProperty.height",
        "title": "height > height > height",
        "section": "height > height",
        "text": "property SolderBallProperty.height\n\nValueLike: Height of the solder ball.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.voids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.voids.html#voids",
        "title": "voids",
        "section": "voids",
        "text": "list of Primitive: List of void        primitive objects inside the primitive.\nThis property is read-only.\nvoids\nlist\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.voids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.voids.html#ansys.edb.core.primitive.primitive.Polygon.voids",
        "title": "voids > voids > voids",
        "section": "voids > voids",
        "text": "property Polygon.voids\n\nlist of Primitive: List of void        primitive objects inside the primitive.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge.type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge.type.html#type",
        "title": "type",
        "section": "type",
        "text": "type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge.type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge.type.html#ansys.edb.core.terminal.terminals.PrimitiveEdge.type",
        "title": "type > type > type",
        "section": "type > type",
        "text": "PrimitiveEdge.type = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings.html#siwavedcsettings",
        "title": "SIWaveDCSettings",
        "section": "SIWaveDCSettings",
        "text": "Represents DC settings for SIWave simulations.\nSIWaveDCSettings.compute_inductance\nbool: Flag indicating if inductance is calculated.\nSIWaveDCSettings.contact_radius\nstr: Circuit element contact radius.\nSIWaveDCSettings.dc_slider_pos\nint: DC slider position.\nSIWaveDCSettings.msg\nEDBObjMessage: Protobuf message that represents this object's ID.\nSIWaveDCSettings.plot_jv\nbool: Flag indicating if current density and voltage distribution are plotted.\nSIWaveDCSettings.use_dc_custom_settings\nbool: Flag indicating if custom DC settings are used.\nSIWaveDCSettings\nSIWaveDCSettings.compute_inductance\nbool\nSIWaveDCSettings.contact_radius\nstr\nSIWaveDCSettings.dc_slider_pos\nint\nSIWaveDCSettings.msg\nEDBObjMessage\nSIWaveDCSettings.plot_jv\nbool\nSIWaveDCSettings.use_dc_custom_settings\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings",
        "title": "SIWaveDCSettings > SIWaveDCSettings > SIWaveDCSettings",
        "section": "SIWaveDCSettings > SIWaveDCSettings",
        "text": "class ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings(sim_setup)\n\nRepresents DC settings for SIWave simulations.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nSIWaveDCSettings.compute_inductance\n\nbool: Flag indicating if inductance is calculated.\n\nSIWaveDCSettings.contact_radius\n\nstr: Circuit element contact radius.\n\nSIWaveDCSettings.dc_slider_pos\n\nint: DC slider position.\n\nSIWaveDCSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object's ID.\n\nSIWaveDCSettings.plot_jv\n\nbool: Flag indicating if current density and voltage distribution are plotted.\n\nSIWaveDCSettings.use_dc_custom_settings\n\nbool: Flag indicating if custom DC settings are used.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.layout_obj_type.html#layout_obj_type",
        "title": "layout_obj_type",
        "section": "layout_obj_type",
        "text": "layout_obj_type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.layout_obj_type.html#ansys.edb.core.primitive.primitive.Bondwire.layout_obj_type",
        "title": "layout_obj_type > layout_obj_type > layout_obj_type",
        "section": "layout_obj_type > layout_obj_type",
        "text": "Bondwire.layout_obj_type = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.reference_layout",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.reference_layout.html#reference_layout",
        "title": "reference_layout",
        "section": "reference_layout",
        "text": "Layout: Reference layout of the cell instance.\nThis property is read-only.\nreference_layout\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.reference_layout",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.reference_layout.html#ansys.edb.core.hierarchy.inst_array.InstArray.reference_layout",
        "title": "reference_layout > reference_layout > reference_layout",
        "section": "reference_layout > reference_layout",
        "text": "property InstArray.reference_layout\n\nLayout: Reference layout of the cell instance.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.source_amplitude",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.source_amplitude.html#source_amplitude",
        "title": "source_amplitude",
        "section": "source_amplitude",
        "text": "Value: Source amplitude of the terminal.\nsource_amplitude\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.source_amplitude",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.source_amplitude.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.source_amplitude",
        "title": "source_amplitude > source_amplitude > source_amplitude",
        "section": "source_amplitude > source_amplitude",
        "text": "property PinGroupTerminal.source_amplitude\n\nValue: Source amplitude of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.bundle_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.bundle_terminal.html#bundle_terminal",
        "title": "bundle_terminal",
        "section": "bundle_terminal",
        "text": "BundleTerminal: Bundle terminal that the terminal belongs to, if any.\nbundle_terminal\nBundleTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.bundle_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.bundle_terminal.html#ansys.edb.core.terminal.terminals.BundleTerminal.bundle_terminal",
        "title": "bundle_terminal > bundle_terminal > bundle_terminal",
        "section": "bundle_terminal > bundle_terminal",
        "text": "property BundleTerminal.bundle_terminal\n\nBundleTerminal: Bundle terminal that the terminal belongs to, if any.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.rlc_boundary_parameters",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.rlc_boundary_parameters.html#rlc_boundary_parameters",
        "title": "rlc_boundary_parameters",
        "section": "rlc_boundary_parameters",
        "text": "Rlc: RLC boundary parameters.\nrlc_boundary_parameters\nRlc"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.rlc_boundary_parameters",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.rlc_boundary_parameters.html#ansys.edb.core.terminal.terminals.Terminal.rlc_boundary_parameters",
        "title": "rlc_boundary_parameters > rlc_boundary_parameters > rlc_boundary_parameters",
        "section": "rlc_boundary_parameters > rlc_boundary_parameters",
        "text": "property Terminal.rlc_boundary_parameters\n\nRlc: RLC boundary parameters.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamExtrapolation.LINEAR_EX",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamExtrapolation.LINEAR_EX.html#linear_ex",
        "title": "LINEAR_EX",
        "section": "LINEAR_EX",
        "text": "LINEAR_EX"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamExtrapolation.LINEAR_EX",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamExtrapolation.LINEAR_EX.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamExtrapolation.LINEAR_EX",
        "title": "LINEAR_EX > LINEAR_EX > LINEAR_EX",
        "section": "LINEAR_EX > LINEAR_EX",
        "text": "SParamExtrapolation.LINEAR_EX = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior.ONE_PORT_CAPACITOR_DC",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior.ONE_PORT_CAPACITOR_DC.html#one_port_capacitor_dc",
        "title": "ONE_PORT_CAPACITOR_DC",
        "section": "ONE_PORT_CAPACITOR_DC",
        "text": "ONE_PORT_CAPACITOR_DC"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior.ONE_PORT_CAPACITOR_DC",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior.ONE_PORT_CAPACITOR_DC.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior.ONE_PORT_CAPACITOR_DC",
        "title": "ONE_PORT_CAPACITOR_DC > ONE_PORT_CAPACITOR_DC > ONE_PORT_CAPACITOR_DC",
        "section": "ONE_PORT_CAPACITOR_DC > ONE_PORT_CAPACITOR_DC",
        "text": "SParamDCBehavior.ONE_PORT_CAPACITOR_DC = 4\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDS for a given product ID for the cell.\nID representing a product that supports the EDB.\nList of user-defined attribute IDs for properties stored in this object.\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.get_product_property_ids.html#ansys.edb.core.layout.cell.Cell.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "Cell.get_product_property_ids(prod_id)\n\nGet a list of attribute IDS for a given product ID for the cell.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nReturns\n\npython:list[python:int]\n\nList of user-defined attribute IDs for properties stored in this object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.database.Database.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get a product-specific property value.\nProduct ID.\nAttribute ID.\nProperty value.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.database.Database.get_product_property.html#ansys.edb.core.database.Database.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "Database.get_product_property(prod_id, attr_it)\n\nGet a product-specific property value.\n\nParameters\n\nprod_id\n\nProductIdType\n\nProduct ID.\n\nattr_it\n\npython:int\n\nAttribute ID.\n\nReturns\n\npython:str\n\nProperty value.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings.plot_jv",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings.plot_jv.html#plot_jv",
        "title": "plot_jv",
        "section": "plot_jv",
        "text": "bool: Flag indicating if current density and voltage distribution are plotted.\nplot_jv\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings.plot_jv",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings.plot_jv.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings.plot_jv",
        "title": "plot_jv > plot_jv > plot_jv",
        "section": "plot_jv > plot_jv",
        "text": "property SIWaveDCSettings.plot_jv\n\nbool: Flag indicating if current density and voltage distribution are plotted.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.draw_override",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.draw_override.html#draw_override",
        "title": "draw_override",
        "section": "draw_override",
        "text": "DrawOverride: Draw override of the layer.\ndraw_override\nDrawOverride"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.draw_override",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.draw_override.html#ansys.edb.core.layer.layer.Layer.draw_override",
        "title": "draw_override > draw_override > draw_override",
        "section": "draw_override > draw_override",
        "text": "property Layer.draw_override\n\nDrawOverride: Draw override of the layer.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.value.Value.value",
        "href": "api/_autosummary/ansys.edb.core.utility.value.Value.value.html#value",
        "title": "value",
        "section": "value",
        "text": "complex: Evaluation to a constant and return as a float or complex.\nvalue\ncomplex"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.value.Value.value",
        "href": "api/_autosummary/ansys.edb.core.utility.value.Value.value.html#ansys.edb.core.utility.value.Value.value",
        "title": "value > value > value",
        "section": "value > value",
        "text": "property Value.value\n\ncomplex: Evaluation to a constant and return as a float or complex.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_mcad_hfss.html#is_mcad_hfss",
        "title": "is_mcad_hfss",
        "section": "is_mcad_hfss",
        "text": "bool: Flag indicating if this is an HFSS MCAD model.\nThis property is read-only.\nis_mcad_hfss\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_mcad_hfss.html#ansys.edb.core.primitive.primitive.Bondwire.is_mcad_hfss",
        "title": "is_mcad_hfss > is_mcad_hfss > is_mcad_hfss",
        "section": "is_mcad_hfss > is_mcad_hfss",
        "text": "property Bondwire.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_mcad.html#is_mcad",
        "title": "is_mcad",
        "section": "is_mcad",
        "text": "bool: Flag indicating if this is an MCAD model.\nThis property is read-only.\nis_mcad\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_mcad.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_mcad",
        "title": "is_mcad > is_mcad > is_mcad",
        "section": "is_mcad > is_mcad",
        "text": "property TerminalInstanceTerminal.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.create",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create an APD bondwire definition in a given database.\nDatabase to create the APD bondwire definition in.\nName of the APD bondwire definition.\nAPD bondwire definition created.\ncreate\nDatabase\npython:str\nApdBondwireDef"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.create",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.create.html#ansys.edb.core.definition.bondwire_def.ApdBondwireDef.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod ApdBondwireDef.create(database, name)\n\nCreate an APD bondwire definition in a given database.\n\nParameters\n\ndatabase\n\nDatabase\n\nDatabase to create the APD bondwire definition in.\n\nname\n\npython:str\n\nName of the APD bondwire definition.\n\nReturns\n\nApdBondwireDef\n\nAPD bondwire definition created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.min_void_area",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.min_void_area.html#min_void_area",
        "title": "min_void_area",
        "section": "min_void_area",
        "text": "str: Minimum void area.\nmin_void_area\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.min_void_area",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.min_void_area.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.min_void_area",
        "title": "min_void_area > min_void_area > min_void_area",
        "section": "min_void_area > min_void_area",
        "text": "property SIWaveAdvancedSettings.min_void_area\n\nstr: Minimum void area.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.num_via_density",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.num_via_density.html#num_via_density",
        "title": "num_via_density",
        "section": "num_via_density",
        "text": "float: Spacing between vias.\nnum_via_density\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.num_via_density",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.num_via_density.html#ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.num_via_density",
        "title": "num_via_density > num_via_density > num_via_density",
        "section": "num_via_density > num_via_density",
        "text": "property AdvancedSettings.num_via_density\n\nfloat: Spacing between vias.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.placement_layer",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.placement_layer.html#placement_layer",
        "title": "placement_layer",
        "section": "placement_layer",
        "text": "Layer: Placement layer for the hierarchy object.\nplacement_layer\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.placement_layer",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.placement_layer.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.placement_layer",
        "title": "placement_layer > placement_layer > placement_layer",
        "section": "placement_layer > placement_layer",
        "text": "property ComponentGroup.placement_layer\n\nLayer: Placement layer for the hierarchy object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.layer",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.layer.html#layer",
        "title": "layer",
        "section": "layer",
        "text": "Layer: Layer that the primitive object is on.\nlayer\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.layer",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.layer.html#ansys.edb.core.primitive.primitive.Polygon.layer",
        "title": "layer > layer > layer",
        "section": "layer > layer",
        "text": "property Polygon.layer\n\nLayer: Layer that the primitive object is on.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.is_null",
        "href": "api/_autosummary/ansys.edb.core.database.Database.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.is_null",
        "href": "api/_autosummary/ansys.edb.core.database.Database.is_null.html#ansys.edb.core.database.Database.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property Database.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.component",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.component.html#component",
        "title": "component",
        "section": "component",
        "text": "ComponentGroup:         Component of the Connectable object.\ncomponent\nComponentGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.component",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.component.html#ansys.edb.core.primitive.primitive.Text.component",
        "title": "component > component > component",
        "section": "component > component",
        "text": "property Text.component\n\nComponentGroup:         Component of the Connectable object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.msg.html#ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property RaptorXSimulationSetup.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.database",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.database.html#database",
        "title": "database",
        "section": "database",
        "text": "Database: Owning database of the cell.\nThis property is read-only.\ndatabase\nDatabase"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.database",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.database.html#ansys.edb.core.layout.cell.Cell.database",
        "title": "database > database > database",
        "section": "database > database",
        "text": "property Cell.database\n\nDatabase: Owning database of the cell.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.layout_obj_type.html#layout_obj_type",
        "title": "layout_obj_type",
        "section": "layout_obj_type",
        "text": "layout_obj_type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.layout_obj_type.html#ansys.edb.core.terminal.terminals.PointTerminal.layout_obj_type",
        "title": "layout_obj_type > layout_obj_type > layout_obj_type",
        "section": "layout_obj_type > layout_obj_type",
        "text": "PointTerminal.layout_obj_type = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.type",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.type.html#type",
        "title": "type",
        "section": "type",
        "text": "SimulationSetupType: Type of the simulation setup.\ntype\nSimulationSetupType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.type",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.type.html#ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.type",
        "title": "type > type > type",
        "section": "type > type",
        "text": "property HfssSimulationSetup.type\n\nSimulationSetupType: Type of the simulation setup.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.layout",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.layout.html#layout",
        "title": "layout",
        "section": "layout",
        "text": "Layout: Layout of the context.\nThis property is read-only.\nlayout\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.layout",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.layout.html#ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.layout",
        "title": "layout > layout > layout",
        "section": "layout > layout",
        "text": "property LayoutInstanceContext.layout\n\nLayout: Layout of the context.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.name",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the padstack definition.\nThis property is read-only.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.name",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.name.html#ansys.edb.core.definition.padstack_def.PadstackDef.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property PadstackDef.name\n\nstr: Name of the padstack definition.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.locked",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.locked.html#locked",
        "title": "locked",
        "section": "locked",
        "text": "bool: Flag indicating if the layer is locked.\nlocked\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.locked",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.locked.html#ansys.edb.core.layer.via_layer.ViaLayer.locked",
        "title": "locked > locked > locked",
        "section": "locked > locked",
        "text": "property ViaLayer.locked\n\nbool: Flag indicating if the layer is locked.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.cast",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.cast.html#cast",
        "title": "cast",
        "section": "cast",
        "text": "Cast the group object to the correct concrete type.\ncast\nGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.cast",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.cast.html#ansys.edb.core.hierarchy.via_group.ViaGroup.cast",
        "title": "cast > cast > cast",
        "section": "cast > cast",
        "text": "ViaGroup.cast()\n\nCast the group object to the correct concrete type.\n\nReturns\n\nGroup\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.source_phase",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.source_phase.html#source_phase",
        "title": "source_phase",
        "section": "source_phase",
        "text": "Value: Source phase of the terminal.\nsource_phase\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.source_phase",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.source_phase.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.source_phase",
        "title": "source_phase > source_phase > source_phase",
        "section": "source_phase > source_phase",
        "text": "property PinGroupTerminal.source_phase\n\nValue: Source phase of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.database.Database.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property associated with the given product ID and attribute ID.\nProduct ID.\nAttribute ID.\nNew value for the product property.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.database.Database.set_product_property.html#ansys.edb.core.database.Database.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "Database.set_product_property(prod_id, attr_it, prop_value)\n\nSet the product property associated with the given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nProduct ID.\n\nattr_it\n\npython:int\n\nAttribute ID.\n\nprop_value\n\npython:str\n\nNew value for the product property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.orig",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.orig.html#orig",
        "title": "orig",
        "section": "orig",
        "text": "PointData: Origin of the instance array.\norig\nPointData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.orig",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.orig.html#ansys.edb.core.hierarchy.inst_array.InstArray.orig",
        "title": "orig > orig > orig",
        "section": "orig > orig",
        "text": "property InstArray.orig\n\nPointData: Origin of the instance array.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.use_solver_properties",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.use_solver_properties.html#use_solver_properties",
        "title": "use_solver_properties",
        "section": "use_solver_properties",
        "text": "bool: Flag indicating if solver properties are used by the layer.\nuse_solver_properties\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.use_solver_properties",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.use_solver_properties.html#ansys.edb.core.layer.stackup_layer.StackupLayer.use_solver_properties",
        "title": "use_solver_properties > use_solver_properties > use_solver_properties",
        "section": "use_solver_properties > use_solver_properties",
        "text": "property StackupLayer.use_solver_properties\n\nbool: Flag indicating if solver properties are used by the layer.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.add_void",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.add_void.html#add_void",
        "title": "add_void",
        "section": "add_void",
        "text": "Add a void to the primitive.\nVoid to add.\nadd_void\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.add_void",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.add_void.html#ansys.edb.core.primitive.primitive.Path.add_void",
        "title": "add_void > add_void > add_void",
        "section": "add_void > add_void",
        "text": "Path.add_void(hole)\n\nAdd a void to the primitive.\n\nParameters\n\nhole\n\nPrimitive\n\nVoid to add.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.dc_min_void_area_to_mesh",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.dc_min_void_area_to_mesh.html#dc_min_void_area_to_mesh",
        "title": "dc_min_void_area_to_mesh",
        "section": "dc_min_void_area_to_mesh",
        "text": "str: Voids with an area smaller than this value are ignored.\ndc_min_void_area_to_mesh\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.dc_min_void_area_to_mesh",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.dc_min_void_area_to_mesh.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.dc_min_void_area_to_mesh",
        "title": "dc_min_void_area_to_mesh > dc_min_void_area_to_mesh > dc_min_void_area_to_mesh",
        "section": "dc_min_void_area_to_mesh > dc_min_void_area_to_mesh",
        "text": "property SIWaveDCAdvancedSettings.dc_min_void_area_to_mesh\n\nstr: Voids with an area smaller than this value are ignored.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.get_parameters",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.get_parameters.html#get_parameters",
        "title": "get_parameters",
        "section": "get_parameters",
        "text": "Get parameters of the JEDEC4 bondwire definition.\nBondwire top-to-die distance.\nget_parameters\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.get_parameters",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.get_parameters.html#ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.get_parameters",
        "title": "get_parameters > get_parameters > get_parameters",
        "section": "get_parameters > get_parameters",
        "text": "Jedec4BondwireDef.get_parameters()\n\nGet parameters of the JEDEC4 bondwire definition.\n\nReturns\n\nValue\n\nBondwire top-to-die distance.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.html#differentialpair",
        "title": "DifferentialPair",
        "section": "DifferentialPair",
        "text": "Represents a differential pair.\nDifferentialPair.add_net(net)\nAdd a net.\nDifferentialPair.contains_net(net)\nDetermine if a net exists in the net class.\nDifferentialPair.create(layout, name[, ...])\nCreate a differential pair.\nDifferentialPair.delete()\nDelete the layout object.\nDifferentialPair.find_by_name(layout, name)\nFind a differential pair by name in a given layout.\nDifferentialPair.get_product_property(...)\nGet the product property of the layout object for a given product ID and attribute ID.\nDifferentialPair.get_product_property_ids(prod_id)\nGet a list of attribute IDs given a product ID for the layout object.\nDifferentialPair.remove_net(net)\nRemove a net.\nDifferentialPair.set_product_property(...)\nSet the product property of the layout object for a given product ID and attribute ID.\nDifferentialPair.description\nstr : Description of the net class.\nDifferentialPair.differential_pair\ntuple(Net, Net): Nets (positive, negative) in the differential pair.\nDifferentialPair.id\nint: Unique ID of the EDB object.\nDifferentialPair.is_null\nbool: Flag indicating if the object exists in the database.\nDifferentialPair.is_power_ground\nFlag indicating if the new is power/ground.\nDifferentialPair.layout\nLayout: Layout owning the object.\nDifferentialPair.layout_obj_type\n\nDifferentialPair.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nDifferentialPair.name\nstr: Name of the net class.\nDifferentialPair.negative_net\nNet: Negative net in the differential pair.\nDifferentialPair.nets\nThis property is invalid for a differential pair.\nDifferentialPair.obj_type\nLayoutObjType: Layout object type.\nDifferentialPair.positive_net\nNet: Positive net in the differential pair.\nDifferentialPair\nDifferentialPair.add_net\nDifferentialPair.contains_net\nDifferentialPair.create\nDifferentialPair.delete\nDifferentialPair.find_by_name\nDifferentialPair.get_product_property\nDifferentialPair.get_product_property_ids\nDifferentialPair.remove_net\nDifferentialPair.set_product_property\nDifferentialPair.description\nstr\nDifferentialPair.differential_pair\ntuple\nNet\nNet\nDifferentialPair.id\nint\nDifferentialPair.is_null\nbool\nDifferentialPair.is_power_ground\nDifferentialPair.layout\nLayout\nDifferentialPair.layout_obj_type\nDifferentialPair.msg\nEDBObjMessage\nDifferentialPair.name\nstr\nDifferentialPair.negative_net\nNet\nDifferentialPair.nets\nDifferentialPair.obj_type\nLayoutObjType\nDifferentialPair.positive_net\nNet"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.html#ansys.edb.core.net.differential_pair.DifferentialPair",
        "title": "DifferentialPair > DifferentialPair > DifferentialPair",
        "section": "DifferentialPair > DifferentialPair",
        "text": "class ansys.edb.core.net.differential_pair.DifferentialPair(msg)\n\nRepresents a differential pair.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nDifferentialPair.add_net(net)\n\nAdd a net.\n\nDifferentialPair.contains_net(net)\n\nDetermine if a net exists in the net class.\n\nDifferentialPair.create(layout, name[, ...])\n\nCreate a differential pair.\n\nDifferentialPair.delete()\n\nDelete the layout object.\n\nDifferentialPair.find_by_name(layout, name)\n\nFind a differential pair by name in a given layout.\n\nDifferentialPair.get_product_property(...)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nDifferentialPair.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nDifferentialPair.remove_net(net)\n\nRemove a net.\n\nDifferentialPair.set_product_property(...)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\n\n\nAttributes\n\n\n\n\n\n\n\nDifferentialPair.description\n\nstr : Description of the net class.\n\nDifferentialPair.differential_pair\n\ntuple(Net, Net): Nets (positive, negative) in the differential pair.\n\nDifferentialPair.id\n\nint: Unique ID of the EDB object.\n\nDifferentialPair.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nDifferentialPair.is_power_ground\n\nFlag indicating if the new is power/ground.\n\nDifferentialPair.layout\n\nLayout: Layout owning the object.\n\nDifferentialPair.layout_obj_type\n\n\n\nDifferentialPair.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nDifferentialPair.name\n\nstr: Name of the net class.\n\nDifferentialPair.negative_net\n\nNet: Negative net in the differential pair.\n\nDifferentialPair.nets\n\nThis property is invalid for a differential pair.\n\nDifferentialPair.obj_type\n\nLayoutObjType: Layout object type.\n\nDifferentialPair.positive_net\n\nNet: Positive net in the differential pair.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.definition_terminal_name",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.definition_terminal_name.html#definition_terminal_name",
        "title": "definition_terminal_name",
        "section": "definition_terminal_name",
        "text": "str: Name of the definition terminal.\ndefinition_terminal_name\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.definition_terminal_name",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.definition_terminal_name.html#ansys.edb.core.terminal.terminals.TerminalInstance.definition_terminal_name",
        "title": "definition_terminal_name > definition_terminal_name > definition_terminal_name",
        "section": "definition_terminal_name > definition_terminal_name",
        "text": "property TerminalInstance.definition_terminal_name\n\nstr: Name of the definition terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.find_by_id.html#find_by_id",
        "title": "find_by_id",
        "section": "find_by_id",
        "text": "Find a Connectable object by database ID in a given layout.\nLayout to search for the Connectable object.\nDatabase ID.\nConnectable object with the given database ID.\nfind_by_id\nLayout\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.find_by_id.html#ansys.edb.core.terminal.terminals.Terminal.find_by_id",
        "title": "find_by_id > find_by_id > find_by_id",
        "section": "find_by_id > find_by_id",
        "text": "classmethod Terminal.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the Connectable object.\n\nuid\n\npython:int\n\nDatabase ID.\n\nReturns\n\nConnectable\n\nConnectable object with the given database ID.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.html#jedec4bondwiredef",
        "title": "Jedec4BondwireDef",
        "section": "Jedec4BondwireDef",
        "text": "Represents a JEDEC4 bondwire definition.\nJedec4BondwireDef.create(database, name)\nCreate a JEDEC4 bondwire definition.\nJedec4BondwireDef.delete()\nDelete the bondwire definition.\nJedec4BondwireDef.find_by_name(database, name)\nFind a JEDEC4 bondwire definition by name in a given database.\nJedec4BondwireDef.get_parameters()\nGet parameters of the JEDEC4 bondwire definition.\nJedec4BondwireDef.set_parameters(...)\nSet parameters of the JEDEC4 bondwire definition.\nJedec4BondwireDef.bondwire_type\nBondwireDefType: Type of the JEDEC4 bondwire.\nJedec4BondwireDef.definition_type\nDefinitionObjType: Object type of the bondwire definition.\nJedec4BondwireDef.id\nint: Unique ID of the EDB object.\nJedec4BondwireDef.is_null\nbool: Flag indicating if the object exists in the database.\nJedec4BondwireDef.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nJedec4BondwireDef.name\nstr: Name of the bondwire definition.\nJedec4BondwireDef\nJedec4BondwireDef.create\nJedec4BondwireDef.delete\nJedec4BondwireDef.find_by_name\nJedec4BondwireDef.get_parameters\nJedec4BondwireDef.set_parameters\nJedec4BondwireDef.bondwire_type\nBondwireDefType\nJedec4BondwireDef.definition_type\nDefinitionObjType\nJedec4BondwireDef.id\nint\nJedec4BondwireDef.is_null\nbool\nJedec4BondwireDef.msg\nEDBObjMessage\nJedec4BondwireDef.name\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.html#ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef",
        "title": "Jedec4BondwireDef > Jedec4BondwireDef > Jedec4BondwireDef",
        "section": "Jedec4BondwireDef > Jedec4BondwireDef",
        "text": "class ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef(msg)\n\nRepresents a JEDEC4 bondwire definition.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nJedec4BondwireDef.create(database, name)\n\nCreate a JEDEC4 bondwire definition.\n\nJedec4BondwireDef.delete()\n\nDelete the bondwire definition.\n\nJedec4BondwireDef.find_by_name(database, name)\n\nFind a JEDEC4 bondwire definition by name in a given database.\n\nJedec4BondwireDef.get_parameters()\n\nGet parameters of the JEDEC4 bondwire definition.\n\nJedec4BondwireDef.set_parameters(...)\n\nSet parameters of the JEDEC4 bondwire definition.\n\n\n\nAttributes\n\n\n\n\n\n\n\nJedec4BondwireDef.bondwire_type\n\nBondwireDefType: Type of the JEDEC4 bondwire.\n\nJedec4BondwireDef.definition_type\n\nDefinitionObjType: Object type of the bondwire definition.\n\nJedec4BondwireDef.id\n\nint: Unique ID of the EDB object.\n\nJedec4BondwireDef.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nJedec4BondwireDef.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nJedec4BondwireDef.name\n\nstr: Name of the bondwire definition.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_mcad_hfss.html#is_mcad_hfss",
        "title": "is_mcad_hfss",
        "section": "is_mcad_hfss",
        "text": "bool: Flag indicating if this is an HFSS MCAD model.\nThis property is read-only.\nis_mcad_hfss\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_mcad_hfss.html#ansys.edb.core.primitive.primitive.Text.is_mcad_hfss",
        "title": "is_mcad_hfss > is_mcad_hfss > is_mcad_hfss",
        "section": "is_mcad_hfss > is_mcad_hfss",
        "text": "property Text.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.hfss_pi_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.hfss_pi_type.html#hfss_pi_type",
        "title": "hfss_pi_type",
        "section": "hfss_pi_type",
        "text": "HfssPIType: HFSS PI type.\nhfss_pi_type\nHfssPIType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.hfss_pi_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.hfss_pi_type.html#ansys.edb.core.terminal.terminals.BundleTerminal.hfss_pi_type",
        "title": "hfss_pi_type > hfss_pi_type > hfss_pi_type",
        "section": "hfss_pi_type > hfss_pi_type",
        "text": "property BundleTerminal.hfss_pi_type\n\nHfssPIType: HFSS PI type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDs given a product ID for the layout object.\nID representing a product that supports the EDB.\nAll user-defined attribute IDs for properties stored in the object\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.get_product_property_ids.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "TerminalInstanceTerminal.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nReturns\n\npython:list[python:int]\n\nAll user-defined attribute IDs for properties stored in the object\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.id.html#ansys.edb.core.hierarchy.inst_array.InstArray.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property InstArray.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.create",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a stackup layer.\nName of the stackup layer.\nType of the stackup layer.\nThickness of the stackup layer.\nElevation  of the stackup layer.\nMaterial  of the stackup layer.\nStackup layer created.\ncreate\npython:str\nLayerType\npython:str\nStackupLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.create",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.create.html#ansys.edb.core.layer.stackup_layer.StackupLayer.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "static StackupLayer.create(name, layer_type, thickness, elevation, material)\n\nCreate a stackup layer.\n\nParameters\n\nname\n\npython:str\n\nName of the stackup layer.\n\nlayer_type\n\nLayerType\n\nType of the stackup layer.\n\nthickness\n\nValueLike\n\nThickness of the stackup layer.\n\nelevation\n\nValueLike\n\nElevation  of the stackup layer.\n\nmaterial\n\npython:str\n\nMaterial  of the stackup layer.\n\nReturns\n\nStackupLayer\n\nStackup layer created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.find_by_id.html#find_by_id",
        "title": "find_by_id",
        "section": "find_by_id",
        "text": "Find a Connectable object by database ID in a given layout.\nLayout to search for the Connectable object.\nDatabase ID.\nConnectable object with the given database ID.\nfind_by_id\nLayout\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.find_by_id.html#ansys.edb.core.terminal.terminals.PointTerminal.find_by_id",
        "title": "find_by_id > find_by_id > find_by_id",
        "section": "find_by_id > find_by_id",
        "text": "classmethod PointTerminal.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the Connectable object.\n\nuid\n\npython:int\n\nDatabase ID.\n\nReturns\n\nConnectable\n\nConnectable object with the given database ID.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.SourceTermToGroundType.POSITIVE",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.SourceTermToGroundType.POSITIVE.html#positive",
        "title": "POSITIVE",
        "section": "POSITIVE",
        "text": "POSITIVE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.SourceTermToGroundType.POSITIVE",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.SourceTermToGroundType.POSITIVE.html#ansys.edb.core.terminal.terminals.SourceTermToGroundType.POSITIVE",
        "title": "POSITIVE > POSITIVE > POSITIVE",
        "section": "POSITIVE > POSITIVE",
        "text": "SourceTermToGroundType.POSITIVE = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.has_voids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.has_voids.html#has_voids",
        "title": "has_voids",
        "section": "has_voids",
        "text": "bool: Flag indicating if a primitive has voids inside.\nThis property is read-only.\nhas_voids\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.has_voids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.has_voids.html#ansys.edb.core.primitive.primitive.Polygon.has_voids",
        "title": "has_voids > has_voids > has_voids",
        "section": "has_voids > has_voids",
        "text": "property Polygon.has_voids\n\nbool: Flag indicating if a primitive has voids inside.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.component",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.component.html#component",
        "title": "component",
        "section": "component",
        "text": "ComponentGroup:         Component of the Connectable object.\ncomponent\nComponentGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.component",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.component.html#ansys.edb.core.primitive.primitive.Polygon.component",
        "title": "component > component > component",
        "section": "component > component",
        "text": "property Polygon.component\n\nComponentGroup:         Component of the Connectable object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.snap_vias",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.snap_vias.html#snap_vias",
        "title": "snap_vias",
        "section": "snap_vias",
        "text": "Snap vias on the specified layer to touching geometry.\nLayer containing the vias to be snapped.\nTolerance for snapping vias. If snap_by_area_factor is True, this\nvalue should not have a unit.\nTolerance for snapping primitives.\nIf True, the via snapping tolerance is a factor of the surface area of the via.\nIf False, the via snapping tolerance is treated as an absolute distance.\nIf True, vias not connected to any geometry are removed.\nsnap_vias\npython:str\nLayer\nTrue\nTrue\nFalse\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.snap_vias",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.snap_vias.html#ansys.edb.core.layout.layout.Layout.snap_vias",
        "title": "snap_vias > snap_vias > snap_vias",
        "section": "snap_vias > snap_vias",
        "text": "Layout.snap_vias(layer, via_snapping_tol=3, prim_snapping_tol='0.05um', snap_by_area_factor=True, remove_dangling_vias=True)\n\nSnap vias on the specified layer to touching geometry.\n\nParameters\n\nlayer\n\npython:str or Layer\n\nLayer containing the vias to be snapped.\n\nvia_snapping_tol\n\nValueLike\n\nTolerance for snapping vias. If snap_by_area_factor is True, this\nvalue should not have a unit.\n\nprim_snapping_tol\n\nValueLike\n\nTolerance for snapping primitives.\n\nsnap_by_area_factor\n\nbool\n\nIf True, the via snapping tolerance is a factor of the surface area of the via.\nIf False, the via snapping tolerance is treated as an absolute distance.\n\nremove_dangling_vias\n\nbool\n\nIf True, vias not connected to any geometry are removed.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.obj_type",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.obj_type.html#obj_type",
        "title": "obj_type",
        "section": "obj_type",
        "text": "LayoutObjType: Layout object type.\nThis property is read-only.\nobj_type\nLayoutObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.obj_type",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.obj_type.html#ansys.edb.core.net.net.Net.obj_type",
        "title": "obj_type > obj_type > obj_type",
        "section": "obj_type > obj_type",
        "text": "property Net.obj_type\n\nLayoutObjType: Layout object type.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.primitive_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.primitive_type.html#primitive_type",
        "title": "primitive_type",
        "section": "primitive_type",
        "text": "PrimitiveType: Primitive type of the primitive.\nThis property is read-only.\nprimitive_type\nPrimitiveType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.primitive_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.primitive_type.html#ansys.edb.core.primitive.primitive.Circle.primitive_type",
        "title": "primitive_type > primitive_type > primitive_type",
        "section": "primitive_type > primitive_type",
        "text": "property Circle.primitive_type\n\nPrimitiveType: Primitive type of the primitive.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the product property.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.get_product_property.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "TerminalInstanceTerminal.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nReturns\n\npython:str\n\nString stored in the product property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior.ZERO_DC",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior.ZERO_DC.html#zero_dc",
        "title": "ZERO_DC",
        "section": "ZERO_DC",
        "text": "ZERO_DC"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior.ZERO_DC",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior.ZERO_DC.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior.ZERO_DC",
        "title": "ZERO_DC > ZERO_DC > ZERO_DC",
        "section": "ZERO_DC > ZERO_DC",
        "text": "SParamDCBehavior.ZERO_DC = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.name",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the hierarchy object.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.name",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.name.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property ComponentGroup.name\n\nstr: Name of the hierarchy object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.TopBottomAssociation.TOP_ASSOCIATED",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.TopBottomAssociation.TOP_ASSOCIATED.html#top_associated",
        "title": "TOP_ASSOCIATED",
        "section": "TOP_ASSOCIATED",
        "text": "TOP_ASSOCIATED"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.TopBottomAssociation.TOP_ASSOCIATED",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.TopBottomAssociation.TOP_ASSOCIATED.html#ansys.edb.core.layer.layer.TopBottomAssociation.TOP_ASSOCIATED",
        "title": "TOP_ASSOCIATED > TOP_ASSOCIATED > TOP_ASSOCIATED",
        "section": "TOP_ASSOCIATED > TOP_ASSOCIATED",
        "text": "TopBottomAssociation.TOP_ASSOCIATED = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.set_modeled",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.set_modeled.html#set_modeled",
        "title": "set_modeled",
        "section": "set_modeled",
        "text": "Set if an MCAD model part at a given index is to be modeled.\nIndex of the MCAD model part.\nWhether to model the MCAD model part.\nset_modeled\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.set_modeled",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.set_modeled.html#ansys.edb.core.layout.mcad_model.McadModel.set_modeled",
        "title": "set_modeled > set_modeled > set_modeled",
        "section": "set_modeled > set_modeled",
        "text": "McadModel.set_modeled(index, modeled)\n\nSet if an MCAD model part at a given index is to be modeled.\n\nParameters\n\nindex\n\npython:int\n\nIndex of the MCAD model part.\n\nmodeled\n\nbool\n\nWhether to model the MCAD model part.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.PowerModule.relative_strength",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.PowerModule.relative_strength.html#relative_strength",
        "title": "relative_strength",
        "section": "relative_strength",
        "text": "Value: Relative strength for the power module as a percentage.\nThis property can be set with ValueLike.\nrelative_strength\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.PowerModule.relative_strength",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.PowerModule.relative_strength.html#ansys.edb.core.layout.voltage_regulator.PowerModule.relative_strength",
        "title": "relative_strength > relative_strength > relative_strength",
        "section": "relative_strength > relative_strength",
        "text": "property PowerModule.relative_strength\n\nValue: Relative strength for the power module as a percentage.\n\nThis property can be set with ValueLike.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.layout_component.LayoutComponent.import_layout_component",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.layout_component.LayoutComponent.import_layout_component.html#import_layout_component",
        "title": "import_layout_component",
        "section": "import_layout_component",
        "text": "Import a layout component from the .aedbcomp file at the specified file path into the provided layout.\nLayout the layout component will be imported into.\nFile path of the .aedbcomp file to import the layout component from.\nImported layout component\nimport_layout_component\nLayout\npython:str\nLayoutComponent"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.layout_component.LayoutComponent.import_layout_component",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.layout_component.LayoutComponent.import_layout_component.html#ansys.edb.core.hierarchy.layout_component.LayoutComponent.import_layout_component",
        "title": "import_layout_component > import_layout_component > import_layout_component",
        "section": "import_layout_component > import_layout_component",
        "text": "classmethod LayoutComponent.import_layout_component(layout, aedb_comp_path)\n\nImport a layout component from the .aedbcomp file at the specified file path into the provided layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout the layout component will be imported into.\n\naedb_comp_path\n\npython:str\n\nFile path of the .aedbcomp file to import the layout component from.\n\nReturns\n\nLayoutComponent\n\nImported layout component\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel.create",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a dynamic link component model.\nName of the dynamic link component model.\nDynamic link component model created.\nThe component model does not belong to a specific database until it is added to a\nComponentDef class.\ncreate\npython:str\nDynamicLinkComponentModel\nComponentDef"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel.create",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel.create.html#ansys.edb.core.definition.component_model.DynamicLinkComponentModel.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod DynamicLinkComponentModel.create(name)\n\nCreate a dynamic link component model.\n\nParameters\n\nname\n\npython:str\n\nName of the dynamic link component model.\n\nReturns\n\nDynamicLinkComponentModel\n\nDynamic link component model created.\n\nNotes\n\nThe component model does not belong to a specific database until it is added to a\nComponentDef class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BackDrillType",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BackDrillType.html#backdrilltype",
        "title": "BackDrillType",
        "section": "BackDrillType",
        "text": "Provides an enum representing back drill types.\nBackDrillType.NO_DRILL\n\nBackDrillType.LAYER_DRILL\n\nBackDrillType.DEPTH_DRILL\n\nBackDrillType\nBackDrillType.NO_DRILL\nBackDrillType.LAYER_DRILL\nBackDrillType.DEPTH_DRILL"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BackDrillType",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BackDrillType.html#ansys.edb.core.primitive.primitive.BackDrillType",
        "title": "BackDrillType > BackDrillType > BackDrillType",
        "section": "BackDrillType > BackDrillType",
        "text": "class ansys.edb.core.primitive.primitive.BackDrillType(value)\n\nProvides an enum representing back drill types.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nBackDrillType.NO_DRILL\n\n\n\nBackDrillType.LAYER_DRILL\n\n\n\nBackDrillType.DEPTH_DRILL\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.rlc_boundary_parameters",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.rlc_boundary_parameters.html#rlc_boundary_parameters",
        "title": "rlc_boundary_parameters",
        "section": "rlc_boundary_parameters",
        "text": "Rlc: RLC boundary parameters.\nrlc_boundary_parameters\nRlc"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.rlc_boundary_parameters",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.rlc_boundary_parameters.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.rlc_boundary_parameters",
        "title": "rlc_boundary_parameters > rlc_boundary_parameters > rlc_boundary_parameters",
        "section": "rlc_boundary_parameters > rlc_boundary_parameters",
        "text": "property PinGroupTerminal.rlc_boundary_parameters\n\nRlc: RLC boundary parameters.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.transform_point",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.transform_point.html#transform_point",
        "title": "transform_point",
        "section": "transform_point",
        "text": "Get the transform point of the 3D transformation.\nTransform point.\ntransform_point"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.transform_point",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.transform_point.html#ansys.edb.core.utility.transform3d.Transform3D.transform_point",
        "title": "transform_point > transform_point > transform_point",
        "section": "transform_point > transform_point",
        "text": "Transform3D.transform_point(point)\n\nGet the transform point of the 3D transformation.\n\nParameters\n\npoint\n\nPoint3DLike\n\n\n\nReturns\n\nPoint3DLike\n\nTransform point.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.name",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the terminal.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.name",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.name.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property PinGroupTerminal.name\n\nstr: Name of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.edb_uid.html#edb_uid",
        "title": "edb_uid",
        "section": "edb_uid",
        "text": "int: Unique, persistent ID for the Connectable object.\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\nThis property is read-only.\nedb_uid\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.edb_uid.html#ansys.edb.core.hierarchy.inst_array.InstArray.edb_uid",
        "title": "edb_uid > edb_uid > edb_uid",
        "section": "edb_uid > edb_uid",
        "text": "property InstArray.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.name",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the layer.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.name",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.name.html#ansys.edb.core.layer.stackup_layer.StackupLayer.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property StackupLayer.name\n\nstr: Name of the layer.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.padstack_def",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.padstack_def.html#padstack_def",
        "title": "padstack_def",
        "section": "padstack_def",
        "text": "PadstackDef:         Definition of the padstack instance.\npadstack_def\nPadstackDef"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.padstack_def",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.padstack_def.html#ansys.edb.core.primitive.primitive.PadstackInstance.padstack_def",
        "title": "padstack_def > padstack_def > padstack_def",
        "section": "padstack_def > padstack_def",
        "text": "property PadstackInstance.padstack_def\n\nPadstackDef:         Definition of the padstack instance.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.refine_inside",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.refine_inside.html#refine_inside",
        "title": "refine_inside",
        "section": "refine_inside",
        "text": "bool: Flag indicating if refining inside is enabled.\nrefine_inside\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.refine_inside",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.refine_inside.html#ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.refine_inside",
        "title": "refine_inside > refine_inside > refine_inside",
        "section": "refine_inside > refine_inside",
        "text": "property SkinDepthMeshOperation.refine_inside\n\nbool: Flag indicating if refining inside is enabled.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.value.Value.double",
        "href": "api/_autosummary/ansys.edb.core.utility.value.Value.double.html#double",
        "title": "double",
        "section": "double",
        "text": "float: Float from the value object.\nIf the number is complex, this returns the real part.\ndouble\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.value.Value.double",
        "href": "api/_autosummary/ansys.edb.core.utility.value.Value.double.html#ansys.edb.core.utility.value.Value.double",
        "title": "double > double > double",
        "section": "double > double",
        "text": "property Value.double\n\nfloat: Float from the value object.\n\nIf the number is complex, this returns the real part.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap",
        "href": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap.html#layermap",
        "title": "LayerMap",
        "section": "LayerMap",
        "text": "Represents a two-way layer map where the key and value is the layer ID.\nLayerMap.clear()\nClear the entrties of the layer map.\nLayerMap.create(direction)\nCreate a layer map object.\nLayerMap.get_mapping_backward(layer_id)\nGet a list of IDs mapped backward with the given ID (value).\nLayerMap.get_mapping_forward(layer_id)\nGet the list of IDs mapped forward with the given ID (key).\nLayerMap.set_mapping(from_id, to_id)\nCreate an entry in the layer map object.\nLayerMap.id\nint: Unique ID of the EDB object.\nLayerMap.is_null\nbool: Flag indicating if the object exists in the database.\nLayerMap.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nLayerMap\nLayerMap.clear\nLayerMap.create\nLayerMap.get_mapping_backward\nLayerMap.get_mapping_forward\nLayerMap.set_mapping\nLayerMap.id\nint\nLayerMap.is_null\nbool\nLayerMap.msg\nEDBObjMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap",
        "href": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap.html#ansys.edb.core.utility.layer_map.LayerMap",
        "title": "LayerMap > LayerMap > LayerMap",
        "section": "LayerMap > LayerMap",
        "text": "class ansys.edb.core.utility.layer_map.LayerMap(msg)\n\nRepresents a two-way layer map where the key and value is the layer ID.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nLayerMap.clear()\n\nClear the entrties of the layer map.\n\nLayerMap.create(direction)\n\nCreate a layer map object.\n\nLayerMap.get_mapping_backward(layer_id)\n\nGet a list of IDs mapped backward with the given ID (value).\n\nLayerMap.get_mapping_forward(layer_id)\n\nGet the list of IDs mapped forward with the given ID (key).\n\nLayerMap.set_mapping(from_id, to_id)\n\nCreate an entry in the layer map object.\n\n\n\nAttributes\n\n\n\n\n\n\n\nLayerMap.id\n\nint: Unique ID of the EDB object.\n\nLayerMap.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nLayerMap.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.create_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.create_stride.html#create_stride",
        "title": "create_stride",
        "section": "create_stride",
        "text": "Create a Stride model from an MCAD file.\nStride model created.\ncreate_stride\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.create_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.create_stride.html#ansys.edb.core.primitive.primitive.BoardBendDef.create_stride",
        "title": "create_stride > create_stride > create_stride",
        "section": "create_stride > create_stride",
        "text": "BoardBendDef.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nReturns\n\nMcadModel\n\nStride model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.use_gold_em_solver",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.use_gold_em_solver.html#use_gold_em_solver",
        "title": "use_gold_em_solver",
        "section": "use_gold_em_solver",
        "text": "bool: Flag indicating if the gold em solver is used. If False,         the fast em solver is used.\nuse_gold_em_solver\nbool\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.use_gold_em_solver",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.use_gold_em_solver.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.use_gold_em_solver",
        "title": "use_gold_em_solver > use_gold_em_solver > use_gold_em_solver",
        "section": "use_gold_em_solver > use_gold_em_solver",
        "text": "property RaptorXGeneralSettings.use_gold_em_solver\n\nbool: Flag indicating if the gold em solver is used. If False,         the fast em solver is used.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.create",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a non-stackup layer.\nLayer name.\nLayer type.\ncreate\npython:str\nLayerType\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.create",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.create.html#ansys.edb.core.layer.layer.Layer.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "static Layer.create(name, lyr_type)\n\nCreate a non-stackup layer.\n\nParameters\n\nname\n\npython:str\n\nLayer name.\n\nlyr_type\n\nLayerType\n\nLayer type.\n\nReturns\n\nLayer\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.create_hfss.html#create_hfss",
        "title": "create_hfss",
        "section": "create_hfss",
        "text": "Create an HFSS model from an MCAD file.\nHFSS model created.\ncreate_hfss\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.create_hfss.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.create_hfss",
        "title": "create_hfss > create_hfss > create_hfss",
        "section": "create_hfss > create_hfss",
        "text": "PadstackInstanceTerminal.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nReturns\n\nMcadModel\n\nHFSS model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.html#padedge",
        "title": "PadEdge",
        "section": "PadEdge",
        "text": "Represents a padstack edge.\nPadEdge.cast()\nCast the base edge object to the correct subclass, if possible.\nPadEdge.create(padstack_instance, layer, arc)\nCreate a padstack edge.\nPadEdge.arc\nArcData: Arc of the edge.\nPadEdge.id\nint: Unique ID of the EDB object.\nPadEdge.is_null\nbool: Flag indicating if the object exists in the database.\nPadEdge.layer\nLayer: Layer that the edge is on.\nPadEdge.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nPadEdge.padstack_instance\nPadstackInstance: Padstack instance that the edge is on.\nPadEdge.type\n\nPadEdge\nPadEdge.cast\nPadEdge.create\nPadEdge.arc\nArcData\nPadEdge.id\nint\nPadEdge.is_null\nbool\nPadEdge.layer\nLayer\nPadEdge.msg\nEDBObjMessage\nPadEdge.padstack_instance\nPadstackInstance\nPadEdge.type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.html#ansys.edb.core.terminal.terminals.PadEdge",
        "title": "PadEdge > PadEdge > PadEdge",
        "section": "PadEdge > PadEdge",
        "text": "class ansys.edb.core.terminal.terminals.PadEdge(msg)\n\nRepresents a padstack edge.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nPadEdge.cast()\n\nCast the base edge object to the correct subclass, if possible.\n\nPadEdge.create(padstack_instance, layer, arc)\n\nCreate a padstack edge.\n\n\n\nAttributes\n\n\n\n\n\n\n\nPadEdge.arc\n\nArcData: Arc of the edge.\n\nPadEdge.id\n\nint: Unique ID of the EDB object.\n\nPadEdge.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nPadEdge.layer\n\nLayer: Layer that the edge is on.\n\nPadEdge.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nPadEdge.padstack_instance\n\nPadstackInstance: Padstack instance that the edge is on.\n\nPadEdge.type\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product property of the layer for a given product ID and attribute ID.\nProduct ID.\nAttribute ID.\nProduct property.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.get_product_property.html#ansys.edb.core.layer.stackup_layer.StackupLayer.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "StackupLayer.get_product_property(prod_id, attr_it)\n\nGet the product property of the layer for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nProduct ID.\n\nattr_it\n\npython:int\n\nAttribute ID.\n\nReturns\n\npython:str\n\nProduct property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.is_stackup_layer",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.is_stackup_layer.html#is_stackup_layer",
        "title": "is_stackup_layer",
        "section": "is_stackup_layer",
        "text": "bool: Flag indicating if the layer is a StackupLayer instance.\nThis property is read-only.\nis_stackup_layer\nbool\nStackupLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.is_stackup_layer",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.is_stackup_layer.html#ansys.edb.core.layer.via_layer.ViaLayer.is_stackup_layer",
        "title": "is_stackup_layer > is_stackup_layer > is_stackup_layer",
        "section": "is_stackup_layer > is_stackup_layer",
        "text": "property ViaLayer.is_stackup_layer\n\nbool: Flag indicating if the layer is a StackupLayer instance.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.html#bundleterminal",
        "title": "BundleTerminal",
        "section": "BundleTerminal",
        "text": "Represents a bundle terminal object.\nBundleTerminal.cast([term_type])\nCast the terminal object to the correct concrete type, fetching the type if necessary.\nBundleTerminal.create(terminals)\nCreate a bundle terminal.\nBundleTerminal.create_3d_comp()\nCreate a 3D composite model from an MCAD file.\nBundleTerminal.create_hfss()\nCreate an HFSS model from an MCAD file.\nBundleTerminal.create_stride()\nCreate a Stride model from an MCAD file.\nBundleTerminal.delete()\nDelete the layout object.\nBundleTerminal.find(layout, name)\nFind a terminal by name in a given layout.\nBundleTerminal.find_by_id(layout, uid)\nFind a Connectable object by database ID in a given layout.\nBundleTerminal.get_product_property(prod_id, ...)\nGet the product property of the layout object for a given product ID and attribute ID.\nBundleTerminal.get_product_property_ids(prod_id)\nGet a list of attribute IDs given a product ID for the layout object.\nBundleTerminal.product_solver_names(product_id)\nGet the list of solver names.\nBundleTerminal.product_solver_option(...)\nGet the name of the product solver option.\nBundleTerminal.set_product_property(prod_id, ...)\nSet the product property of the layout object for a given product ID and attribute ID.\nBundleTerminal.set_product_solver_option(...)\nSet the product solver option.\nBundleTerminal.ungroup()\nDelete the grouping.\nBundleTerminal.boundary_type\nBoundaryType: Boundary type of the terminal.\nBundleTerminal.bundle_terminal\nBundleTerminal: Bundle terminal that the terminal belongs to, if any.\nBundleTerminal.component\nComponentGroup:         Component of the Connectable object.\nBundleTerminal.edb_uid\nint: Unique, persistent ID for the Connectable object.\nBundleTerminal.group\nGroup object.\nBundleTerminal.hfss_pi_type\nHfssPIType: HFSS PI type.\nBundleTerminal.id\nint: Unique ID of the EDB object.\nBundleTerminal.impedance\nValue: Impedance of the terminal.\nBundleTerminal.is_auto_port\nbool: Flag indicating if the terminal is an auto port.\nBundleTerminal.is_circuit_port\nbool: Flag indicating if the terminal is a circuit port.\nBundleTerminal.is_interface_terminal\nbool: Flag indicating if the terminal is an interface.\nBundleTerminal.is_mcad\nbool: Flag indicating if this is an MCAD model.\nBundleTerminal.is_mcad_3d_comp\nbool: Flag indicating if this is a 3D composite MCAD model.\nBundleTerminal.is_mcad_hfss\nbool: Flag indicating if this is an HFSS MCAD model.\nBundleTerminal.is_mcad_stride\nbool: Flag indicating if this is a Stride MCAD model.\nBundleTerminal.is_null\nbool: Flag indicating if the object exists in the database.\nBundleTerminal.is_reference_terminal\nbool: Flag indicating if the terminal is a reference terminal.\nBundleTerminal.layout\nLayout: Layout owning the object.\nBundleTerminal.layout_obj_type\n\nBundleTerminal.model\nstr: S-parameter model.\nBundleTerminal.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nBundleTerminal.name\nstr: Name of the terminal.\nBundleTerminal.net\nNet: Net of the Connectable object.\nBundleTerminal.obj_type\nLayoutObjType: Layout object type.\nBundleTerminal.port_post_processing_prop\nPortPostProcessingProp: Port postprocessing properties.\nBundleTerminal.reference_layer\nLayer: Layer that the terminal references, if any, by either layer object or name.\nBundleTerminal.reference_terminal\nTerminal: Terminal that the terminal references, if any.\nBundleTerminal.rlc_boundary_parameters\nRlc: RLC boundary parameters.\nBundleTerminal.source_amplitude\nValue: Source amplitude of the terminal.\nBundleTerminal.source_phase\nValue: Source phase of the terminal.\nBundleTerminal.term_to_ground\nSourceTermToGroundType: Source terminal-to-ground type.\nBundleTerminal.terminals\nlist of Terminal: All terminals grouped in the terminal.\nBundleTerminal.type\n\nBundleTerminal.use_reference_from_hierarchy\nbool: Flag indicating if the terminal can use references from the hierarchy.\nBundleTerminal\nBundleTerminal.cast\nBundleTerminal.create\nBundleTerminal.create_3d_comp\nBundleTerminal.create_hfss\nBundleTerminal.create_stride\nBundleTerminal.delete\nBundleTerminal.find\nBundleTerminal.find_by_id\nBundleTerminal.get_product_property\nBundleTerminal.get_product_property_ids\nBundleTerminal.product_solver_names\nBundleTerminal.product_solver_option\nBundleTerminal.set_product_property\nBundleTerminal.set_product_solver_option\nBundleTerminal.ungroup\nBundleTerminal.boundary_type\nBoundaryType\nBundleTerminal.bundle_terminal\nBundleTerminal\nBundleTerminal.component\nComponentGroup\nBundleTerminal.edb_uid\nint\nBundleTerminal.group\nGroup\nBundleTerminal.hfss_pi_type\nHfssPIType\nBundleTerminal.id\nint\nBundleTerminal.impedance\nValue\nBundleTerminal.is_auto_port\nbool\nBundleTerminal.is_circuit_port\nbool\nBundleTerminal.is_interface_terminal\nbool\nBundleTerminal.is_mcad\nbool\nBundleTerminal.is_mcad_3d_comp\nbool\nBundleTerminal.is_mcad_hfss\nbool\nBundleTerminal.is_mcad_stride\nbool\nBundleTerminal.is_null\nbool\nBundleTerminal.is_reference_terminal\nbool\nBundleTerminal.layout\nLayout\nBundleTerminal.layout_obj_type\nBundleTerminal.model\nstr\nBundleTerminal.msg\nEDBObjMessage\nBundleTerminal.name\nstr\nBundleTerminal.net\nNet\nBundleTerminal.obj_type\nLayoutObjType\nBundleTerminal.port_post_processing_prop\nPortPostProcessingProp\nBundleTerminal.reference_layer\nLayer\nBundleTerminal.reference_terminal\nTerminal\nBundleTerminal.rlc_boundary_parameters\nRlc\nBundleTerminal.source_amplitude\nValue\nBundleTerminal.source_phase\nValue\nBundleTerminal.term_to_ground\nSourceTermToGroundType\nBundleTerminal.terminals\nlist\nBundleTerminal.type\nBundleTerminal.use_reference_from_hierarchy\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.html#ansys.edb.core.terminal.terminals.BundleTerminal",
        "title": "BundleTerminal > BundleTerminal > BundleTerminal",
        "section": "BundleTerminal > BundleTerminal",
        "text": "class ansys.edb.core.terminal.terminals.BundleTerminal(msg)\n\nRepresents a bundle terminal object.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nBundleTerminal.cast([term_type])\n\nCast the terminal object to the correct concrete type, fetching the type if necessary.\n\nBundleTerminal.create(terminals)\n\nCreate a bundle terminal.\n\nBundleTerminal.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nBundleTerminal.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nBundleTerminal.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nBundleTerminal.delete()\n\nDelete the layout object.\n\nBundleTerminal.find(layout, name)\n\nFind a terminal by name in a given layout.\n\nBundleTerminal.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nBundleTerminal.get_product_property(prod_id, ...)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nBundleTerminal.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nBundleTerminal.product_solver_names(product_id)\n\nGet the list of solver names.\n\nBundleTerminal.product_solver_option(...)\n\nGet the name of the product solver option.\n\nBundleTerminal.set_product_property(prod_id, ...)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nBundleTerminal.set_product_solver_option(...)\n\nSet the product solver option.\n\nBundleTerminal.ungroup()\n\nDelete the grouping.\n\n\n\nAttributes\n\n\n\n\n\n\n\nBundleTerminal.boundary_type\n\nBoundaryType: Boundary type of the terminal.\n\nBundleTerminal.bundle_terminal\n\nBundleTerminal: Bundle terminal that the terminal belongs to, if any.\n\nBundleTerminal.component\n\nComponentGroup:         Component of the Connectable object.\n\nBundleTerminal.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nBundleTerminal.group\n\nGroup object.\n\nBundleTerminal.hfss_pi_type\n\nHfssPIType: HFSS PI type.\n\nBundleTerminal.id\n\nint: Unique ID of the EDB object.\n\nBundleTerminal.impedance\n\nValue: Impedance of the terminal.\n\nBundleTerminal.is_auto_port\n\nbool: Flag indicating if the terminal is an auto port.\n\nBundleTerminal.is_circuit_port\n\nbool: Flag indicating if the terminal is a circuit port.\n\nBundleTerminal.is_interface_terminal\n\nbool: Flag indicating if the terminal is an interface.\n\nBundleTerminal.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nBundleTerminal.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nBundleTerminal.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nBundleTerminal.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nBundleTerminal.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nBundleTerminal.is_reference_terminal\n\nbool: Flag indicating if the terminal is a reference terminal.\n\nBundleTerminal.layout\n\nLayout: Layout owning the object.\n\nBundleTerminal.layout_obj_type\n\n\n\nBundleTerminal.model\n\nstr: S-parameter model.\n\nBundleTerminal.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nBundleTerminal.name\n\nstr: Name of the terminal.\n\nBundleTerminal.net\n\nNet: Net of the Connectable object.\n\nBundleTerminal.obj_type\n\nLayoutObjType: Layout object type.\n\nBundleTerminal.port_post_processing_prop\n\nPortPostProcessingProp: Port postprocessing properties.\n\nBundleTerminal.reference_layer\n\nLayer: Layer that the terminal references, if any, by either layer object or name.\n\nBundleTerminal.reference_terminal\n\nTerminal: Terminal that the terminal references, if any.\n\nBundleTerminal.rlc_boundary_parameters\n\nRlc: RLC boundary parameters.\n\nBundleTerminal.source_amplitude\n\nValue: Source amplitude of the terminal.\n\nBundleTerminal.source_phase\n\nValue: Source phase of the terminal.\n\nBundleTerminal.term_to_ground\n\nSourceTermToGroundType: Source terminal-to-ground type.\n\nBundleTerminal.terminals\n\nlist of Terminal: All terminals grouped in the terminal.\n\nBundleTerminal.type\n\n\n\nBundleTerminal.use_reference_from_hierarchy\n\nbool: Flag indicating if the terminal can use references from the hierarchy.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.is_null.html#ansys.edb.core.definition.ic_component_property.ICComponentProperty.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property ICComponentProperty.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.cross",
        "href": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.cross.html#cross",
        "title": "cross",
        "section": "cross",
        "text": "Compute the cross product of the point vector with another point vector.\nOther point vector.\ncross\nansys.edb.core.typing.PointLike\ntyping.Optional\nValue\nor\nNone\nif\neither\npoint\nis\nan"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.cross",
        "href": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.cross.html#ansys.edb.core.geometry.point_data.PointData.cross",
        "title": "cross > cross > cross",
        "section": "cross > cross",
        "text": "PointData.cross(other)\n\nCompute the cross product of the point vector with another point vector.\n\nParameters\n\nother\n\nansys.edb.core.typing.PointLike\n\nOther point vector.\n\nReturns\n\ntyping.Optional[Value] or None if either point is an arc.\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.top_bottom_association",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.top_bottom_association.html#top_bottom_association",
        "title": "top_bottom_association",
        "section": "top_bottom_association",
        "text": "TopBottomAssociation: Top-bottom association of the layer.\ntop_bottom_association\nTopBottomAssociation"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.top_bottom_association",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.top_bottom_association.html#ansys.edb.core.layer.stackup_layer.StackupLayer.top_bottom_association",
        "title": "top_bottom_association > top_bottom_association > top_bottom_association",
        "section": "top_bottom_association > top_bottom_association",
        "text": "property StackupLayer.top_bottom_association\n\nTopBottomAssociation: Top-bottom association of the layer.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.id.html#ansys.edb.core.primitive.primitive.BoardBendDef.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property BoardBendDef.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.AIRLINES_LAYER",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.AIRLINES_LAYER.html#airlines_layer",
        "title": "AIRLINES_LAYER",
        "section": "AIRLINES_LAYER",
        "text": "AIRLINES_LAYER"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.AIRLINES_LAYER",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.AIRLINES_LAYER.html#ansys.edb.core.layer.layer_collection.LayerType.AIRLINES_LAYER",
        "title": "AIRLINES_LAYER > AIRLINES_LAYER > AIRLINES_LAYER",
        "section": "AIRLINES_LAYER > AIRLINES_LAYER",
        "text": "LayerType.AIRLINES_LAYER = 3\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.get_all_power_modules",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.get_all_power_modules.html#get_all_power_modules",
        "title": "get_all_power_modules",
        "section": "get_all_power_modules",
        "text": "Get all power modules in the voltage regulator.\nList of all power modules.\nget_all_power_modules\npython:list\nPowerModule"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.get_all_power_modules",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.get_all_power_modules.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.get_all_power_modules",
        "title": "get_all_power_modules > get_all_power_modules > get_all_power_modules",
        "section": "get_all_power_modules > get_all_power_modules",
        "text": "VoltageRegulator.get_all_power_modules()\n\nGet all power modules in the voltage regulator.\n\nReturns\n\npython:list[PowerModule]\n\nList of all power modules.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.per_pin_use_pin_format",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.per_pin_use_pin_format.html#per_pin_use_pin_format",
        "title": "per_pin_use_pin_format",
        "section": "per_pin_use_pin_format",
        "text": "bool: Flag indicating if the per pin uses the pin format.\nper_pin_use_pin_format\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.per_pin_use_pin_format",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.per_pin_use_pin_format.html#ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.per_pin_use_pin_format",
        "title": "per_pin_use_pin_format > per_pin_use_pin_format > per_pin_use_pin_format",
        "section": "per_pin_use_pin_format > per_pin_use_pin_format",
        "text": "property SIWaveDCIRSimulationSettings.per_pin_use_pin_format\n\nbool: Flag indicating if the per pin uses the pin format.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.get_anisotropic_thermal_modifier",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.get_anisotropic_thermal_modifier.html#get_anisotropic_thermal_modifier",
        "title": "get_anisotropic_thermal_modifier",
        "section": "get_anisotropic_thermal_modifier",
        "text": "Get the anisotropic thermal modifier of a given material definition.\nProperty ID.\nComponent ID.\nAnisotropic thermal modifier of the material definition.\nget_anisotropic_thermal_modifier\nMaterialProperty\npython:int\nThermalModifier"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.get_anisotropic_thermal_modifier",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.get_anisotropic_thermal_modifier.html#ansys.edb.core.definition.material_def.MaterialDef.get_anisotropic_thermal_modifier",
        "title": "get_anisotropic_thermal_modifier > get_anisotropic_thermal_modifier > get_anisotropic_thermal_modifier",
        "section": "get_anisotropic_thermal_modifier > get_anisotropic_thermal_modifier",
        "text": "MaterialDef.get_anisotropic_thermal_modifier(material_property_id, component_id)\n\nGet the anisotropic thermal modifier of a given material definition.\n\nParameters\n\nmaterial_property_id\n\nMaterialProperty\n\nProperty ID.\n\ncomponent_id\n\npython:int\n\nComponent ID.\n\nReturns\n\nThermalModifier\n\nAnisotropic thermal modifier of the material definition.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.members",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.members.html#members",
        "title": "members",
        "section": "members",
        "text": "list of Connectables: All group members.\nThis property is read-only.\nmembers\nlist"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.members",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.members.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.members",
        "title": "members > members > members",
        "section": "members > members",
        "text": "property ComponentGroup.members\n\nlist of Connectables: All group members.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.params",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.params.html#params",
        "title": "params",
        "section": "params",
        "text": "Layer, PointData: Layer that the point terminal is placed on and         the (x, y) coordinates.\nparams\nLayer\nPointData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.params",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.params.html#ansys.edb.core.terminal.terminals.PointTerminal.params",
        "title": "params > params > params",
        "section": "params > params",
        "text": "property PointTerminal.params\n\nLayer, PointData: Layer that the point terminal is placed on and         the (x, y) coordinates.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.is_mcad_3d_comp.html#is_mcad_3d_comp",
        "title": "is_mcad_3d_comp",
        "section": "is_mcad_3d_comp",
        "text": "bool: Flag indicating if this is a 3D composite MCAD model.\nThis property is read-only.\nis_mcad_3d_comp\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.is_mcad_3d_comp.html#ansys.edb.core.hierarchy.via_group.ViaGroup.is_mcad_3d_comp",
        "title": "is_mcad_3d_comp > is_mcad_3d_comp > is_mcad_3d_comp",
        "section": "is_mcad_3d_comp > is_mcad_3d_comp",
        "text": "property ViaGroup.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.layout_obj",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.layout_obj.html#layout_obj",
        "title": "layout_obj",
        "section": "layout_obj",
        "text": "Connectable: Definition layout object that the layout object         instance is an instance of.\nThis property is read-only.\nlayout_obj"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.layout_obj",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.layout_obj.html#ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.layout_obj",
        "title": "layout_obj > layout_obj > layout_obj",
        "section": "layout_obj > layout_obj",
        "text": "property LayoutObjInstance.layout_obj\n\nConnectable: Definition layout object that the layout object         instance is an instance of.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.sense",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.sense.html#sense",
        "title": "sense",
        "section": "sense",
        "text": "PolygonSenseType: Polygon sense type.\nsense\nPolygonSenseType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.sense",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.sense.html#ansys.edb.core.geometry.polygon_data.PolygonData.sense",
        "title": "sense > sense > sense",
        "section": "sense > sense",
        "text": "property PolygonData.sense\n\nPolygonSenseType: Polygon sense type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.bbox",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.bbox.html#bbox",
        "title": "bbox",
        "section": "bbox",
        "text": "PolygonData: Rectangular bounding box of the arc.\nbbox\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.bbox",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.bbox.html#ansys.edb.core.geometry.arc_data.ArcData.bbox",
        "title": "bbox > bbox > bbox",
        "section": "bbox > bbox",
        "text": "property ArcData.bbox\n\nPolygonData: Rectangular bounding box of the arc.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentType.INDUCTOR",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentType.INDUCTOR.html#inductor",
        "title": "INDUCTOR",
        "section": "INDUCTOR",
        "text": "INDUCTOR"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentType.INDUCTOR",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentType.INDUCTOR.html#ansys.edb.core.hierarchy.component_group.ComponentType.INDUCTOR",
        "title": "INDUCTOR > INDUCTOR > INDUCTOR",
        "section": "INDUCTOR > INDUCTOR",
        "text": "ComponentType.INDUCTOR = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents this object’s ID.\nThis property is read-only.\nmsg\nEDBObjMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.msg.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property HFSSSettingsOptions.msg\n\nEDBObjMessage: Protobuf message that represents this object’s ID.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.id",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.id",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.id.html#ansys.edb.core.definition.material_def.MaterialDef.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property MaterialDef.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.FreqSweepType.INTERPOLATING_SWEEP",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.FreqSweepType.INTERPOLATING_SWEEP.html#interpolating_sweep",
        "title": "INTERPOLATING_SWEEP",
        "section": "INTERPOLATING_SWEEP",
        "text": "INTERPOLATING_SWEEP"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.FreqSweepType.INTERPOLATING_SWEEP",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.FreqSweepType.INTERPOLATING_SWEEP.html#ansys.edb.core.simulation_setup.simulation_setup.FreqSweepType.INTERPOLATING_SWEEP",
        "title": "INTERPOLATING_SWEEP > INTERPOLATING_SWEEP > INTERPOLATING_SWEEP",
        "section": "INTERPOLATING_SWEEP > INTERPOLATING_SWEEP",
        "text": "FreqSweepType.INTERPOLATING_SWEEP = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.group",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.group.html#group",
        "title": "group",
        "section": "group",
        "text": "Group object.\ngroup\nGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.group",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.group.html#ansys.edb.core.terminal.terminals.BundleTerminal.group",
        "title": "group > group > group",
        "section": "group > group",
        "text": "property BundleTerminal.group\n\nGroup object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.component",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.component.html#component",
        "title": "component",
        "section": "component",
        "text": "ComponentGroup:         Component of the Connectable object.\ncomponent\nComponentGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.component",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.component.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.component",
        "title": "component > component > component",
        "section": "component > component",
        "text": "property PinGroupTerminal.component\n\nComponentGroup:         Component of the Connectable object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.msg.html#ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property MultipoleDebyeModel.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.term_to_ground",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.term_to_ground.html#term_to_ground",
        "title": "term_to_ground",
        "section": "term_to_ground",
        "text": "SourceTermToGroundType: Source terminal-to-ground type.\nterm_to_ground\nSourceTermToGroundType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.term_to_ground",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.term_to_ground.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.term_to_ground",
        "title": "term_to_ground > term_to_ground > term_to_ground",
        "section": "term_to_ground > term_to_ground",
        "text": "property PadstackInstanceTerminal.term_to_ground\n\nSourceTermToGroundType: Source terminal-to-ground type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.get_fill_material",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.get_fill_material.html#get_fill_material",
        "title": "get_fill_material",
        "section": "get_fill_material",
        "text": "Get the name of the fill material of the layer.\nWhether to evaluate the material if it is parameterized.\nName of the fill material.\nget_fill_material\npython:True\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.get_fill_material",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.get_fill_material.html#ansys.edb.core.layer.via_layer.ViaLayer.get_fill_material",
        "title": "get_fill_material > get_fill_material > get_fill_material",
        "section": "get_fill_material > get_fill_material",
        "text": "ViaLayer.get_fill_material(evaluated=True)\n\nGet the name of the fill material of the layer.\n\nParameters\n\nevaluated\n\nbool, default: python:True\n\nWhether to evaluate the material if it is parameterized.\n\nReturns\n\npython:str\n\nName of the fill material.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.get_parameters",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.get_parameters.html#get_parameters",
        "title": "get_parameters",
        "section": "get_parameters",
        "text": "Get parameters of the JEDEC5 bondwire definition.\nThe tuple is in this format: (top_to_die_distance,die_pad_angle,lead_pad_angle)\ntop_to_die_distance: Bondwire top-to-die distance.\ndie_pad_angle: Bondwire die pad angle.\nlead_pad_angle: Bondwire lead pad angle.\nget_parameters\npython:tuple\nValue\nValue\nValue\n(top_to_die_distance,die_pad_angle,lead_pad_angle)\ntop_to_die_distance\ndie_pad_angle\nlead_pad_angle"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.get_parameters",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.get_parameters.html#ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.get_parameters",
        "title": "get_parameters > get_parameters > get_parameters",
        "section": "get_parameters > get_parameters",
        "text": "Jedec5BondwireDef.get_parameters()\n\nGet parameters of the JEDEC5 bondwire definition.\n\nReturns\n\npython:tuple[Value, Value, Value]\n\nThe tuple is in this format: (top_to_die_distance,die_pad_angle,lead_pad_angle)\n\ntop_to_die_distance: Bondwire top-to-die distance.\n\ndie_pad_angle: Bondwire die pad angle.\n\nlead_pad_angle: Bondwire lead pad angle.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonSenseType.SENSE_CW",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonSenseType.SENSE_CW.html#sense_cw",
        "title": "SENSE_CW",
        "section": "SENSE_CW",
        "text": "SENSE_CW"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonSenseType.SENSE_CW",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonSenseType.SENSE_CW.html#ansys.edb.core.geometry.polygon_data.PolygonSenseType.SENSE_CW",
        "title": "SENSE_CW > SENSE_CW > SENSE_CW",
        "section": "SENSE_CW > SENSE_CW",
        "text": "PolygonSenseType.SENSE_CW = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModel.type",
        "href": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModel.type.html#type",
        "title": "type",
        "section": "type",
        "text": "DielectricMaterialModelType: Type of the dielectric material model.\ntype\nDielectricMaterialModelType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModel.type",
        "href": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModel.type.html#ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModel.type",
        "title": "type > type > type",
        "section": "type > type",
        "text": "property DielectricMaterialModel.type\n\nDielectricMaterialModelType: Type of the dielectric material model.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.set_roughness_model",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.set_roughness_model.html#set_roughness_model",
        "title": "set_roughness_model",
        "section": "set_roughness_model",
        "text": "Set the roughness model used by the layer.\nset_roughness_model\nRoughnessRegion"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.set_roughness_model",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.set_roughness_model.html#ansys.edb.core.layer.via_layer.ViaLayer.set_roughness_model",
        "title": "set_roughness_model > set_roughness_model > set_roughness_model",
        "section": "set_roughness_model > set_roughness_model",
        "text": "ViaLayer.set_roughness_model(roughness_model, region)\n\nSet the roughness model used by the layer.\n\nParameters\n\nroughness_model\n\nRoughnessModel\n\n\n\nregion\n\nRoughnessRegion\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_null",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_null",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_null.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property PinGroupTerminal.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.circle_start_azimuth",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.circle_start_azimuth.html#circle_start_azimuth",
        "title": "circle_start_azimuth",
        "section": "circle_start_azimuth",
        "text": "str: Starting azimuth used when approximating arcs.\ncircle_start_azimuth\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.circle_start_azimuth",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.circle_start_azimuth.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.circle_start_azimuth",
        "title": "circle_start_azimuth > circle_start_azimuth > circle_start_azimuth",
        "section": "circle_start_azimuth > circle_start_azimuth",
        "text": "property HFSSAdvancedMeshingSettings.circle_start_azimuth\n\nstr: Starting azimuth used when approximating arcs.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.terminal_instances",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.terminal_instances.html#terminal_instances",
        "title": "terminal_instances",
        "section": "terminal_instances",
        "text": "list of Layer: All terminal instances on the net object instance.\nterminal_instances\nlist\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.terminal_instances",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.terminal_instances.html#ansys.edb.core.net.net.Net.terminal_instances",
        "title": "terminal_instances > terminal_instances > terminal_instances",
        "section": "terminal_instances > terminal_instances",
        "text": "property Net.terminal_instances\n\nlist of Layer: All terminal instances on the net object instance.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.sweep_data",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.sweep_data.html#sweep_data",
        "title": "sweep_data",
        "section": "sweep_data",
        "text": "list of SweepData: Frequency sweeps of the simulation setup.\nsweep_data\nlist\nSweepData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.sweep_data",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.sweep_data.html#ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.sweep_data",
        "title": "sweep_data > sweep_data > sweep_data",
        "section": "sweep_data > sweep_data",
        "text": "property SimulationSetup.sweep_data\n\nlist of SweepData: Frequency sweeps of the simulation setup.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.model_name",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.model_name.html#model_name",
        "title": "model_name",
        "section": "model_name",
        "text": "str: Name of the MCAD model.\nThis property is read-only.\nmodel_name\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.model_name",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.model_name.html#ansys.edb.core.layout.mcad_model.McadModel.model_name",
        "title": "model_name > model_name > model_name",
        "section": "model_name > model_name",
        "text": "property McadModel.model_name\n\nstr: Name of the MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.rlc_boundary_parameters",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.rlc_boundary_parameters.html#rlc_boundary_parameters",
        "title": "rlc_boundary_parameters",
        "section": "rlc_boundary_parameters",
        "text": "Rlc: RLC boundary parameters.\nrlc_boundary_parameters\nRlc"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.rlc_boundary_parameters",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.rlc_boundary_parameters.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.rlc_boundary_parameters",
        "title": "rlc_boundary_parameters > rlc_boundary_parameters > rlc_boundary_parameters",
        "section": "rlc_boundary_parameters > rlc_boundary_parameters",
        "text": "property PadstackInstanceTerminal.rlc_boundary_parameters\n\nRlc: RLC boundary parameters.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_mcad_3d_comp.html#is_mcad_3d_comp",
        "title": "is_mcad_3d_comp",
        "section": "is_mcad_3d_comp",
        "text": "bool: Flag indicating if this is a 3D composite MCAD model.\nThis property is read-only.\nis_mcad_3d_comp\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_mcad_3d_comp.html#ansys.edb.core.primitive.primitive.Text.is_mcad_3d_comp",
        "title": "is_mcad_3d_comp > is_mcad_3d_comp > is_mcad_3d_comp",
        "section": "is_mcad_3d_comp > is_mcad_3d_comp",
        "text": "property Text.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadType",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadType.html#padtype",
        "title": "PadType",
        "section": "PadType",
        "text": "Provides an enum representing pad types.\nPadType.REGULAR_PAD\n\nPadType.ANTI_PAD\n\nPadType.THERMAL_PAD\n\nPadType.HOLE\n\nPadType.UNKNOWN_GEOM_TYPE\n\nPadType\nPadType.REGULAR_PAD\nPadType.ANTI_PAD\nPadType.THERMAL_PAD\nPadType.HOLE\nPadType.UNKNOWN_GEOM_TYPE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadType",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadType.html#ansys.edb.core.definition.padstack_def_data.PadType",
        "title": "PadType > PadType > PadType",
        "section": "PadType > PadType",
        "text": "class ansys.edb.core.definition.padstack_def_data.PadType(value)\n\nProvides an enum representing pad types.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nPadType.REGULAR_PAD\n\n\n\nPadType.ANTI_PAD\n\n\n\nPadType.THERMAL_PAD\n\n\n\nPadType.HOLE\n\n\n\nPadType.UNKNOWN_GEOM_TYPE\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property of the layer collection for a given product ID and attribute ID.\nProduct ID.\nAttribute ID.\nNew property value.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.set_product_property.html#ansys.edb.core.layer.layer_collection.LayerCollection.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "LayerCollection.set_product_property(prod_id, attr_it, prop_value)\n\nSet the product property of the layer collection for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nProduct ID.\n\nattr_it\n\npython:int\n\nAttribute ID.\n\nprop_value\n\npython:str\n\nNew property value.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.part_name",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.part_name.html#part_name",
        "title": "part_name",
        "section": "part_name",
        "text": "Get the name of an MCAD model part at a given index.\nIndex of the MCAD model part.\nName of the MCAD model part.\npart_name\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.part_name",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.part_name.html#ansys.edb.core.layout.mcad_model.McadModel.part_name",
        "title": "part_name > part_name > part_name",
        "section": "part_name > part_name",
        "text": "McadModel.part_name(index)\n\nGet the name of an MCAD model part at a given index.\n\nParameters\n\nindex\n\npython:int\n\nIndex of the MCAD model part.\n\nReturns\n\npython:str\n\nName of the MCAD model part.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.energy_error",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.energy_error.html#energy_error",
        "title": "energy_error",
        "section": "energy_error",
        "text": "float: Percent of energy error used for adaptive mesh refinement.\nenergy_error\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.energy_error",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.energy_error.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.energy_error",
        "title": "energy_error > energy_error > energy_error",
        "section": "energy_error > energy_error",
        "text": "property SIWaveDCAdvancedSettings.energy_error\n\nfloat: Percent of energy error used for adaptive mesh refinement.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.group",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.group.html#group",
        "title": "group",
        "section": "group",
        "text": "Group object.\ngroup\nGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.group",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.group.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.group",
        "title": "group > group > group",
        "section": "group > group",
        "text": "property VoltageRegulator.group\n\nGroup object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.settings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.settings.html#settings",
        "title": "settings",
        "section": "settings",
        "text": "SIWaveSimulationSettings: Simulation settings of the SIWave simulation setup.\nsettings\nSIWaveSimulationSettings"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.settings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.settings.html#ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.settings",
        "title": "settings > settings > settings",
        "section": "settings > settings",
        "text": "property SIWaveSimulationSetup.settings\n\nSIWaveSimulationSettings: Simulation settings of the SIWave simulation setup.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.rlc_boundary_parameters",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.rlc_boundary_parameters.html#rlc_boundary_parameters",
        "title": "rlc_boundary_parameters",
        "section": "rlc_boundary_parameters",
        "text": "Rlc: RLC boundary parameters.\nrlc_boundary_parameters\nRlc"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.rlc_boundary_parameters",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.rlc_boundary_parameters.html#ansys.edb.core.terminal.terminals.BundleTerminal.rlc_boundary_parameters",
        "title": "rlc_boundary_parameters > rlc_boundary_parameters > rlc_boundary_parameters",
        "section": "rlc_boundary_parameters > rlc_boundary_parameters",
        "text": "property BundleTerminal.rlc_boundary_parameters\n\nRlc: RLC boundary parameters.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.is_null",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.is_null",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.is_null.html#ansys.edb.core.hierarchy.via_group.ViaGroup.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property ViaGroup.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.cast",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.cast.html#cast",
        "title": "cast",
        "section": "cast",
        "text": "Cast the base SimulationSetup object to correct subclass, if possible.\ncast\nSimulationSetup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.cast",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.cast.html#ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.cast",
        "title": "cast > cast > cast",
        "section": "cast > cast",
        "text": "HfssSimulationSetup.cast()\n\nCast the base SimulationSetup object to correct subclass, if possible.\n\nReturns\n\nSimulationSetup\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.layout_obj_type.html#layout_obj_type",
        "title": "layout_obj_type",
        "section": "layout_obj_type",
        "text": "layout_obj_type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.layout_obj_type.html#ansys.edb.core.hierarchy.via_group.ViaGroup.layout_obj_type",
        "title": "layout_obj_type > layout_obj_type > layout_obj_type",
        "section": "layout_obj_type > layout_obj_type",
        "text": "ViaGroup.layout_obj_type = 8\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_CIRCLE",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_CIRCLE.html#padgeomtype_circle",
        "title": "PADGEOMTYPE_CIRCLE",
        "section": "PADGEOMTYPE_CIRCLE",
        "text": "PADGEOMTYPE_CIRCLE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_CIRCLE",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_CIRCLE.html#ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_CIRCLE",
        "title": "PADGEOMTYPE_CIRCLE > PADGEOMTYPE_CIRCLE > PADGEOMTYPE_CIRCLE",
        "section": "PADGEOMTYPE_CIRCLE > PADGEOMTYPE_CIRCLE",
        "text": "PadGeometryType.PADGEOMTYPE_CIRCLE = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.obj_type.html#obj_type",
        "title": "obj_type",
        "section": "obj_type",
        "text": "LayoutObjType: Layout object type.\nThis property is read-only.\nobj_type\nLayoutObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.obj_type.html#ansys.edb.core.primitive.primitive.Polygon.obj_type",
        "title": "obj_type > obj_type > obj_type",
        "section": "obj_type > obj_type",
        "text": "property Polygon.obj_type\n\nLayoutObjType: Layout object type.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.can_be_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.can_be_zone_primitive.html#can_be_zone_primitive",
        "title": "can_be_zone_primitive",
        "section": "can_be_zone_primitive",
        "text": "bool: Flag indicating if the path can be a zone.\nThis property is read-only.\ncan_be_zone_primitive\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.can_be_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.can_be_zone_primitive.html#ansys.edb.core.primitive.primitive.Path.can_be_zone_primitive",
        "title": "can_be_zone_primitive > can_be_zone_primitive > can_be_zone_primitive",
        "section": "can_be_zone_primitive > can_be_zone_primitive",
        "text": "property Path.can_be_zone_primitive\n\nbool: Flag indicating if the path can be a zone.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior.OPEN_DC",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior.OPEN_DC.html#open_dc",
        "title": "OPEN_DC",
        "section": "OPEN_DC",
        "text": "OPEN_DC"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior.OPEN_DC",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior.OPEN_DC.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior.OPEN_DC",
        "title": "OPEN_DC > OPEN_DC > OPEN_DC",
        "section": "OPEN_DC > OPEN_DC",
        "text": "SParamDCBehavior.OPEN_DC = 5\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_circuit_port",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_circuit_port.html#is_circuit_port",
        "title": "is_circuit_port",
        "section": "is_circuit_port",
        "text": "bool: Flag indicating if the terminal is a circuit port.\nis_circuit_port\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_circuit_port",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_circuit_port.html#ansys.edb.core.terminal.terminals.EdgeTerminal.is_circuit_port",
        "title": "is_circuit_port > is_circuit_port > is_circuit_port",
        "section": "is_circuit_port > is_circuit_port",
        "text": "property EdgeTerminal.is_circuit_port\n\nbool: Flag indicating if the terminal is a circuit port.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.find_by_name",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.find_by_name.html#find_by_name",
        "title": "find_by_name",
        "section": "find_by_name",
        "text": "Find a JEDEC4 bondwire definition by name in a given database.\nDatabase to search for the JEDEC4 bondwire definition.\nName of the JEDEC4 bondwire definition.\nJEDEC4 bondwire definition found.\nfind_by_name\nDatabase\npython:str\nJedec4BondwireDef"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.find_by_name",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.find_by_name.html#ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.find_by_name",
        "title": "find_by_name > find_by_name > find_by_name",
        "section": "find_by_name > find_by_name",
        "text": "classmethod Jedec4BondwireDef.find_by_name(database, name)\n\nFind a JEDEC4 bondwire definition by name in a given database.\n\nParameters\n\ndatabase\n\nDatabase\n\nDatabase to search for the JEDEC4 bondwire definition.\n\nname\n\npython:str\n\nName of the JEDEC4 bondwire definition.\n\nReturns\n\nJedec4BondwireDef\n\nJEDEC4 bondwire definition found.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.clone",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a clone of the layer.\nID of the layer to clone.\nLayer cloned.\nclone\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.clone",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.clone.html#ansys.edb.core.layer.layer.Layer.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "Layer.clone(copy_id=True)\n\nCreate a clone of the layer.\n\nParameters\n\ncopy_id\n\nbool\n\nID of the layer to clone.\n\nReturns\n\nLayer\n\nLayer cloned.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollectionMode",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollectionMode.html#layercollectionmode",
        "title": "LayerCollectionMode",
        "section": "LayerCollectionMode",
        "text": "Provides an enum representing possible modes of the layer collection.\nLayerCollectionMode.LAMINATE\n\nLayerCollectionMode.OVERLAPPING\n\nLayerCollectionMode.MULTIZONE\n\nLayerCollectionMode\nLayerCollectionMode.LAMINATE\nLayerCollectionMode.OVERLAPPING\nLayerCollectionMode.MULTIZONE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollectionMode",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollectionMode.html#ansys.edb.core.layer.layer_collection.LayerCollectionMode",
        "title": "LayerCollectionMode > LayerCollectionMode > LayerCollectionMode",
        "section": "LayerCollectionMode > LayerCollectionMode",
        "text": "class ansys.edb.core.layer.layer_collection.LayerCollectionMode(value)\n\nProvides an enum representing possible modes of the layer collection.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nLayerCollectionMode.LAMINATE\n\n\n\nLayerCollectionMode.OVERLAPPING\n\n\n\nLayerCollectionMode.MULTIZONE\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.create_3d_comp.html#create_3d_comp",
        "title": "create_3d_comp",
        "section": "create_3d_comp",
        "text": "Create a 3D composite model from an MCAD file.\n3D composite model created.\ncreate_3d_comp\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.create_3d_comp.html#ansys.edb.core.primitive.primitive.Primitive.create_3d_comp",
        "title": "create_3d_comp > create_3d_comp > create_3d_comp",
        "section": "create_3d_comp > create_3d_comp",
        "text": "Primitive.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nReturns\n\nMcadModel\n\n3D composite model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_back_drill_by_layer",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_back_drill_by_layer.html#get_back_drill_by_layer",
        "title": "get_back_drill_by_layer",
        "section": "get_back_drill_by_layer",
        "text": "Get the back drill type by the layer.\nWhether to get the back drill type from the bottom.\nbool,\nValue,\nValue\nReturns a tuple in this format:\n(drill_to_layer, offset, diameter)\ndrill_to_layer : Layer drills to. If drill from top, drill stops at the upper elevation of the layer.            If from bottom, drill stops at the lower elevation of the layer.\noffset : Layer offset (or depth if layer is empty).\ndiameter : Drilling diameter.\nget_back_drill_by_layer\npython:tuple\nValue\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_back_drill_by_layer",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_back_drill_by_layer.html#ansys.edb.core.primitive.primitive.PadstackInstance.get_back_drill_by_layer",
        "title": "get_back_drill_by_layer > get_back_drill_by_layer > get_back_drill_by_layer",
        "section": "get_back_drill_by_layer > get_back_drill_by_layer",
        "text": "PadstackInstance.get_back_drill_by_layer(from_bottom)\n\nGet the back drill type by the layer.\n\nParameters\n\nfrom_bottom\n\nbool\n\nWhether to get the back drill type from the bottom.\n\nReturns\n\npython:tuple[\n\nbool,\nValue,\nValue\n\n]\n\nReturns a tuple in this format:\n\n(drill_to_layer, offset, diameter)\n\ndrill_to_layer : Layer drills to. If drill from top, drill stops at the upper elevation of the layer.            If from bottom, drill stops at the lower elevation of the layer.\n\noffset : Layer offset (or depth if layer is empty).\n\ndiameter : Drilling diameter.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.value.Value.is_complex",
        "href": "api/_autosummary/ansys.edb.core.utility.value.Value.is_complex.html#is_complex",
        "title": "is_complex",
        "section": "is_complex",
        "text": "bool: Flag indicating if the the value is a complex number (has a non-zero imaginary part).\nis_complex\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.value.Value.is_complex",
        "href": "api/_autosummary/ansys.edb.core.utility.value.Value.is_complex.html#ansys.edb.core.utility.value.Value.is_complex",
        "title": "is_complex > is_complex > is_complex",
        "section": "is_complex > is_complex",
        "text": "property Value.is_complex\n\nbool: Flag indicating if the the value is a complex number (has a non-zero imaginary part).\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.create",
        "href": "api/_autosummary/ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a multipole Debye dielectric material model.\ncreate\nMultipoleDebyeModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.create",
        "href": "api/_autosummary/ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.create.html#ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod MultipoleDebyeModel.create()\n\nCreate a multipole Debye dielectric material model.\n\nReturns\n\nMultipoleDebyeModel\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.create",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a point terminal.\nLayout to create the point terminal in.\nNet.\nLayer to place the point terminal on.\nName of the point terminal.\nType of the point terminal.\ncreate\nLayout\nNet\nstr\npython:None\nLayer\nstr\nstr\nPointTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.create",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.create.html#ansys.edb.core.terminal.terminals.PointTerminal.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod PointTerminal.create(layout, net, layer, name, point)\n\nCreate a point terminal.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to create the point terminal in.\n\nnet\n\nNet or str or python:None\n\nNet.\n\nlayer\n\nLayer or str\n\nLayer to place the point terminal on.\n\nname\n\nstr\n\nName of the point terminal.\n\npoint\n\nPoint2DLike\n\nType of the point terminal.\n\nReturns\n\nPointTerminal\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.set_parameters",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.set_parameters.html#set_parameters",
        "title": "set_parameters",
        "section": "set_parameters",
        "text": "Set parameters of the JEDEC5 bondwire definition.\nBondwire top-to-die distance.\nBondwire die pad angle.\nBondwire lead pad angle.\nset_parameters\nValue\nValue\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.set_parameters",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.set_parameters.html#ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.set_parameters",
        "title": "set_parameters > set_parameters > set_parameters",
        "section": "set_parameters > set_parameters",
        "text": "Jedec5BondwireDef.set_parameters(top_to_die_distance, die_pad_angle, lead_pad_angle)\n\nSet parameters of the JEDEC5 bondwire definition.\n\nParameters\n\ntop_to_die_distance\n\nValue\n\nBondwire top-to-die distance.\n\ndie_pad_angle\n\nValue\n\nBondwire die pad angle.\n\nlead_pad_angle\n\nValue\n\nBondwire lead pad angle.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.AdaptType.NUM_ADAPT_TYPE",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.AdaptType.NUM_ADAPT_TYPE.html#num_adapt_type",
        "title": "NUM_ADAPT_TYPE",
        "section": "NUM_ADAPT_TYPE",
        "text": "NUM_ADAPT_TYPE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.AdaptType.NUM_ADAPT_TYPE",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.AdaptType.NUM_ADAPT_TYPE.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.AdaptType.NUM_ADAPT_TYPE",
        "title": "NUM_ADAPT_TYPE > NUM_ADAPT_TYPE > NUM_ADAPT_TYPE",
        "section": "NUM_ADAPT_TYPE > NUM_ADAPT_TYPE",
        "text": "AdaptType.NUM_ADAPT_TYPE = 3\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireCrossSectionType.INVALID",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireCrossSectionType.INVALID.html#invalid",
        "title": "INVALID",
        "section": "INVALID",
        "text": "INVALID"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireCrossSectionType.INVALID",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireCrossSectionType.INVALID.html#ansys.edb.core.primitive.primitive.BondwireCrossSectionType.INVALID",
        "title": "INVALID > INVALID > INVALID",
        "section": "INVALID > INVALID",
        "text": "BondwireCrossSectionType.INVALID = -1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.msg",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.msg",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.msg.html#ansys.edb.core.layer.layer.Layer.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property Layer.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents this object’s ID.\nThis property is read-only.\nmsg\nEDBObjMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.msg.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property RaptorXGeneralSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object’s ID.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.can_be_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.can_be_zone_primitive.html#can_be_zone_primitive",
        "title": "can_be_zone_primitive",
        "section": "can_be_zone_primitive",
        "text": "bool: Flag indicating if the primitive can be a zone.\nThis property is read-only.\ncan_be_zone_primitive\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.can_be_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.can_be_zone_primitive.html#ansys.edb.core.primitive.primitive.Bondwire.can_be_zone_primitive",
        "title": "can_be_zone_primitive > can_be_zone_primitive > can_be_zone_primitive",
        "section": "can_be_zone_primitive > can_be_zone_primitive",
        "text": "property Bondwire.can_be_zone_primitive\n\nbool: Flag indicating if the primitive can be a zone.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.mesh_frequency",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.mesh_frequency.html#mesh_frequency",
        "title": "mesh_frequency",
        "section": "mesh_frequency",
        "text": "str: Mesh refinement frequency.\nmesh_frequency\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.mesh_frequency",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.mesh_frequency.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.mesh_frequency",
        "title": "mesh_frequency > mesh_frequency > mesh_frequency",
        "section": "mesh_frequency > mesh_frequency",
        "text": "property SIWaveAdvancedSettings.mesh_frequency\n\nstr: Mesh refinement frequency.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.get_parameters",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.get_parameters.html#get_parameters",
        "title": "get_parameters",
        "section": "get_parameters",
        "text": "Get coordinate parameters.\nRectangleRepresentationType,\nValue,\nValue,\nValue,\nValue,\nValue,\nValue\nReturns a tuple in this format:\n(representation_type, parameter1, parameter2, parameter3, parameter4, corner_radius, rotation)\nrepresentation_type : Type that defines given parameters meaning.\nparameter1 : X value of lower left point or center point.\nparameter2 : Y value of lower left point or center point.\nparameter3 : X value of upper right point or width.\nparameter4 : Y value of upper right point or height.\ncorner_radius : Corner radius.\nrotation : Rotation.\nget_parameters\npython:tuple\nRectangleRepresentationType\nValue\nValue\nValue\nValue\nValue\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.get_parameters",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.get_parameters.html#ansys.edb.core.primitive.primitive.Rectangle.get_parameters",
        "title": "get_parameters > get_parameters > get_parameters",
        "section": "get_parameters > get_parameters",
        "text": "Rectangle.get_parameters()\n\nGet coordinate parameters.\n\nReturns\n\npython:tuple[\n\nRectangleRepresentationType,\nValue,\nValue,\nValue,\nValue,\nValue,\nValue\n\n]\n\nReturns a tuple in this format:\n\n(representation_type, parameter1, parameter2, parameter3, parameter4, corner_radius, rotation)\n\nrepresentation_type : Type that defines given parameters meaning.\n\nparameter1 : X value of lower left point or center point.\n\nparameter2 : Y value of lower left point or center point.\n\nparameter3 : X value of upper right point or width.\n\nparameter4 : Y value of upper right point or height.\n\ncorner_radius : Corner radius.\n\nrotation : Rotation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.component",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.component.html#component",
        "title": "component",
        "section": "component",
        "text": "ComponentGroup:         Component of the Connectable object.\ncomponent\nComponentGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.component",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.component.html#ansys.edb.core.terminal.terminals.Terminal.component",
        "title": "component > component > component",
        "section": "component > component",
        "text": "property Terminal.component\n\nComponentGroup:         Component of the Connectable object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.position",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.position.html#position",
        "title": "position",
        "section": "position",
        "text": "int: Position of the simulation in the setup order.\nposition\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.position",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.position.html#ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.position",
        "title": "position > position > position",
        "section": "position > position",
        "text": "property HfssSimulationSetup.position\n\nint: Position of the simulation in the setup order.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.enabled",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.enabled.html#enabled",
        "title": "enabled",
        "section": "enabled",
        "text": "bool: Flag indicating if the mesh operation is enabled.\nenabled\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.enabled",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.enabled.html#ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.enabled",
        "title": "enabled > enabled > enabled",
        "section": "enabled > enabled",
        "text": "property LengthMeshOperation.enabled\n\nbool: Flag indicating if the mesh operation is enabled.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDef.id",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDef.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDef.id",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDef.id.html#ansys.edb.core.definition.bondwire_def.BondwireDef.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property BondwireDef.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.id",
        "href": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.id",
        "href": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.id.html#ansys.edb.core.definition.io_component_property.IOComponentProperty.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property IOComponentProperty.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_mcad_3d_comp.html#is_mcad_3d_comp",
        "title": "is_mcad_3d_comp",
        "section": "is_mcad_3d_comp",
        "text": "bool: Flag indicating if this is a 3D composite MCAD model.\nThis property is read-only.\nis_mcad_3d_comp\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_mcad_3d_comp.html#ansys.edb.core.primitive.primitive.Polygon.is_mcad_3d_comp",
        "title": "is_mcad_3d_comp > is_mcad_3d_comp > is_mcad_3d_comp",
        "section": "is_mcad_3d_comp > is_mcad_3d_comp",
        "text": "property Polygon.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_parameterized",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_parameterized.html#is_parameterized",
        "title": "is_parameterized",
        "section": "is_parameterized",
        "text": "bool: Whether the primitive is parametrized.\nThis property is read-only.\nis_parameterized\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_parameterized",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_parameterized.html#ansys.edb.core.primitive.primitive.Text.is_parameterized",
        "title": "is_parameterized > is_parameterized > is_parameterized",
        "section": "is_parameterized > is_parameterized",
        "text": "property Text.is_parameterized\n\nbool: Whether the primitive is parametrized.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product property of the layer for a given product ID and attribute ID.\nProduct ID.\nAttribute ID.\nProduct property.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.get_product_property.html#ansys.edb.core.layer.via_layer.ViaLayer.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "ViaLayer.get_product_property(prod_id, attr_it)\n\nGet the product property of the layer for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nProduct ID.\n\nattr_it\n\npython:int\n\nAttribute ID.\n\nReturns\n\npython:str\n\nProduct property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.angle",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.angle.html#angle",
        "title": "angle",
        "section": "angle",
        "text": "ValueLike: Angle of the bend.\nangle"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.angle",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.angle.html#ansys.edb.core.primitive.primitive.BoardBendDef.angle",
        "title": "angle > angle > angle",
        "section": "angle > angle",
        "text": "property BoardBendDef.angle\n\nValueLike: Angle of the bend.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.id",
        "href": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.id",
        "href": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.id.html#ansys.edb.core.definition.port_property.PortProperty.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property PortProperty.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.triangle3d_data.Triangle3DData.point_2",
        "href": "api/_autosummary/ansys.edb.core.geometry.triangle3d_data.Triangle3DData.point_2.html#point_2",
        "title": "point_2",
        "section": "point_2",
        "text": "Point3DData: Second 3D point.\npoint_2\nPoint3DData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.triangle3d_data.Triangle3DData.point_2",
        "href": "api/_autosummary/ansys.edb.core.geometry.triangle3d_data.Triangle3DData.point_2.html#ansys.edb.core.geometry.triangle3d_data.Triangle3DData.point_2",
        "title": "point_2 > point_2 > point_2",
        "section": "point_2 > point_2",
        "text": "property Triangle3DData.point_2\n\nPoint3DData: Second 3D point.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.html#pointterminal",
        "title": "PointTerminal",
        "section": "PointTerminal",
        "text": "Represents a point terminal object.\nPointTerminal.cast([term_type])\nCast the terminal object to the correct concrete type, fetching the type if necessary.\nPointTerminal.create(layout, net, layer, ...)\nCreate a point terminal.\nPointTerminal.create_3d_comp()\nCreate a 3D composite model from an MCAD file.\nPointTerminal.create_hfss()\nCreate an HFSS model from an MCAD file.\nPointTerminal.create_stride()\nCreate a Stride model from an MCAD file.\nPointTerminal.delete()\nDelete the layout object.\nPointTerminal.find(layout, name)\nFind a terminal by name in a given layout.\nPointTerminal.find_by_id(layout, uid)\nFind a Connectable object by database ID in a given layout.\nPointTerminal.get_product_property(prod_id, ...)\nGet the product property of the layout object for a given product ID and attribute ID.\nPointTerminal.get_product_property_ids(prod_id)\nGet a list of attribute IDs given a product ID for the layout object.\nPointTerminal.product_solver_names(product_id)\nGet the list of solver names.\nPointTerminal.product_solver_option(...)\nGet the name of the product solver option.\nPointTerminal.set_product_property(prod_id, ...)\nSet the product property of the layout object for a given product ID and attribute ID.\nPointTerminal.set_product_solver_option(...)\nSet the product solver option.\nPointTerminal.boundary_type\nBoundaryType: Boundary type of the terminal.\nPointTerminal.bundle_terminal\nBundleTerminal: Bundle terminal that the terminal belongs to, if any.\nPointTerminal.component\nComponentGroup:         Component of the Connectable object.\nPointTerminal.edb_uid\nint: Unique, persistent ID for the Connectable object.\nPointTerminal.group\nGroup object.\nPointTerminal.hfss_pi_type\nHfssPIType: HFSS PI type.\nPointTerminal.id\nint: Unique ID of the EDB object.\nPointTerminal.impedance\nValue: Impedance of the terminal.\nPointTerminal.is_auto_port\nbool: Flag indicating if the terminal is an auto port.\nPointTerminal.is_circuit_port\nbool: Flag indicating if the terminal is a circuit port.\nPointTerminal.is_interface_terminal\nbool: Flag indicating if the terminal is an interface.\nPointTerminal.is_mcad\nbool: Flag indicating if this is an MCAD model.\nPointTerminal.is_mcad_3d_comp\nbool: Flag indicating if this is a 3D composite MCAD model.\nPointTerminal.is_mcad_hfss\nbool: Flag indicating if this is an HFSS MCAD model.\nPointTerminal.is_mcad_stride\nbool: Flag indicating if this is a Stride MCAD model.\nPointTerminal.is_null\nbool: Flag indicating if the object exists in the database.\nPointTerminal.is_reference_terminal\nbool: Flag indicating if the terminal is a reference terminal.\nPointTerminal.layer\nLayer: Layer that the point terminal is placed on.\nPointTerminal.layout\nLayout: Layout owning the object.\nPointTerminal.layout_obj_type\n\nPointTerminal.model\nstr: S-parameter model.\nPointTerminal.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nPointTerminal.name\nstr: Name of the terminal.\nPointTerminal.net\nNet: Net of the Connectable object.\nPointTerminal.obj_type\nLayoutObjType: Layout object type.\nPointTerminal.params\nLayer, PointData: Layer that the point terminal is placed on and         the (x, y) coordinates.\nPointTerminal.point\nPointData: Coordinates (x, y) of the point terminal.\nPointTerminal.port_post_processing_prop\nPortPostProcessingProp: Port postprocessing properties.\nPointTerminal.reference_layer\nLayer: Layer that the terminal references, if any, by either layer object or name.\nPointTerminal.reference_terminal\nTerminal: Terminal that the terminal references, if any.\nPointTerminal.rlc_boundary_parameters\nRlc: RLC boundary parameters.\nPointTerminal.source_amplitude\nValue: Source amplitude of the terminal.\nPointTerminal.source_phase\nValue: Source phase of the terminal.\nPointTerminal.term_to_ground\nSourceTermToGroundType: Source terminal-to-ground type.\nPointTerminal.type\n\nPointTerminal.use_reference_from_hierarchy\nbool: Flag indicating if the terminal can use references from the hierarchy.\nPointTerminal\nPointTerminal.cast\nPointTerminal.create\nPointTerminal.create_3d_comp\nPointTerminal.create_hfss\nPointTerminal.create_stride\nPointTerminal.delete\nPointTerminal.find\nPointTerminal.find_by_id\nPointTerminal.get_product_property\nPointTerminal.get_product_property_ids\nPointTerminal.product_solver_names\nPointTerminal.product_solver_option\nPointTerminal.set_product_property\nPointTerminal.set_product_solver_option\nPointTerminal.boundary_type\nBoundaryType\nPointTerminal.bundle_terminal\nBundleTerminal\nPointTerminal.component\nComponentGroup\nPointTerminal.edb_uid\nint\nPointTerminal.group\nGroup\nPointTerminal.hfss_pi_type\nHfssPIType\nPointTerminal.id\nint\nPointTerminal.impedance\nValue\nPointTerminal.is_auto_port\nbool\nPointTerminal.is_circuit_port\nbool\nPointTerminal.is_interface_terminal\nbool\nPointTerminal.is_mcad\nbool\nPointTerminal.is_mcad_3d_comp\nbool\nPointTerminal.is_mcad_hfss\nbool\nPointTerminal.is_mcad_stride\nbool\nPointTerminal.is_null\nbool\nPointTerminal.is_reference_terminal\nbool\nPointTerminal.layer\nLayer\nPointTerminal.layout\nLayout\nPointTerminal.layout_obj_type\nPointTerminal.model\nstr\nPointTerminal.msg\nEDBObjMessage\nPointTerminal.name\nstr\nPointTerminal.net\nNet\nPointTerminal.obj_type\nLayoutObjType\nPointTerminal.params\nLayer\nPointData\nPointTerminal.point\nPointData\nPointTerminal.port_post_processing_prop\nPortPostProcessingProp\nPointTerminal.reference_layer\nLayer\nPointTerminal.reference_terminal\nTerminal\nPointTerminal.rlc_boundary_parameters\nRlc\nPointTerminal.source_amplitude\nValue\nPointTerminal.source_phase\nValue\nPointTerminal.term_to_ground\nSourceTermToGroundType\nPointTerminal.type\nPointTerminal.use_reference_from_hierarchy\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.html#ansys.edb.core.terminal.terminals.PointTerminal",
        "title": "PointTerminal > PointTerminal > PointTerminal",
        "section": "PointTerminal > PointTerminal",
        "text": "class ansys.edb.core.terminal.terminals.PointTerminal(msg)\n\nRepresents a point terminal object.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nPointTerminal.cast([term_type])\n\nCast the terminal object to the correct concrete type, fetching the type if necessary.\n\nPointTerminal.create(layout, net, layer, ...)\n\nCreate a point terminal.\n\nPointTerminal.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nPointTerminal.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nPointTerminal.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nPointTerminal.delete()\n\nDelete the layout object.\n\nPointTerminal.find(layout, name)\n\nFind a terminal by name in a given layout.\n\nPointTerminal.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nPointTerminal.get_product_property(prod_id, ...)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nPointTerminal.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nPointTerminal.product_solver_names(product_id)\n\nGet the list of solver names.\n\nPointTerminal.product_solver_option(...)\n\nGet the name of the product solver option.\n\nPointTerminal.set_product_property(prod_id, ...)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nPointTerminal.set_product_solver_option(...)\n\nSet the product solver option.\n\n\n\nAttributes\n\n\n\n\n\n\n\nPointTerminal.boundary_type\n\nBoundaryType: Boundary type of the terminal.\n\nPointTerminal.bundle_terminal\n\nBundleTerminal: Bundle terminal that the terminal belongs to, if any.\n\nPointTerminal.component\n\nComponentGroup:         Component of the Connectable object.\n\nPointTerminal.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nPointTerminal.group\n\nGroup object.\n\nPointTerminal.hfss_pi_type\n\nHfssPIType: HFSS PI type.\n\nPointTerminal.id\n\nint: Unique ID of the EDB object.\n\nPointTerminal.impedance\n\nValue: Impedance of the terminal.\n\nPointTerminal.is_auto_port\n\nbool: Flag indicating if the terminal is an auto port.\n\nPointTerminal.is_circuit_port\n\nbool: Flag indicating if the terminal is a circuit port.\n\nPointTerminal.is_interface_terminal\n\nbool: Flag indicating if the terminal is an interface.\n\nPointTerminal.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nPointTerminal.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nPointTerminal.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nPointTerminal.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nPointTerminal.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nPointTerminal.is_reference_terminal\n\nbool: Flag indicating if the terminal is a reference terminal.\n\nPointTerminal.layer\n\nLayer: Layer that the point terminal is placed on.\n\nPointTerminal.layout\n\nLayout: Layout owning the object.\n\nPointTerminal.layout_obj_type\n\n\n\nPointTerminal.model\n\nstr: S-parameter model.\n\nPointTerminal.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nPointTerminal.name\n\nstr: Name of the terminal.\n\nPointTerminal.net\n\nNet: Net of the Connectable object.\n\nPointTerminal.obj_type\n\nLayoutObjType: Layout object type.\n\nPointTerminal.params\n\nLayer, PointData: Layer that the point terminal is placed on and         the (x, y) coordinates.\n\nPointTerminal.point\n\nPointData: Coordinates (x, y) of the point terminal.\n\nPointTerminal.port_post_processing_prop\n\nPortPostProcessingProp: Port postprocessing properties.\n\nPointTerminal.reference_layer\n\nLayer: Layer that the terminal references, if any, by either layer object or name.\n\nPointTerminal.reference_terminal\n\nTerminal: Terminal that the terminal references, if any.\n\nPointTerminal.rlc_boundary_parameters\n\nRlc: RLC boundary parameters.\n\nPointTerminal.source_amplitude\n\nValue: Source amplitude of the terminal.\n\nPointTerminal.source_phase\n\nValue: Source phase of the terminal.\n\nPointTerminal.term_to_ground\n\nSourceTermToGroundType: Source terminal-to-ground type.\n\nPointTerminal.type\n\n\n\nPointTerminal.use_reference_from_hierarchy\n\nbool: Flag indicating if the terminal can use references from the hierarchy.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.DC_TERMINAL",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.DC_TERMINAL.html#dc_terminal",
        "title": "DC_TERMINAL",
        "section": "DC_TERMINAL",
        "text": "DC_TERMINAL"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.DC_TERMINAL",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.DC_TERMINAL.html#ansys.edb.core.terminal.terminals.BoundaryType.DC_TERMINAL",
        "title": "DC_TERMINAL > DC_TERMINAL > DC_TERMINAL",
        "section": "DC_TERMINAL > DC_TERMINAL",
        "text": "BoundaryType.DC_TERMINAL = 7\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.expanded_extent",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.expanded_extent.html#expanded_extent",
        "title": "expanded_extent",
        "section": "expanded_extent",
        "text": "Get an expanded polygon for a list of nets.\nList of nets.\nGeometry extent type for expansion.\nExpansion factor for the polygon union. No expansion occurs if the value\nfor this parameter is less than or equal to 0.\nWhen unitless, the distance by which the extent expands is the factor\nmultiplied by the longer dimension (X or Y distance) of the expanded\nobject/net.\nWhether to use round corners or sharp corners. For round corners, this\nreturns a bounding box if its area is within 10% of the rounded expansion’s\narea.\nNumber of iterations desired to reach the full expansion.\nThis method returns the expansion of the contour, so any voids within expanded\nobjects are ignored.\nexpanded_extent\npython:list\nNet\nExtentType\npython:float\npython:int\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.expanded_extent",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.expanded_extent.html#ansys.edb.core.layout.layout.Layout.expanded_extent",
        "title": "expanded_extent > expanded_extent > expanded_extent",
        "section": "expanded_extent > expanded_extent",
        "text": "Layout.expanded_extent(nets, extent, expansion_factor, expansion_unitless, use_round_corner, num_increments)\n\nGet an expanded polygon for a list of nets.\n\nParameters\n\nnets\n\npython:list[Net]\n\nList of nets.\n\nextent\n\nExtentType\n\nGeometry extent type for expansion.\n\nexpansion_factor\n\npython:float\n\nExpansion factor for the polygon union. No expansion occurs if the value\nfor this parameter is less than or equal to 0.\n\nexpansion_unitless\n\nbool\n\nWhen unitless, the distance by which the extent expands is the factor\nmultiplied by the longer dimension (X or Y distance) of the expanded\nobject/net.\n\nuse_round_corner\n\nbool\n\nWhether to use round corners or sharp corners. For round corners, this\nreturns a bounding box if its area is within 10% of the rounded expansion’s\narea.\n\nnum_increments\n\npython:int\n\nNumber of iterations desired to reach the full expansion.\n\nReturns\n\nPolygonData\n\n\n\nNotes\n\nThis method returns the expansion of the contour, so any voids within expanded\nobjects are ignored.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel.msg.html#ansys.edb.core.definition.component_model.DynamicLinkComponentModel.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property DynamicLinkComponentModel.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDs given a product ID for the layout object.\nID representing a product that supports the EDB.\nAll user-defined attribute IDs for properties stored in the object\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.get_product_property_ids.html#ansys.edb.core.terminal.terminals.PointTerminal.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "PointTerminal.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nReturns\n\npython:list[python:int]\n\nAll user-defined attribute IDs for properties stored in the object\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.name",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the hierarchy object.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.name",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.name.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property CellInstance.name\n\nstr: Name of the hierarchy object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.negative_net",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.negative_net.html#negative_net",
        "title": "negative_net",
        "section": "negative_net",
        "text": "Net: Negative net in the differential pair.\nnegative_net\nNet"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.negative_net",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.negative_net.html#ansys.edb.core.net.differential_pair.DifferentialPair.negative_net",
        "title": "negative_net > negative_net > negative_net",
        "section": "negative_net > negative_net",
        "text": "property DifferentialPair.negative_net\n\nNet: Negative net in the differential pair.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PathEndCapType.EXTENDED",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PathEndCapType.EXTENDED.html#extended",
        "title": "EXTENDED",
        "section": "EXTENDED",
        "text": "EXTENDED"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PathEndCapType.EXTENDED",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PathEndCapType.EXTENDED.html#ansys.edb.core.primitive.primitive.PathEndCapType.EXTENDED",
        "title": "EXTENDED > EXTENDED > EXTENDED",
        "section": "EXTENDED > EXTENDED",
        "text": "PathEndCapType.EXTENDED = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.has_voids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.has_voids.html#has_voids",
        "title": "has_voids",
        "section": "has_voids",
        "text": "bool: Flag indicating if a primitive has voids inside.\nThis property is read-only.\nhas_voids\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.has_voids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.has_voids.html#ansys.edb.core.primitive.primitive.Bondwire.has_voids",
        "title": "has_voids > has_voids > has_voids",
        "section": "has_voids > has_voids",
        "text": "property Bondwire.has_voids\n\nbool: Flag indicating if a primitive has voids inside.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.solve_independent_preference",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.solve_independent_preference.html#solve_independent_preference",
        "title": "solve_independent_preference",
        "section": "solve_independent_preference",
        "text": "bool: Flag indicating if the object is assigned to solve independent of its parent context.\nTrue if the object is assigned to solve independently, False if the object is embedded.\nFor a ComponentModel\ninstance, this flag indicates if the model is embedded with the field solver, when applicable.\nFor a CellInstance instance,\nit indicates if the design’s geometry is flattened/meshed with the parent, when applicable.\nsolve_independent_preference\nbool\nTrue\nFalse\nComponentModel\nCellInstance"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.solve_independent_preference",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.solve_independent_preference.html#ansys.edb.core.hierarchy.via_group.ViaGroup.solve_independent_preference",
        "title": "solve_independent_preference > solve_independent_preference > solve_independent_preference",
        "section": "solve_independent_preference > solve_independent_preference",
        "text": "property ViaGroup.solve_independent_preference\n\nbool: Flag indicating if the object is assigned to solve independent of its parent context.\n\nReturns\n\nbool\n\nTrue if the object is assigned to solve independently, False if the object is embedded.\n\nNotes\n\nFor a ComponentModel\ninstance, this flag indicates if the model is embedded with the field solver, when applicable.\n\nFor a CellInstance instance,\nit indicates if the design’s geometry is flattened/meshed with the parent, when applicable.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the product property.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.get_product_property.html#ansys.edb.core.terminal.terminals.Terminal.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "Terminal.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nReturns\n\npython:str\n\nString stored in the product property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.direction",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.direction.html#direction",
        "title": "direction",
        "section": "direction",
        "text": "Literal[\"cw\", \"ccw\", \"colinear\"]: Rotational direction of the arc.\ndirection\nLiteral[\"cw\", \"ccw\", \"colinear\"]"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.direction",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.direction.html#ansys.edb.core.geometry.arc_data.ArcData.direction",
        "title": "direction > direction > direction",
        "section": "direction > direction",
        "text": "property ArcData.direction\n\nLiteral[\"cw\", \"ccw\", \"colinear\"]: Rotational direction of the arc.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType.COMPONENT_DEF",
        "href": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType.COMPONENT_DEF.html#component_def",
        "title": "COMPONENT_DEF",
        "section": "COMPONENT_DEF",
        "text": "COMPONENT_DEF"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType.COMPONENT_DEF",
        "href": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType.COMPONENT_DEF.html#ansys.edb.core.edb_defs.DefinitionObjType.COMPONENT_DEF",
        "title": "COMPONENT_DEF > COMPONENT_DEF > COMPONENT_DEF",
        "section": "COMPONENT_DEF > COMPONENT_DEF",
        "text": "DefinitionObjType.COMPONENT_DEF = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.dc_advanced",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.dc_advanced.html#dc_advanced",
        "title": "dc_advanced",
        "section": "dc_advanced",
        "text": "SIWaveDCAdvancedSettings: Advanced DC settings for SIWave simulations.\ndc_advanced\nSIWaveDCAdvancedSettings"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.dc_advanced",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.dc_advanced.html#ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.dc_advanced",
        "title": "dc_advanced > dc_advanced > dc_advanced",
        "section": "dc_advanced > dc_advanced",
        "text": "property SIWaveDCIRSimulationSettings.dc_advanced\n\nSIWaveDCAdvancedSettings: Advanced DC settings for SIWave simulations.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.color",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.color.html#color",
        "title": "color",
        "section": "color",
        "text": "int: Color of the geometry.\nThis property is read-only.\ncolor\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.color",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.color.html#ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.color",
        "title": "color > color > color",
        "section": "color > color",
        "text": "property LayoutObjInstance2DGeometry.color\n\nint: Color of the geometry.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.find",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.find.html#find",
        "title": "find",
        "section": "find",
        "text": "Find a cell in a database by either name or ID.\nDatabase to search for the cell.\nType of the cell.\nName of the cell. The default is None, in which case a name\nis automatically assigned.\nID of the cell. The default is None, in which case an ID\nis automatically assigned.\nCell that was found, None otherwise.\nfind\nDatabase\nCellType\npython:str\noptional\nNone\npython:int\noptional\nNone\nCell\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.find",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.find.html#ansys.edb.core.layout.cell.Cell.find",
        "title": "find > find > find",
        "section": "find > find",
        "text": "classmethod Cell.find(database, cell_type, name=None, cell_id=None)\n\nFind a cell in a database by either name or ID.\n\nParameters\n\ndatabase\n\nDatabase\n\nDatabase to search for the cell.\n\ncell_type\n\nCellType\n\nType of the cell.\n\nname\n\npython:str, optional\n\nName of the cell. The default is None, in which case a name\nis automatically assigned.\n\ncell_id\n\npython:int, optional\n\nID of the cell. The default is None, in which case an ID\nis automatically assigned.\n\nReturns\n\nCell\n\nCell that was found, None otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.add_void",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.add_void.html#add_void",
        "title": "add_void",
        "section": "add_void",
        "text": "Add a void to the primitive.\nVoid to add.\nadd_void\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.add_void",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.add_void.html#ansys.edb.core.primitive.primitive.Primitive.add_void",
        "title": "add_void > add_void > add_void",
        "section": "add_void > add_void",
        "text": "Primitive.add_void(hole)\n\nAdd a void to the primitive.\n\nParameters\n\nhole\n\nPrimitive\n\nVoid to add.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.group",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.group.html#group",
        "title": "group",
        "section": "group",
        "text": "Group object.\ngroup\nGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.group",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.group.html#ansys.edb.core.hierarchy.pin_group.PinGroup.group",
        "title": "group > group > group",
        "section": "group > group",
        "text": "property PinGroup.group\n\nGroup object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.html#padstackdefdata",
        "title": "PadstackDefData",
        "section": "PadstackDefData",
        "text": "Represents a padstack data definition.\nPadstackDefData.add_layers(names)\nAdd layers to the padstack definition data object.\nPadstackDefData.create()\nCreate a padstack data definition.\nPadstackDefData.get_connection_pt(layer)\nGet connection point position and direction by layer name.\nPadstackDefData.get_hole_parameters()\nGet hole parameters in their original values in the database.\nPadstackDefData.get_pad_parameters(layer, ...)\nGet pad parameters by layer name and pad type in their original values in the database.\nPadstackDefData.set_connection_pt(layer, ...)\nSet connection point position and direction.\nPadstackDefData.set_hole_parameters(...)\nSet hole parameters.\nPadstackDefData.set_pad_parameters(layer, ...)\nSet pad parameters by layer name and pad type in their original values in the database.\nPadstackDefData.hole_range\nPadstackHoleRange: Hole range of the padstack data definition.\nPadstackDefData.id\nint: Unique ID of the EDB object.\nPadstackDefData.is_null\nbool: Flag indicating if the object exists in the database.\nPadstackDefData.layer_ids\nlist of int: All layer IDs in the padstack definition data object.\nPadstackDefData.layer_names\nlist of str: List of layer names in the padstack definition data object.\nPadstackDefData.material\nstr: Material name of the hole of the padstack definition data object.\nPadstackDefData.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nPadstackDefData.plating_percentage\nValue: Hole plating percentage.\nPadstackDefData.solder_ball_material\nstr: Name of the solder ball material.\nPadstackDefData.solder_ball_param\ntuple of [Value,         Value]: Solder ball parameters (d1, d2)         in their original values in the database.\nPadstackDefData.solder_ball_placement\nSolderballPlacement: Solder ball placement or orientation.\nPadstackDefData.solder_ball_shape\nSolderballShape: Solder ball shape.\nPadstackDefData\nPadstackDefData.add_layers\nPadstackDefData.create\nPadstackDefData.get_connection_pt\nPadstackDefData.get_hole_parameters\nPadstackDefData.get_pad_parameters\nPadstackDefData.set_connection_pt\nPadstackDefData.set_hole_parameters\nPadstackDefData.set_pad_parameters\nPadstackDefData.hole_range\nPadstackHoleRange\nPadstackDefData.id\nint\nPadstackDefData.is_null\nbool\nPadstackDefData.layer_ids\nlist\nint\nPadstackDefData.layer_names\nlist\nstr\nPadstackDefData.material\nstr\nPadstackDefData.msg\nEDBObjMessage\nPadstackDefData.plating_percentage\nValue\nPadstackDefData.solder_ball_material\nstr\nPadstackDefData.solder_ball_param\ntuple\nValue\nValue\n(d1, d2)\nPadstackDefData.solder_ball_placement\nSolderballPlacement\nPadstackDefData.solder_ball_shape\nSolderballShape"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.html#ansys.edb.core.definition.padstack_def_data.PadstackDefData",
        "title": "PadstackDefData > PadstackDefData > PadstackDefData",
        "section": "PadstackDefData > PadstackDefData",
        "text": "class ansys.edb.core.definition.padstack_def_data.PadstackDefData(msg)\n\nRepresents a padstack data definition.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nPadstackDefData.add_layers(names)\n\nAdd layers to the padstack definition data object.\n\nPadstackDefData.create()\n\nCreate a padstack data definition.\n\nPadstackDefData.get_connection_pt(layer)\n\nGet connection point position and direction by layer name.\n\nPadstackDefData.get_hole_parameters()\n\nGet hole parameters in their original values in the database.\n\nPadstackDefData.get_pad_parameters(layer, ...)\n\nGet pad parameters by layer name and pad type in their original values in the database.\n\nPadstackDefData.set_connection_pt(layer, ...)\n\nSet connection point position and direction.\n\nPadstackDefData.set_hole_parameters(...)\n\nSet hole parameters.\n\nPadstackDefData.set_pad_parameters(layer, ...)\n\nSet pad parameters by layer name and pad type in their original values in the database.\n\n\n\nAttributes\n\n\n\n\n\n\n\nPadstackDefData.hole_range\n\nPadstackHoleRange: Hole range of the padstack data definition.\n\nPadstackDefData.id\n\nint: Unique ID of the EDB object.\n\nPadstackDefData.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nPadstackDefData.layer_ids\n\nlist of int: All layer IDs in the padstack definition data object.\n\nPadstackDefData.layer_names\n\nlist of str: List of layer names in the padstack definition data object.\n\nPadstackDefData.material\n\nstr: Material name of the hole of the padstack definition data object.\n\nPadstackDefData.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nPadstackDefData.plating_percentage\n\nValue: Hole plating percentage.\n\nPadstackDefData.solder_ball_material\n\nstr: Name of the solder ball material.\n\nPadstackDefData.solder_ball_param\n\ntuple of [Value,         Value]: Solder ball parameters (d1, d2)         in their original values in the database.\n\nPadstackDefData.solder_ball_placement\n\nSolderballPlacement: Solder ball placement or orientation.\n\nPadstackDefData.solder_ball_shape\n\nSolderballShape: Solder ball shape.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.net",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.net.html#net",
        "title": "net",
        "section": "net",
        "text": "Net: Net of the Connectable object.\nThis property can be set with a Net instance, a string, or None.\nnet\nNet\nNet\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.net",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.net.html#ansys.edb.core.hierarchy.via_group.ViaGroup.net",
        "title": "net > net > net",
        "section": "net > net",
        "text": "property ViaGroup.net\n\nNet: Net of the Connectable object.\n\nThis property can be set with a Net instance, a string, or None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_relaxed_z_axis",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_relaxed_z_axis.html#use_relaxed_z_axis",
        "title": "use_relaxed_z_axis",
        "section": "use_relaxed_z_axis",
        "text": "bool: Flag indicating if simplified meshing is used along the z axis.\nuse_relaxed_z_axis\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_relaxed_z_axis",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_relaxed_z_axis.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_relaxed_z_axis",
        "title": "use_relaxed_z_axis > use_relaxed_z_axis > use_relaxed_z_axis",
        "section": "use_relaxed_z_axis > use_relaxed_z_axis",
        "text": "property RaptorXAdvancedSettings.use_relaxed_z_axis\n\nbool: Flag indicating if simplified meshing is used along the z axis.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.VOLTAGE_SOURCE",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.VOLTAGE_SOURCE.html#voltage_source",
        "title": "VOLTAGE_SOURCE",
        "section": "VOLTAGE_SOURCE",
        "text": "VOLTAGE_SOURCE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.VOLTAGE_SOURCE",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.VOLTAGE_SOURCE.html#ansys.edb.core.terminal.terminals.BoundaryType.VOLTAGE_SOURCE",
        "title": "VOLTAGE_SOURCE > VOLTAGE_SOURCE > VOLTAGE_SOURCE",
        "section": "VOLTAGE_SOURCE > VOLTAGE_SOURCE",
        "text": "BoundaryType.VOLTAGE_SOURCE = 4\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_mcad_3d_comp.html#is_mcad_3d_comp",
        "title": "is_mcad_3d_comp",
        "section": "is_mcad_3d_comp",
        "text": "bool: Flag indicating if this is a 3D composite MCAD model.\nThis property is read-only.\nis_mcad_3d_comp\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_mcad_3d_comp.html#ansys.edb.core.primitive.primitive.BoardBendDef.is_mcad_3d_comp",
        "title": "is_mcad_3d_comp > is_mcad_3d_comp > is_mcad_3d_comp",
        "section": "is_mcad_3d_comp > is_mcad_3d_comp",
        "text": "property BoardBendDef.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.is_null.html#ansys.edb.core.definition.package_def.PackageDef.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property PackageDef.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.BroadbandAdaptiveSolution",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.BroadbandAdaptiveSolution.html#broadbandadaptivesolution",
        "title": "BroadbandAdaptiveSolution",
        "section": "BroadbandAdaptiveSolution",
        "text": "Represents a broadband adaptive solution.\nstr: Lower-bound adaptive frequency.\nstr: Higher-bound adaptive frequency.\nint: Maximum number of adaptive passes.\nstr: Maximum delta S between adaptive passes.\nBroadbandAdaptiveSolution.high_frequency\nstr: Higher-bound adaptive frequency.\nBroadbandAdaptiveSolution.low_frequency\nstr: Lower-bound adaptive frequency.\nBroadbandAdaptiveSolution.max_delta\nstr: Maximum delta S between adaptive passes.\nBroadbandAdaptiveSolution.max_num_passes\nint: Maximum number of adaptive passes.\nBroadbandAdaptiveSolution\nlow_frequency\npython:str\nstr\nhigh_frequency\npython:str\nstr\nmax_num_passes\npython:int\nint\nmax_delta\npython:str\nstr\nBroadbandAdaptiveSolution.high_frequency\nstr\nBroadbandAdaptiveSolution.low_frequency\nstr\nBroadbandAdaptiveSolution.max_delta\nstr\nBroadbandAdaptiveSolution.max_num_passes\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.BroadbandAdaptiveSolution",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.BroadbandAdaptiveSolution.html#ansys.edb.core.simulation_setup.adaptive_solutions.BroadbandAdaptiveSolution",
        "title": "BroadbandAdaptiveSolution > BroadbandAdaptiveSolution > BroadbandAdaptiveSolution",
        "section": "BroadbandAdaptiveSolution > BroadbandAdaptiveSolution",
        "text": "class ansys.edb.core.simulation_setup.adaptive_solutions.BroadbandAdaptiveSolution(low_frequency='5GHz', high_frequency='10GHz', max_num_passes=10, max_delta='0.02')\n\nRepresents a broadband adaptive solution.\n\nAttributes\n\nlow_frequency\n\npython:str\n\nstr: Lower-bound adaptive frequency.\n\nhigh_frequency\n\npython:str\n\nstr: Higher-bound adaptive frequency.\n\nmax_num_passes\n\npython:int\n\nint: Maximum number of adaptive passes.\n\nmax_delta\n\npython:str\n\nstr: Maximum delta S between adaptive passes.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nBroadbandAdaptiveSolution.high_frequency\n\nstr: Higher-bound adaptive frequency.\n\nBroadbandAdaptiveSolution.low_frequency\n\nstr: Lower-bound adaptive frequency.\n\nBroadbandAdaptiveSolution.max_delta\n\nstr: Maximum delta S between adaptive passes.\n\nBroadbandAdaptiveSolution.max_num_passes\n\nint: Maximum number of adaptive passes.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.port_property",
        "href": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.port_property.html#port_property",
        "title": "port_property",
        "section": "port_property",
        "text": "PortProperty: Port property.\nA copy is returned. Use the setter for any modifications to be reflected.\nport_property\nPortProperty"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.port_property",
        "href": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.port_property.html#ansys.edb.core.definition.io_component_property.IOComponentProperty.port_property",
        "title": "port_property > port_property > port_property",
        "section": "port_property > port_property",
        "text": "property IOComponentProperty.port_property\n\nPortProperty: Port property.\n\nA copy is returned. Use the setter for any modifications to be reflected.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.create_3d_comp.html#create_3d_comp",
        "title": "create_3d_comp",
        "section": "create_3d_comp",
        "text": "Create a 3D composite model from an MCAD file.\n3D composite model created.\ncreate_3d_comp\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.create_3d_comp.html#ansys.edb.core.primitive.primitive.Circle.create_3d_comp",
        "title": "create_3d_comp > create_3d_comp > create_3d_comp",
        "section": "create_3d_comp > create_3d_comp",
        "text": "Circle.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nReturns\n\nMcadModel\n\n3D composite model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.get_visit",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.get_visit.html#get_visit",
        "title": "get_visit",
        "section": "get_visit",
        "text": "int: Visit count for the R-tree.\nget_visit\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.get_visit",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.get_visit.html#ansys.edb.core.geometry.r_tree.RTree.get_visit",
        "title": "get_visit > get_visit > get_visit",
        "section": "get_visit > get_visit",
        "text": "property RTree.get_visit\n\nint: Visit count for the R-tree.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty.die_orientation",
        "href": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty.die_orientation.html#die_orientation",
        "title": "die_orientation",
        "section": "die_orientation",
        "text": "DieOrientation: Die orientation.\ndie_orientation\nDieOrientation"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty.die_orientation",
        "href": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty.die_orientation.html#ansys.edb.core.definition.die_property.DieProperty.die_orientation",
        "title": "die_orientation > die_orientation > die_orientation",
        "section": "die_orientation > die_orientation",
        "text": "property DieProperty.die_orientation\n\nDieOrientation: Die orientation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.roughness_enabled",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.roughness_enabled.html#roughness_enabled",
        "title": "roughness_enabled",
        "section": "roughness_enabled",
        "text": "bool: Flag indicating if roughness models are used by the layer.\nroughness_enabled\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.roughness_enabled",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.roughness_enabled.html#ansys.edb.core.layer.stackup_layer.StackupLayer.roughness_enabled",
        "title": "roughness_enabled > roughness_enabled > roughness_enabled",
        "section": "roughness_enabled > roughness_enabled",
        "text": "property StackupLayer.roughness_enabled\n\nbool: Flag indicating if roughness models are used by the layer.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.die_property.DieType.NONE",
        "href": "api/_autosummary/ansys.edb.core.definition.die_property.DieType.NONE.html#none",
        "title": "NONE",
        "section": "NONE",
        "text": "NONE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.die_property.DieType.NONE",
        "href": "api/_autosummary/ansys.edb.core.definition.die_property.DieType.NONE.html#ansys.edb.core.definition.die_property.DieType.NONE",
        "title": "NONE > NONE > NONE",
        "section": "NONE > NONE",
        "text": "DieType.NONE = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDs given a product ID for the layout object.\nID representing a product that supports the EDB.\nAll user-defined attribute IDs for properties stored in the object\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_product_property_ids.html#ansys.edb.core.primitive.primitive.PadstackInstance.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "PadstackInstance.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nReturns\n\npython:list[python:int]\n\nAll user-defined attribute IDs for properties stored in the object\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.component",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.component.html#component",
        "title": "component",
        "section": "component",
        "text": "ComponentGroup:         Component of the Connectable object.\ncomponent\nComponentGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.component",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.component.html#ansys.edb.core.terminal.terminals.BundleTerminal.component",
        "title": "component > component > component",
        "section": "component > component",
        "text": "property BundleTerminal.component\n\nComponentGroup:         Component of the Connectable object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the product property.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.get_product_property.html#ansys.edb.core.terminal.terminals.BundleTerminal.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "BundleTerminal.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nReturns\n\npython:str\n\nString stored in the product property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.id.html#ansys.edb.core.hierarchy.spice_model.SPICEModel.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property SPICEModel.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.members",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.members.html#members",
        "title": "members",
        "section": "members",
        "text": "list of Connectables: All group members.\nThis property is read-only.\nmembers\nlist"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.members",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.members.html#ansys.edb.core.hierarchy.group.Group.members",
        "title": "members > members > members",
        "section": "members > members",
        "text": "property Group.members\n\nlist of Connectables: All group members.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXSimulationSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXSimulationSettings.html#raptorxsimulationsettings",
        "title": "RaptorXSimulationSettings",
        "section": "RaptorXSimulationSettings",
        "text": "Represents SIWave simulation settings.\nRaptorXSimulationSettings.advanced\nRaptorXAdvancedSettings: Advanced settings for RaptorX simulations.\nRaptorXSimulationSettings.enabled\nbool: Flag indicating if the simulation setup is enabled.\nRaptorXSimulationSettings.general\nRaptorXGeneralSettings: General settings for RaptorX simulations.\nRaptorXSimulationSettings.msg\nEDBObjMessage: Protobuf message that represents this object's ID.\nRaptorXSimulationSettings\nRaptorXSimulationSettings.advanced\nRaptorXAdvancedSettings\nRaptorXSimulationSettings.enabled\nbool\nRaptorXSimulationSettings.general\nRaptorXGeneralSettings\nRaptorXSimulationSettings.msg\nEDBObjMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXSimulationSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXSimulationSettings.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXSimulationSettings",
        "title": "RaptorXSimulationSettings > RaptorXSimulationSettings > RaptorXSimulationSettings",
        "section": "RaptorXSimulationSettings > RaptorXSimulationSettings",
        "text": "class ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXSimulationSettings(sim_setup)\n\nRepresents SIWave simulation settings.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nRaptorXSimulationSettings.advanced\n\nRaptorXAdvancedSettings: Advanced settings for RaptorX simulations.\n\nRaptorXSimulationSettings.enabled\n\nbool: Flag indicating if the simulation setup is enabled.\n\nRaptorXSimulationSettings.general\n\nRaptorXGeneralSettings: General settings for RaptorX simulations.\n\nRaptorXSimulationSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object's ID.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.draw_override",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.draw_override.html#draw_override",
        "title": "draw_override",
        "section": "draw_override",
        "text": "DrawOverride: Draw override of the layer.\ndraw_override\nDrawOverride"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.draw_override",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.draw_override.html#ansys.edb.core.layer.via_layer.ViaLayer.draw_override",
        "title": "draw_override > draw_override > draw_override",
        "section": "draw_override > draw_override",
        "text": "property ViaLayer.draw_override\n\nDrawOverride: Draw override of the layer.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_mcad_3d_comp.html#is_mcad_3d_comp",
        "title": "is_mcad_3d_comp",
        "section": "is_mcad_3d_comp",
        "text": "bool: Flag indicating if this is a 3D composite MCAD model.\nThis property is read-only.\nis_mcad_3d_comp\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_mcad_3d_comp.html#ansys.edb.core.terminal.terminals.Terminal.is_mcad_3d_comp",
        "title": "is_mcad_3d_comp > is_mcad_3d_comp > is_mcad_3d_comp",
        "section": "is_mcad_3d_comp > is_mcad_3d_comp",
        "text": "property Terminal.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_mcad_stride.html#is_mcad_stride",
        "title": "is_mcad_stride",
        "section": "is_mcad_stride",
        "text": "bool: Flag indicating if this is a Stride MCAD model.\nThis property is read-only.\nis_mcad_stride\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_mcad_stride.html#ansys.edb.core.terminal.terminals.BundleTerminal.is_mcad_stride",
        "title": "is_mcad_stride > is_mcad_stride > is_mcad_stride",
        "section": "is_mcad_stride > is_mcad_stride",
        "text": "property BundleTerminal.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.use_reference_from_hierarchy",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.use_reference_from_hierarchy.html#use_reference_from_hierarchy",
        "title": "use_reference_from_hierarchy",
        "section": "use_reference_from_hierarchy",
        "text": "bool: Flag indicating if the terminal can use references from the hierarchy.\nuse_reference_from_hierarchy\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.use_reference_from_hierarchy",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.use_reference_from_hierarchy.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.use_reference_from_hierarchy",
        "title": "use_reference_from_hierarchy > use_reference_from_hierarchy > use_reference_from_hierarchy",
        "section": "use_reference_from_hierarchy > use_reference_from_hierarchy",
        "text": "property TerminalInstanceTerminal.use_reference_from_hierarchy\n\nbool: Flag indicating if the terminal can use references from the hierarchy.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.msg",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.msg",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.msg.html#ansys.edb.core.terminal.terminals.BundleTerminal.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property BundleTerminal.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.layout",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.layout.html#layout",
        "title": "layout",
        "section": "layout",
        "text": "Layout: Layout owning the object.\nThis property is read-only.\nlayout\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.layout",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.layout.html#ansys.edb.core.terminal.terminals.PointTerminal.layout",
        "title": "layout > layout > layout",
        "section": "layout > layout",
        "text": "property PointTerminal.layout\n\nLayout: Layout owning the object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.value.Value",
        "href": "api/_autosummary/ansys.edb.core.utility.value.Value.html#value",
        "title": "Value",
        "section": "Value",
        "text": "Represents a number or an expression.\nA value can be either a constant (such as 1, 2.35, \"7+0.3i\", and \"23mm\") or\nparametric (such as.``w1 + w2``).\nIf the value is parametric, the _owner attribute must be set to the object that hosts the\nvariables used. If the owner is Cell or\nLayout, the expression can reference both database variables\nand cell variables. A better way to create a parametric values is to call the\nobj_with_variables.create_value(str) method, which automatically sets the\n_owner parameter to the correct object.\nValues can be used in expressions with the following operators:\nOperator\nOperation\nReturn Value\n+\naddition\nValue\n-\nsubtraction or negation\nValue\n*\nmultiplication\nValue\n/\ndivision\nValue\n//\nfloor division\ninteger\n**\npower\nValue\n==\nequality\nbool\n<\nless than\nbool\n>\ngreater than\nbool\nThe value is evaluated to a constant (if it is parametric) before applying the operators.\nValue assigned to the new value.\nCell,\nLayout,\nComponentDef\nValue.equals(other[, tolerance])\nCheck if this value and other value are equivalent when evaluated.\nValue.complex\ncomplex: Complex value from the value object.\nValue.double\nfloat: Float from the value object.\nValue.is_complex\nbool: Flag indicating if the the value is a complex number (has a non-zero imaginary part).\nValue.is_parametric\nbool: Flag indicating if the value is parametric (dependent on variables).\nValue.sqrt\nSquare root of this value as a constant value.\nValue.value\ncomplex: Evaluation to a constant and return as a float or complex.\nValue\nMathematical operators supported by values\n1\n2.35\n\"7+0.3i\"\n\"23mm\"\n_owner\nCell\nLayout\nobj_with_variables.create_value(str)\n_owner\npython:None\nDatabase\nCell\nLayout\nComponentDef\nValue.equals\nValue.complex\ncomplex\nValue.double\nfloat\nValue.is_complex\nbool\nValue.is_parametric\nbool\nValue.sqrt\nValue.value\ncomplex"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.value.Value",
        "href": "api/_autosummary/ansys.edb.core.utility.value.Value.html#ansys.edb.core.utility.value.Value",
        "title": "Value > Value > Value",
        "section": "Value > Value",
        "text": "class ansys.edb.core.utility.value.Value(val, _owner=None)\n\nRepresents a number or an expression.\n\nNotes\n\nA value can be either a constant (such as 1, 2.35, \"7+0.3i\", and \"23mm\") or\nparametric (such as.``w1 + w2``).\n\nIf the value is parametric, the _owner attribute must be set to the object that hosts the\nvariables used. If the owner is Cell or\nLayout, the expression can reference both database variables\nand cell variables. A better way to create a parametric values is to call the\nobj_with_variables.create_value(str) method, which automatically sets the\n_owner parameter to the correct object.\n\nValues can be used in expressions with the following operators:\n\nMathematical operators supported by values\n\n\n\n\n\n\n\nOperator\n\nOperation\n\nReturn Value\n\n+\n\naddition\n\nValue\n\n-\n\nsubtraction or negation\n\nValue\n\n*\n\nmultiplication\n\nValue\n\n/\n\ndivision\n\nValue\n\n//\n\nfloor division\n\ninteger\n\n**\n\npower\n\nValue\n\n==\n\nequality\n\nbool\n\n<\n\nless than\n\nbool\n\n>\n\ngreater than\n\nbool\n\nThe value is evaluated to a constant (if it is parametric) before applying the operators.\n\nAttributes\n\nval\n\nValueLike\n\nValue assigned to the new value.\n\n_owner\n\npython:None, Database,\n\nCell,\nLayout,\nComponentDef\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nValue.equals(other[, tolerance])\n\nCheck if this value and other value are equivalent when evaluated.\n\n\n\nAttributes\n\n\n\n\n\n\n\nValue.complex\n\ncomplex: Complex value from the value object.\n\nValue.double\n\nfloat: Float from the value object.\n\nValue.is_complex\n\nbool: Flag indicating if the the value is a complex number (has a non-zero imaginary part).\n\nValue.is_parametric\n\nbool: Flag indicating if the value is parametric (dependent on variables).\n\nValue.sqrt\n\nSquare root of this value as a constant value.\n\nValue.value\n\ncomplex: Evaluation to a constant and return as a float or complex.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.name",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the hierarchy object.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.name",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.name.html#ansys.edb.core.hierarchy.via_group.ViaGroup.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property ViaGroup.name\n\nstr: Name of the hierarchy object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.override_shrink_factor",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.override_shrink_factor.html#override_shrink_factor",
        "title": "override_shrink_factor",
        "section": "override_shrink_factor",
        "text": "float: Shrink factor override value.\noverride_shrink_factor\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.override_shrink_factor",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.override_shrink_factor.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.override_shrink_factor",
        "title": "override_shrink_factor > override_shrink_factor > override_shrink_factor",
        "section": "override_shrink_factor > override_shrink_factor",
        "text": "property RaptorXAdvancedSettings.override_shrink_factor\n\nfloat: Shrink factor override value.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.via_report_path",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.via_report_path.html#via_report_path",
        "title": "via_report_path",
        "section": "via_report_path",
        "text": "str: Path to the via report.\nvia_report_path\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.via_report_path",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.via_report_path.html#ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.via_report_path",
        "title": "via_report_path > via_report_path > via_report_path",
        "section": "via_report_path > via_report_path",
        "text": "property SIWaveDCIRSimulationSettings.via_report_path\n\nstr: Path to the via report.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.html#terminalinstanceterminal",
        "title": "TerminalInstanceTerminal",
        "section": "TerminalInstanceTerminal",
        "text": "Represents a terminal instance terminal.\nTerminalInstanceTerminal.cast([term_type])\nCast the terminal object to the correct concrete type, fetching the type if necessary.\nTerminalInstanceTerminal.create(layout, ...)\nCreate a terminal instance terminal.\nTerminalInstanceTerminal.create_3d_comp()\nCreate a 3D composite model from an MCAD file.\nTerminalInstanceTerminal.create_hfss()\nCreate an HFSS model from an MCAD file.\nTerminalInstanceTerminal.create_stride()\nCreate a Stride model from an MCAD file.\nTerminalInstanceTerminal.delete()\nDelete the layout object.\nTerminalInstanceTerminal.find(layout, name)\nFind a terminal by name in a given layout.\nTerminalInstanceTerminal.find_by_id(layout, uid)\nFind a Connectable object by database ID in a given layout.\nTerminalInstanceTerminal.get_product_property(...)\nGet the product property of the layout object for a given product ID and attribute ID.\nTerminalInstanceTerminal.get_product_property_ids(prod_id)\nGet a list of attribute IDs given a product ID for the layout object.\nTerminalInstanceTerminal.product_solver_names(...)\nGet the list of solver names.\nTerminalInstanceTerminal.product_solver_option(...)\nGet the name of the product solver option.\nTerminalInstanceTerminal.set_product_property(...)\nSet the product property of the layout object for a given product ID and attribute ID.\nTerminalInstanceTerminal.set_product_solver_option(...)\nSet the product solver option.\nTerminalInstanceTerminal.boundary_type\nBoundaryType: Boundary type of the terminal.\nTerminalInstanceTerminal.bundle_terminal\nBundleTerminal: Bundle terminal that the terminal belongs to, if any.\nTerminalInstanceTerminal.component\nComponentGroup:         Component of the Connectable object.\nTerminalInstanceTerminal.edb_uid\nint: Unique, persistent ID for the Connectable object.\nTerminalInstanceTerminal.group\nGroup object.\nTerminalInstanceTerminal.hfss_pi_type\nHfssPIType: HFSS PI type.\nTerminalInstanceTerminal.id\nint: Unique ID of the EDB object.\nTerminalInstanceTerminal.impedance\nValue: Impedance of the terminal.\nTerminalInstanceTerminal.is_auto_port\nbool: Flag indicating if the terminal is an auto port.\nTerminalInstanceTerminal.is_circuit_port\nbool: Flag indicating if the terminal is a circuit port.\nTerminalInstanceTerminal.is_interface_terminal\nbool: Flag indicating if the terminal is an interface.\nTerminalInstanceTerminal.is_mcad\nbool: Flag indicating if this is an MCAD model.\nTerminalInstanceTerminal.is_mcad_3d_comp\nbool: Flag indicating if this is a 3D composite MCAD model.\nTerminalInstanceTerminal.is_mcad_hfss\nbool: Flag indicating if this is an HFSS MCAD model.\nTerminalInstanceTerminal.is_mcad_stride\nbool: Flag indicating if this is a Stride MCAD model.\nTerminalInstanceTerminal.is_null\nbool: Flag indicating if the object exists in the database.\nTerminalInstanceTerminal.is_reference_terminal\nbool: Flag indicating if the terminal is a reference terminal.\nTerminalInstanceTerminal.layout\nLayout: Layout owning the object.\nTerminalInstanceTerminal.layout_obj_type\n\nTerminalInstanceTerminal.model\nstr: S-parameter model.\nTerminalInstanceTerminal.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nTerminalInstanceTerminal.name\nstr: Name of the terminal.\nTerminalInstanceTerminal.net\nNet: Net of the Connectable object.\nTerminalInstanceTerminal.obj_type\nLayoutObjType: Layout object type.\nTerminalInstanceTerminal.port_post_processing_prop\nPortPostProcessingProp: Port postprocessing properties.\nTerminalInstanceTerminal.reference_layer\nLayer: Layer that the terminal references, if any, by either layer object or name.\nTerminalInstanceTerminal.reference_terminal\nTerminal: Terminal that the terminal references, if any.\nTerminalInstanceTerminal.rlc_boundary_parameters\nRlc: RLC boundary parameters.\nTerminalInstanceTerminal.source_amplitude\nValue: Source amplitude of the terminal.\nTerminalInstanceTerminal.source_phase\nValue: Source phase of the terminal.\nTerminalInstanceTerminal.term_to_ground\nSourceTermToGroundType: Source terminal-to-ground type.\nTerminalInstanceTerminal.terminal_instance\nTerminalInstance: Terminal instance.\nTerminalInstanceTerminal.type\n\nTerminalInstanceTerminal.use_reference_from_hierarchy\nbool: Flag indicating if the terminal can use references from the hierarchy.\nTerminalInstanceTerminal\nTerminalInstanceTerminal.cast\nTerminalInstanceTerminal.create\nTerminalInstanceTerminal.create_3d_comp\nTerminalInstanceTerminal.create_hfss\nTerminalInstanceTerminal.create_stride\nTerminalInstanceTerminal.delete\nTerminalInstanceTerminal.find\nTerminalInstanceTerminal.find_by_id\nTerminalInstanceTerminal.get_product_property\nTerminalInstanceTerminal.get_product_property_ids\nTerminalInstanceTerminal.product_solver_names\nTerminalInstanceTerminal.product_solver_option\nTerminalInstanceTerminal.set_product_property\nTerminalInstanceTerminal.set_product_solver_option\nTerminalInstanceTerminal.boundary_type\nBoundaryType\nTerminalInstanceTerminal.bundle_terminal\nBundleTerminal\nTerminalInstanceTerminal.component\nComponentGroup\nTerminalInstanceTerminal.edb_uid\nint\nTerminalInstanceTerminal.group\nGroup\nTerminalInstanceTerminal.hfss_pi_type\nHfssPIType\nTerminalInstanceTerminal.id\nint\nTerminalInstanceTerminal.impedance\nValue\nTerminalInstanceTerminal.is_auto_port\nbool\nTerminalInstanceTerminal.is_circuit_port\nbool\nTerminalInstanceTerminal.is_interface_terminal\nbool\nTerminalInstanceTerminal.is_mcad\nbool\nTerminalInstanceTerminal.is_mcad_3d_comp\nbool\nTerminalInstanceTerminal.is_mcad_hfss\nbool\nTerminalInstanceTerminal.is_mcad_stride\nbool\nTerminalInstanceTerminal.is_null\nbool\nTerminalInstanceTerminal.is_reference_terminal\nbool\nTerminalInstanceTerminal.layout\nLayout\nTerminalInstanceTerminal.layout_obj_type\nTerminalInstanceTerminal.model\nstr\nTerminalInstanceTerminal.msg\nEDBObjMessage\nTerminalInstanceTerminal.name\nstr\nTerminalInstanceTerminal.net\nNet\nTerminalInstanceTerminal.obj_type\nLayoutObjType\nTerminalInstanceTerminal.port_post_processing_prop\nPortPostProcessingProp\nTerminalInstanceTerminal.reference_layer\nLayer\nTerminalInstanceTerminal.reference_terminal\nTerminal\nTerminalInstanceTerminal.rlc_boundary_parameters\nRlc\nTerminalInstanceTerminal.source_amplitude\nValue\nTerminalInstanceTerminal.source_phase\nValue\nTerminalInstanceTerminal.term_to_ground\nSourceTermToGroundType\nTerminalInstanceTerminal.terminal_instance\nTerminalInstance\nTerminalInstanceTerminal.type\nTerminalInstanceTerminal.use_reference_from_hierarchy\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal",
        "title": "TerminalInstanceTerminal > TerminalInstanceTerminal > TerminalInstanceTerminal",
        "section": "TerminalInstanceTerminal > TerminalInstanceTerminal",
        "text": "class ansys.edb.core.terminal.terminals.TerminalInstanceTerminal(msg)\n\nRepresents a terminal instance terminal.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nTerminalInstanceTerminal.cast([term_type])\n\nCast the terminal object to the correct concrete type, fetching the type if necessary.\n\nTerminalInstanceTerminal.create(layout, ...)\n\nCreate a terminal instance terminal.\n\nTerminalInstanceTerminal.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nTerminalInstanceTerminal.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nTerminalInstanceTerminal.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nTerminalInstanceTerminal.delete()\n\nDelete the layout object.\n\nTerminalInstanceTerminal.find(layout, name)\n\nFind a terminal by name in a given layout.\n\nTerminalInstanceTerminal.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nTerminalInstanceTerminal.get_product_property(...)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nTerminalInstanceTerminal.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nTerminalInstanceTerminal.product_solver_names(...)\n\nGet the list of solver names.\n\nTerminalInstanceTerminal.product_solver_option(...)\n\nGet the name of the product solver option.\n\nTerminalInstanceTerminal.set_product_property(...)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nTerminalInstanceTerminal.set_product_solver_option(...)\n\nSet the product solver option.\n\n\n\nAttributes\n\n\n\n\n\n\n\nTerminalInstanceTerminal.boundary_type\n\nBoundaryType: Boundary type of the terminal.\n\nTerminalInstanceTerminal.bundle_terminal\n\nBundleTerminal: Bundle terminal that the terminal belongs to, if any.\n\nTerminalInstanceTerminal.component\n\nComponentGroup:         Component of the Connectable object.\n\nTerminalInstanceTerminal.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nTerminalInstanceTerminal.group\n\nGroup object.\n\nTerminalInstanceTerminal.hfss_pi_type\n\nHfssPIType: HFSS PI type.\n\nTerminalInstanceTerminal.id\n\nint: Unique ID of the EDB object.\n\nTerminalInstanceTerminal.impedance\n\nValue: Impedance of the terminal.\n\nTerminalInstanceTerminal.is_auto_port\n\nbool: Flag indicating if the terminal is an auto port.\n\nTerminalInstanceTerminal.is_circuit_port\n\nbool: Flag indicating if the terminal is a circuit port.\n\nTerminalInstanceTerminal.is_interface_terminal\n\nbool: Flag indicating if the terminal is an interface.\n\nTerminalInstanceTerminal.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nTerminalInstanceTerminal.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nTerminalInstanceTerminal.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nTerminalInstanceTerminal.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nTerminalInstanceTerminal.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nTerminalInstanceTerminal.is_reference_terminal\n\nbool: Flag indicating if the terminal is a reference terminal.\n\nTerminalInstanceTerminal.layout\n\nLayout: Layout owning the object.\n\nTerminalInstanceTerminal.layout_obj_type\n\n\n\nTerminalInstanceTerminal.model\n\nstr: S-parameter model.\n\nTerminalInstanceTerminal.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nTerminalInstanceTerminal.name\n\nstr: Name of the terminal.\n\nTerminalInstanceTerminal.net\n\nNet: Net of the Connectable object.\n\nTerminalInstanceTerminal.obj_type\n\nLayoutObjType: Layout object type.\n\nTerminalInstanceTerminal.port_post_processing_prop\n\nPortPostProcessingProp: Port postprocessing properties.\n\nTerminalInstanceTerminal.reference_layer\n\nLayer: Layer that the terminal references, if any, by either layer object or name.\n\nTerminalInstanceTerminal.reference_terminal\n\nTerminal: Terminal that the terminal references, if any.\n\nTerminalInstanceTerminal.rlc_boundary_parameters\n\nRlc: RLC boundary parameters.\n\nTerminalInstanceTerminal.source_amplitude\n\nValue: Source amplitude of the terminal.\n\nTerminalInstanceTerminal.source_phase\n\nValue: Source phase of the terminal.\n\nTerminalInstanceTerminal.term_to_ground\n\nSourceTermToGroundType: Source terminal-to-ground type.\n\nTerminalInstanceTerminal.terminal_instance\n\nTerminalInstance: Terminal instance.\n\nTerminalInstanceTerminal.type\n\n\n\nTerminalInstanceTerminal.use_reference_from_hierarchy\n\nbool: Flag indicating if the terminal can use references from the hierarchy.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.find",
        "href": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.find.html#find",
        "title": "find",
        "section": "find",
        "text": "Find a component definition in a given database.\nDatabase to search for the component definition.\nName of the component definition.\nComponent definition found, None otherwise.\nfind\nDatabase\npython:str\nComponentDef\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.find",
        "href": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.find.html#ansys.edb.core.definition.component_def.ComponentDef.find",
        "title": "find > find > find",
        "section": "find > find",
        "text": "classmethod ComponentDef.find(db, comp_def_name)\n\nFind a component definition in a given database.\n\nParameters\n\ndb\n\nDatabase\n\nDatabase to search for the component definition.\n\ncomp_def_name\n\npython:str\n\nName of the component definition.\n\nReturns\n\nComponentDef\n\nComponent definition found, None otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.group",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.group.html#group",
        "title": "group",
        "section": "group",
        "text": "Group object.\ngroup\nGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.group",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.group.html#ansys.edb.core.terminal.terminals.Terminal.group",
        "title": "group > group > group",
        "section": "group > group",
        "text": "property Terminal.group\n\nGroup object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.thin_dielectric_layer_threshold",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.thin_dielectric_layer_threshold.html#thin_dielectric_layer_threshold",
        "title": "thin_dielectric_layer_threshold",
        "section": "thin_dielectric_layer_threshold",
        "text": "str: Value below which dielectric layers are merged with adjacent dielectric layers.\nthin_dielectric_layer_threshold\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.thin_dielectric_layer_threshold",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.thin_dielectric_layer_threshold.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.thin_dielectric_layer_threshold",
        "title": "thin_dielectric_layer_threshold > thin_dielectric_layer_threshold > thin_dielectric_layer_threshold",
        "section": "thin_dielectric_layer_threshold > thin_dielectric_layer_threshold",
        "text": "property HFSSSolverSettings.thin_dielectric_layer_threshold\n\nstr: Value below which dielectric layers are merged with adjacent dielectric layers.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.type.html#type",
        "title": "type",
        "section": "type",
        "text": "type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.type.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.type",
        "title": "type > type > type",
        "section": "type > type",
        "text": "PadstackInstanceTerminal.type = 3\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.defeature",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.defeature.html#defeature",
        "title": "defeature",
        "section": "defeature",
        "text": "Defeature a polygon.\nTolerance.\ndefeature\npython:float\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.defeature",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.defeature.html#ansys.edb.core.geometry.polygon_data.PolygonData.defeature",
        "title": "defeature > defeature > defeature",
        "section": "defeature > defeature",
        "text": "PolygonData.defeature(tol=1e-09)\n\nDefeature a polygon.\n\nParameters\n\ntol\n\npython:float, default: 1e-9\n\nTolerance.\n\nReturns\n\nPolygonData\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.impedance",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.impedance.html#impedance",
        "title": "impedance",
        "section": "impedance",
        "text": "Value: Impedance of the terminal.\nimpedance\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.impedance",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.impedance.html#ansys.edb.core.terminal.terminals.EdgeTerminal.impedance",
        "title": "impedance > impedance > impedance",
        "section": "impedance > impedance",
        "text": "property EdgeTerminal.impedance\n\nValue: Impedance of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.layout_obj_type.html#layout_obj_type",
        "title": "layout_obj_type",
        "section": "layout_obj_type",
        "text": "layout_obj_type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.layout_obj_type.html#ansys.edb.core.primitive.primitive.Polygon.layout_obj_type",
        "title": "layout_obj_type > layout_obj_type > layout_obj_type",
        "section": "layout_obj_type > layout_obj_type",
        "text": "Polygon.layout_obj_type = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.create_hfss.html#create_hfss",
        "title": "create_hfss",
        "section": "create_hfss",
        "text": "Create an HFSS model from an MCAD file.\nHFSS model created.\ncreate_hfss\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.create_hfss.html#ansys.edb.core.primitive.primitive.Primitive.create_hfss",
        "title": "create_hfss > create_hfss > create_hfss",
        "section": "create_hfss > create_hfss",
        "text": "Primitive.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nReturns\n\nMcadModel\n\nHFSS model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.create_hfss.html#create_hfss",
        "title": "create_hfss",
        "section": "create_hfss",
        "text": "Create an HFSS model from an MCAD file.\nHFSS model created.\ncreate_hfss\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.create_hfss.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.create_hfss",
        "title": "create_hfss > create_hfss > create_hfss",
        "section": "create_hfss > create_hfss",
        "text": "PinGroupTerminal.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nReturns\n\nMcadModel\n\nHFSS model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.description",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.description.html#description",
        "title": "description",
        "section": "description",
        "text": "str : Description of the net class.\ndescription\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.description",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.description.html#ansys.edb.core.net.differential_pair.DifferentialPair.description",
        "title": "description > description > description",
        "section": "description > description",
        "text": "property DifferentialPair.description\n\nstr : Description of the net class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.create_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.create_stride.html#create_stride",
        "title": "create_stride",
        "section": "create_stride",
        "text": "Create a Stride model from an MCAD file.\nStride model created.\ncreate_stride\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.create_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.create_stride.html#ansys.edb.core.primitive.primitive.Path.create_stride",
        "title": "create_stride > create_stride > create_stride",
        "section": "create_stride > create_stride",
        "text": "Path.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nReturns\n\nMcadModel\n\nStride model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.net",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.net.html#net",
        "title": "net",
        "section": "net",
        "text": "Net: Net of the Connectable object.\nThis property can be set with a Net instance, a string, or None.\nnet\nNet\nNet\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.net",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.net.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.net",
        "title": "net > net > net",
        "section": "net > net",
        "text": "property VoltageRegulator.net\n\nNet: Net of the Connectable object.\n\nThis property can be set with a Net instance, a string, or None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.is_mcad_hfss.html#is_mcad_hfss",
        "title": "is_mcad_hfss",
        "section": "is_mcad_hfss",
        "text": "bool: Flag indicating if this is an HFSS MCAD model.\nThis property is read-only.\nis_mcad_hfss\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.is_mcad_hfss.html#ansys.edb.core.hierarchy.group.Group.is_mcad_hfss",
        "title": "is_mcad_hfss > is_mcad_hfss > is_mcad_hfss",
        "section": "is_mcad_hfss > is_mcad_hfss",
        "text": "property Group.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.name",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the layer.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.name",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.name.html#ansys.edb.core.layer.layer.Layer.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property Layer.name\n\nstr: Name of the layer.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.id.html#ansys.edb.core.primitive.primitive.Polygon.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property Polygon.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform.Transform.create",
        "href": "api/_autosummary/ansys.edb.core.utility.transform.Transform.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a transform object.\nScale parameter.\nRotation angle, specified counter-clockwise in radians.\nMirror about Y-axis.\nX offset.\nY offset.\ncreate\nbool\nTransform"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform.Transform.create",
        "href": "api/_autosummary/ansys.edb.core.utility.transform.Transform.create.html#ansys.edb.core.utility.transform.Transform.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod Transform.create(scale, angle, mirror, offset_x, offset_y)\n\nCreate a transform object.\n\nParameters\n\nscale\n\nValueLike\n\nScale parameter.\n\nangle\n\nValueLike\n\nRotation angle, specified counter-clockwise in radians.\n\nmirror\n\nbool\n\nMirror about Y-axis.\n\noffset_x\n\nValueLike\n\nX offset.\n\noffset_y\n\nValueLike\n\nY offset.\n\nReturns\n\nTransform\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.arc_data",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.arc_data.html#arc_data",
        "title": "arc_data",
        "section": "arc_data",
        "text": "list: List of segments that represent the arc data of a polygon.\narc_data\nlist"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.arc_data",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.arc_data.html#ansys.edb.core.geometry.polygon_data.PolygonData.arc_data",
        "title": "arc_data > arc_data > arc_data",
        "section": "arc_data > arc_data",
        "text": "property PolygonData.arc_data\n\nlist: List of segments that represent the arc data of a polygon.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.rlc",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.rlc.html#rlc",
        "title": "rlc",
        "section": "rlc",
        "text": "Get the RLC value for a pin pair.\nrlc\npython:tuple\npython:str\npython:str\nRlc"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.rlc",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.rlc.html#ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.rlc",
        "title": "rlc > rlc > rlc",
        "section": "rlc > rlc",
        "text": "PinPairModel.rlc(pin_pair)\n\nGet the RLC value for a pin pair.\n\nParameters\n\npin_pair\n\npython:tuple[python:str, python:str]\n\n\n\nReturns\n\nRlc\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.html#structure3d",
        "title": "Structure3D",
        "section": "Structure3D",
        "text": "Represents a 3D structure.\nStructure3D.add_member(member)\nAdd an object to the group.\nStructure3D.cast()\nCast the group object to the correct concrete type.\nStructure3D.create(layout, name)\nCreate a 3D structure.\nStructure3D.create_3d_comp()\nCreate a 3D composite model from an MCAD file.\nStructure3D.create_hfss()\nCreate an HFSS model from an MCAD file.\nStructure3D.create_stride()\nCreate a Stride model from an MCAD file.\nStructure3D.delete()\nDelete the layout object.\nStructure3D.find(layout, name)\nFind a group by name.\nStructure3D.find_by_id(layout, uid)\nFind a Connectable object by database ID in a given layout.\nStructure3D.get_material(evaluate)\nGet the material for the 3D structure.\nStructure3D.get_product_property(prod_id, ...)\nGet the product property of the layout object for a given product ID and attribute ID.\nStructure3D.get_product_property_ids(prod_id)\nGet a list of attribute IDs given a product ID for the layout object.\nStructure3D.remove_member(member)\nRemove an object from the group.\nStructure3D.set_material(mat_name)\nSet material for the 3D structure.\nStructure3D.set_product_property(prod_id, ...)\nSet the product property of the layout object for a given product ID and attribute ID.\nStructure3D.ungroup(recursive)\nDissolve the group.\nStructure3D.component\nComponentGroup:         Component of the Connectable object.\nStructure3D.component_def\nComponentDef: Component definition for the         hierarchy object if it exists, None otherwise.\nStructure3D.edb_uid\nint: Unique, persistent ID for the Connectable object.\nStructure3D.group\nGroup object.\nStructure3D.id\nint: Unique ID of the EDB object.\nStructure3D.is_mcad\nbool: Flag indicating if this is an MCAD model.\nStructure3D.is_mcad_3d_comp\nbool: Flag indicating if this is a 3D composite MCAD model.\nStructure3D.is_mcad_hfss\nbool: Flag indicating if this is an HFSS MCAD model.\nStructure3D.is_mcad_stride\nbool: Flag indicating if this is a Stride MCAD model.\nStructure3D.is_null\nbool: Flag indicating if the object exists in the database.\nStructure3D.layout\nLayout: Layout owning the object.\nStructure3D.layout_obj_type\n\nStructure3D.location\ntuple (Value,         Value):         Location [x, y] of the hierarchy object on the placement_layer object.\nStructure3D.members\nlist of Connectables: All group members.\nStructure3D.mesh_closure\nMeshClosure: Mesh closure property for the 3D structure.\nStructure3D.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nStructure3D.name\nstr: Name of the hierarchy object.\nStructure3D.net\nNet: Net of the Connectable object.\nStructure3D.obj_type\nLayoutObjType: Layout object type.\nStructure3D.placement_layer\nLayer: Placement layer for the hierarchy object.\nStructure3D.solve_independent_preference\nbool: Flag indicating if the object is assigned to solve independent of its parent context.\nStructure3D.thickness\nValue: Thickness for the 3D structure.\nStructure3D.transform\nTransform:         Transformation information of the hierarchy object.\nStructure3D\nStructure3D.add_member\nStructure3D.cast\nStructure3D.create\nStructure3D.create_3d_comp\nStructure3D.create_hfss\nStructure3D.create_stride\nStructure3D.delete\nStructure3D.find\nStructure3D.find_by_id\nStructure3D.get_material\nStructure3D.get_product_property\nStructure3D.get_product_property_ids\nStructure3D.remove_member\nStructure3D.set_material\nStructure3D.set_product_property\nStructure3D.ungroup\nStructure3D.component\nComponentGroup\nStructure3D.component_def\nComponentDef\nNone\nStructure3D.edb_uid\nint\nStructure3D.group\nGroup\nStructure3D.id\nint\nStructure3D.is_mcad\nbool\nStructure3D.is_mcad_3d_comp\nbool\nStructure3D.is_mcad_hfss\nbool\nStructure3D.is_mcad_stride\nbool\nStructure3D.is_null\nbool\nStructure3D.layout\nLayout\nStructure3D.layout_obj_type\nStructure3D.location\ntuple\nValue\nValue\nplacement_layer\nStructure3D.members\nlist\nStructure3D.mesh_closure\nMeshClosure\nStructure3D.msg\nEDBObjMessage\nStructure3D.name\nstr\nStructure3D.net\nNet\nStructure3D.obj_type\nLayoutObjType\nStructure3D.placement_layer\nLayer\nStructure3D.solve_independent_preference\nbool\nStructure3D.thickness\nValue\nStructure3D.transform\nTransform"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.html#ansys.edb.core.hierarchy.structure3d.Structure3D",
        "title": "Structure3D > Structure3D > Structure3D",
        "section": "Structure3D > Structure3D",
        "text": "class ansys.edb.core.hierarchy.structure3d.Structure3D(msg)\n\nRepresents a 3D structure.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nStructure3D.add_member(member)\n\nAdd an object to the group.\n\nStructure3D.cast()\n\nCast the group object to the correct concrete type.\n\nStructure3D.create(layout, name)\n\nCreate a 3D structure.\n\nStructure3D.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nStructure3D.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nStructure3D.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nStructure3D.delete()\n\nDelete the layout object.\n\nStructure3D.find(layout, name)\n\nFind a group by name.\n\nStructure3D.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nStructure3D.get_material(evaluate)\n\nGet the material for the 3D structure.\n\nStructure3D.get_product_property(prod_id, ...)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nStructure3D.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nStructure3D.remove_member(member)\n\nRemove an object from the group.\n\nStructure3D.set_material(mat_name)\n\nSet material for the 3D structure.\n\nStructure3D.set_product_property(prod_id, ...)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nStructure3D.ungroup(recursive)\n\nDissolve the group.\n\n\n\nAttributes\n\n\n\n\n\n\n\nStructure3D.component\n\nComponentGroup:         Component of the Connectable object.\n\nStructure3D.component_def\n\nComponentDef: Component definition for the         hierarchy object if it exists, None otherwise.\n\nStructure3D.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nStructure3D.group\n\nGroup object.\n\nStructure3D.id\n\nint: Unique ID of the EDB object.\n\nStructure3D.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nStructure3D.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nStructure3D.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nStructure3D.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nStructure3D.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nStructure3D.layout\n\nLayout: Layout owning the object.\n\nStructure3D.layout_obj_type\n\n\n\nStructure3D.location\n\ntuple (Value,         Value):         Location [x, y] of the hierarchy object on the placement_layer object.\n\nStructure3D.members\n\nlist of Connectables: All group members.\n\nStructure3D.mesh_closure\n\nMeshClosure: Mesh closure property for the 3D structure.\n\nStructure3D.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nStructure3D.name\n\nstr: Name of the hierarchy object.\n\nStructure3D.net\n\nNet: Net of the Connectable object.\n\nStructure3D.obj_type\n\nLayoutObjType: Layout object type.\n\nStructure3D.placement_layer\n\nLayer: Placement layer for the hierarchy object.\n\nStructure3D.solve_independent_preference\n\nbool: Flag indicating if the object is assigned to solve independent of its parent context.\n\nStructure3D.thickness\n\nValue: Thickness for the 3D structure.\n\nStructure3D.transform\n\nTransform:         Transformation information of the hierarchy object.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.BroadbandAdaptiveSolution.high_frequency",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.BroadbandAdaptiveSolution.high_frequency.html#high_frequency",
        "title": "high_frequency",
        "section": "high_frequency",
        "text": "str: Higher-bound adaptive frequency.\nhigh_frequency\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.BroadbandAdaptiveSolution.high_frequency",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.BroadbandAdaptiveSolution.high_frequency.html#ansys.edb.core.simulation_setup.adaptive_solutions.BroadbandAdaptiveSolution.high_frequency",
        "title": "high_frequency > high_frequency > high_frequency",
        "section": "high_frequency > high_frequency",
        "text": "property BroadbandAdaptiveSolution.high_frequency\n\nstr: Higher-bound adaptive frequency.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.product_solver_names",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.product_solver_names.html#product_solver_names",
        "title": "product_solver_names",
        "section": "product_solver_names",
        "text": "Get the list of solver names.\nID of the product.\nproduct_solver_names\nProductIdType\npython:list\nof\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.product_solver_names",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.product_solver_names.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.product_solver_names",
        "title": "product_solver_names > product_solver_names > product_solver_names",
        "section": "product_solver_names > product_solver_names",
        "text": "PadstackInstanceTerminal.product_solver_names(product_id)\n\nGet the list of solver names.\n\nParameters\n\nproduct_id\n\nProductIdType\n\nID of the product.\n\nReturns\n\npython:list of python:str\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings.max_passes",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings.max_passes.html#max_passes",
        "title": "max_passes",
        "section": "max_passes",
        "text": "int: Maximum number of conduction adaptive passes.\nmax_passes\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings.max_passes",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings.max_passes.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings.max_passes",
        "title": "max_passes > max_passes > max_passes",
        "section": "max_passes > max_passes",
        "text": "property HFSSDCRSettings.max_passes\n\nint: Maximum number of conduction adaptive passes.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.boundary_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.boundary_type.html#boundary_type",
        "title": "boundary_type",
        "section": "boundary_type",
        "text": "BoundaryType: Boundary type of the terminal.\nboundary_type\nBoundaryType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.boundary_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.boundary_type.html#ansys.edb.core.terminal.terminals.PointTerminal.boundary_type",
        "title": "boundary_type > boundary_type > boundary_type",
        "section": "boundary_type > boundary_type",
        "text": "property PointTerminal.boundary_type\n\nBoundaryType: Boundary type of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.is_null",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.is_null",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.is_null.html#ansys.edb.core.hierarchy.spice_model.SPICEModel.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property SPICEModel.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.cast",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.cast.html#cast",
        "title": "cast",
        "section": "cast",
        "text": "Cast the primitive object to the correct concrete type.\ncast\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.cast",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.cast.html#ansys.edb.core.primitive.primitive.Bondwire.cast",
        "title": "cast > cast > cast",
        "section": "cast > cast",
        "text": "Bondwire.cast()\n\nCast the primitive object to the correct concrete type.\n\nReturns\n\nPrimitive\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.id.html#ansys.edb.core.terminal.terminals.PointTerminal.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property PointTerminal.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.die_property.DieOrientation.CHIP_DOWN",
        "href": "api/_autosummary/ansys.edb.core.definition.die_property.DieOrientation.CHIP_DOWN.html#chip_down",
        "title": "CHIP_DOWN",
        "section": "CHIP_DOWN",
        "text": "CHIP_DOWN"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.die_property.DieOrientation.CHIP_DOWN",
        "href": "api/_autosummary/ansys.edb.core.definition.die_property.DieOrientation.CHIP_DOWN.html#ansys.edb.core.definition.die_property.DieOrientation.CHIP_DOWN",
        "title": "CHIP_DOWN > CHIP_DOWN > CHIP_DOWN",
        "section": "CHIP_DOWN > CHIP_DOWN",
        "text": "DieOrientation.CHIP_DOWN = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.distance",
        "href": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.distance.html#distance",
        "title": "distance",
        "section": "distance",
        "text": "Compute the shortest distance from the point to a line segment when an end point is given.         Otherwise, compute the distance between this point and another point.\nStart point of the line segment.\nEnd point of the line segment.\ndistance\nansys.edb.core.typing.PointLike\nansys.edb.core.typing.PointLike\npython:None\npython:float"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.distance",
        "href": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.distance.html#ansys.edb.core.geometry.point_data.PointData.distance",
        "title": "distance > distance > distance",
        "section": "distance > distance",
        "text": "PointData.distance(start, end=None)\n\nCompute the shortest distance from the point to a line segment when an end point is given.         Otherwise, compute the distance between this point and another point.\n\nParameters\n\nstart\n\nansys.edb.core.typing.PointLike\n\nStart point of the line segment.\n\nend\n\nansys.edb.core.typing.PointLike, default: python:None\n\nEnd point of the line segment.\n\nReturns\n\npython:float\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.SILKSCREEN_LAYER",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.SILKSCREEN_LAYER.html#silkscreen_layer",
        "title": "SILKSCREEN_LAYER",
        "section": "SILKSCREEN_LAYER",
        "text": "SILKSCREEN_LAYER"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.SILKSCREEN_LAYER",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.SILKSCREEN_LAYER.html#ansys.edb.core.layer.layer_collection.LayerType.SILKSCREEN_LAYER",
        "title": "SILKSCREEN_LAYER > SILKSCREEN_LAYER > SILKSCREEN_LAYER",
        "section": "SILKSCREEN_LAYER > SILKSCREEN_LAYER",
        "text": "LayerType.SILKSCREEN_LAYER = 9\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentType.INVALID",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentType.INVALID.html#invalid",
        "title": "INVALID",
        "section": "INVALID",
        "text": "INVALID"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentType.INVALID",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentType.INVALID.html#ansys.edb.core.hierarchy.component_group.ComponentType.INVALID",
        "title": "INVALID > INVALID > INVALID",
        "section": "INVALID > INVALID",
        "text": "ComponentType.INVALID = -1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.obj_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.obj_type.html#obj_type",
        "title": "obj_type",
        "section": "obj_type",
        "text": "LayoutObjType: Layout object type.\nThis property is read-only.\nobj_type\nLayoutObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.obj_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.obj_type.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.obj_type",
        "title": "obj_type > obj_type > obj_type",
        "section": "obj_type > obj_type",
        "text": "property PadstackInstanceTerminal.obj_type\n\nLayoutObjType: Layout object type.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.material",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.material.html#material",
        "title": "material",
        "section": "material",
        "text": "str: Material of the geometry.\nThis property is read-only.\nmaterial\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.material",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.material.html#ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.material",
        "title": "material > material > material",
        "section": "material > material",
        "text": "property LayoutObjInstance2DGeometry.material\n\nstr: Material of the geometry.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.max_frequency",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.max_frequency.html#max_frequency",
        "title": "max_frequency",
        "section": "max_frequency",
        "text": "str: Maximum frequency value, which controls the tightness of the model mesh.\nmax_frequency\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.max_frequency",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.max_frequency.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.max_frequency",
        "title": "max_frequency > max_frequency > max_frequency",
        "section": "max_frequency > max_frequency",
        "text": "property RaptorXGeneralSettings.max_frequency\n\nstr: Maximum frequency value, which controls the tightness of the model mesh.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.SolverType",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.SolverType.html#solvertype",
        "title": "SolverType",
        "section": "SolverType",
        "text": "Provides an enum representing HFSS solver types.\nSolverType.AUTO_SOLVER\n\nSolverType.DIRECT_SOLVER\n\nSolverType.ITERATIVE_SOLVER\n\nSolverType.NUM_SOLVER_TYPES\n\nSolverType\nSolverType.AUTO_SOLVER\nSolverType.DIRECT_SOLVER\nSolverType.ITERATIVE_SOLVER\nSolverType.NUM_SOLVER_TYPES"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.SolverType",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.SolverType.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.SolverType",
        "title": "SolverType > SolverType > SolverType",
        "section": "SolverType > SolverType",
        "text": "class ansys.edb.core.simulation_setup.hfss_simulation_settings.SolverType(value)\n\nProvides an enum representing HFSS solver types.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nSolverType.AUTO_SOLVER\n\n\n\nSolverType.DIRECT_SOLVER\n\n\n\nSolverType.ITERATIVE_SOLVER\n\n\n\nSolverType.NUM_SOLVER_TYPES\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.members",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.members.html#members",
        "title": "members",
        "section": "members",
        "text": "list of Connectables: All group members.\nThis property is read-only.\nmembers\nlist"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.members",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.members.html#ansys.edb.core.hierarchy.structure3d.Structure3D.members",
        "title": "members > members > members",
        "section": "members > members",
        "text": "property Structure3D.members\n\nlist of Connectables: All group members.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MultiFrequencyAdaptiveSolution",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MultiFrequencyAdaptiveSolution.html#multifrequencyadaptivesolution",
        "title": "MultiFrequencyAdaptiveSolution",
        "section": "MultiFrequencyAdaptiveSolution",
        "text": "Represents a multi-frequency adaptive solution.\nint: Maximum number of adaptive passes.\nlist of AdaptiveFrequency: Frequencies that adaptive solutions are calculated for.\nMultiFrequencyAdaptiveSolution.adaptive_frequencies\nlist of AdaptiveFrequency: Frequencies that adaptive solutions are calculated for.\nMultiFrequencyAdaptiveSolution.max_passes\nint: Maximum number of adaptive passes.\nMultiFrequencyAdaptiveSolution\nmax_passes\npython:int\nint\nadaptive_frequencies\npython:list\nAdaptiveFrequency\nlist\nAdaptiveFrequency\nMultiFrequencyAdaptiveSolution.adaptive_frequencies\nlist\nAdaptiveFrequency\nMultiFrequencyAdaptiveSolution.max_passes\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MultiFrequencyAdaptiveSolution",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MultiFrequencyAdaptiveSolution.html#ansys.edb.core.simulation_setup.adaptive_solutions.MultiFrequencyAdaptiveSolution",
        "title": "MultiFrequencyAdaptiveSolution > MultiFrequencyAdaptiveSolution > MultiFrequencyAdaptiveSolution",
        "section": "MultiFrequencyAdaptiveSolution > MultiFrequencyAdaptiveSolution",
        "text": "class ansys.edb.core.simulation_setup.adaptive_solutions.MultiFrequencyAdaptiveSolution(max_passes=10, adaptive_frequencies=None)\n\nRepresents a multi-frequency adaptive solution.\n\nAttributes\n\nmax_passes\n\npython:int\n\nint: Maximum number of adaptive passes.\n\nadaptive_frequencies\n\npython:list[AdaptiveFrequency]\n\nlist of AdaptiveFrequency: Frequencies that adaptive solutions are calculated for.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nMultiFrequencyAdaptiveSolution.adaptive_frequencies\n\nlist of AdaptiveFrequency: Frequencies that adaptive solutions are calculated for.\n\nMultiFrequencyAdaptiveSolution.max_passes\n\nint: Maximum number of adaptive passes.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the product property.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.get_product_property.html#ansys.edb.core.primitive.primitive.Text.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "Text.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nReturns\n\npython:str\n\nString stored in the product property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the property.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.set_product_property.html#ansys.edb.core.hierarchy.group.Group.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "Group.set_product_property(prod_id, attr_id, prop_value)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nprop_value\n\npython:str\n\nString stored in the property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the property.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.set_product_property.html#ansys.edb.core.primitive.primitive.PadstackInstance.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "PadstackInstance.set_product_property(prod_id, attr_id, prop_value)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nprop_value\n\npython:str\n\nString stored in the property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.html#polygondata",
        "title": "PolygonData",
        "section": "PolygonData",
        "text": "Represents a polygon data object.\nPolygonData.alpha_shape(points, alpha)\nCompute the outline of a 2D point cloud using alpha shapes.\nPolygonData.area()\nCompute the area of the polygon.\nPolygonData.bbox()\nCompute the bounding box.\nPolygonData.bbox_of_polygons(polygons)\nCompute the bounding box of a list of polygons.\nPolygonData.bounding_circle()\nCompute the bounding circle of the polygon.\nPolygonData.circle_intersect(center, radius)\nDetermine whether the circle intersects with a polygon.\nPolygonData.closest_point(point)\nCompute a point on the polygon that is closest to another point.\nPolygonData.closest_points(polygon)\nCompute points on this and another polygon that are closest to the other polygon.\nPolygonData.convex_hull(polygons)\nCompute the convex hull of the union of a list of polygons.\nPolygonData.defeature([tol])\nDefeature a polygon.\nPolygonData.expand(offset, round_corner, ...)\nExpand the polygon by an offset.\nPolygonData.has_arcs()\nDetermine whether the polygon contains any arcs.\nPolygonData.has_holes()\nDetermine whether the polygon contains any holes.\nPolygonData.has_self_intersections([tol])\nDetermine whether the polygon contains any self-intersections.\nPolygonData.intersect(polygons1, polygons2)\nCompute the intersection of one or more lists of polygons.\nPolygonData.intersection_type(other[, tol])\nGet the intersection type with another polygon.\nPolygonData.is_box()\nDetermine whether the outer contour of the polygon is a box.\nPolygonData.is_circle()\nDetermine whether the outer contour of the polygon is a circle.\nPolygonData.is_convex()\nDetermine whether the polygon is a convex hull.\nPolygonData.is_hole()\nDetermine whether the polygon is a hole.\nPolygonData.is_inside(point)\nDetermine whether the point is inside the polygon.\nPolygonData.is_parametric()\nDetermine whether a polygon contains any parametrized points.\nPolygonData.mirror_x(x)\nMirror a polygon by x line.\nPolygonData.move(vector)\nMove the polygon by a vector.\nPolygonData.normalized()\nGet the normalized points of the polygon.\nPolygonData.remove_self_intersections([tol])\nRemove self-intersections from this polygon.\nPolygonData.rotate(angle, center)\nRotate the polygon at a center by an angle.\nPolygonData.scale(factor, center)\nScale the polygon by a linear factor from a center.\nPolygonData.subtract(polygons1, polygons2)\nSubtract a set of polygons from another set of polygons.\nPolygonData.unite(polygons)\nCompute the union of a list of polygons.\nPolygonData.without_arcs([max_chord_error, ...])\nGet polygon data with all arcs removed.\nPolygonData.xor(polygons1, polygons2)\nCompute an exclusive OR between a set of polygons and another set of polygons.\nPolygonData.arc_data\nlist: List of segments that represent the arc data of a polygon.\nPolygonData.holes\nlist of PolygonData: List of holes.\nPolygonData.is_closed\nbool: Flag indicating if a polygon is closed between the first and last points.\nPolygonData.points\nlist of PointData: List of coordinates for the points.\nPolygonData.sense\nPolygonSenseType: Polygon sense type.\nPolygonData\nPolygonData.alpha_shape\nPolygonData.area\nPolygonData.bbox\nPolygonData.bbox_of_polygons\nPolygonData.bounding_circle\nPolygonData.circle_intersect\nPolygonData.closest_point\nPolygonData.closest_points\nPolygonData.convex_hull\nPolygonData.defeature\nPolygonData.expand\nPolygonData.has_arcs\nPolygonData.has_holes\nPolygonData.has_self_intersections\nPolygonData.intersect\nPolygonData.intersection_type\nPolygonData.is_box\nPolygonData.is_circle\nPolygonData.is_convex\nPolygonData.is_hole\nPolygonData.is_inside\nPolygonData.is_parametric\nPolygonData.mirror_x\nPolygonData.move\nPolygonData.normalized\nPolygonData.remove_self_intersections\nPolygonData.rotate\nPolygonData.scale\nPolygonData.subtract\nPolygonData.unite\nPolygonData.without_arcs\nPolygonData.xor\nPolygonData.arc_data\nlist\nPolygonData.holes\nlist\nPolygonData\nPolygonData.is_closed\nbool\nPolygonData.points\nlist\nPointData\nPolygonData.sense\nPolygonSenseType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.html#ansys.edb.core.geometry.polygon_data.PolygonData",
        "title": "PolygonData > PolygonData > PolygonData",
        "section": "PolygonData > PolygonData",
        "text": "class ansys.edb.core.geometry.polygon_data.PolygonData(points=None, arcs=None, lower_left=None, upper_right=None, holes=None, sense=PolygonSenseType.SENSE_CCW, closed=True)\n\nRepresents a polygon data object.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nPolygonData.alpha_shape(points, alpha)\n\nCompute the outline of a 2D point cloud using alpha shapes.\n\nPolygonData.area()\n\nCompute the area of the polygon.\n\nPolygonData.bbox()\n\nCompute the bounding box.\n\nPolygonData.bbox_of_polygons(polygons)\n\nCompute the bounding box of a list of polygons.\n\nPolygonData.bounding_circle()\n\nCompute the bounding circle of the polygon.\n\nPolygonData.circle_intersect(center, radius)\n\nDetermine whether the circle intersects with a polygon.\n\nPolygonData.closest_point(point)\n\nCompute a point on the polygon that is closest to another point.\n\nPolygonData.closest_points(polygon)\n\nCompute points on this and another polygon that are closest to the other polygon.\n\nPolygonData.convex_hull(polygons)\n\nCompute the convex hull of the union of a list of polygons.\n\nPolygonData.defeature([tol])\n\nDefeature a polygon.\n\nPolygonData.expand(offset, round_corner, ...)\n\nExpand the polygon by an offset.\n\nPolygonData.has_arcs()\n\nDetermine whether the polygon contains any arcs.\n\nPolygonData.has_holes()\n\nDetermine whether the polygon contains any holes.\n\nPolygonData.has_self_intersections([tol])\n\nDetermine whether the polygon contains any self-intersections.\n\nPolygonData.intersect(polygons1, polygons2)\n\nCompute the intersection of one or more lists of polygons.\n\nPolygonData.intersection_type(other[, tol])\n\nGet the intersection type with another polygon.\n\nPolygonData.is_box()\n\nDetermine whether the outer contour of the polygon is a box.\n\nPolygonData.is_circle()\n\nDetermine whether the outer contour of the polygon is a circle.\n\nPolygonData.is_convex()\n\nDetermine whether the polygon is a convex hull.\n\nPolygonData.is_hole()\n\nDetermine whether the polygon is a hole.\n\nPolygonData.is_inside(point)\n\nDetermine whether the point is inside the polygon.\n\nPolygonData.is_parametric()\n\nDetermine whether a polygon contains any parametrized points.\n\nPolygonData.mirror_x(x)\n\nMirror a polygon by x line.\n\nPolygonData.move(vector)\n\nMove the polygon by a vector.\n\nPolygonData.normalized()\n\nGet the normalized points of the polygon.\n\nPolygonData.remove_self_intersections([tol])\n\nRemove self-intersections from this polygon.\n\nPolygonData.rotate(angle, center)\n\nRotate the polygon at a center by an angle.\n\nPolygonData.scale(factor, center)\n\nScale the polygon by a linear factor from a center.\n\nPolygonData.subtract(polygons1, polygons2)\n\nSubtract a set of polygons from another set of polygons.\n\nPolygonData.unite(polygons)\n\nCompute the union of a list of polygons.\n\nPolygonData.without_arcs([max_chord_error, ...])\n\nGet polygon data with all arcs removed.\n\nPolygonData.xor(polygons1, polygons2)\n\nCompute an exclusive OR between a set of polygons and another set of polygons.\n\n\n\nAttributes\n\n\n\n\n\n\n\nPolygonData.arc_data\n\nlist: List of segments that represent the arc data of a polygon.\n\nPolygonData.holes\n\nlist of PolygonData: List of holes.\n\nPolygonData.is_closed\n\nbool: Flag indicating if a polygon is closed between the first and last points.\n\nPolygonData.points\n\nlist of PointData: List of coordinates for the points.\n\nPolygonData.sense\n\nPolygonSenseType: Polygon sense type.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.z_y_x_rotation",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.z_y_x_rotation.html#z_y_x_rotation",
        "title": "z_y_x_rotation",
        "section": "z_y_x_rotation",
        "text": "Point3DLike: ZYX rotation.\nz_y_x_rotation"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.z_y_x_rotation",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.z_y_x_rotation.html#ansys.edb.core.utility.transform3d.Transform3D.z_y_x_rotation",
        "title": "z_y_x_rotation > z_y_x_rotation > z_y_x_rotation",
        "section": "z_y_x_rotation > z_y_x_rotation",
        "text": "property Transform3D.z_y_x_rotation\n\nPoint3DLike: ZYX rotation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.points",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.points.html#points",
        "title": "points",
        "section": "points",
        "text": "list of PointData: List of coordinates for the points.\npoints\nlist\nPointData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.points",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.points.html#ansys.edb.core.geometry.polygon_data.PolygonData.points",
        "title": "points > points > points",
        "section": "points > points",
        "text": "property PolygonData.points\n\nlist of PointData: List of coordinates for the points.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.is_mcad_3d_comp.html#is_mcad_3d_comp",
        "title": "is_mcad_3d_comp",
        "section": "is_mcad_3d_comp",
        "text": "bool: Flag indicating if this is a 3D composite MCAD model.\nThis property is read-only.\nis_mcad_3d_comp\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.is_mcad_3d_comp.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.is_mcad_3d_comp",
        "title": "is_mcad_3d_comp > is_mcad_3d_comp > is_mcad_3d_comp",
        "section": "is_mcad_3d_comp > is_mcad_3d_comp",
        "text": "property CellInstance.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.MeshClosure.OPEN_ENDED",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.MeshClosure.OPEN_ENDED.html#open_ended",
        "title": "OPEN_ENDED",
        "section": "OPEN_ENDED",
        "text": "OPEN_ENDED"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.MeshClosure.OPEN_ENDED",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.MeshClosure.OPEN_ENDED.html#ansys.edb.core.hierarchy.structure3d.MeshClosure.OPEN_ENDED",
        "title": "OPEN_ENDED > OPEN_ENDED > OPEN_ENDED",
        "section": "OPEN_ENDED > OPEN_ENDED",
        "text": "MeshClosure.OPEN_ENDED = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_negative",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_negative.html#is_negative",
        "title": "is_negative",
        "section": "is_negative",
        "text": "bool: Flag indicating if the primitive is negative.\nis_negative\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_negative",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_negative.html#ansys.edb.core.primitive.primitive.Polygon.is_negative",
        "title": "is_negative > is_negative > is_negative",
        "section": "is_negative > is_negative",
        "text": "property Polygon.is_negative\n\nbool: Flag indicating if the primitive is negative.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.create_hfss.html#create_hfss",
        "title": "create_hfss",
        "section": "create_hfss",
        "text": "Create an HFSS model from an MCAD file.\nHFSS model created.\ncreate_hfss\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.create_hfss.html#ansys.edb.core.hierarchy.pin_group.PinGroup.create_hfss",
        "title": "create_hfss > create_hfss > create_hfss",
        "section": "create_hfss > create_hfss",
        "text": "PinGroup.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nReturns\n\nMcadModel\n\nHFSS model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.add_menu_variable",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.add_menu_variable.html#add_menu_variable",
        "title": "add_menu_variable",
        "section": "add_menu_variable",
        "text": "Add a menu variable.\nVariable name.\nEach element can be any type that can be converted to a Value\ninstance.\nWhether the new variable is a parameter. The default is False, which means it is a local variable.\nIndex of the value that is initially selected.\nadd_menu_variable\npython:str\npython:list\npython:str\npython:int\npython:float\ncomplex\nValue\nValue\npython:False\nFalse\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.add_menu_variable",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.add_menu_variable.html#ansys.edb.core.layout.layout.Layout.add_menu_variable",
        "title": "add_menu_variable > add_menu_variable > add_menu_variable",
        "section": "add_menu_variable > add_menu_variable",
        "text": "Layout.add_menu_variable(name, values, is_param=False, index=0)\n\nAdd a menu variable.\n\nParameters\n\nname\n\npython:str\n\nVariable name.\n\nvalues\n\npython:list[python:str, python:int, python:float, complex, Value]\n\nEach element can be any type that can be converted to a Value\ninstance.\n\nis_param\n\nbool, default: python:False\n\nWhether the new variable is a parameter. The default is False, which means it is a local variable.\n\nindex\n\npython:int, default: 0\n\nIndex of the value that is initially selected.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.placement",
        "href": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.placement.html#placement",
        "title": "placement",
        "section": "placement",
        "text": "SolderballPlacement: Solder ball placement.\nplacement\nSolderballPlacement"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.placement",
        "href": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.placement.html#ansys.edb.core.definition.solder_ball_property.SolderBallProperty.placement",
        "title": "placement > placement > placement",
        "section": "placement > placement",
        "text": "property SolderBallProperty.placement\n\nSolderballPlacement: Solder ball placement.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.delete",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the layout object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.delete",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.delete.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "PadstackInstanceTerminal.delete()\n\nDelete the layout object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.FreqSweepType.BROADBAND_SWEEP",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.FreqSweepType.BROADBAND_SWEEP.html#broadband_sweep",
        "title": "BROADBAND_SWEEP",
        "section": "BROADBAND_SWEEP",
        "text": "BROADBAND_SWEEP"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.FreqSweepType.BROADBAND_SWEEP",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.FreqSweepType.BROADBAND_SWEEP.html#ansys.edb.core.simulation_setup.simulation_setup.FreqSweepType.BROADBAND_SWEEP",
        "title": "BROADBAND_SWEEP > BROADBAND_SWEEP > BROADBAND_SWEEP",
        "section": "BROADBAND_SWEEP > BROADBAND_SWEEP",
        "text": "FreqSweepType.BROADBAND_SWEEP = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.RoughnessRegion.SIDE",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.RoughnessRegion.SIDE.html#side",
        "title": "SIDE",
        "section": "SIDE",
        "text": "SIDE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.RoughnessRegion.SIDE",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.RoughnessRegion.SIDE.html#ansys.edb.core.layer.stackup_layer.RoughnessRegion.SIDE",
        "title": "SIDE > SIDE > SIDE",
        "section": "SIDE > SIDE",
        "text": "RoughnessRegion.SIDE = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.RECTANGLE",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.RECTANGLE.html#rectangle",
        "title": "RECTANGLE",
        "section": "RECTANGLE",
        "text": "RECTANGLE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.RECTANGLE",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.RECTANGLE.html#ansys.edb.core.primitive.primitive.PrimitiveType.RECTANGLE",
        "title": "RECTANGLE > RECTANGLE > RECTANGLE",
        "section": "RECTANGLE > RECTANGLE",
        "text": "PrimitiveType.RECTANGLE = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.MeshClosure.FILLED_CLOSED",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.MeshClosure.FILLED_CLOSED.html#filled_closed",
        "title": "FILLED_CLOSED",
        "section": "FILLED_CLOSED",
        "text": "FILLED_CLOSED"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.MeshClosure.FILLED_CLOSED",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.MeshClosure.FILLED_CLOSED.html#ansys.edb.core.hierarchy.structure3d.MeshClosure.FILLED_CLOSED",
        "title": "FILLED_CLOSED > FILLED_CLOSED > FILLED_CLOSED",
        "section": "FILLED_CLOSED > FILLED_CLOSED",
        "text": "MeshClosure.FILLED_CLOSED = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.SolverType.ITERATIVE_SOLVER",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.SolverType.ITERATIVE_SOLVER.html#iterative_solver",
        "title": "ITERATIVE_SOLVER",
        "section": "ITERATIVE_SOLVER",
        "text": "ITERATIVE_SOLVER"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.SolverType.ITERATIVE_SOLVER",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.SolverType.ITERATIVE_SOLVER.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.SolverType.ITERATIVE_SOLVER",
        "title": "ITERATIVE_SOLVER > ITERATIVE_SOLVER > ITERATIVE_SOLVER",
        "section": "ITERATIVE_SOLVER > ITERATIVE_SOLVER",
        "text": "SolverType.ITERATIVE_SOLVER = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_circuit_port",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_circuit_port.html#is_circuit_port",
        "title": "is_circuit_port",
        "section": "is_circuit_port",
        "text": "bool: Flag indicating if the terminal is a circuit port.\nis_circuit_port\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_circuit_port",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_circuit_port.html#ansys.edb.core.terminal.terminals.BundleTerminal.is_circuit_port",
        "title": "is_circuit_port > is_circuit_port > is_circuit_port",
        "section": "is_circuit_port > is_circuit_port",
        "text": "property BundleTerminal.is_circuit_port\n\nbool: Flag indicating if the terminal is a circuit port.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.model.Model.id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.model.Model.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.model.Model.id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.model.Model.id.html#ansys.edb.core.hierarchy.model.Model.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property Model.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.max_elements",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.max_elements.html#max_elements",
        "title": "max_elements",
        "section": "max_elements",
        "text": "str: Maximum number of mesh elements.\nmax_elements\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.max_elements",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.max_elements.html#ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.max_elements",
        "title": "max_elements > max_elements > max_elements",
        "section": "max_elements > max_elements",
        "text": "property SkinDepthMeshOperation.max_elements\n\nstr: Maximum number of mesh elements.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_null",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_null",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_null.html#ansys.edb.core.terminal.terminals.BundleTerminal.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property BundleTerminal.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.material",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.material.html#material",
        "title": "material",
        "section": "material",
        "text": "Get the material name of the MCAD model part at a given index.\nIndex of the MCAD model part.\nMaterial name.\nmaterial\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.material",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.material.html#ansys.edb.core.layout.mcad_model.McadModel.material",
        "title": "material > material > material",
        "section": "material > material",
        "text": "McadModel.material(index)\n\nGet the material name of the MCAD model part at a given index.\n\nParameters\n\nindex\n\npython:int\n\nIndex of the MCAD model part.\n\nReturns\n\npython:str\n\nMaterial name.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.NPortComponentModel.find_by_name",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.NPortComponentModel.find_by_name.html#find_by_name",
        "title": "find_by_name",
        "section": "find_by_name",
        "text": "Find a component model by name in a given component def.\nComponent def to search for the component model.\nName of the component model.\nComponent model that is found, None otherwise.\nfind_by_name\nComponentDef\npython:str\nComponentModel\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.NPortComponentModel.find_by_name",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.NPortComponentModel.find_by_name.html#ansys.edb.core.definition.component_model.NPortComponentModel.find_by_name",
        "title": "find_by_name > find_by_name > find_by_name",
        "section": "find_by_name > find_by_name",
        "text": "classmethod NPortComponentModel.find_by_name(comp_def, value)\n\nFind a component model by name in a given component def.\n\nParameters\n\ncomp_def\n\nComponentDef\n\nComponent def to search for the component model.\n\nvalue\n\npython:str\n\nName of the component model.\n\nReturns\n\nComponentModel\n\nComponent model that is found, None otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.active",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.active.html#active",
        "title": "active",
        "section": "active",
        "text": "bool: Flag indicating if the voltage regular is active.\nactive\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.active",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.active.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.active",
        "title": "active > active > active",
        "section": "active > active",
        "text": "property VoltageRegulator.active\n\nbool: Flag indicating if the voltage regular is active.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.upper_elevation",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.upper_elevation.html#upper_elevation",
        "title": "upper_elevation",
        "section": "upper_elevation",
        "text": "Value: Upper elevation value of the layer.\nThis property is read-only.\nupper_elevation\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.upper_elevation",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.upper_elevation.html#ansys.edb.core.layer.via_layer.ViaLayer.upper_elevation",
        "title": "upper_elevation > upper_elevation > upper_elevation",
        "section": "upper_elevation > upper_elevation",
        "text": "property ViaLayer.upper_elevation\n\nValue: Upper elevation value of the layer.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.ComponentModel.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.ComponentModel.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.ComponentModel.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.ComponentModel.msg.html#ansys.edb.core.definition.component_model.ComponentModel.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property ComponentModel.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.transform3d",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.transform3d.html#transform3d",
        "title": "transform3d",
        "section": "transform3d",
        "text": "Transform3D:         3D transformation information of the cell instance.\nFor the transformation to be applied, the placement_3d property\nmust be set to True.\ntransform3d\nTransform3D\nplacement_3d\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.transform3d",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.transform3d.html#ansys.edb.core.hierarchy.inst_array.InstArray.transform3d",
        "title": "transform3d > transform3d > transform3d",
        "section": "transform3d > transform3d",
        "text": "property InstArray.transform3d\n\nTransform3D:         3D transformation information of the cell instance.\n\nFor the transformation to be applied, the placement_3d property\nmust be set to True.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_mcad_3d_comp.html#is_mcad_3d_comp",
        "title": "is_mcad_3d_comp",
        "section": "is_mcad_3d_comp",
        "text": "bool: Flag indicating if this is a 3D composite MCAD model.\nThis property is read-only.\nis_mcad_3d_comp\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_mcad_3d_comp.html#ansys.edb.core.primitive.primitive.Path.is_mcad_3d_comp",
        "title": "is_mcad_3d_comp > is_mcad_3d_comp > is_mcad_3d_comp",
        "section": "is_mcad_3d_comp > is_mcad_3d_comp",
        "text": "property Path.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.dc_advanced",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.dc_advanced.html#dc_advanced",
        "title": "dc_advanced",
        "section": "dc_advanced",
        "text": "SIWaveDCAdvancedSettings: Advanced DC settings for SIWave simulations.\ndc_advanced\nSIWaveDCAdvancedSettings"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.dc_advanced",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.dc_advanced.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.dc_advanced",
        "title": "dc_advanced > dc_advanced > dc_advanced",
        "section": "dc_advanced > dc_advanced",
        "text": "property SIWaveSimulationSettings.dc_advanced\n\nSIWaveDCAdvancedSettings: Advanced DC settings for SIWave simulations.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.etch_factor_enabled",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.etch_factor_enabled.html#etch_factor_enabled",
        "title": "etch_factor_enabled",
        "section": "etch_factor_enabled",
        "text": "bool: Flag indicating if an etch factor is used by the layer.\netch_factor_enabled\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.etch_factor_enabled",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.etch_factor_enabled.html#ansys.edb.core.layer.via_layer.ViaLayer.etch_factor_enabled",
        "title": "etch_factor_enabled > etch_factor_enabled > etch_factor_enabled",
        "section": "etch_factor_enabled > etch_factor_enabled",
        "text": "property ViaLayer.etch_factor_enabled\n\nbool: Flag indicating if an etch factor is used by the layer.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.thermal_conductivity",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.thermal_conductivity.html#thermal_conductivity",
        "title": "thermal_conductivity",
        "section": "thermal_conductivity",
        "text": "Value: Thermal conductivity of the package.\nthermal_conductivity\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.thermal_conductivity",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.thermal_conductivity.html#ansys.edb.core.definition.package_def.PackageDef.thermal_conductivity",
        "title": "thermal_conductivity > thermal_conductivity > thermal_conductivity",
        "section": "thermal_conductivity > thermal_conductivity",
        "text": "property PackageDef.thermal_conductivity\n\nValue: Thermal conductivity of the package.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the product property.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.get_product_property.html#ansys.edb.core.primitive.primitive.Rectangle.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "Rectangle.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nReturns\n\npython:str\n\nString stored in the product property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.pin_group",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.pin_group.html#pin_group",
        "title": "pin_group",
        "section": "pin_group",
        "text": "PinGroup: Pin group of the terminal.\npin_group\nPinGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.pin_group",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.pin_group.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.pin_group",
        "title": "pin_group > pin_group > pin_group",
        "section": "pin_group > pin_group",
        "text": "property PinGroupTerminal.pin_group\n\nPinGroup: Pin group of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.use_max_refinement",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.use_max_refinement.html#use_max_refinement",
        "title": "use_max_refinement",
        "section": "use_max_refinement",
        "text": "bool: Flag indicating if maximum refinement values are used during simulation.\nuse_max_refinement\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.use_max_refinement",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.use_max_refinement.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.use_max_refinement",
        "title": "use_max_refinement > use_max_refinement > use_max_refinement",
        "section": "use_max_refinement > use_max_refinement",
        "text": "property HFSSSettingsOptions.use_max_refinement\n\nbool: Flag indicating if maximum refinement values are used during simulation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.cast",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.cast.html#cast",
        "title": "cast",
        "section": "cast",
        "text": "Cast the group object to the correct concrete type.\ncast\nGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.cast",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.cast.html#ansys.edb.core.hierarchy.group.Group.cast",
        "title": "cast > cast > cast",
        "section": "cast > cast",
        "text": "Group.cast()\n\nCast the group object to the correct concrete type.\n\nReturns\n\nGroup\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.delete",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the layout object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.delete",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.delete.html#ansys.edb.core.net.extended_net.ExtendedNet.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "ExtendedNet.delete()\n\nDelete the layout object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.get_parameters",
        "href": "api/_autosummary/ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.get_parameters.html#get_parameters",
        "title": "get_parameters",
        "section": "get_parameters",
        "text": "Get parameters used to define the model.\nList of frequencies.\nList of relative permitivites at each frequency.\nList of loss tangents at each frequency.\nget_parameters\npython:list\npython:float\npython:list\npython:float\npython:list\npython:float"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.get_parameters",
        "href": "api/_autosummary/ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.get_parameters.html#ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.get_parameters",
        "title": "get_parameters > get_parameters > get_parameters",
        "section": "get_parameters > get_parameters",
        "text": "MultipoleDebyeModel.get_parameters()\n\nGet parameters used to define the model.\n\nReturns\n\nfrequencies\n\npython:list[python:float]\n\nList of frequencies.\n\npermitivities\n\npython:list[python:float]\n\nList of relative permitivites at each frequency.\n\nloss_tangents\n\npython:list[python:float]\n\nList of loss tangents at each frequency.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.component_def",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.component_def.html#component_def",
        "title": "component_def",
        "section": "component_def",
        "text": "ComponentDef: Component definition for the         hierarchy object if it exists, None otherwise.\nThis property is read-only.\ncomponent_def\nComponentDef\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.component_def",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.component_def.html#ansys.edb.core.hierarchy.group.Group.component_def",
        "title": "component_def > component_def > component_def",
        "section": "component_def > component_def",
        "text": "property Group.component_def\n\nComponentDef: Component definition for the         hierarchy object if it exists, None otherwise.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.id",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.id",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.id.html#ansys.edb.core.net.net.Net.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property Net.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.msg.html#ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property SimulationSetup.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.mesh_closure",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.mesh_closure.html#mesh_closure",
        "title": "mesh_closure",
        "section": "mesh_closure",
        "text": "MeshClosure: Mesh closure property for the 3D structure.\nmesh_closure\nMeshClosure"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.mesh_closure",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.mesh_closure.html#ansys.edb.core.hierarchy.structure3d.Structure3D.mesh_closure",
        "title": "mesh_closure > mesh_closure > mesh_closure",
        "section": "mesh_closure > mesh_closure",
        "text": "property Structure3D.mesh_closure\n\nMeshClosure: Mesh closure property for the 3D structure.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_cells_per_wavelength",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_cells_per_wavelength.html#use_cells_per_wavelength",
        "title": "use_cells_per_wavelength",
        "section": "use_cells_per_wavelength",
        "text": "bool: Flag indicating if cells per wavelength are used.\nuse_cells_per_wavelength\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_cells_per_wavelength",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_cells_per_wavelength.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_cells_per_wavelength",
        "title": "use_cells_per_wavelength > use_cells_per_wavelength > use_cells_per_wavelength",
        "section": "use_cells_per_wavelength > use_cells_per_wavelength",
        "text": "property RaptorXAdvancedSettings.use_cells_per_wavelength\n\nbool: Flag indicating if cells per wavelength are used.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.set_product_solver_option",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.set_product_solver_option.html#set_product_solver_option",
        "title": "set_product_solver_option",
        "section": "set_product_solver_option",
        "text": "Set the product solver option.\nID of the product.\nName of the solver.\nName of the product solver option.\nset_product_solver_option\nProductIdType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.set_product_solver_option",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.set_product_solver_option.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.set_product_solver_option",
        "title": "set_product_solver_option > set_product_solver_option > set_product_solver_option",
        "section": "set_product_solver_option > set_product_solver_option",
        "text": "PadstackInstanceTerminal.set_product_solver_option(product_id, solver_name, option)\n\nSet the product solver option.\n\nParameters\n\nproduct_id\n\nProductIdType\n\nID of the product.\n\nsolver_name\n\nobj:str\n\nName of the solver.\n\noption\n\nobj:str\n\nName of the product solver option.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.is_null",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.is_null",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.is_null.html#ansys.edb.core.hierarchy.pin_group.PinGroup.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property PinGroup.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_reference_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_reference_terminal.html#is_reference_terminal",
        "title": "is_reference_terminal",
        "section": "is_reference_terminal",
        "text": "bool: Flag indicating if the terminal is a reference terminal.\nis_reference_terminal\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_reference_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_reference_terminal.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_reference_terminal",
        "title": "is_reference_terminal > is_reference_terminal > is_reference_terminal",
        "section": "is_reference_terminal > is_reference_terminal",
        "text": "property PadstackInstanceTerminal.is_reference_terminal\n\nbool: Flag indicating if the terminal is a reference terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_RECTANGLE",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_RECTANGLE.html#padgeomtype_rectangle",
        "title": "PADGEOMTYPE_RECTANGLE",
        "section": "PADGEOMTYPE_RECTANGLE",
        "text": "PADGEOMTYPE_RECTANGLE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_RECTANGLE",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_RECTANGLE.html#ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_RECTANGLE",
        "title": "PADGEOMTYPE_RECTANGLE > PADGEOMTYPE_RECTANGLE > PADGEOMTYPE_RECTANGLE",
        "section": "PADGEOMTYPE_RECTANGLE > PADGEOMTYPE_RECTANGLE",
        "text": "PadGeometryType.PADGEOMTYPE_RECTANGLE = 3\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.HfssPIType.COAXIAL_SHORTENED",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.HfssPIType.COAXIAL_SHORTENED.html#coaxial_shortened",
        "title": "COAXIAL_SHORTENED",
        "section": "COAXIAL_SHORTENED",
        "text": "COAXIAL_SHORTENED"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.HfssPIType.COAXIAL_SHORTENED",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.HfssPIType.COAXIAL_SHORTENED.html#ansys.edb.core.terminal.terminals.HfssPIType.COAXIAL_SHORTENED",
        "title": "COAXIAL_SHORTENED > COAXIAL_SHORTENED > COAXIAL_SHORTENED",
        "section": "COAXIAL_SHORTENED > COAXIAL_SHORTENED",
        "text": "HfssPIType.COAXIAL_SHORTENED = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_mcad_hfss.html#is_mcad_hfss",
        "title": "is_mcad_hfss",
        "section": "is_mcad_hfss",
        "text": "bool: Flag indicating if this is an HFSS MCAD model.\nThis property is read-only.\nis_mcad_hfss\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_mcad_hfss.html#ansys.edb.core.primitive.primitive.BoardBendDef.is_mcad_hfss",
        "title": "is_mcad_hfss > is_mcad_hfss > is_mcad_hfss",
        "section": "is_mcad_hfss > is_mcad_hfss",
        "text": "property BoardBendDef.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.is_null.html#ansys.edb.core.definition.component_def.ComponentDef.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property ComponentDef.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.html#cell",
        "title": "Cell",
        "section": "Cell",
        "text": "Represents a cell object.\nCell.add_menu_variable(name, values[, ...])\nAdd a menu variable.\nCell.add_variable(name, value[, is_param])\nAdd a variable.\nCell.create(db, cell_type, cell_name)\nCreate a cell.\nCell.create_value(val)\nCreate a value instance.\nCell.cutout(included_nets, clipped_nets, ...)\nCut out an existing cell into a new cell.\nCell.delete()\nDelete the cell.\nCell.delete_simulation_setup(name)\nDelete a simulation setup by name.\nCell.delete_variable(name)\nDelete a variable.\nCell.find(database, cell_type[, name, cell_id])\nFind a cell in a database by either name or ID.\nCell.generate_auto_hfss_regions()\nGenerate auto HFSS regions.\nCell.generate_via_smart_box(net_name)\nGenerate a via smart box.\nCell.get_all_variable_names()\nGet all variable names.\nCell.get_product_property(prod_id, attr_id)\nGet the product-specific property of the cell.\nCell.get_product_property_ids(prod_id)\nGet a list of attribute IDS for a given product ID for the cell.\nCell.get_variable_desc(name)\nGet the description of a variable.\nCell.get_variable_value(name)\nGet the value for a given variable.\nCell.is_parameter(name)\nDetermine if the variable is a parameter.\nCell.set_hfss_extent_info(extents)\nSet the HFSS extents of this cell.\nCell.set_product_property(prod_id, attr_id, ...)\nSet the product property of the cell for a given product ID and attribute ID.\nCell.set_variable_desc(name, desc)\nSet a variable to have a new description.\nCell.set_variable_value(name, new_value)\nSet a variable to a new value.\nCell.anti_pads_always_on\nbool: Flag indicating whether antipads are always enabled.\nCell.anti_pads_option\nint: Mode for activating antipads.\nCell.database\nDatabase: Owning database of the cell.\nCell.design_mode\nDesignMode: Design mode of the cell.\nCell.flattened_layout\nLayout: Flattened layout of the cell.\nCell.hfss_extent_info\nHfssExtentInfo:         HFSS extents for the cell.\nCell.id\nint: Unique ID of the EDB object.\nCell.is_blackbox\nbool: Flag indicating if the cell is a blackbox.\nCell.is_footprint\nbool: Flag indicating if the cell is a footprint.\nCell.is_null\nbool: Flag indicating if the object exists in the database.\nCell.is_symbolic_footprint\nbool: Flag indicating if the cell is a symbolic footprint.\nCell.layout\nLayout: Layout of the cell.\nCell.layout_obj_type\n\nCell.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nCell.name\nstr: Name of the cell.\nCell.simulation_setups\nlist of         [SimulationSetup]:         List of all simulation setups of the cell.\nCell.suppress_pads\nbool: Flag indicating if the internal non-functional pads are suppressed from rendering/analysis.\nCell.temperature_settings\nTemperatureSettings:         Temperature settings.\nCell\nCell.add_menu_variable\nCell.add_variable\nCell.create\nCell.create_value\nCell.cutout\nCell.delete\nCell.delete_simulation_setup\nCell.delete_variable\nCell.find\nCell.generate_auto_hfss_regions\nCell.generate_via_smart_box\nCell.get_all_variable_names\nCell.get_product_property\nCell.get_product_property_ids\nCell.get_variable_desc\nCell.get_variable_value\nCell.is_parameter\nCell.set_hfss_extent_info\nCell.set_product_property\nCell.set_variable_desc\nCell.set_variable_value\nCell.anti_pads_always_on\nbool\nCell.anti_pads_option\nint\nCell.database\nDatabase\nCell.design_mode\nDesignMode\nCell.flattened_layout\nLayout\nCell.hfss_extent_info\nHfssExtentInfo\nCell.id\nint\nCell.is_blackbox\nbool\nCell.is_footprint\nbool\nCell.is_null\nbool\nCell.is_symbolic_footprint\nbool\nCell.layout\nLayout\nCell.layout_obj_type\nCell.msg\nEDBObjMessage\nCell.name\nstr\nCell.simulation_setups\nlist\nSimulationSetup\nCell.suppress_pads\nbool\nCell.temperature_settings\nTemperatureSettings"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.html#ansys.edb.core.layout.cell.Cell",
        "title": "Cell > Cell > Cell",
        "section": "Cell > Cell",
        "text": "class ansys.edb.core.layout.cell.Cell(msg)\n\nRepresents a cell object.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nCell.add_menu_variable(name, values[, ...])\n\nAdd a menu variable.\n\nCell.add_variable(name, value[, is_param])\n\nAdd a variable.\n\nCell.create(db, cell_type, cell_name)\n\nCreate a cell.\n\nCell.create_value(val)\n\nCreate a value instance.\n\nCell.cutout(included_nets, clipped_nets, ...)\n\nCut out an existing cell into a new cell.\n\nCell.delete()\n\nDelete the cell.\n\nCell.delete_simulation_setup(name)\n\nDelete a simulation setup by name.\n\nCell.delete_variable(name)\n\nDelete a variable.\n\nCell.find(database, cell_type[, name, cell_id])\n\nFind a cell in a database by either name or ID.\n\nCell.generate_auto_hfss_regions()\n\nGenerate auto HFSS regions.\n\nCell.generate_via_smart_box(net_name)\n\nGenerate a via smart box.\n\nCell.get_all_variable_names()\n\nGet all variable names.\n\nCell.get_product_property(prod_id, attr_id)\n\nGet the product-specific property of the cell.\n\nCell.get_product_property_ids(prod_id)\n\nGet a list of attribute IDS for a given product ID for the cell.\n\nCell.get_variable_desc(name)\n\nGet the description of a variable.\n\nCell.get_variable_value(name)\n\nGet the value for a given variable.\n\nCell.is_parameter(name)\n\nDetermine if the variable is a parameter.\n\nCell.set_hfss_extent_info(extents)\n\nSet the HFSS extents of this cell.\n\nCell.set_product_property(prod_id, attr_id, ...)\n\nSet the product property of the cell for a given product ID and attribute ID.\n\nCell.set_variable_desc(name, desc)\n\nSet a variable to have a new description.\n\nCell.set_variable_value(name, new_value)\n\nSet a variable to a new value.\n\n\n\nAttributes\n\n\n\n\n\n\n\nCell.anti_pads_always_on\n\nbool: Flag indicating whether antipads are always enabled.\n\nCell.anti_pads_option\n\nint: Mode for activating antipads.\n\nCell.database\n\nDatabase: Owning database of the cell.\n\nCell.design_mode\n\nDesignMode: Design mode of the cell.\n\nCell.flattened_layout\n\nLayout: Flattened layout of the cell.\n\nCell.hfss_extent_info\n\nHfssExtentInfo:         HFSS extents for the cell.\n\nCell.id\n\nint: Unique ID of the EDB object.\n\nCell.is_blackbox\n\nbool: Flag indicating if the cell is a blackbox.\n\nCell.is_footprint\n\nbool: Flag indicating if the cell is a footprint.\n\nCell.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nCell.is_symbolic_footprint\n\nbool: Flag indicating if the cell is a symbolic footprint.\n\nCell.layout\n\nLayout: Layout of the cell.\n\nCell.layout_obj_type\n\n\n\nCell.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nCell.name\n\nstr: Name of the cell.\n\nCell.simulation_setups\n\nlist of         [SimulationSetup]:         List of all simulation setups of the cell.\n\nCell.suppress_pads\n\nbool: Flag indicating if the internal non-functional pads are suppressed from rendering/analysis.\n\nCell.temperature_settings\n\nTemperatureSettings:         Temperature settings.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.source_amplitude",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.source_amplitude.html#source_amplitude",
        "title": "source_amplitude",
        "section": "source_amplitude",
        "text": "Value: Source amplitude of the terminal.\nsource_amplitude\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.source_amplitude",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.source_amplitude.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.source_amplitude",
        "title": "source_amplitude > source_amplitude > source_amplitude",
        "section": "source_amplitude > source_amplitude",
        "text": "property TerminalInstanceTerminal.source_amplitude\n\nValue: Source amplitude of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.create_3d_comp.html#create_3d_comp",
        "title": "create_3d_comp",
        "section": "create_3d_comp",
        "text": "Create a 3D composite model from an MCAD file.\n3D composite model created.\ncreate_3d_comp\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.create_3d_comp.html#ansys.edb.core.hierarchy.structure3d.Structure3D.create_3d_comp",
        "title": "create_3d_comp > create_3d_comp > create_3d_comp",
        "section": "create_3d_comp > create_3d_comp",
        "text": "Structure3D.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nReturns\n\nMcadModel\n\n3D composite model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.is_null.html#ansys.edb.core.definition.io_component_property.IOComponentProperty.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property IOComponentProperty.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.height",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.height.html#height",
        "title": "height",
        "section": "height",
        "text": "float: Height of the arc.\nheight\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.height",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.height.html#ansys.edb.core.geometry.arc_data.ArcData.height",
        "title": "height > height > height",
        "section": "height > height",
        "text": "property ArcData.height\n\nfloat: Height of the arc.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.name",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of simulation setup.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.name",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.name.html#ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property RaptorXSimulationSetup.name\n\nstr: Name of simulation setup.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.name",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the terminal.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.name",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.name.html#ansys.edb.core.terminal.terminals.Terminal.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property Terminal.name\n\nstr: Name of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.scale",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.scale.html#scale",
        "title": "scale",
        "section": "scale",
        "text": "Scale the polygon by a linear factor from a center.\nLinear factor.\nCenter.\nscale\npython:float\nansys.edb.core.typing.PointLikeT\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.scale",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.scale.html#ansys.edb.core.geometry.polygon_data.PolygonData.scale",
        "title": "scale > scale > scale",
        "section": "scale > scale",
        "text": "PolygonData.scale(factor, center)\n\nScale the polygon by a linear factor from a center.\n\nParameters\n\nfactor\n\npython:float\n\nLinear factor.\n\ncenter\n\nansys.edb.core.typing.PointLikeT\n\nCenter.\n\nReturns\n\nPolygonData\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.is_in_zone",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.is_in_zone.html#is_in_zone",
        "title": "is_in_zone",
        "section": "is_in_zone",
        "text": "Determine if the layer exists in the given zone.\nTrue when the layer exists in the given zone, False otherwise.\nis_in_zone\npython:int\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.is_in_zone",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.is_in_zone.html#ansys.edb.core.layer.stackup_layer.StackupLayer.is_in_zone",
        "title": "is_in_zone > is_in_zone > is_in_zone",
        "section": "is_in_zone > is_in_zone",
        "text": "StackupLayer.is_in_zone(zone)\n\nDetermine if the layer exists in the given zone.\n\nParameters\n\nzone\n\npython:int\n\n\n\nReturns\n\nbool\n\nTrue when the layer exists in the given zone, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.is_null.html#ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property Jedec4BondwireDef.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.name",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the pin group.\nThis property is read-only.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.name",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.name.html#ansys.edb.core.hierarchy.pin_group.PinGroup.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property PinGroup.name\n\nstr: Name of the pin group.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.get_bbox",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.get_bbox.html#get_bbox",
        "title": "get_bbox",
        "section": "get_bbox",
        "text": "Get the bounding box of the layout object instance.\nWhether to return the bounding box in the local context.\nIf False, the bounding box is returned in the global context.\nBounding box of the layout object instance.\nget_bbox\ncontext\nFalse\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.get_bbox",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.get_bbox.html#ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.get_bbox",
        "title": "get_bbox > get_bbox > get_bbox",
        "section": "get_bbox > get_bbox",
        "text": "LayoutObjInstance.get_bbox(local=False)\n\nGet the bounding box of the layout object instance.\n\nParameters\n\nlocal\n\nbool\n\nWhether to return the bounding box in the local context.\nIf False, the bounding box is returned in the global context.\n\nReturns\n\nPolygonData\n\nBounding box of the layout object instance.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents this object’s ID.\nThis property is read-only.\nmsg\nEDBObjMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.msg.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property HFSSSolverSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object’s ID.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.model",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.model.html#model",
        "title": "model",
        "section": "model",
        "text": "str: S-parameter model.\nmodel\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.model",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.model.html#ansys.edb.core.terminal.terminals.EdgeTerminal.model",
        "title": "model > model > model",
        "section": "model > model",
        "text": "property EdgeTerminal.model\n\nstr: S-parameter model.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.find_by_name",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.find_by_name.html#find_by_name",
        "title": "find_by_name",
        "section": "find_by_name",
        "text": "Find a package definition object by name in a given database.\nDatabase to search for the package definition.\nName of the package definition.\nPackage definition found, None otherwise.\nfind_by_name\npython:str\nPackageDef\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.find_by_name",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.find_by_name.html#ansys.edb.core.definition.package_def.PackageDef.find_by_name",
        "title": "find_by_name > find_by_name > find_by_name",
        "section": "find_by_name > find_by_name",
        "text": "classmethod PackageDef.find_by_name(db, name)\n\nFind a package definition object by name in a given database.\n\nParameters\n\ndb :class:`.Database`\n\nDatabase to search for the package definition.\n\nname\n\npython:str\n\nName of the package definition.\n\nReturns\n\nPackageDef\n\nPackage definition found, None otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.create",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a padstack data definition.\nPadstack data definition created.\ncreate\nPadstackDefData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.create",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.create.html#ansys.edb.core.definition.padstack_def_data.PadstackDefData.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod PadstackDefData.create()\n\nCreate a padstack data definition.\n\nReturns\n\nPadstackDefData\n\nPadstack data definition created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.max_length",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.max_length.html#max_length",
        "title": "max_length",
        "section": "max_length",
        "text": "str: Maximum length of the mesh elements.\nmax_length\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.max_length",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.max_length.html#ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.max_length",
        "title": "max_length > max_length > max_length",
        "section": "max_length > max_length",
        "text": "property LengthMeshOperation.max_length\n\nstr: Maximum length of the mesh elements.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.create_stride",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.create_stride.html#create_stride",
        "title": "create_stride",
        "section": "create_stride",
        "text": "Create a Stride model from an MCAD file.\nStride model created.\ncreate_stride\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.create_stride",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.create_stride.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.create_stride",
        "title": "create_stride > create_stride > create_stride",
        "section": "create_stride > create_stride",
        "text": "VoltageRegulator.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nReturns\n\nMcadModel\n\nStride model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the product property.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.get_product_property.html#ansys.edb.core.hierarchy.pin_group.PinGroup.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "PinGroup.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nReturns\n\npython:str\n\nString stored in the product property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.get_fill_material",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.get_fill_material.html#get_fill_material",
        "title": "get_fill_material",
        "section": "get_fill_material",
        "text": "Get the name of the fill material of the layer.\nWhether to evaluate the material if it is parameterized.\nName of the fill material.\nget_fill_material\npython:True\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.get_fill_material",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.get_fill_material.html#ansys.edb.core.layer.stackup_layer.StackupLayer.get_fill_material",
        "title": "get_fill_material > get_fill_material > get_fill_material",
        "section": "get_fill_material > get_fill_material",
        "text": "StackupLayer.get_fill_material(evaluated=True)\n\nGet the name of the fill material of the layer.\n\nParameters\n\nevaluated\n\nbool, default: python:True\n\nWhether to evaluate the material if it is parameterized.\n\nReturns\n\npython:str\n\nName of the fill material.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.create_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.create_stride.html#create_stride",
        "title": "create_stride",
        "section": "create_stride",
        "text": "Create a Stride model from an MCAD file.\nStride model created.\ncreate_stride\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.create_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.create_stride.html#ansys.edb.core.primitive.primitive.Rectangle.create_stride",
        "title": "create_stride > create_stride > create_stride",
        "section": "create_stride > create_stride",
        "text": "Rectangle.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nReturns\n\nMcadModel\n\nStride model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap.set_mapping",
        "href": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap.set_mapping.html#set_mapping",
        "title": "set_mapping",
        "section": "set_mapping",
        "text": "Create an entry in the layer map object.\nLayer ID (key) “from” which to map with the to_id parameter.\nLayer ID (value) “to” which to map with the from_id parameter.\nset_mapping\nto_id\nfrom_id"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap.set_mapping",
        "href": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap.set_mapping.html#ansys.edb.core.utility.layer_map.LayerMap.set_mapping",
        "title": "set_mapping > set_mapping > set_mapping",
        "section": "set_mapping > set_mapping",
        "text": "LayerMap.set_mapping(from_id, to_id)\n\nCreate an entry in the layer map object.\n\nParameters\n\nfrom_id: int\n\nLayer ID (key) “from” which to map with the to_id parameter.\n\nto_id: int\n\nLayer ID (value) “to” which to map with the from_id parameter.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MultiFrequencyAdaptiveSolution.adaptive_frequencies",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MultiFrequencyAdaptiveSolution.adaptive_frequencies.html#adaptive_frequencies",
        "title": "adaptive_frequencies",
        "section": "adaptive_frequencies",
        "text": "list of AdaptiveFrequency: Frequencies that adaptive solutions are calculated for.\nadaptive_frequencies\nlist\nAdaptiveFrequency"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MultiFrequencyAdaptiveSolution.adaptive_frequencies",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MultiFrequencyAdaptiveSolution.adaptive_frequencies.html#ansys.edb.core.simulation_setup.adaptive_solutions.MultiFrequencyAdaptiveSolution.adaptive_frequencies",
        "title": "adaptive_frequencies > adaptive_frequencies > adaptive_frequencies",
        "section": "adaptive_frequencies > adaptive_frequencies",
        "text": "property MultiFrequencyAdaptiveSolution.adaptive_frequencies\n\nlist of AdaptiveFrequency: Frequencies that adaptive solutions are calculated for.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.has_self_intersections",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.has_self_intersections.html#has_self_intersections",
        "title": "has_self_intersections",
        "section": "has_self_intersections",
        "text": "Determine whether the polygon contains any self-intersections.\nTolerance.\nTrue when the polygon contains self-intersections, False otherwise.\nhas_self_intersections\npython:float\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.has_self_intersections",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.has_self_intersections.html#ansys.edb.core.geometry.polygon_data.PolygonData.has_self_intersections",
        "title": "has_self_intersections > has_self_intersections > has_self_intersections",
        "section": "has_self_intersections > has_self_intersections",
        "text": "PolygonData.has_self_intersections(tol=1e-09)\n\nDetermine whether the polygon contains any self-intersections.\n\nParameters\n\ntol\n\npython:float, default: 1e-9\n\nTolerance.\n\nReturns\n\nbool\n\nTrue when the polygon contains self-intersections, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.create_hfss.html#create_hfss",
        "title": "create_hfss",
        "section": "create_hfss",
        "text": "Create an HFSS model from an MCAD file.\nHFSS model created.\ncreate_hfss\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.create_hfss.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.create_hfss",
        "title": "create_hfss > create_hfss > create_hfss",
        "section": "create_hfss > create_hfss",
        "text": "ComponentGroup.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nReturns\n\nMcadModel\n\nHFSS model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.source_phase",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.source_phase.html#source_phase",
        "title": "source_phase",
        "section": "source_phase",
        "text": "Value: Source phase of the terminal.\nsource_phase\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.source_phase",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.source_phase.html#ansys.edb.core.terminal.terminals.PointTerminal.source_phase",
        "title": "source_phase > source_phase > source_phase",
        "section": "source_phase > source_phase",
        "text": "property PointTerminal.source_phase\n\nValue: Source phase of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior.SAME_DC",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior.SAME_DC.html#same_dc",
        "title": "SAME_DC",
        "section": "SAME_DC",
        "text": "SAME_DC"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior.SAME_DC",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior.SAME_DC.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior.SAME_DC",
        "title": "SAME_DC > SAME_DC > SAME_DC",
        "section": "SAME_DC > SAME_DC",
        "text": "SParamDCBehavior.SAME_DC = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.closest",
        "href": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.closest.html#closest",
        "title": "closest",
        "section": "closest",
        "text": "Get the closest point on a line segment from the point.\nStart point of the line segment.\nEnd point of the line segment.\nclosest\nansys.edb.core.typing.PointLike\nansys.edb.core.typing.PointLike\ntyping.Optional\nPointData\nor\nNone\nif\neither\npoint\nis\nan"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.closest",
        "href": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.closest.html#ansys.edb.core.geometry.point_data.PointData.closest",
        "title": "closest > closest > closest",
        "section": "closest > closest",
        "text": "PointData.closest(start, end)\n\nGet the closest point on a line segment from the point.\n\nParameters\n\nstart\n\nansys.edb.core.typing.PointLike\n\nStart point of the line segment.\n\nend\n\nansys.edb.core.typing.PointLike\n\nEnd point of the line segment.\n\nReturns\n\ntyping.Optional[PointData] or None if either point is an arc.\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.clone",
        "href": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Clone the component property.\nComponent property cloned.\nclone\nComponentProperty"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.clone",
        "href": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.clone.html#ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "RLCComponentProperty.clone()\n\nClone the component property.\n\nReturns\n\nComponentProperty\n\nComponent property cloned.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.layout",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.layout.html#layout",
        "title": "layout",
        "section": "layout",
        "text": "Layout: Layout owning the object.\nThis property is read-only.\nlayout\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.layout",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.layout.html#ansys.edb.core.primitive.primitive.Polygon.layout",
        "title": "layout > layout > layout",
        "section": "layout > layout",
        "text": "property Polygon.layout\n\nLayout: Layout owning the object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.enabled",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.enabled.html#enabled",
        "title": "enabled",
        "section": "enabled",
        "text": "bool: Flag indicating if the mesh operation is enabled.\nenabled\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.enabled",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.enabled.html#ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.enabled",
        "title": "enabled > enabled > enabled",
        "section": "enabled > enabled",
        "text": "property SkinDepthMeshOperation.enabled\n\nbool: Flag indicating if the mesh operation is enabled.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_mcad_hfss.html#is_mcad_hfss",
        "title": "is_mcad_hfss",
        "section": "is_mcad_hfss",
        "text": "bool: Flag indicating if this is an HFSS MCAD model.\nThis property is read-only.\nis_mcad_hfss\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_mcad_hfss.html#ansys.edb.core.primitive.primitive.Polygon.is_mcad_hfss",
        "title": "is_mcad_hfss > is_mcad_hfss > is_mcad_hfss",
        "section": "is_mcad_hfss > is_mcad_hfss",
        "text": "property Polygon.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.html#raptorxgeneralsettings",
        "title": "RaptorXGeneralSettings",
        "section": "RaptorXGeneralSettings",
        "text": "Represents general settings for RaptorX simulations.\nRaptorXGeneralSettings.global_temperature\nfloat: Simulation temperature in degrees Celsius.\nRaptorXGeneralSettings.max_frequency\nstr: Maximum frequency value, which controls the tightness of the model mesh.\nRaptorXGeneralSettings.msg\nEDBObjMessage: Protobuf message that represents this object's ID.\nRaptorXGeneralSettings.netlist_export_spectre\nbool: Flag indicating if the netlist is exported in Spectre format.\nRaptorXGeneralSettings.save_netlist\nbool: Flag indicating if the netlist output is saved.\nRaptorXGeneralSettings.save_rfm\nbool: Flag indicating if an RFM file is exported.\nRaptorXGeneralSettings.use_gold_em_solver\nbool: Flag indicating if the gold em solver is used.\nRaptorXGeneralSettings\nRaptorXGeneralSettings.global_temperature\nfloat\nRaptorXGeneralSettings.max_frequency\nstr\nRaptorXGeneralSettings.msg\nEDBObjMessage\nRaptorXGeneralSettings.netlist_export_spectre\nbool\nRaptorXGeneralSettings.save_netlist\nbool\nRaptorXGeneralSettings.save_rfm\nbool\nRaptorXGeneralSettings.use_gold_em_solver\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings",
        "title": "RaptorXGeneralSettings > RaptorXGeneralSettings > RaptorXGeneralSettings",
        "section": "RaptorXGeneralSettings > RaptorXGeneralSettings",
        "text": "class ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings(sim_setup)\n\nRepresents general settings for RaptorX simulations.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nRaptorXGeneralSettings.global_temperature\n\nfloat: Simulation temperature in degrees Celsius.\n\nRaptorXGeneralSettings.max_frequency\n\nstr: Maximum frequency value, which controls the tightness of the model mesh.\n\nRaptorXGeneralSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object's ID.\n\nRaptorXGeneralSettings.netlist_export_spectre\n\nbool: Flag indicating if the netlist is exported in Spectre format.\n\nRaptorXGeneralSettings.save_netlist\n\nbool: Flag indicating if the netlist output is saved.\n\nRaptorXGeneralSettings.save_rfm\n\nbool: Flag indicating if an RFM file is exported.\n\nRaptorXGeneralSettings.use_gold_em_solver\n\nbool: Flag indicating if the gold em solver is used.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.delete",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the layout object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.delete",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.delete.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "CellInstance.delete()\n\nDelete the layout object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.create_hfss.html#create_hfss",
        "title": "create_hfss",
        "section": "create_hfss",
        "text": "Create an HFSS model from an MCAD file.\nHFSS model created.\ncreate_hfss\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.create_hfss.html#ansys.edb.core.hierarchy.group.Group.create_hfss",
        "title": "create_hfss > create_hfss > create_hfss",
        "section": "create_hfss > create_hfss",
        "text": "Group.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nReturns\n\nMcadModel\n\nHFSS model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.layer_id",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.layer_id.html#layer_id",
        "title": "layer_id",
        "section": "layer_id",
        "text": "int: Layer ID.\nlayer_id\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.layer_id",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.layer_id.html#ansys.edb.core.layer.stackup_layer.StackupLayer.layer_id",
        "title": "layer_id > layer_id > layer_id",
        "section": "layer_id > layer_id",
        "text": "property StackupLayer.layer_id\n\nint: Layer ID.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.get_bbox",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.get_bbox.html#get_bbox",
        "title": "get_bbox",
        "section": "get_bbox",
        "text": "Get the bounding box of the context.\nWhether to return the bounding box in the local context.\nIf False, the bounding-box in the global context is returned.\nBounding box of the context.\nget_bbox\ncontext\nFalse\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.get_bbox",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.get_bbox.html#ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.get_bbox",
        "title": "get_bbox > get_bbox > get_bbox",
        "section": "get_bbox > get_bbox",
        "text": "LayoutInstanceContext.get_bbox(local)\n\nGet the bounding box of the context.\n\nParameters\n\nlocal\n\nbool\n\nWhether to return the bounding box in the local context.\nIf False, the bounding-box in the global context is returned.\n\nReturns\n\nPolygonData\n\nBounding box of the context.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.obj_type.html#obj_type",
        "title": "obj_type",
        "section": "obj_type",
        "text": "LayoutObjType: Layout object type.\nThis property is read-only.\nobj_type\nLayoutObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.obj_type.html#ansys.edb.core.primitive.primitive.Text.obj_type",
        "title": "obj_type > obj_type > obj_type",
        "section": "obj_type > obj_type",
        "text": "property Text.obj_type\n\nLayoutObjType: Layout object type.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.solder_ball_placement",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.solder_ball_placement.html#solder_ball_placement",
        "title": "solder_ball_placement",
        "section": "solder_ball_placement",
        "text": "SolderballPlacement: Solder ball placement or orientation.\nsolder_ball_placement\nSolderballPlacement"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.solder_ball_placement",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.solder_ball_placement.html#ansys.edb.core.definition.padstack_def_data.PadstackDefData.solder_ball_placement",
        "title": "solder_ball_placement > solder_ball_placement > solder_ball_placement",
        "section": "solder_ball_placement > solder_ball_placement",
        "text": "property PadstackDefData.solder_ball_placement\n\nSolderballPlacement: Solder ball placement or orientation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.remove_self_intersections",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.remove_self_intersections.html#remove_self_intersections",
        "title": "remove_self_intersections",
        "section": "remove_self_intersections",
        "text": "Remove self-intersections from this polygon.\nTolerance.\nA list of non self-intersecting polygons.\nremove_self_intersections\npython:float\npython:list\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.remove_self_intersections",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.remove_self_intersections.html#ansys.edb.core.geometry.polygon_data.PolygonData.remove_self_intersections",
        "title": "remove_self_intersections > remove_self_intersections > remove_self_intersections",
        "section": "remove_self_intersections > remove_self_intersections",
        "text": "PolygonData.remove_self_intersections(tol=1e-09)\n\nRemove self-intersections from this polygon.\n\nParameters\n\ntol\n\npython:float, default: 1e-9\n\nTolerance.\n\nReturns\n\npython:list[PolygonData]\n\nA list of non self-intersecting polygons.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.id",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.id",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.id.html#ansys.edb.core.layer.layer_collection.LayerCollection.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property LayerCollection.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.use_dc_conductivity",
        "href": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.use_dc_conductivity.html#use_dc_conductivity",
        "title": "use_dc_conductivity",
        "section": "use_dc_conductivity",
        "text": "bool: Flag indicating if the DC conductivity nominal value is used.\nuse_dc_conductivity\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.use_dc_conductivity",
        "href": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.use_dc_conductivity.html#ansys.edb.core.definition.debye_model.DebyeModel.use_dc_conductivity",
        "title": "use_dc_conductivity > use_dc_conductivity > use_dc_conductivity",
        "section": "use_dc_conductivity > use_dc_conductivity",
        "text": "property DebyeModel.use_dc_conductivity\n\nbool: Flag indicating if the DC conductivity nominal value is used.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.sweep_data",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.sweep_data.html#sweep_data",
        "title": "sweep_data",
        "section": "sweep_data",
        "text": "list of SweepData: Frequency sweeps of the simulation setup.\nsweep_data\nlist\nSweepData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.sweep_data",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.sweep_data.html#ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.sweep_data",
        "title": "sweep_data > sweep_data > sweep_data",
        "section": "sweep_data > sweep_data",
        "text": "property HfssSimulationSetup.sweep_data\n\nlist of SweepData: Frequency sweeps of the simulation setup.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_enable_hybrid_extraction",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_enable_hybrid_extraction.html#use_enable_hybrid_extraction",
        "title": "use_enable_hybrid_extraction",
        "section": "use_enable_hybrid_extraction",
        "text": "bool: Flag indicating if the modeler is to split the layout into         two parts in an attempt to decrease the complexity.\nuse_enable_hybrid_extraction\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_enable_hybrid_extraction",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_enable_hybrid_extraction.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_enable_hybrid_extraction",
        "title": "use_enable_hybrid_extraction > use_enable_hybrid_extraction > use_enable_hybrid_extraction",
        "section": "use_enable_hybrid_extraction > use_enable_hybrid_extraction",
        "text": "property RaptorXAdvancedSettings.use_enable_hybrid_extraction\n\nbool: Flag indicating if the modeler is to split the layout into         two parts in an attempt to decrease the complexity.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the property.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.set_product_property.html#ansys.edb.core.hierarchy.via_group.ViaGroup.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "ViaGroup.set_product_property(prod_id, attr_id, prop_value)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nprop_value\n\npython:str\n\nString stored in the property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty",
        "href": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.html#iccomponentproperty",
        "title": "ICComponentProperty",
        "section": "ICComponentProperty",
        "text": "Represents an IC component property.\nICComponentProperty.clone()\nClone the component property.\nICComponentProperty.create()\nCreate an IC component property.\nICComponentProperty.die_property\nDieProperty: Die property.\nICComponentProperty.id\nint: Unique ID of the EDB object.\nICComponentProperty.is_null\nbool: Flag indicating if the object exists in the database.\nICComponentProperty.model\nModel: Model object.\nICComponentProperty.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nICComponentProperty.package_def\nPackageDef: Package definition object.\nICComponentProperty.package_mounting_offset\nValue: Mounting offset of the package definition object.\nICComponentProperty.port_property\nPortProperty: Port property.\nICComponentProperty.solder_ball_property\nSolderBallProperty: Solder ball property.\nICComponentProperty\nICComponentProperty.clone\nICComponentProperty.create\nICComponentProperty.die_property\nDieProperty\nICComponentProperty.id\nint\nICComponentProperty.is_null\nbool\nICComponentProperty.model\nModel\nICComponentProperty.msg\nEDBObjMessage\nICComponentProperty.package_def\nPackageDef\nICComponentProperty.package_mounting_offset\nValue\nICComponentProperty.port_property\nPortProperty\nICComponentProperty.solder_ball_property\nSolderBallProperty"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty",
        "href": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.html#ansys.edb.core.definition.ic_component_property.ICComponentProperty",
        "title": "ICComponentProperty > ICComponentProperty > ICComponentProperty",
        "section": "ICComponentProperty > ICComponentProperty",
        "text": "class ansys.edb.core.definition.ic_component_property.ICComponentProperty(msg)\n\nRepresents an IC component property.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nICComponentProperty.clone()\n\nClone the component property.\n\nICComponentProperty.create()\n\nCreate an IC component property.\n\n\n\nAttributes\n\n\n\n\n\n\n\nICComponentProperty.die_property\n\nDieProperty: Die property.\n\nICComponentProperty.id\n\nint: Unique ID of the EDB object.\n\nICComponentProperty.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nICComponentProperty.model\n\nModel: Model object.\n\nICComponentProperty.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nICComponentProperty.package_def\n\nPackageDef: Package definition object.\n\nICComponentProperty.package_mounting_offset\n\nValue: Mounting offset of the package definition object.\n\nICComponentProperty.port_property\n\nPortProperty: Port property.\n\nICComponentProperty.solder_ball_property\n\nSolderBallProperty: Solder ball property.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty",
        "href": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.html#iocomponentproperty",
        "title": "IOComponentProperty",
        "section": "IOComponentProperty",
        "text": "Represents an I0 component property.\nIOComponentProperty.clone()\nClone the component property.\nIOComponentProperty.create()\nCreate an IO component property.\nIOComponentProperty.id\nint: Unique ID of the EDB object.\nIOComponentProperty.is_null\nbool: Flag indicating if the object exists in the database.\nIOComponentProperty.model\nModel: Model object.\nIOComponentProperty.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nIOComponentProperty.package_def\nPackageDef: Package definition object.\nIOComponentProperty.package_mounting_offset\nValue: Mounting offset of the package definition object.\nIOComponentProperty.port_property\nPortProperty: Port property.\nIOComponentProperty.solder_ball_property\nSolderBallProperty: Solder ball property.\nIOComponentProperty\nIOComponentProperty.clone\nIOComponentProperty.create\nIOComponentProperty.id\nint\nIOComponentProperty.is_null\nbool\nIOComponentProperty.model\nModel\nIOComponentProperty.msg\nEDBObjMessage\nIOComponentProperty.package_def\nPackageDef\nIOComponentProperty.package_mounting_offset\nValue\nIOComponentProperty.port_property\nPortProperty\nIOComponentProperty.solder_ball_property\nSolderBallProperty"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty",
        "href": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.html#ansys.edb.core.definition.io_component_property.IOComponentProperty",
        "title": "IOComponentProperty > IOComponentProperty > IOComponentProperty",
        "section": "IOComponentProperty > IOComponentProperty",
        "text": "class ansys.edb.core.definition.io_component_property.IOComponentProperty(msg)\n\nRepresents an I0 component property.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nIOComponentProperty.clone()\n\nClone the component property.\n\nIOComponentProperty.create()\n\nCreate an IO component property.\n\n\n\nAttributes\n\n\n\n\n\n\n\nIOComponentProperty.id\n\nint: Unique ID of the EDB object.\n\nIOComponentProperty.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nIOComponentProperty.model\n\nModel: Model object.\n\nIOComponentProperty.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nIOComponentProperty.package_def\n\nPackageDef: Package definition object.\n\nIOComponentProperty.package_mounting_offset\n\nValue: Mounting offset of the package definition object.\n\nIOComponentProperty.port_property\n\nPortProperty: Port property.\n\nIOComponentProperty.solder_ball_property\n\nSolderBallProperty: Solder ball property.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.html#path",
        "title": "Path",
        "section": "Path",
        "text": "Represents a path object.\nPath.add_void(hole)\nAdd a void to the primitive.\nPath.cast()\nCast the primitive object to the correct concrete type.\nPath.create(layout, layer, net, width, ...)\nCreate a path.\nPath.create_3d_comp()\nCreate a 3D composite model from an MCAD file.\nPath.create_hfss()\nCreate an HFSS model from an MCAD file.\nPath.create_stride()\nCreate a Stride model from an MCAD file.\nPath.delete()\nDelete the layout object.\nPath.find_by_id(layout, uid)\nFind a Connectable object by database ID in a given layout.\nPath.get_clip_info()\nGet the data used to clip the path.\nPath.get_end_cap_style()\nGet end cap styles for the path.\nPath.get_hfss_prop()\nGet HFSS properties.\nPath.get_product_property(prod_id, attr_id)\nGet the product property of the layout object for a given product ID and attribute ID.\nPath.get_product_property_ids(prod_id)\nGet a list of attribute IDs given a product ID for the layout object.\nPath.make_zone_primitive(zone_id)\nMake the primitive a zone primitive with a zone specified by the provided ID.\nPath.remove_hfss_prop()\nRemove HFSS properties.\nPath.render(width, end_cap1, end_cap2, ...)\nRender a path.\nPath.set_clip_info(clipping_poly[, keep_inside])\nSet the data used to clip the path.\nPath.set_end_cap_style(end_cap1, end_cap2)\nSet end cap styles for the path.\nPath.set_hfss_prop(material, solve_inside)\nSet HFSS properties.\nPath.set_product_property(prod_id, attr_id, ...)\nSet the product property of the layout object for a given product ID and attribute ID.\nPath.can_be_zone_primitive\nbool: Flag indicating if the path can be a zone.\nPath.center_line\nPolygonData: Center line for the path.\nPath.component\nComponentGroup:         Component of the Connectable object.\nPath.corner_style\nPathCornerType: Corner style of the path.\nPath.edb_uid\nint: Unique, persistent ID for the Connectable object.\nPath.group\nGroup object.\nPath.has_voids\nbool: Flag indicating if a primitive has voids inside.\nPath.id\nint: Unique ID of the EDB object.\nPath.is_mcad\nbool: Flag indicating if this is an MCAD model.\nPath.is_mcad_3d_comp\nbool: Flag indicating if this is a 3D composite MCAD model.\nPath.is_mcad_hfss\nbool: Flag indicating if this is an HFSS MCAD model.\nPath.is_mcad_stride\nbool: Flag indicating if this is a Stride MCAD model.\nPath.is_negative\nbool: Flag indicating if the primitive is negative.\nPath.is_null\nbool: Flag indicating if the object exists in the database.\nPath.is_parameterized\nbool: Whether the primitive is parametrized.\nPath.is_void\nbool: Flag indicating if a primitive is a void.\nPath.is_zone_primitive\nbool: Flag indicating if the primitive object is a zone.\nPath.layer\nLayer: Layer that the primitive object is on.\nPath.layout\nLayout: Layout owning the object.\nPath.layout_obj_type\n\nPath.miter_ratio\nValue: Miter ratio.\nPath.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nPath.net\nNet: Net of the Connectable object.\nPath.obj_type\nLayoutObjType: Layout object type.\nPath.owner\nPrimitive: Owner of the primitive object.\nPath.polygon_data\nPolygonData: Polygon data of this Path.\nPath.primitive_type\nPrimitiveType: Primitive type of the primitive.\nPath.voids\nlist of Primitive: List of void        primitive objects inside the primitive.\nPath.width\nValue: Path width.\nPath\nPath.add_void\nPath.cast\nPath.create\nPath.create_3d_comp\nPath.create_hfss\nPath.create_stride\nPath.delete\nPath.find_by_id\nPath.get_clip_info\nPath.get_end_cap_style\nPath.get_hfss_prop\nPath.get_product_property\nPath.get_product_property_ids\nPath.make_zone_primitive\nPath.remove_hfss_prop\nPath.render\nPath.set_clip_info\nPath.set_end_cap_style\nPath.set_hfss_prop\nPath.set_product_property\nPath.can_be_zone_primitive\nbool\nPath.center_line\nPolygonData\nPath.component\nComponentGroup\nPath.corner_style\nPathCornerType\nPath.edb_uid\nint\nPath.group\nGroup\nPath.has_voids\nbool\nPath.id\nint\nPath.is_mcad\nbool\nPath.is_mcad_3d_comp\nbool\nPath.is_mcad_hfss\nbool\nPath.is_mcad_stride\nbool\nPath.is_negative\nbool\nPath.is_null\nbool\nPath.is_parameterized\nbool\nPath.is_void\nbool\nPath.is_zone_primitive\nbool\nPath.layer\nLayer\nPath.layout\nLayout\nPath.layout_obj_type\nPath.miter_ratio\nValue\nPath.msg\nEDBObjMessage\nPath.net\nNet\nPath.obj_type\nLayoutObjType\nPath.owner\nPrimitive\nPath.polygon_data\nPolygonData\nPath.primitive_type\nPrimitiveType\nPath.voids\nlist\nPrimitive\nPath.width\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.html#ansys.edb.core.primitive.primitive.Path",
        "title": "Path > Path > Path",
        "section": "Path > Path",
        "text": "class ansys.edb.core.primitive.primitive.Path(msg)\n\nRepresents a path object.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nPath.add_void(hole)\n\nAdd a void to the primitive.\n\nPath.cast()\n\nCast the primitive object to the correct concrete type.\n\nPath.create(layout, layer, net, width, ...)\n\nCreate a path.\n\nPath.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nPath.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nPath.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nPath.delete()\n\nDelete the layout object.\n\nPath.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nPath.get_clip_info()\n\nGet the data used to clip the path.\n\nPath.get_end_cap_style()\n\nGet end cap styles for the path.\n\nPath.get_hfss_prop()\n\nGet HFSS properties.\n\nPath.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nPath.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nPath.make_zone_primitive(zone_id)\n\nMake the primitive a zone primitive with a zone specified by the provided ID.\n\nPath.remove_hfss_prop()\n\nRemove HFSS properties.\n\nPath.render(width, end_cap1, end_cap2, ...)\n\nRender a path.\n\nPath.set_clip_info(clipping_poly[, keep_inside])\n\nSet the data used to clip the path.\n\nPath.set_end_cap_style(end_cap1, end_cap2)\n\nSet end cap styles for the path.\n\nPath.set_hfss_prop(material, solve_inside)\n\nSet HFSS properties.\n\nPath.set_product_property(prod_id, attr_id, ...)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\n\n\nAttributes\n\n\n\n\n\n\n\nPath.can_be_zone_primitive\n\nbool: Flag indicating if the path can be a zone.\n\nPath.center_line\n\nPolygonData: Center line for the path.\n\nPath.component\n\nComponentGroup:         Component of the Connectable object.\n\nPath.corner_style\n\nPathCornerType: Corner style of the path.\n\nPath.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nPath.group\n\nGroup object.\n\nPath.has_voids\n\nbool: Flag indicating if a primitive has voids inside.\n\nPath.id\n\nint: Unique ID of the EDB object.\n\nPath.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nPath.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nPath.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nPath.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nPath.is_negative\n\nbool: Flag indicating if the primitive is negative.\n\nPath.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nPath.is_parameterized\n\nbool: Whether the primitive is parametrized.\n\nPath.is_void\n\nbool: Flag indicating if a primitive is a void.\n\nPath.is_zone_primitive\n\nbool: Flag indicating if the primitive object is a zone.\n\nPath.layer\n\nLayer: Layer that the primitive object is on.\n\nPath.layout\n\nLayout: Layout owning the object.\n\nPath.layout_obj_type\n\n\n\nPath.miter_ratio\n\nValue: Miter ratio.\n\nPath.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nPath.net\n\nNet: Net of the Connectable object.\n\nPath.obj_type\n\nLayoutObjType: Layout object type.\n\nPath.owner\n\nPrimitive: Owner of the primitive object.\n\nPath.polygon_data\n\nPolygonData: Polygon data of this Path.\n\nPath.primitive_type\n\nPrimitiveType: Primitive type of the primitive.\n\nPath.voids\n\nlist of Primitive: List of void        primitive objects inside the primitive.\n\nPath.width\n\nValue: Path width.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.create_stride",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.create_stride.html#create_stride",
        "title": "create_stride",
        "section": "create_stride",
        "text": "Create a Stride model from an MCAD file.\nStride model created.\ncreate_stride\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.create_stride",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.create_stride.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.create_stride",
        "title": "create_stride > create_stride > create_stride",
        "section": "create_stride > create_stride",
        "text": "PadstackInstanceTerminal.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nReturns\n\nMcadModel\n\nStride model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_null",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_null",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_null.html#ansys.edb.core.primitive.primitive.Polygon.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property Polygon.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.html#primitive",
        "title": "Primitive",
        "section": "Primitive",
        "text": "Represents a primitive object.\nPrimitive.add_void(hole)\nAdd a void to the primitive.\nPrimitive.cast()\nCast the primitive object to the correct concrete type.\nPrimitive.create_3d_comp()\nCreate a 3D composite model from an MCAD file.\nPrimitive.create_hfss()\nCreate an HFSS model from an MCAD file.\nPrimitive.create_stride()\nCreate a Stride model from an MCAD file.\nPrimitive.delete()\nDelete the layout object.\nPrimitive.find_by_id(layout, uid)\nFind a Connectable object by database ID in a given layout.\nPrimitive.get_hfss_prop()\nGet HFSS properties.\nPrimitive.get_product_property(prod_id, attr_id)\nGet the product property of the layout object for a given product ID and attribute ID.\nPrimitive.get_product_property_ids(prod_id)\nGet a list of attribute IDs given a product ID for the layout object.\nPrimitive.make_zone_primitive(zone_id)\nMake the primitive a zone primitive with a zone specified by the provided ID.\nPrimitive.remove_hfss_prop()\nRemove HFSS properties.\nPrimitive.set_hfss_prop(material, solve_inside)\nSet HFSS properties.\nPrimitive.set_product_property(prod_id, ...)\nSet the product property of the layout object for a given product ID and attribute ID.\nPrimitive.can_be_zone_primitive\nbool: Flag indicating if the primitive can be a zone.\nPrimitive.component\nComponentGroup:         Component of the Connectable object.\nPrimitive.edb_uid\nint: Unique, persistent ID for the Connectable object.\nPrimitive.group\nGroup object.\nPrimitive.has_voids\nbool: Flag indicating if a primitive has voids inside.\nPrimitive.id\nint: Unique ID of the EDB object.\nPrimitive.is_mcad\nbool: Flag indicating if this is an MCAD model.\nPrimitive.is_mcad_3d_comp\nbool: Flag indicating if this is a 3D composite MCAD model.\nPrimitive.is_mcad_hfss\nbool: Flag indicating if this is an HFSS MCAD model.\nPrimitive.is_mcad_stride\nbool: Flag indicating if this is a Stride MCAD model.\nPrimitive.is_negative\nbool: Flag indicating if the primitive is negative.\nPrimitive.is_null\nbool: Flag indicating if the object exists in the database.\nPrimitive.is_parameterized\nbool: Whether the primitive is parametrized.\nPrimitive.is_void\nbool: Flag indicating if a primitive is a void.\nPrimitive.is_zone_primitive\nbool: Flag indicating if the primitive object is a zone.\nPrimitive.layer\nLayer: Layer that the primitive object is on.\nPrimitive.layout\nLayout: Layout owning the object.\nPrimitive.layout_obj_type\n\nPrimitive.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nPrimitive.net\nNet: Net of the Connectable object.\nPrimitive.obj_type\nLayoutObjType: Layout object type.\nPrimitive.owner\nPrimitive: Owner of the primitive object.\nPrimitive.primitive_type\nPrimitiveType: Primitive type of the primitive.\nPrimitive.voids\nlist of Primitive: List of void        primitive objects inside the primitive.\nPrimitive\nPrimitive.add_void\nPrimitive.cast\nPrimitive.create_3d_comp\nPrimitive.create_hfss\nPrimitive.create_stride\nPrimitive.delete\nPrimitive.find_by_id\nPrimitive.get_hfss_prop\nPrimitive.get_product_property\nPrimitive.get_product_property_ids\nPrimitive.make_zone_primitive\nPrimitive.remove_hfss_prop\nPrimitive.set_hfss_prop\nPrimitive.set_product_property\nPrimitive.can_be_zone_primitive\nbool\nPrimitive.component\nComponentGroup\nPrimitive.edb_uid\nint\nPrimitive.group\nGroup\nPrimitive.has_voids\nbool\nPrimitive.id\nint\nPrimitive.is_mcad\nbool\nPrimitive.is_mcad_3d_comp\nbool\nPrimitive.is_mcad_hfss\nbool\nPrimitive.is_mcad_stride\nbool\nPrimitive.is_negative\nbool\nPrimitive.is_null\nbool\nPrimitive.is_parameterized\nbool\nPrimitive.is_void\nbool\nPrimitive.is_zone_primitive\nbool\nPrimitive.layer\nLayer\nPrimitive.layout\nLayout\nPrimitive.layout_obj_type\nPrimitive.msg\nEDBObjMessage\nPrimitive.net\nNet\nPrimitive.obj_type\nLayoutObjType\nPrimitive.owner\nPrimitive\nPrimitive.primitive_type\nPrimitiveType\nPrimitive.voids\nlist\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.html#ansys.edb.core.primitive.primitive.Primitive",
        "title": "Primitive > Primitive > Primitive",
        "section": "Primitive > Primitive",
        "text": "class ansys.edb.core.primitive.primitive.Primitive(msg)\n\nRepresents a primitive object.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nPrimitive.add_void(hole)\n\nAdd a void to the primitive.\n\nPrimitive.cast()\n\nCast the primitive object to the correct concrete type.\n\nPrimitive.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nPrimitive.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nPrimitive.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nPrimitive.delete()\n\nDelete the layout object.\n\nPrimitive.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nPrimitive.get_hfss_prop()\n\nGet HFSS properties.\n\nPrimitive.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nPrimitive.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nPrimitive.make_zone_primitive(zone_id)\n\nMake the primitive a zone primitive with a zone specified by the provided ID.\n\nPrimitive.remove_hfss_prop()\n\nRemove HFSS properties.\n\nPrimitive.set_hfss_prop(material, solve_inside)\n\nSet HFSS properties.\n\nPrimitive.set_product_property(prod_id, ...)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\n\n\nAttributes\n\n\n\n\n\n\n\nPrimitive.can_be_zone_primitive\n\nbool: Flag indicating if the primitive can be a zone.\n\nPrimitive.component\n\nComponentGroup:         Component of the Connectable object.\n\nPrimitive.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nPrimitive.group\n\nGroup object.\n\nPrimitive.has_voids\n\nbool: Flag indicating if a primitive has voids inside.\n\nPrimitive.id\n\nint: Unique ID of the EDB object.\n\nPrimitive.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nPrimitive.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nPrimitive.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nPrimitive.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nPrimitive.is_negative\n\nbool: Flag indicating if the primitive is negative.\n\nPrimitive.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nPrimitive.is_parameterized\n\nbool: Whether the primitive is parametrized.\n\nPrimitive.is_void\n\nbool: Flag indicating if a primitive is a void.\n\nPrimitive.is_zone_primitive\n\nbool: Flag indicating if the primitive object is a zone.\n\nPrimitive.layer\n\nLayer: Layer that the primitive object is on.\n\nPrimitive.layout\n\nLayout: Layout owning the object.\n\nPrimitive.layout_obj_type\n\n\n\nPrimitive.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nPrimitive.net\n\nNet: Net of the Connectable object.\n\nPrimitive.obj_type\n\nLayoutObjType: Layout object type.\n\nPrimitive.owner\n\nPrimitive: Owner of the primitive object.\n\nPrimitive.primitive_type\n\nPrimitiveType: Primitive type of the primitive.\n\nPrimitive.voids\n\nlist of Primitive: List of void        primitive objects inside the primitive.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.term_instances",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.term_instances.html#term_instances",
        "title": "term_instances",
        "section": "term_instances",
        "text": "list of TerminalInstance: Terminal         instances associated with the cell instance.\nThis property is read-only.\nterm_instances\nlist\nTerminalInstance"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.term_instances",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.term_instances.html#ansys.edb.core.hierarchy.inst_array.InstArray.term_instances",
        "title": "term_instances > term_instances > term_instances",
        "section": "term_instances > term_instances",
        "text": "property InstArray.term_instances\n\nlist of TerminalInstance: Terminal         instances associated with the cell instance.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.RectangleRepresentationType.CENTER_WIDTH_HEIGHT",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.RectangleRepresentationType.CENTER_WIDTH_HEIGHT.html#center_width_height",
        "title": "CENTER_WIDTH_HEIGHT",
        "section": "CENTER_WIDTH_HEIGHT",
        "text": "CENTER_WIDTH_HEIGHT"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.RectangleRepresentationType.CENTER_WIDTH_HEIGHT",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.RectangleRepresentationType.CENTER_WIDTH_HEIGHT.html#ansys.edb.core.primitive.primitive.RectangleRepresentationType.CENTER_WIDTH_HEIGHT",
        "title": "CENTER_WIDTH_HEIGHT > CENTER_WIDTH_HEIGHT > CENTER_WIDTH_HEIGHT",
        "section": "CENTER_WIDTH_HEIGHT > CENTER_WIDTH_HEIGHT",
        "text": "RectangleRepresentationType.CENTER_WIDTH_HEIGHT = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.model",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.model.html#model",
        "title": "model",
        "section": "model",
        "text": "str: S-parameter model.\nmodel\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.model",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.model.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.model",
        "title": "model > model > model",
        "section": "model > model",
        "text": "property TerminalInstanceTerminal.model\n\nstr: S-parameter model.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.refine_bws",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.refine_bws.html#refine_bws",
        "title": "refine_bws",
        "section": "refine_bws",
        "text": "bool: Flag indicating if the mesh along bondwires is refined.\nrefine_bws\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.refine_bws",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.refine_bws.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.refine_bws",
        "title": "refine_bws > refine_bws > refine_bws",
        "section": "refine_bws > refine_bws",
        "text": "property SIWaveDCAdvancedSettings.refine_bws\n\nbool: Flag indicating if the mesh along bondwires is refined.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceDataEntry",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceDataEntry.html#matrixconvergencedataentry",
        "title": "MatrixConvergenceDataEntry",
        "section": "MatrixConvergenceDataEntry",
        "text": "Class representing a matrix convergence data entry.\nstr: Name of the first port.\nstr: Name of the second port.\nfloat: Magnitude limit.\nfloat: Phase limit.\nMatrixConvergenceDataEntry.mag_limit\nfloat: Magnitude limit.\nMatrixConvergenceDataEntry.phase_limit\nfloat: Phase limit.\nMatrixConvergenceDataEntry.port_1_name\nstr: Name of the first port.\nMatrixConvergenceDataEntry.port_2_name\nstr: Name of the second port.\nMatrixConvergenceDataEntry\nport_1_name\npython:str\nstr\nport_2_name\npython:str\nstr\nmag_limit\npython:float\nfloat\nphase_limit\npython:float\nfloat\nMatrixConvergenceDataEntry.mag_limit\nfloat\nMatrixConvergenceDataEntry.phase_limit\nfloat\nMatrixConvergenceDataEntry.port_1_name\nstr\nMatrixConvergenceDataEntry.port_2_name\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceDataEntry",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceDataEntry.html#ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceDataEntry",
        "title": "MatrixConvergenceDataEntry > MatrixConvergenceDataEntry > MatrixConvergenceDataEntry",
        "section": "MatrixConvergenceDataEntry > MatrixConvergenceDataEntry",
        "text": "class ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceDataEntry(port_1_name, port_2_name, mag_limit, phase_limit)\n\nClass representing a matrix convergence data entry.\n\nAttributes\n\nport_1_name\n\npython:str\n\nstr: Name of the first port.\n\nport_2_name\n\npython:str\n\nstr: Name of the second port.\n\nmag_limit\n\npython:float\n\nfloat: Magnitude limit.\n\nphase_limit\n\npython:float\n\nfloat: Phase limit.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nMatrixConvergenceDataEntry.mag_limit\n\nfloat: Magnitude limit.\n\nMatrixConvergenceDataEntry.phase_limit\n\nfloat: Phase limit.\n\nMatrixConvergenceDataEntry.port_1_name\n\nstr: Name of the first port.\n\nMatrixConvergenceDataEntry.port_2_name\n\nstr: Name of the second port.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.create_stride",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.create_stride.html#create_stride",
        "title": "create_stride",
        "section": "create_stride",
        "text": "Create a Stride model from an MCAD file.\nStride model created.\ncreate_stride\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.create_stride",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.create_stride.html#ansys.edb.core.terminal.terminals.TerminalInstance.create_stride",
        "title": "create_stride > create_stride > create_stride",
        "section": "create_stride > create_stride",
        "text": "TerminalInstance.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nReturns\n\nMcadModel\n\nStride model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.thickness",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.thickness.html#thickness",
        "title": "thickness",
        "section": "thickness",
        "text": "Value: Thickness for the 3D structure.\nthickness\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.thickness",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.thickness.html#ansys.edb.core.hierarchy.structure3d.Structure3D.thickness",
        "title": "thickness > thickness > thickness",
        "section": "thickness > thickness",
        "text": "property Structure3D.thickness\n\nValue: Thickness for the 3D structure.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.LayerVisibility.PRIMITIVE_VISIBLE",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.LayerVisibility.PRIMITIVE_VISIBLE.html#primitive_visible",
        "title": "PRIMITIVE_VISIBLE",
        "section": "PRIMITIVE_VISIBLE",
        "text": "PRIMITIVE_VISIBLE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.LayerVisibility.PRIMITIVE_VISIBLE",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.LayerVisibility.PRIMITIVE_VISIBLE.html#ansys.edb.core.layer.layer.LayerVisibility.PRIMITIVE_VISIBLE",
        "title": "PRIMITIVE_VISIBLE > PRIMITIVE_VISIBLE > PRIMITIVE_VISIBLE",
        "section": "PRIMITIVE_VISIBLE > PRIMITIVE_VISIBLE",
        "text": "LayerVisibility.PRIMITIVE_VISIBLE = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.mesh_vias",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.mesh_vias.html#mesh_vias",
        "title": "mesh_vias",
        "section": "mesh_vias",
        "text": "bool: Flag indicating if vias are meshed.\nmesh_vias\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.mesh_vias",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.mesh_vias.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.mesh_vias",
        "title": "mesh_vias > mesh_vias > mesh_vias",
        "section": "mesh_vias > mesh_vias",
        "text": "property SIWaveDCAdvancedSettings.mesh_vias\n\nbool: Flag indicating if vias are meshed.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.html#layercollection",
        "title": "LayerCollection",
        "section": "LayerCollection",
        "text": "Represents a layer collection.\nLayerCollection.add_layer_above(...)\nAdd a new layer above the specified layer.\nLayerCollection.add_layer_below(...)\nAdd a new layer below the specified layer.\nLayerCollection.add_layer_bottom(layer_to_add)\nAdd a new layer to the bottom of the layer collection.\nLayerCollection.add_layer_top(layer_to_add)\nAdd a new layer to the top of the layer collection.\nLayerCollection.add_layers(layers)\nAdd a list of layers to the layer collection.\nLayerCollection.add_stackup_layer_at_elevation(...)\nAdd a stackup layer at a user-specified elevation.\nLayerCollection.add_via_layer(via_layer_to_add)\nAdd a via layer to the layer collection.\nLayerCollection.add_zone_to_layer(layer, ...)\nSet the zone to the layer and update the layer in the collection.\nLayerCollection.clone()\nCreate a clone of the layer collection.\nLayerCollection.create([mode])\nCreate a layer collection.\nLayerCollection.find_by_name(layer_name)\nFind a layer in the layer collection.\nLayerCollection.get_layers([layer_filter])\nGet a list of layers in the layer collection using a layer filter.\nLayerCollection.get_product_property(...)\nGet the product property of the layer collection for a given product ID and attribute ID.\nLayerCollection.get_product_property_ids(prod_id)\nGet a list of attribute IDs for a given product ID for the layer collection.\nLayerCollection.get_top_bottom_stackup_layers(...)\nGet the top and bottom stackup layers of a specific type and their elevations.\nLayerCollection.get_zone_name(zone)\nGet the name for a given zone.\nLayerCollection.import_from_control_file(...)\nImport layers from a control file and optional XML schema file.\nLayerCollection.insert_zone([copy_zone])\nInsert a zone.\nLayerCollection.is_valid()\nDetermine if the layer collection is in a valid state.\nLayerCollection.merge_dielectrics(layout, ...)\nMerge the dielectric layers in a range of layers into one large dielectric layer.\nLayerCollection.remove_zone(zone)\nRemove a zone.\nLayerCollection.set_product_property(...)\nSet the product property of the layer collection for a given product ID and attribute ID.\nLayerCollection.set_zone_name(zone, name)\nSet the name for a given zone.\nLayerCollection.simplify_dielectrics_for_phi(...)\nSplit dielectric layers at the boundaries of signal layers and merge them.\nLayerCollection.id\nint: Unique ID of the EDB object.\nLayerCollection.is_null\nbool: Flag indicating if the object exists in the database.\nLayerCollection.mode\nLayerCollectionMode: Mode of the layer collection.\nLayerCollection.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nLayerCollection.zone_ids\nlist[int]: List of all zones in the layer collection.\nLayerCollection\nLayerCollection.add_layer_above\nLayerCollection.add_layer_below\nLayerCollection.add_layer_bottom\nLayerCollection.add_layer_top\nLayerCollection.add_layers\nLayerCollection.add_stackup_layer_at_elevation\nLayerCollection.add_via_layer\nLayerCollection.add_zone_to_layer\nLayerCollection.clone\nLayerCollection.create\nLayerCollection.find_by_name\nLayerCollection.get_layers\nLayerCollection.get_product_property\nLayerCollection.get_product_property_ids\nLayerCollection.get_top_bottom_stackup_layers\nLayerCollection.get_zone_name\nLayerCollection.import_from_control_file\nLayerCollection.insert_zone\nLayerCollection.is_valid\nLayerCollection.merge_dielectrics\nLayerCollection.remove_zone\nLayerCollection.set_product_property\nLayerCollection.set_zone_name\nLayerCollection.simplify_dielectrics_for_phi\nLayerCollection.id\nint\nLayerCollection.is_null\nbool\nLayerCollection.mode\nLayerCollectionMode\nLayerCollection.msg\nEDBObjMessage\nLayerCollection.zone_ids\nlist\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.html#ansys.edb.core.layer.layer_collection.LayerCollection",
        "title": "LayerCollection > LayerCollection > LayerCollection",
        "section": "LayerCollection > LayerCollection",
        "text": "class ansys.edb.core.layer.layer_collection.LayerCollection(msg)\n\nRepresents a layer collection.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nLayerCollection.add_layer_above(...)\n\nAdd a new layer above the specified layer.\n\nLayerCollection.add_layer_below(...)\n\nAdd a new layer below the specified layer.\n\nLayerCollection.add_layer_bottom(layer_to_add)\n\nAdd a new layer to the bottom of the layer collection.\n\nLayerCollection.add_layer_top(layer_to_add)\n\nAdd a new layer to the top of the layer collection.\n\nLayerCollection.add_layers(layers)\n\nAdd a list of layers to the layer collection.\n\nLayerCollection.add_stackup_layer_at_elevation(...)\n\nAdd a stackup layer at a user-specified elevation.\n\nLayerCollection.add_via_layer(via_layer_to_add)\n\nAdd a via layer to the layer collection.\n\nLayerCollection.add_zone_to_layer(layer, ...)\n\nSet the zone to the layer and update the layer in the collection.\n\nLayerCollection.clone()\n\nCreate a clone of the layer collection.\n\nLayerCollection.create([mode])\n\nCreate a layer collection.\n\nLayerCollection.find_by_name(layer_name)\n\nFind a layer in the layer collection.\n\nLayerCollection.get_layers([layer_filter])\n\nGet a list of layers in the layer collection using a layer filter.\n\nLayerCollection.get_product_property(...)\n\nGet the product property of the layer collection for a given product ID and attribute ID.\n\nLayerCollection.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs for a given product ID for the layer collection.\n\nLayerCollection.get_top_bottom_stackup_layers(...)\n\nGet the top and bottom stackup layers of a specific type and their elevations.\n\nLayerCollection.get_zone_name(zone)\n\nGet the name for a given zone.\n\nLayerCollection.import_from_control_file(...)\n\nImport layers from a control file and optional XML schema file.\n\nLayerCollection.insert_zone([copy_zone])\n\nInsert a zone.\n\nLayerCollection.is_valid()\n\nDetermine if the layer collection is in a valid state.\n\nLayerCollection.merge_dielectrics(layout, ...)\n\nMerge the dielectric layers in a range of layers into one large dielectric layer.\n\nLayerCollection.remove_zone(zone)\n\nRemove a zone.\n\nLayerCollection.set_product_property(...)\n\nSet the product property of the layer collection for a given product ID and attribute ID.\n\nLayerCollection.set_zone_name(zone, name)\n\nSet the name for a given zone.\n\nLayerCollection.simplify_dielectrics_for_phi(...)\n\nSplit dielectric layers at the boundaries of signal layers and merge them.\n\n\n\nAttributes\n\n\n\n\n\n\n\nLayerCollection.id\n\nint: Unique ID of the EDB object.\n\nLayerCollection.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nLayerCollection.mode\n\nLayerCollectionMode: Mode of the layer collection.\n\nLayerCollection.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nLayerCollection.zone_ids\n\nlist[int]: List of all zones in the layer collection.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.is_inside",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.is_inside.html#is_inside",
        "title": "is_inside",
        "section": "is_inside",
        "text": "Determine whether the point is inside the polygon.\nTrue if the point is inside the polygon, False otherwise.\nis_inside\nansys.edb.core.typing.PointLikeT\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.is_inside",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.is_inside.html#ansys.edb.core.geometry.polygon_data.PolygonData.is_inside",
        "title": "is_inside > is_inside > is_inside",
        "section": "is_inside > is_inside",
        "text": "PolygonData.is_inside(point)\n\nDetermine whether the point is inside the polygon.\n\nParameters\n\npoint\n\nansys.edb.core.typing.PointLikeT\n\n\n\nReturns\n\nbool\n\nTrue if the point is inside the polygon, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.type",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.type.html#type",
        "title": "type",
        "section": "type",
        "text": "LayerType: Type of the layer.\ntype\nLayerType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.type",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.type.html#ansys.edb.core.layer.stackup_layer.StackupLayer.type",
        "title": "type > type > type",
        "section": "type > type",
        "text": "property StackupLayer.type\n\nLayerType: Type of the layer.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.find",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.find.html#find",
        "title": "find",
        "section": "find",
        "text": "Find a terminal by name in a given layout.\nLayout to search for the terminal.\nName of the terminal.\nfind\nLayout\nstr\nTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.find",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.find.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.find",
        "title": "find > find > find",
        "section": "find > find",
        "text": "classmethod PinGroupTerminal.find(layout, name)\n\nFind a terminal by name in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the terminal.\n\nname\n\nstr\n\nName of the terminal.\n\nReturns\n\nTerminal\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.layout",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.layout.html#layout",
        "title": "layout",
        "section": "layout",
        "text": "Layout: Layout owning the object.\nThis property is read-only.\nlayout\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.layout",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.layout.html#ansys.edb.core.hierarchy.group.Group.layout",
        "title": "layout > layout > layout",
        "section": "layout > layout",
        "text": "property Group.layout\n\nLayout: Layout owning the object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.html#stackuplayer",
        "title": "StackupLayer",
        "section": "StackupLayer",
        "text": "Represents a stackup layer.\nStackupLayer.cast()\nCast the layer object to the correct concrete type.\nStackupLayer.clone([copy_id])\nCreate a clone of the layer.\nStackupLayer.create(name, layer_type, ...)\nCreate a stackup layer.\nStackupLayer.get_fill_material([evaluated])\nGet the name of the fill material of the layer.\nStackupLayer.get_material([evaluated])\nGet the name of the material of the layer.\nStackupLayer.get_product_property(prod_id, ...)\nGet the product property of the layer for a given product ID and attribute ID.\nStackupLayer.get_product_property_ids(prod_id)\nGet a list of attribute IDs for a given product ID for the layer.\nStackupLayer.get_roughness_model(region)\nGet the roughness model used by the layer.\nStackupLayer.is_in_zone(zone)\nDetermine if the layer exists in the given zone.\nStackupLayer.set_fill_material(...)\nSet the name of the fill material of the layer.\nStackupLayer.set_is_in_zone(zone[, in_zone])\nSet whether the layer exists in a given zone.\nStackupLayer.set_material(material_name)\nSet the name of the material of the layer.\nStackupLayer.set_product_property(prod_id, ...)\nSet the product property of the layer for a given product ID and attribute ID.\nStackupLayer.set_roughness_model(...)\nSet the roughness model used by the layer.\nStackupLayer.color\ntuple[int, int, int]: Color of the layer in (R,G,B) format.\nStackupLayer.draw_override\nDrawOverride: Draw override of the layer.\nStackupLayer.etch_factor\nValue: Etch factor of the layer.\nStackupLayer.etch_factor_enabled\nbool: Flag indicating if an etch factor is used by the layer.\nStackupLayer.hfss_solver_properties\nHFSSSolverProperties: HFSS solver properties of the layer.\nStackupLayer.id\nint: Unique ID of the EDB object.\nStackupLayer.is_null\nbool: Flag indicating if the object exists in the database.\nStackupLayer.is_stackup_layer\nbool: Flag indicating if the layer is a StackupLayer instance.\nStackupLayer.is_via_layer\nbool: Flag indicating if the layer is a ViaLayer instance.\nStackupLayer.layer_id\nint: Layer ID.\nStackupLayer.layout_obj_type\n\nStackupLayer.locked\nbool: Flag indicating if the layer is locked.\nStackupLayer.lower_elevation\nValue: Lower elevation value of the layer.\nStackupLayer.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nStackupLayer.name\nstr: Name of the layer.\nStackupLayer.negative\nbool: Flag indicating if the layer is a negative layer.\nStackupLayer.referencing_via_layer_ids\nlist[int]: Layer IDs for all via layers referencing the layer.\nStackupLayer.roughness_enabled\nbool: Flag indicating if roughness models are used by the layer.\nStackupLayer.thickness\nValue: Thickness value of the layer.\nStackupLayer.top_bottom_association\nTopBottomAssociation: Top-bottom association of the layer.\nStackupLayer.transparency\nint: Transparency value of the layer.\nStackupLayer.type\nLayerType: Type of the layer.\nStackupLayer.upper_elevation\nValue: Upper elevation value of the layer.\nStackupLayer.use_solver_properties\nbool: Flag indicating if solver properties are used by the layer.\nStackupLayer.visibility_mask\nint: Visibility mask of the layer.\nStackupLayer.zone\nint: Zone index associated with the owning layer collection.\nStackupLayer.zones\nlist[int]: IDs of all zones containing the layer.\nStackupLayer\nStackupLayer.cast\nStackupLayer.clone\nStackupLayer.create\nStackupLayer.get_fill_material\nStackupLayer.get_material\nStackupLayer.get_product_property\nStackupLayer.get_product_property_ids\nStackupLayer.get_roughness_model\nStackupLayer.is_in_zone\nStackupLayer.set_fill_material\nStackupLayer.set_is_in_zone\nStackupLayer.set_material\nStackupLayer.set_product_property\nStackupLayer.set_roughness_model\nStackupLayer.color\ntuple\nint\nint\nint\nStackupLayer.draw_override\nDrawOverride\nStackupLayer.etch_factor\nValue\nStackupLayer.etch_factor_enabled\nbool\nStackupLayer.hfss_solver_properties\nStackupLayer.id\nint\nStackupLayer.is_null\nbool\nStackupLayer.is_stackup_layer\nbool\nStackupLayer\nStackupLayer.is_via_layer\nbool\nViaLayer\nStackupLayer.layer_id\nint\nStackupLayer.layout_obj_type\nStackupLayer.locked\nbool\nStackupLayer.lower_elevation\nValue\nStackupLayer.msg\nEDBObjMessage\nStackupLayer.name\nstr\nStackupLayer.negative\nbool\nStackupLayer.referencing_via_layer_ids\nlist\nint\nStackupLayer.roughness_enabled\nbool\nStackupLayer.thickness\nValue\nStackupLayer.top_bottom_association\nTopBottomAssociation\nStackupLayer.transparency\nint\nStackupLayer.type\nLayerType\nStackupLayer.upper_elevation\nValue\nStackupLayer.use_solver_properties\nbool\nStackupLayer.visibility_mask\nint\nStackupLayer.zone\nint\nStackupLayer.zones\nlist\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.html#ansys.edb.core.layer.stackup_layer.StackupLayer",
        "title": "StackupLayer > StackupLayer > StackupLayer",
        "section": "StackupLayer > StackupLayer",
        "text": "class ansys.edb.core.layer.stackup_layer.StackupLayer(msg)\n\nRepresents a stackup layer.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nStackupLayer.cast()\n\nCast the layer object to the correct concrete type.\n\nStackupLayer.clone([copy_id])\n\nCreate a clone of the layer.\n\nStackupLayer.create(name, layer_type, ...)\n\nCreate a stackup layer.\n\nStackupLayer.get_fill_material([evaluated])\n\nGet the name of the fill material of the layer.\n\nStackupLayer.get_material([evaluated])\n\nGet the name of the material of the layer.\n\nStackupLayer.get_product_property(prod_id, ...)\n\nGet the product property of the layer for a given product ID and attribute ID.\n\nStackupLayer.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs for a given product ID for the layer.\n\nStackupLayer.get_roughness_model(region)\n\nGet the roughness model used by the layer.\n\nStackupLayer.is_in_zone(zone)\n\nDetermine if the layer exists in the given zone.\n\nStackupLayer.set_fill_material(...)\n\nSet the name of the fill material of the layer.\n\nStackupLayer.set_is_in_zone(zone[, in_zone])\n\nSet whether the layer exists in a given zone.\n\nStackupLayer.set_material(material_name)\n\nSet the name of the material of the layer.\n\nStackupLayer.set_product_property(prod_id, ...)\n\nSet the product property of the layer for a given product ID and attribute ID.\n\nStackupLayer.set_roughness_model(...)\n\nSet the roughness model used by the layer.\n\n\n\nAttributes\n\n\n\n\n\n\n\nStackupLayer.color\n\ntuple[int, int, int]: Color of the layer in (R,G,B) format.\n\nStackupLayer.draw_override\n\nDrawOverride: Draw override of the layer.\n\nStackupLayer.etch_factor\n\nValue: Etch factor of the layer.\n\nStackupLayer.etch_factor_enabled\n\nbool: Flag indicating if an etch factor is used by the layer.\n\nStackupLayer.hfss_solver_properties\n\nHFSSSolverProperties: HFSS solver properties of the layer.\n\nStackupLayer.id\n\nint: Unique ID of the EDB object.\n\nStackupLayer.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nStackupLayer.is_stackup_layer\n\nbool: Flag indicating if the layer is a StackupLayer instance.\n\nStackupLayer.is_via_layer\n\nbool: Flag indicating if the layer is a ViaLayer instance.\n\nStackupLayer.layer_id\n\nint: Layer ID.\n\nStackupLayer.layout_obj_type\n\n\n\nStackupLayer.locked\n\nbool: Flag indicating if the layer is locked.\n\nStackupLayer.lower_elevation\n\nValue: Lower elevation value of the layer.\n\nStackupLayer.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nStackupLayer.name\n\nstr: Name of the layer.\n\nStackupLayer.negative\n\nbool: Flag indicating if the layer is a negative layer.\n\nStackupLayer.referencing_via_layer_ids\n\nlist[int]: Layer IDs for all via layers referencing the layer.\n\nStackupLayer.roughness_enabled\n\nbool: Flag indicating if roughness models are used by the layer.\n\nStackupLayer.thickness\n\nValue: Thickness value of the layer.\n\nStackupLayer.top_bottom_association\n\nTopBottomAssociation: Top-bottom association of the layer.\n\nStackupLayer.transparency\n\nint: Transparency value of the layer.\n\nStackupLayer.type\n\nLayerType: Type of the layer.\n\nStackupLayer.upper_elevation\n\nValue: Upper elevation value of the layer.\n\nStackupLayer.use_solver_properties\n\nbool: Flag indicating if solver properties are used by the layer.\n\nStackupLayer.visibility_mask\n\nint: Visibility mask of the layer.\n\nStackupLayer.zone\n\nint: Zone index associated with the owning layer collection.\n\nStackupLayer.zones\n\nlist[int]: IDs of all zones containing the layer.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.layout",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.layout.html#layout",
        "title": "layout",
        "section": "layout",
        "text": "Layout: Layout owning the object.\nThis property is read-only.\nlayout\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.layout",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.layout.html#ansys.edb.core.primitive.primitive.PadstackInstance.layout",
        "title": "layout > layout > layout",
        "section": "layout > layout",
        "text": "property PadstackInstance.layout\n\nLayout: Layout owning the object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.delete_variable",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.delete_variable.html#delete_variable",
        "title": "delete_variable",
        "section": "delete_variable",
        "text": "Delete a variable.\nVariable name.\ndelete_variable\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.delete_variable",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.delete_variable.html#ansys.edb.core.layout.layout.Layout.delete_variable",
        "title": "delete_variable > delete_variable > delete_variable",
        "section": "delete_variable > delete_variable",
        "text": "Layout.delete_variable(name)\n\nDelete a variable.\n\nParameters\n\nname\n\npython:str\n\nVariable name.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_mcad_stride.html#is_mcad_stride",
        "title": "is_mcad_stride",
        "section": "is_mcad_stride",
        "text": "bool: Flag indicating if this is a Stride MCAD model.\nThis property is read-only.\nis_mcad_stride\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_mcad_stride.html#ansys.edb.core.terminal.terminals.PointTerminal.is_mcad_stride",
        "title": "is_mcad_stride > is_mcad_stride > is_mcad_stride",
        "section": "is_mcad_stride > is_mcad_stride",
        "text": "property PointTerminal.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalType",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalType.html#terminaltype",
        "title": "TerminalType",
        "section": "TerminalType",
        "text": "Provides an enum representing terminal types.\nTerminalType.EDGE\n\nTerminalType.POINT\n\nTerminalType.TERM_INST\n\nTerminalType.PADSTACK_INST\n\nTerminalType.BUNDLE\n\nTerminalType.PIN_GROUP\n\nTerminalType\nTerminalType.EDGE\nTerminalType.POINT\nTerminalType.TERM_INST\nTerminalType.PADSTACK_INST\nTerminalType.BUNDLE\nTerminalType.PIN_GROUP"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalType",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalType.html#ansys.edb.core.terminal.terminals.TerminalType",
        "title": "TerminalType > TerminalType > TerminalType",
        "section": "TerminalType > TerminalType",
        "text": "class ansys.edb.core.terminal.terminals.TerminalType(value)\n\nProvides an enum representing terminal types.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nTerminalType.EDGE\n\n\n\nTerminalType.POINT\n\n\n\nTerminalType.TERM_INST\n\n\n\nTerminalType.PADSTACK_INST\n\n\n\nTerminalType.BUNDLE\n\n\n\nTerminalType.PIN_GROUP\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.html#siwavesimulationsetup",
        "title": "SIWaveSimulationSetup",
        "section": "SIWaveSimulationSetup",
        "text": "Represents SIWave simulation setup data.\nSIWaveSimulationSetup.cast()\nCast the base SimulationSetup object to correct subclass, if possible.\nSIWaveSimulationSetup.create(cell, name)\nCreate a SIWave simulationsetup.\nSIWaveSimulationSetup.id\nint: Unique ID of the EDB object.\nSIWaveSimulationSetup.is_null\nbool: Flag indicating if the object exists in the database.\nSIWaveSimulationSetup.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nSIWaveSimulationSetup.name\nstr: Name of simulation setup.\nSIWaveSimulationSetup.position\nint: Position of the simulation in the setup order.\nSIWaveSimulationSetup.settings\nSIWaveSimulationSettings: Simulation settings of the SIWave simulation setup.\nSIWaveSimulationSetup.sweep_data\nlist of SweepData: Frequency sweeps of the simulation setup.\nSIWaveSimulationSetup.type\nSimulationSetupType: Type of the simulation setup.\nSIWaveSimulationSetup\nSIWaveSimulationSetup.cast\nSIWaveSimulationSetup.create\nSIWaveSimulationSetup.id\nint\nSIWaveSimulationSetup.is_null\nbool\nSIWaveSimulationSetup.msg\nEDBObjMessage\nSIWaveSimulationSetup.name\nstr\nSIWaveSimulationSetup.position\nint\nSIWaveSimulationSetup.settings\nSIWaveSimulationSettings\nSIWaveSimulationSetup.sweep_data\nlist\nSweepData\nSIWaveSimulationSetup.type\nSimulationSetupType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.html#ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup",
        "title": "SIWaveSimulationSetup > SIWaveSimulationSetup > SIWaveSimulationSetup",
        "section": "SIWaveSimulationSetup > SIWaveSimulationSetup",
        "text": "class ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup(msg)\n\nRepresents SIWave simulation setup data.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nSIWaveSimulationSetup.cast()\n\nCast the base SimulationSetup object to correct subclass, if possible.\n\nSIWaveSimulationSetup.create(cell, name)\n\nCreate a SIWave simulationsetup.\n\n\n\nAttributes\n\n\n\n\n\n\n\nSIWaveSimulationSetup.id\n\nint: Unique ID of the EDB object.\n\nSIWaveSimulationSetup.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nSIWaveSimulationSetup.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nSIWaveSimulationSetup.name\n\nstr: Name of simulation setup.\n\nSIWaveSimulationSetup.position\n\nint: Position of the simulation in the setup order.\n\nSIWaveSimulationSetup.settings\n\nSIWaveSimulationSettings: Simulation settings of the SIWave simulation setup.\n\nSIWaveSimulationSetup.sweep_data\n\nlist of SweepData: Frequency sweeps of the simulation setup.\n\nSIWaveSimulationSetup.type\n\nSimulationSetupType: Type of the simulation setup.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.owner",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.owner.html#owner",
        "title": "owner",
        "section": "owner",
        "text": "Primitive: Owner of the primitive object.\nThis property is read-only.\nowner\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.owner",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.owner.html#ansys.edb.core.primitive.primitive.BoardBendDef.owner",
        "title": "owner > owner > owner",
        "section": "owner > owner",
        "text": "property BoardBendDef.owner\n\nPrimitive: Owner of the primitive object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.THERMAL_EXPANSION_COEFFICIENT",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.THERMAL_EXPANSION_COEFFICIENT.html#thermal_expansion_coefficient",
        "title": "THERMAL_EXPANSION_COEFFICIENT",
        "section": "THERMAL_EXPANSION_COEFFICIENT",
        "text": "THERMAL_EXPANSION_COEFFICIENT"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.THERMAL_EXPANSION_COEFFICIENT",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.THERMAL_EXPANSION_COEFFICIENT.html#ansys.edb.core.definition.material_def.MaterialProperty.THERMAL_EXPANSION_COEFFICIENT",
        "title": "THERMAL_EXPANSION_COEFFICIENT > THERMAL_EXPANSION_COEFFICIENT > THERMAL_EXPANSION_COEFFICIENT",
        "section": "THERMAL_EXPANSION_COEFFICIENT > THERMAL_EXPANSION_COEFFICIENT",
        "text": "MaterialProperty.THERMAL_EXPANSION_COEFFICIENT = 42\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.renormalization_impedance",
        "href": "api/_autosummary/ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.renormalization_impedance.html#renormalization_impedance",
        "title": "renormalization_impedance",
        "section": "renormalization_impedance",
        "text": "Renormalization impedance.\nThis property is only applied if do_renormalize=True.\nrenormalization_impedance\ndo_renormalize=True"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.renormalization_impedance",
        "href": "api/_autosummary/ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.renormalization_impedance.html#ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.renormalization_impedance",
        "title": "renormalization_impedance > renormalization_impedance > renormalization_impedance",
        "section": "renormalization_impedance > renormalization_impedance",
        "text": "property PortPostProcessingProp.renormalization_impedance\n\nRenormalization impedance.\n\nThis property is only applied if do_renormalize=True.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.owner",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.owner.html#owner",
        "title": "owner",
        "section": "owner",
        "text": "Primitive: Owner of the primitive object.\nThis property is read-only.\nowner\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.owner",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.owner.html#ansys.edb.core.primitive.primitive.Text.owner",
        "title": "owner > owner > owner",
        "section": "owner > owner",
        "text": "property Text.owner\n\nPrimitive: Owner of the primitive object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollectionMode.LAMINATE",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollectionMode.LAMINATE.html#laminate",
        "title": "LAMINATE",
        "section": "LAMINATE",
        "text": "LAMINATE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollectionMode.LAMINATE",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollectionMode.LAMINATE.html#ansys.edb.core.layer.layer_collection.LayerCollectionMode.LAMINATE",
        "title": "LAMINATE > LAMINATE > LAMINATE",
        "section": "LAMINATE > LAMINATE",
        "text": "LayerCollectionMode.LAMINATE = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.find_by_id.html#find_by_id",
        "title": "find_by_id",
        "section": "find_by_id",
        "text": "Find a Connectable object by database ID in a given layout.\nLayout to search for the Connectable object.\nDatabase ID.\nConnectable object with the given database ID.\nfind_by_id\nLayout\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.find_by_id.html#ansys.edb.core.hierarchy.structure3d.Structure3D.find_by_id",
        "title": "find_by_id > find_by_id > find_by_id",
        "section": "find_by_id > find_by_id",
        "text": "classmethod Structure3D.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the Connectable object.\n\nuid\n\npython:int\n\nDatabase ID.\n\nReturns\n\nConnectable\n\nConnectable object with the given database ID.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.solve_independent_preference",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.solve_independent_preference.html#solve_independent_preference",
        "title": "solve_independent_preference",
        "section": "solve_independent_preference",
        "text": "bool: Flag indicating if the object is assigned to solve independent of its parent context.\nTrue if the object is assigned to solve independently, False if the object is embedded.\nFor a ComponentModel\ninstance, this flag indicates if the model is embedded with the field solver, when applicable.\nFor a CellInstance instance,\nit indicates if the design’s geometry is flattened/meshed with the parent, when applicable.\nsolve_independent_preference\nbool\nTrue\nFalse\nComponentModel\nCellInstance"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.solve_independent_preference",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.solve_independent_preference.html#ansys.edb.core.hierarchy.structure3d.Structure3D.solve_independent_preference",
        "title": "solve_independent_preference > solve_independent_preference > solve_independent_preference",
        "section": "solve_independent_preference > solve_independent_preference",
        "text": "property Structure3D.solve_independent_preference\n\nbool: Flag indicating if the object is assigned to solve independent of its parent context.\n\nReturns\n\nbool\n\nTrue if the object is assigned to solve independently, False if the object is embedded.\n\nNotes\n\nFor a ComponentModel\ninstance, this flag indicates if the model is embedded with the field solver, when applicable.\n\nFor a CellInstance instance,\nit indicates if the design’s geometry is flattened/meshed with the parent, when applicable.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.create_hfss.html#create_hfss",
        "title": "create_hfss",
        "section": "create_hfss",
        "text": "Create an HFSS model from an MCAD file.\nHFSS model created.\ncreate_hfss\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.create_hfss.html#ansys.edb.core.hierarchy.via_group.ViaGroup.create_hfss",
        "title": "create_hfss > create_hfss > create_hfss",
        "section": "create_hfss > create_hfss",
        "text": "ViaGroup.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nReturns\n\nMcadModel\n\nHFSS model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.remove_member",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.remove_member.html#remove_member",
        "title": "remove_member",
        "section": "remove_member",
        "text": "Remove an object from the group.\nObject to remove from the group.\nremove_member"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.remove_member",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.remove_member.html#ansys.edb.core.hierarchy.via_group.ViaGroup.remove_member",
        "title": "remove_member > remove_member > remove_member",
        "section": "remove_member > remove_member",
        "text": "ViaGroup.remove_member(member)\n\nRemove an object from the group.\n\nParameters\n\nmember\n\nConnectable\n\nObject to remove from the group.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.model",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.model.html#model",
        "title": "model",
        "section": "model",
        "text": "str: S-parameter model.\nmodel\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.model",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.model.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.model",
        "title": "model > model > model",
        "section": "model > model",
        "text": "property PadstackInstanceTerminal.model\n\nstr: S-parameter model.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.footprint",
        "href": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.footprint.html#footprint",
        "title": "footprint",
        "section": "footprint",
        "text": "Cell: Footprint of the component definition.\nfootprint\nCell"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.footprint",
        "href": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.footprint.html#ansys.edb.core.definition.component_def.ComponentDef.footprint",
        "title": "footprint > footprint > footprint",
        "section": "footprint > footprint",
        "text": "property ComponentDef.footprint\n\nCell: Footprint of the component definition.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.get_layers",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.get_layers.html#get_layers",
        "title": "get_layers",
        "section": "get_layers",
        "text": "Get a list of layers in the layer collection using a layer filter.\nLayer filter.\nList of layers based on the filter used.\nget_layers\nLayerTypeSet\nLayerType\npython:list\nLayerType\nALL_LAYER_SET\npython:list\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.get_layers",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.get_layers.html#ansys.edb.core.layer.layer_collection.LayerCollection.get_layers",
        "title": "get_layers > get_layers > get_layers",
        "section": "get_layers > get_layers",
        "text": "LayerCollection.get_layers(layer_filter=LayerTypeSet.ALL_LAYER_SET)\n\nGet a list of layers in the layer collection using a layer filter.\n\nParameters\n\nlayer_filter\n\nLayerTypeSet or LayerType or python:list[LayerType], default: ALL_LAYER_SET\n\nLayer filter.\n\nReturns\n\npython:list[Layer]\n\nList of layers based on the filter used.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.voltage",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.voltage.html#voltage",
        "title": "voltage",
        "section": "voltage",
        "text": "Value: Voltage of the voltage regulator.\nThis property can be set with ValueLike.\nvoltage\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.voltage",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.voltage.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.voltage",
        "title": "voltage > voltage > voltage",
        "section": "voltage > voltage",
        "text": "property VoltageRegulator.voltage\n\nValue: Voltage of the voltage regulator.\n\nThis property can be set with ValueLike.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.create_3d_comp.html#create_3d_comp",
        "title": "create_3d_comp",
        "section": "create_3d_comp",
        "text": "Create a 3D composite model from an MCAD file.\n3D composite model created.\ncreate_3d_comp\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.create_3d_comp.html#ansys.edb.core.hierarchy.inst_array.InstArray.create_3d_comp",
        "title": "create_3d_comp > create_3d_comp > create_3d_comp",
        "section": "create_3d_comp > create_3d_comp",
        "text": "InstArray.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nReturns\n\nMcadModel\n\n3D composite model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.voltage_magnitude",
        "href": "api/_autosummary/ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.voltage_magnitude.html#voltage_magnitude",
        "title": "voltage_magnitude",
        "section": "voltage_magnitude",
        "text": "Excitation voltage magnitude.\nvoltage_magnitude"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.voltage_magnitude",
        "href": "api/_autosummary/ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.voltage_magnitude.html#ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.voltage_magnitude",
        "title": "voltage_magnitude > voltage_magnitude > voltage_magnitude",
        "section": "voltage_magnitude > voltage_magnitude",
        "text": "property PortPostProcessingProp.voltage_magnitude\n\nExcitation voltage magnitude.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.delete",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the layout object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.delete",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.delete.html#ansys.edb.core.terminal.terminals.TerminalInstance.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "TerminalInstance.delete()\n\nDelete the layout object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin.msg.html#ansys.edb.core.definition.component_pin.ComponentPin.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property ComponentPin.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.hfss_solver_properties",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.hfss_solver_properties.html#hfss_solver_properties",
        "title": "hfss_solver_properties",
        "section": "hfss_solver_properties",
        "text": "HFSSSolverProperties: HFSS solver properties of the layer.\nhfss_solver_properties"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.hfss_solver_properties",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.hfss_solver_properties.html#ansys.edb.core.layer.via_layer.ViaLayer.hfss_solver_properties",
        "title": "hfss_solver_properties > hfss_solver_properties > hfss_solver_properties",
        "section": "hfss_solver_properties > hfss_solver_properties",
        "text": "property ViaLayer.hfss_solver_properties\n\nHFSSSolverProperties: HFSS solver properties of the layer.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.edb_uid.html#edb_uid",
        "title": "edb_uid",
        "section": "edb_uid",
        "text": "int: Unique, persistent ID for the Connectable object.\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\nThis property is read-only.\nedb_uid\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.edb_uid.html#ansys.edb.core.terminal.terminals.BundleTerminal.edb_uid",
        "title": "edb_uid > edb_uid > edb_uid",
        "section": "edb_uid > edb_uid",
        "text": "property BundleTerminal.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.merge_dielectrics",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.merge_dielectrics.html#merge_dielectrics",
        "title": "merge_dielectrics",
        "section": "merge_dielectrics",
        "text": "Merge the dielectric layers in a range of layers into one large dielectric layer.\nmerge_dielectrics\nLayout\npython:str\npython:str\nDielectricMergingMethod\npython:str\npython:str\nStackupLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.merge_dielectrics",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.merge_dielectrics.html#ansys.edb.core.layer.layer_collection.LayerCollection.merge_dielectrics",
        "title": "merge_dielectrics > merge_dielectrics > merge_dielectrics",
        "section": "merge_dielectrics > merge_dielectrics",
        "text": "LayerCollection.merge_dielectrics(layout, start_layer_name, end_layer_name, merging_method, merged_layer_name, merged_mat_name)\n\nMerge the dielectric layers in a range of layers into one large dielectric layer.\n\nParameters\n\nlayout\n\nLayout\n\n\n\nstart_layer_name\n\npython:str\n\n\n\nend_layer_name\n\npython:str\n\n\n\nmerging_method\n\nDielectricMergingMethod\n\n\n\nmerged_layer_name\n\npython:str\n\n\n\nmerged_mat_name\n\npython:str\n\n\n\nReturns\n\nStackupLayer\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.perform_erc",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.perform_erc.html#perform_erc",
        "title": "perform_erc",
        "section": "perform_erc",
        "text": "bool: Flag indicating if ERC is performed during simulation setup.\nperform_erc\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.perform_erc",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.perform_erc.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.perform_erc",
        "title": "perform_erc > perform_erc > perform_erc",
        "section": "perform_erc > perform_erc",
        "text": "property SIWaveAdvancedSettings.perform_erc\n\nbool: Flag indicating if ERC is performed during simulation setup.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.html#bondwire",
        "title": "Bondwire",
        "section": "Bondwire",
        "text": "Represents a bondwire object.\nBondwire.add_void(hole)\nAdd a void to the primitive.\nBondwire.cast()\nCast the primitive object to the correct concrete type.\nBondwire.create(layout, bondwire_type, ...)\nCreate a bondwire.\nBondwire.create_3d_comp()\nCreate a 3D composite model from an MCAD file.\nBondwire.create_hfss()\nCreate an HFSS model from an MCAD file.\nBondwire.create_stride()\nCreate a Stride model from an MCAD file.\nBondwire.delete()\nDelete the layout object.\nBondwire.find_by_id(layout, uid)\nFind a Connectable object by database ID in a given layout.\nBondwire.get_definition_name([evaluated])\nGet the definition name of the bondwire object.\nBondwire.get_end_elevation(end_context)\nGet the end elevation layer of the bondwire.\nBondwire.get_hfss_prop()\nGet HFSS properties.\nBondwire.get_material([evaluated])\nGet the material of the bondwire.\nBondwire.get_product_property(prod_id, attr_id)\nGet the product property of the layout object for a given product ID and attribute ID.\nBondwire.get_product_property_ids(prod_id)\nGet a list of attribute IDs given a product ID for the layout object.\nBondwire.get_start_elevation(start_context)\nGet the start elevation layer of the bondwire.\nBondwire.get_traj()\nGet trajectory parameters of the bondwire.\nBondwire.make_zone_primitive(zone_id)\nMake the primitive a zone primitive with a zone specified by the provided ID.\nBondwire.remove_hfss_prop()\nRemove HFSS properties.\nBondwire.set_definition_name(definition_name)\nSet the definition name of a bondwire.\nBondwire.set_end_elevation(end_context, layer)\nSet the end elevation of the bondwire.\nBondwire.set_hfss_prop(material, solve_inside)\nSet HFSS properties.\nBondwire.set_material(material)\nSet the material of the bondwire.\nBondwire.set_product_property(prod_id, ...)\nSet the product property of the layout object for a given product ID and attribute ID.\nBondwire.set_start_elevation(start_context, ...)\nSet the start elevation of the bondwire.\nBondwire.set_traj(x1, y1, x2, y2)\nSet the parameters of the trajectory of the bondwire.\nBondwire.can_be_zone_primitive\nbool: Flag indicating if the primitive can be a zone.\nBondwire.component\nComponentGroup:         Component of the Connectable object.\nBondwire.cross_section_height\nValue: Cross-section height of the bondwire.\nBondwire.cross_section_type\nBondwireCrossSectionType:Cross-section type of the bondwire.\nBondwire.edb_uid\nint: Unique, persistent ID for the Connectable object.\nBondwire.group\nGroup object.\nBondwire.has_voids\nbool: Flag indicating if a primitive has voids inside.\nBondwire.id\nint: Unique ID of the EDB object.\nBondwire.is_mcad\nbool: Flag indicating if this is an MCAD model.\nBondwire.is_mcad_3d_comp\nbool: Flag indicating if this is a 3D composite MCAD model.\nBondwire.is_mcad_hfss\nbool: Flag indicating if this is an HFSS MCAD model.\nBondwire.is_mcad_stride\nbool: Flag indicating if this is a Stride MCAD model.\nBondwire.is_negative\nbool: Flag indicating if the primitive is negative.\nBondwire.is_null\nbool: Flag indicating if the object exists in the database.\nBondwire.is_parameterized\nbool: Whether the primitive is parametrized.\nBondwire.is_void\nbool: Flag indicating if a primitive is a void.\nBondwire.is_zone_primitive\nbool: Flag indicating if the primitive object is a zone.\nBondwire.layer\nLayer: Layer that the primitive object is on.\nBondwire.layout\nLayout: Layout owning the object.\nBondwire.layout_obj_type\n\nBondwire.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nBondwire.net\nNet: Net of the Connectable object.\nBondwire.obj_type\nLayoutObjType: Layout object type.\nBondwire.owner\nPrimitive: Owner of the primitive object.\nBondwire.primitive_type\nPrimitiveType: Primitive type of the primitive.\nBondwire.type\nBondwireType: Type of the bondwire.\nBondwire.voids\nlist of Primitive: List of void        primitive objects inside the primitive.\nBondwire.width\nValue: Width of the bondwire.\nBondwire\nBondwire.add_void\nBondwire.cast\nBondwire.create\nBondwire.create_3d_comp\nBondwire.create_hfss\nBondwire.create_stride\nBondwire.delete\nBondwire.find_by_id\nBondwire.get_definition_name\nBondwire.get_end_elevation\nBondwire.get_hfss_prop\nBondwire.get_material\nBondwire.get_product_property\nBondwire.get_product_property_ids\nBondwire.get_start_elevation\nBondwire.get_traj\nBondwire.make_zone_primitive\nBondwire.remove_hfss_prop\nBondwire.set_definition_name\nBondwire.set_end_elevation\nBondwire.set_hfss_prop\nBondwire.set_material\nBondwire.set_product_property\nBondwire.set_start_elevation\nBondwire.set_traj\nBondwire.can_be_zone_primitive\nbool\nBondwire.component\nComponentGroup\nBondwire.cross_section_height\nValue\nBondwire.cross_section_type\nBondwireCrossSectionType\nBondwire.edb_uid\nint\nBondwire.group\nGroup\nBondwire.has_voids\nbool\nBondwire.id\nint\nBondwire.is_mcad\nbool\nBondwire.is_mcad_3d_comp\nbool\nBondwire.is_mcad_hfss\nbool\nBondwire.is_mcad_stride\nbool\nBondwire.is_negative\nbool\nBondwire.is_null\nbool\nBondwire.is_parameterized\nbool\nBondwire.is_void\nbool\nBondwire.is_zone_primitive\nbool\nBondwire.layer\nLayer\nBondwire.layout\nLayout\nBondwire.layout_obj_type\nBondwire.msg\nEDBObjMessage\nBondwire.net\nNet\nBondwire.obj_type\nLayoutObjType\nBondwire.owner\nPrimitive\nBondwire.primitive_type\nPrimitiveType\nBondwire.type\nBondwireType\nBondwire.voids\nlist\nPrimitive\nBondwire.width\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.html#ansys.edb.core.primitive.primitive.Bondwire",
        "title": "Bondwire > Bondwire > Bondwire",
        "section": "Bondwire > Bondwire",
        "text": "class ansys.edb.core.primitive.primitive.Bondwire(msg)\n\nRepresents a bondwire object.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nBondwire.add_void(hole)\n\nAdd a void to the primitive.\n\nBondwire.cast()\n\nCast the primitive object to the correct concrete type.\n\nBondwire.create(layout, bondwire_type, ...)\n\nCreate a bondwire.\n\nBondwire.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nBondwire.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nBondwire.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nBondwire.delete()\n\nDelete the layout object.\n\nBondwire.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nBondwire.get_definition_name([evaluated])\n\nGet the definition name of the bondwire object.\n\nBondwire.get_end_elevation(end_context)\n\nGet the end elevation layer of the bondwire.\n\nBondwire.get_hfss_prop()\n\nGet HFSS properties.\n\nBondwire.get_material([evaluated])\n\nGet the material of the bondwire.\n\nBondwire.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nBondwire.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nBondwire.get_start_elevation(start_context)\n\nGet the start elevation layer of the bondwire.\n\nBondwire.get_traj()\n\nGet trajectory parameters of the bondwire.\n\nBondwire.make_zone_primitive(zone_id)\n\nMake the primitive a zone primitive with a zone specified by the provided ID.\n\nBondwire.remove_hfss_prop()\n\nRemove HFSS properties.\n\nBondwire.set_definition_name(definition_name)\n\nSet the definition name of a bondwire.\n\nBondwire.set_end_elevation(end_context, layer)\n\nSet the end elevation of the bondwire.\n\nBondwire.set_hfss_prop(material, solve_inside)\n\nSet HFSS properties.\n\nBondwire.set_material(material)\n\nSet the material of the bondwire.\n\nBondwire.set_product_property(prod_id, ...)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nBondwire.set_start_elevation(start_context, ...)\n\nSet the start elevation of the bondwire.\n\nBondwire.set_traj(x1, y1, x2, y2)\n\nSet the parameters of the trajectory of the bondwire.\n\n\n\nAttributes\n\n\n\n\n\n\n\nBondwire.can_be_zone_primitive\n\nbool: Flag indicating if the primitive can be a zone.\n\nBondwire.component\n\nComponentGroup:         Component of the Connectable object.\n\nBondwire.cross_section_height\n\nValue: Cross-section height of the bondwire.\n\nBondwire.cross_section_type\n\nBondwireCrossSectionType:Cross-section type of the bondwire.\n\nBondwire.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nBondwire.group\n\nGroup object.\n\nBondwire.has_voids\n\nbool: Flag indicating if a primitive has voids inside.\n\nBondwire.id\n\nint: Unique ID of the EDB object.\n\nBondwire.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nBondwire.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nBondwire.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nBondwire.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nBondwire.is_negative\n\nbool: Flag indicating if the primitive is negative.\n\nBondwire.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nBondwire.is_parameterized\n\nbool: Whether the primitive is parametrized.\n\nBondwire.is_void\n\nbool: Flag indicating if a primitive is a void.\n\nBondwire.is_zone_primitive\n\nbool: Flag indicating if the primitive object is a zone.\n\nBondwire.layer\n\nLayer: Layer that the primitive object is on.\n\nBondwire.layout\n\nLayout: Layout owning the object.\n\nBondwire.layout_obj_type\n\n\n\nBondwire.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nBondwire.net\n\nNet: Net of the Connectable object.\n\nBondwire.obj_type\n\nLayoutObjType: Layout object type.\n\nBondwire.owner\n\nPrimitive: Owner of the primitive object.\n\nBondwire.primitive_type\n\nPrimitiveType: Primitive type of the primitive.\n\nBondwire.type\n\nBondwireType: Type of the bondwire.\n\nBondwire.voids\n\nlist of Primitive: List of void        primitive objects inside the primitive.\n\nBondwire.width\n\nValue: Width of the bondwire.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.ic_mode_auto_resolution",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.ic_mode_auto_resolution.html#ic_mode_auto_resolution",
        "title": "ic_mode_auto_resolution",
        "section": "ic_mode_auto_resolution",
        "text": "bool: Flag indicating if model resolution is automatically calculated for IC designs.\nic_mode_auto_resolution\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.ic_mode_auto_resolution",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.ic_mode_auto_resolution.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.ic_mode_auto_resolution",
        "title": "ic_mode_auto_resolution > ic_mode_auto_resolution > ic_mode_auto_resolution",
        "section": "ic_mode_auto_resolution > ic_mode_auto_resolution",
        "text": "property HFSSAdvancedSettings.ic_mode_auto_resolution\n\nbool: Flag indicating if model resolution is automatically calculated for IC designs.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.find_by_id.html#find_by_id",
        "title": "find_by_id",
        "section": "find_by_id",
        "text": "Find a Connectable object by database ID in a given layout.\nLayout to search for the Connectable object.\nDatabase ID.\nConnectable object with the given database ID.\nfind_by_id\nLayout\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.find_by_id.html#ansys.edb.core.primitive.primitive.Primitive.find_by_id",
        "title": "find_by_id > find_by_id > find_by_id",
        "section": "find_by_id > find_by_id",
        "text": "classmethod Primitive.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the Connectable object.\n\nuid\n\npython:int\n\nDatabase ID.\n\nReturns\n\nConnectable\n\nConnectable object with the given database ID.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.html#jedec5bondwiredef",
        "title": "Jedec5BondwireDef",
        "section": "Jedec5BondwireDef",
        "text": "Represents a JEDEC5 bondwire definition.\nJedec5BondwireDef.create(database, name)\nCreate a JEDEC5 bondwire definition.\nJedec5BondwireDef.delete()\nDelete the bondwire definition.\nJedec5BondwireDef.find_by_name(database, name)\nFind a JEDEC5 bondwire definition by name in a given database.\nJedec5BondwireDef.get_parameters()\nGet parameters of the JEDEC5 bondwire definition.\nJedec5BondwireDef.set_parameters(...)\nSet parameters of the JEDEC5 bondwire definition.\nJedec5BondwireDef.bondwire_type\nBondwireDefType: Type of the JEDEC5 bondwire.\nJedec5BondwireDef.definition_type\nDefinitionObjType: Object type of the bondwire definition.\nJedec5BondwireDef.id\nint: Unique ID of the EDB object.\nJedec5BondwireDef.is_null\nbool: Flag indicating if the object exists in the database.\nJedec5BondwireDef.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nJedec5BondwireDef.name\nstr: Name of the bondwire definition.\nJedec5BondwireDef\nJedec5BondwireDef.create\nJedec5BondwireDef.delete\nJedec5BondwireDef.find_by_name\nJedec5BondwireDef.get_parameters\nJedec5BondwireDef.set_parameters\nJedec5BondwireDef.bondwire_type\nBondwireDefType\nJedec5BondwireDef.definition_type\nDefinitionObjType\nJedec5BondwireDef.id\nint\nJedec5BondwireDef.is_null\nbool\nJedec5BondwireDef.msg\nEDBObjMessage\nJedec5BondwireDef.name\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.html#ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef",
        "title": "Jedec5BondwireDef > Jedec5BondwireDef > Jedec5BondwireDef",
        "section": "Jedec5BondwireDef > Jedec5BondwireDef",
        "text": "class ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef(msg)\n\nRepresents a JEDEC5 bondwire definition.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nJedec5BondwireDef.create(database, name)\n\nCreate a JEDEC5 bondwire definition.\n\nJedec5BondwireDef.delete()\n\nDelete the bondwire definition.\n\nJedec5BondwireDef.find_by_name(database, name)\n\nFind a JEDEC5 bondwire definition by name in a given database.\n\nJedec5BondwireDef.get_parameters()\n\nGet parameters of the JEDEC5 bondwire definition.\n\nJedec5BondwireDef.set_parameters(...)\n\nSet parameters of the JEDEC5 bondwire definition.\n\n\n\nAttributes\n\n\n\n\n\n\n\nJedec5BondwireDef.bondwire_type\n\nBondwireDefType: Type of the JEDEC5 bondwire.\n\nJedec5BondwireDef.definition_type\n\nDefinitionObjType: Object type of the bondwire definition.\n\nJedec5BondwireDef.id\n\nint: Unique ID of the EDB object.\n\nJedec5BondwireDef.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nJedec5BondwireDef.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nJedec5BondwireDef.name\n\nstr: Name of the bondwire definition.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.id",
        "href": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.id",
        "href": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.id.html#ansys.edb.core.definition.component_def.ComponentDef.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property ComponentDef.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.remove_member",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.remove_member.html#remove_member",
        "title": "remove_member",
        "section": "remove_member",
        "text": "Remove an object from the group.\nObject to remove from the group.\nremove_member"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.remove_member",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.remove_member.html#ansys.edb.core.hierarchy.structure3d.Structure3D.remove_member",
        "title": "remove_member > remove_member > remove_member",
        "section": "remove_member > remove_member",
        "text": "Structure3D.remove_member(member)\n\nRemove an object from the group.\n\nParameters\n\nmember\n\nConnectable\n\nObject to remove from the group.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.cast",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.cast.html#cast",
        "title": "cast",
        "section": "cast",
        "text": "Cast the primitive object to the correct concrete type.\ncast\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.cast",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.cast.html#ansys.edb.core.primitive.primitive.Primitive.cast",
        "title": "cast > cast > cast",
        "section": "cast > cast",
        "text": "Primitive.cast()\n\nCast the primitive object to the correct concrete type.\n\nReturns\n\nPrimitive\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/hierarchy",
        "href": "api/hierarchy.html#hierarchy",
        "title": "Hierarchy",
        "section": "Hierarchy",
        "text": "Hierarchy objects are connectables that can act as a container for other connectables.\nExamples of hierarchy objects include subdesigns, MCAD components, and coordinate systems.\nHierarchy"
    },
    {
        "objectID": "api/hierarchy",
        "href": "api/hierarchy.html#object-types",
        "title": "Hierarchy > Object types",
        "section": "Object types",
        "text": "cell_instance.CellInstance(msg)\nRepresents a cell instance object.\ninst_array.InstArray(msg)\nRepresents an instance array object.\ncomponent_group.ComponentGroup(msg)\nRepresents a component group object.\ngroup.Group(msg)\nRepresents a group object.\npin_group.PinGroup(msg)\nRepresents a pin group object.\nmodel.Model(msg)\nRepresents a base hierarchy model object.\npin_pair_model.PinPairModel(msg)\nRepresents a pin pair model object.\nnetlist_model.NetlistModel(msg)\nRepresents a netlist model object.\nsparameter_model.SParameterModel(msg)\nRepresents an S-parameter model object.\nspice_model.SPICEModel(msg)\nRepresents a SPICE model object.\nstructure3d.Structure3D(msg)\nRepresents a 3D structure.\nvia_group.ViaGroup(msg)\nRepresents a via group object.\nlayout_component.LayoutComponent(msg)\nClass representing a layout component.\nObject types\ncell_instance.CellInstance\ninst_array.InstArray\ncomponent_group.ComponentGroup\ngroup.Group\npin_group.PinGroup\nmodel.Model\npin_pair_model.PinPairModel\nnetlist_model.NetlistModel\nsparameter_model.SParameterModel\nspice_model.SPICEModel\nstructure3d.Structure3D\nvia_group.ViaGroup\nlayout_component.LayoutComponent"
    },
    {
        "objectID": "api/hierarchy",
        "href": "api/hierarchy.html#enums",
        "title": "Hierarchy > Enums",
        "section": "Enums",
        "text": "component_group.ComponentType(value)\nProvides an enum representing component types.\nstructure3d.MeshClosure(value)\nProvides an enum representing mesh closure types.\nEnums\ncomponent_group.ComponentType\nstructure3d.MeshClosure"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.layer_id",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.layer_id.html#layer_id",
        "title": "layer_id",
        "section": "layer_id",
        "text": "int: Layer ID.\nlayer_id\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.layer_id",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.layer_id.html#ansys.edb.core.layer.via_layer.ViaLayer.layer_id",
        "title": "layer_id > layer_id > layer_id",
        "section": "layer_id > layer_id",
        "text": "property ViaLayer.layer_id\n\nint: Layer ID.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.get_end_elevation",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.get_end_elevation.html#get_end_elevation",
        "title": "get_end_elevation",
        "section": "get_end_elevation",
        "text": "Get the end elevation layer of the bondwire.\nEnd cell context of the bondwire.\nEnd elevation layer of the bondwire.\nget_end_elevation\nCellInstance\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.get_end_elevation",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.get_end_elevation.html#ansys.edb.core.primitive.primitive.Bondwire.get_end_elevation",
        "title": "get_end_elevation > get_end_elevation > get_end_elevation",
        "section": "get_end_elevation > get_end_elevation",
        "text": "Bondwire.get_end_elevation(end_context)\n\nGet the end elevation layer of the bondwire.\n\nParameters\n\nend_context\n\nCellInstance\n\nEnd cell context of the bondwire.\n\nReturns\n\nLayer\n\nEnd elevation layer of the bondwire.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.find",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.find.html#find",
        "title": "find",
        "section": "find",
        "text": "Find a terminal by name in a given layout.\nLayout to search for the terminal.\nName of the terminal.\nfind\nLayout\nstr\nTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.find",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.find.html#ansys.edb.core.terminal.terminals.Terminal.find",
        "title": "find > find > find",
        "section": "find > find",
        "text": "classmethod Terminal.find(layout, name)\n\nFind a terminal by name in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the terminal.\n\nname\n\nstr\n\nName of the terminal.\n\nReturns\n\nTerminal\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.invert",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.invert.html#invert",
        "title": "invert",
        "section": "invert",
        "text": "Invert the 3D transformation.\ninvert"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.invert",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.invert.html#ansys.edb.core.utility.transform3d.Transform3D.invert",
        "title": "invert > invert > invert",
        "section": "invert > invert",
        "text": "Transform3D.invert()\n\nInvert the 3D transformation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel",
        "href": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.html#djordjecvicsarkarmodel",
        "title": "DjordjecvicSarkarModel",
        "section": "DjordjecvicSarkarModel",
        "text": "Represents a Djordjecvic-Sarkar dielectric material model object.\nDjordjecvicSarkarModel.create()\nCreate a Djordjecvic Sarkar dielectric material model.\nDjordjecvicSarkarModel.dc_conductivity\nfloat: DC conductivity.\nDjordjecvicSarkarModel.dc_relative_permitivity\nfloat: DC relative permitivity.\nDjordjecvicSarkarModel.frequency\nfloat: Frequency.\nDjordjecvicSarkarModel.id\nint: Unique ID of the EDB object.\nDjordjecvicSarkarModel.is_null\nbool: Flag indicating if the object exists in the database.\nDjordjecvicSarkarModel.loss_tangent_at_frequency\nfloat: Loss tangent at frequency.\nDjordjecvicSarkarModel.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nDjordjecvicSarkarModel.relative_permitivity_at_frequency\nfloat: Relative permitivity frequency.\nDjordjecvicSarkarModel.type\nDielectricMaterialModelType: Type of the dielectric material model.\nDjordjecvicSarkarModel.use_dc_relative_conductivity\nbool: Flag indicating whether the DC relative permitivity nominal value is used.\nDjordjecvicSarkarModel\nDjordjecvicSarkarModel.create\nDjordjecvicSarkarModel.dc_conductivity\nfloat\nDjordjecvicSarkarModel.dc_relative_permitivity\nfloat\nDjordjecvicSarkarModel.frequency\nfloat\nDjordjecvicSarkarModel.id\nint\nDjordjecvicSarkarModel.is_null\nbool\nDjordjecvicSarkarModel.loss_tangent_at_frequency\nfloat\nDjordjecvicSarkarModel.msg\nEDBObjMessage\nDjordjecvicSarkarModel.relative_permitivity_at_frequency\nfloat\nDjordjecvicSarkarModel.type\nDielectricMaterialModelType\nDjordjecvicSarkarModel.use_dc_relative_conductivity\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel",
        "href": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.html#ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel",
        "title": "DjordjecvicSarkarModel > DjordjecvicSarkarModel > DjordjecvicSarkarModel",
        "section": "DjordjecvicSarkarModel > DjordjecvicSarkarModel",
        "text": "class ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel(msg)\n\nRepresents a Djordjecvic-Sarkar dielectric material model object.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nDjordjecvicSarkarModel.create()\n\nCreate a Djordjecvic Sarkar dielectric material model.\n\n\n\nAttributes\n\n\n\n\n\n\n\nDjordjecvicSarkarModel.dc_conductivity\n\nfloat: DC conductivity.\n\nDjordjecvicSarkarModel.dc_relative_permitivity\n\nfloat: DC relative permitivity.\n\nDjordjecvicSarkarModel.frequency\n\nfloat: Frequency.\n\nDjordjecvicSarkarModel.id\n\nint: Unique ID of the EDB object.\n\nDjordjecvicSarkarModel.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nDjordjecvicSarkarModel.loss_tangent_at_frequency\n\nfloat: Loss tangent at frequency.\n\nDjordjecvicSarkarModel.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nDjordjecvicSarkarModel.relative_permitivity_at_frequency\n\nfloat: Relative permitivity frequency.\n\nDjordjecvicSarkarModel.type\n\nDielectricMaterialModelType: Type of the dielectric material model.\n\nDjordjecvicSarkarModel.use_dc_relative_conductivity\n\nbool: Flag indicating whether the DC relative permitivity nominal value is used.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.restrict_max_elements",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.restrict_max_elements.html#restrict_max_elements",
        "title": "restrict_max_elements",
        "section": "restrict_max_elements",
        "text": "bool: Flag indicating if the maximum number of mesh elements is restricted.\nrestrict_max_elements\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.restrict_max_elements",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.restrict_max_elements.html#ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.restrict_max_elements",
        "title": "restrict_max_elements > restrict_max_elements > restrict_max_elements",
        "section": "restrict_max_elements > restrict_max_elements",
        "text": "property LengthMeshOperation.restrict_max_elements\n\nbool: Flag indicating if the maximum number of mesh elements is restricted.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.is_in_zone",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.is_in_zone.html#is_in_zone",
        "title": "is_in_zone",
        "section": "is_in_zone",
        "text": "Determine if the layer exists in the given zone.\nTrue when the layer exists in the given zone, False otherwise.\nis_in_zone\npython:int\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.is_in_zone",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.is_in_zone.html#ansys.edb.core.layer.layer.Layer.is_in_zone",
        "title": "is_in_zone > is_in_zone > is_in_zone",
        "section": "is_in_zone > is_in_zone",
        "text": "Layer.is_in_zone(zone)\n\nDetermine if the layer exists in the given zone.\n\nParameters\n\nzone\n\npython:int\n\n\n\nReturns\n\nbool\n\nTrue when the layer exists in the given zone, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.bend_middle",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.bend_middle.html#bend_middle",
        "title": "bend_middle",
        "section": "bend_middle",
        "text": "(Point2DLike, Point2DLike): Tuple of the bend middle based on starting and ending points.\nbend_middle"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.bend_middle",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.bend_middle.html#ansys.edb.core.primitive.primitive.BoardBendDef.bend_middle",
        "title": "bend_middle > bend_middle > bend_middle",
        "section": "bend_middle > bend_middle",
        "text": "property BoardBendDef.bend_middle\n\n(Point2DLike, Point2DLike): Tuple of the bend middle based on starting and ending points.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDef",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDef.html#bondwiredef",
        "title": "BondwireDef",
        "section": "BondwireDef",
        "text": "Represents a bondwire definition.\nBondwireDef.delete()\nDelete the bondwire definition.\nBondwireDef.definition_type\nDefinitionObjType: Object type of the bondwire definition.\nBondwireDef.id\nint: Unique ID of the EDB object.\nBondwireDef.is_null\nbool: Flag indicating if the object exists in the database.\nBondwireDef.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nBondwireDef.name\nstr: Name of the bondwire definition.\nBondwireDef\nBondwireDef.delete\nBondwireDef.definition_type\nDefinitionObjType\nBondwireDef.id\nint\nBondwireDef.is_null\nbool\nBondwireDef.msg\nEDBObjMessage\nBondwireDef.name\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDef",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDef.html#ansys.edb.core.definition.bondwire_def.BondwireDef",
        "title": "BondwireDef > BondwireDef > BondwireDef",
        "section": "BondwireDef > BondwireDef",
        "text": "class ansys.edb.core.definition.bondwire_def.BondwireDef(msg)\n\nRepresents a bondwire definition.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nBondwireDef.delete()\n\nDelete the bondwire definition.\n\n\n\nAttributes\n\n\n\n\n\n\n\nBondwireDef.definition_type\n\nDefinitionObjType: Object type of the bondwire definition.\n\nBondwireDef.id\n\nint: Unique ID of the EDB object.\n\nBondwireDef.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nBondwireDef.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nBondwireDef.name\n\nstr: Name of the bondwire definition.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.html#terminal",
        "title": "Terminal",
        "section": "Terminal",
        "text": "Represents a terminal object.\nTerminal.cast([term_type])\nCast the terminal object to the correct concrete type, fetching the type if necessary.\nTerminal.create_3d_comp()\nCreate a 3D composite model from an MCAD file.\nTerminal.create_hfss()\nCreate an HFSS model from an MCAD file.\nTerminal.create_stride()\nCreate a Stride model from an MCAD file.\nTerminal.delete()\nDelete the layout object.\nTerminal.find(layout, name)\nFind a terminal by name in a given layout.\nTerminal.find_by_id(layout, uid)\nFind a Connectable object by database ID in a given layout.\nTerminal.get_product_property(prod_id, attr_id)\nGet the product property of the layout object for a given product ID and attribute ID.\nTerminal.get_product_property_ids(prod_id)\nGet a list of attribute IDs given a product ID for the layout object.\nTerminal.product_solver_names(product_id)\nGet the list of solver names.\nTerminal.product_solver_option(product_id, ...)\nGet the name of the product solver option.\nTerminal.set_product_property(prod_id, ...)\nSet the product property of the layout object for a given product ID and attribute ID.\nTerminal.set_product_solver_option(...)\nSet the product solver option.\nTerminal.boundary_type\nBoundaryType: Boundary type of the terminal.\nTerminal.bundle_terminal\nBundleTerminal: Bundle terminal that the terminal belongs to, if any.\nTerminal.component\nComponentGroup:         Component of the Connectable object.\nTerminal.edb_uid\nint: Unique, persistent ID for the Connectable object.\nTerminal.group\nGroup object.\nTerminal.hfss_pi_type\nHfssPIType: HFSS PI type.\nTerminal.id\nint: Unique ID of the EDB object.\nTerminal.impedance\nValue: Impedance of the terminal.\nTerminal.is_auto_port\nbool: Flag indicating if the terminal is an auto port.\nTerminal.is_circuit_port\nbool: Flag indicating if the terminal is a circuit port.\nTerminal.is_interface_terminal\nbool: Flag indicating if the terminal is an interface.\nTerminal.is_mcad\nbool: Flag indicating if this is an MCAD model.\nTerminal.is_mcad_3d_comp\nbool: Flag indicating if this is a 3D composite MCAD model.\nTerminal.is_mcad_hfss\nbool: Flag indicating if this is an HFSS MCAD model.\nTerminal.is_mcad_stride\nbool: Flag indicating if this is a Stride MCAD model.\nTerminal.is_null\nbool: Flag indicating if the object exists in the database.\nTerminal.is_reference_terminal\nbool: Flag indicating if the terminal is a reference terminal.\nTerminal.layout\nLayout: Layout owning the object.\nTerminal.layout_obj_type\n\nTerminal.model\nstr: S-parameter model.\nTerminal.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nTerminal.name\nstr: Name of the terminal.\nTerminal.net\nNet: Net of the Connectable object.\nTerminal.obj_type\nLayoutObjType: Layout object type.\nTerminal.port_post_processing_prop\nPortPostProcessingProp: Port postprocessing properties.\nTerminal.reference_layer\nLayer: Layer that the terminal references, if any, by either layer object or name.\nTerminal.reference_terminal\nTerminal: Terminal that the terminal references, if any.\nTerminal.rlc_boundary_parameters\nRlc: RLC boundary parameters.\nTerminal.source_amplitude\nValue: Source amplitude of the terminal.\nTerminal.source_phase\nValue: Source phase of the terminal.\nTerminal.term_to_ground\nSourceTermToGroundType: Source terminal-to-ground type.\nTerminal.type\n\nTerminal.use_reference_from_hierarchy\nbool: Flag indicating if the terminal can use references from the hierarchy.\nTerminal\nTerminal.cast\nTerminal.create_3d_comp\nTerminal.create_hfss\nTerminal.create_stride\nTerminal.delete\nTerminal.find\nTerminal.find_by_id\nTerminal.get_product_property\nTerminal.get_product_property_ids\nTerminal.product_solver_names\nTerminal.product_solver_option\nTerminal.set_product_property\nTerminal.set_product_solver_option\nTerminal.boundary_type\nBoundaryType\nTerminal.bundle_terminal\nBundleTerminal\nTerminal.component\nComponentGroup\nTerminal.edb_uid\nint\nTerminal.group\nGroup\nTerminal.hfss_pi_type\nHfssPIType\nTerminal.id\nint\nTerminal.impedance\nValue\nTerminal.is_auto_port\nbool\nTerminal.is_circuit_port\nbool\nTerminal.is_interface_terminal\nbool\nTerminal.is_mcad\nbool\nTerminal.is_mcad_3d_comp\nbool\nTerminal.is_mcad_hfss\nbool\nTerminal.is_mcad_stride\nbool\nTerminal.is_null\nbool\nTerminal.is_reference_terminal\nbool\nTerminal.layout\nLayout\nTerminal.layout_obj_type\nTerminal.model\nstr\nTerminal.msg\nEDBObjMessage\nTerminal.name\nstr\nTerminal.net\nNet\nTerminal.obj_type\nLayoutObjType\nTerminal.port_post_processing_prop\nPortPostProcessingProp\nTerminal.reference_layer\nLayer\nTerminal.reference_terminal\nTerminal\nTerminal.rlc_boundary_parameters\nRlc\nTerminal.source_amplitude\nValue\nTerminal.source_phase\nValue\nTerminal.term_to_ground\nSourceTermToGroundType\nTerminal.type\nTerminal.use_reference_from_hierarchy\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.html#ansys.edb.core.terminal.terminals.Terminal",
        "title": "Terminal > Terminal > Terminal",
        "section": "Terminal > Terminal",
        "text": "class ansys.edb.core.terminal.terminals.Terminal(msg)\n\nRepresents a terminal object.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nTerminal.cast([term_type])\n\nCast the terminal object to the correct concrete type, fetching the type if necessary.\n\nTerminal.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nTerminal.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nTerminal.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nTerminal.delete()\n\nDelete the layout object.\n\nTerminal.find(layout, name)\n\nFind a terminal by name in a given layout.\n\nTerminal.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nTerminal.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nTerminal.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nTerminal.product_solver_names(product_id)\n\nGet the list of solver names.\n\nTerminal.product_solver_option(product_id, ...)\n\nGet the name of the product solver option.\n\nTerminal.set_product_property(prod_id, ...)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nTerminal.set_product_solver_option(...)\n\nSet the product solver option.\n\n\n\nAttributes\n\n\n\n\n\n\n\nTerminal.boundary_type\n\nBoundaryType: Boundary type of the terminal.\n\nTerminal.bundle_terminal\n\nBundleTerminal: Bundle terminal that the terminal belongs to, if any.\n\nTerminal.component\n\nComponentGroup:         Component of the Connectable object.\n\nTerminal.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nTerminal.group\n\nGroup object.\n\nTerminal.hfss_pi_type\n\nHfssPIType: HFSS PI type.\n\nTerminal.id\n\nint: Unique ID of the EDB object.\n\nTerminal.impedance\n\nValue: Impedance of the terminal.\n\nTerminal.is_auto_port\n\nbool: Flag indicating if the terminal is an auto port.\n\nTerminal.is_circuit_port\n\nbool: Flag indicating if the terminal is a circuit port.\n\nTerminal.is_interface_terminal\n\nbool: Flag indicating if the terminal is an interface.\n\nTerminal.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nTerminal.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nTerminal.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nTerminal.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nTerminal.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nTerminal.is_reference_terminal\n\nbool: Flag indicating if the terminal is a reference terminal.\n\nTerminal.layout\n\nLayout: Layout owning the object.\n\nTerminal.layout_obj_type\n\n\n\nTerminal.model\n\nstr: S-parameter model.\n\nTerminal.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nTerminal.name\n\nstr: Name of the terminal.\n\nTerminal.net\n\nNet: Net of the Connectable object.\n\nTerminal.obj_type\n\nLayoutObjType: Layout object type.\n\nTerminal.port_post_processing_prop\n\nPortPostProcessingProp: Port postprocessing properties.\n\nTerminal.reference_layer\n\nLayer: Layer that the terminal references, if any, by either layer object or name.\n\nTerminal.reference_terminal\n\nTerminal: Terminal that the terminal references, if any.\n\nTerminal.rlc_boundary_parameters\n\nRlc: RLC boundary parameters.\n\nTerminal.source_amplitude\n\nValue: Source amplitude of the terminal.\n\nTerminal.source_phase\n\nValue: Source phase of the terminal.\n\nTerminal.term_to_ground\n\nSourceTermToGroundType: Source terminal-to-ground type.\n\nTerminal.type\n\n\n\nTerminal.use_reference_from_hierarchy\n\nbool: Flag indicating if the terminal can use references from the hierarchy.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_property.ComponentProperty",
        "href": "api/_autosummary/ansys.edb.core.definition.component_property.ComponentProperty.html#componentproperty",
        "title": "ComponentProperty",
        "section": "ComponentProperty",
        "text": "Represents a component property.\nComponentProperty.clone()\nClone the component property.\nComponentProperty.id\nint: Unique ID of the EDB object.\nComponentProperty.is_null\nbool: Flag indicating if the object exists in the database.\nComponentProperty.model\nModel: Model object.\nComponentProperty.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nComponentProperty.package_def\nPackageDef: Package definition object.\nComponentProperty.package_mounting_offset\nValue: Mounting offset of the package definition object.\nComponentProperty\nComponentProperty.clone\nComponentProperty.id\nint\nComponentProperty.is_null\nbool\nComponentProperty.model\nModel\nComponentProperty.msg\nEDBObjMessage\nComponentProperty.package_def\nPackageDef\nComponentProperty.package_mounting_offset\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_property.ComponentProperty",
        "href": "api/_autosummary/ansys.edb.core.definition.component_property.ComponentProperty.html#ansys.edb.core.definition.component_property.ComponentProperty",
        "title": "ComponentProperty > ComponentProperty > ComponentProperty",
        "section": "ComponentProperty > ComponentProperty",
        "text": "class ansys.edb.core.definition.component_property.ComponentProperty(msg)\n\nRepresents a component property.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nComponentProperty.clone()\n\nClone the component property.\n\n\n\nAttributes\n\n\n\n\n\n\n\nComponentProperty.id\n\nint: Unique ID of the EDB object.\n\nComponentProperty.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nComponentProperty.model\n\nModel: Model object.\n\nComponentProperty.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nComponentProperty.package_def\n\nPackageDef: Package definition object.\n\nComponentProperty.package_mounting_offset\n\nValue: Mounting offset of the package definition object.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.name",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of simulation setup.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.name",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.name.html#ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property SimulationSetup.name\n\nstr: Name of simulation setup.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.PowerModule.active",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.PowerModule.active.html#active",
        "title": "active",
        "section": "active",
        "text": "bool: Flag indicating if the power module is active.\nactive\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.PowerModule.active",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.PowerModule.active.html#ansys.edb.core.layout.voltage_regulator.PowerModule.active",
        "title": "active > active > active",
        "section": "active > active",
        "text": "property PowerModule.active\n\nbool: Flag indicating if the power module is active.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.layout_obj_type.html#layout_obj_type",
        "title": "layout_obj_type",
        "section": "layout_obj_type",
        "text": "layout_obj_type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.layout_obj_type.html#ansys.edb.core.primitive.primitive.Primitive.layout_obj_type",
        "title": "layout_obj_type > layout_obj_type > layout_obj_type",
        "section": "layout_obj_type > layout_obj_type",
        "text": "Primitive.layout_obj_type = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.layout",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.layout.html#layout",
        "title": "layout",
        "section": "layout",
        "text": "Layout: Layout owning the object.\nThis property is read-only.\nlayout\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.layout",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.layout.html#ansys.edb.core.hierarchy.structure3d.Structure3D.layout",
        "title": "layout > layout > layout",
        "section": "layout > layout",
        "text": "property Structure3D.layout\n\nLayout: Layout owning the object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance.LayoutInstance.get_layout_obj_instance_in_context",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance.LayoutInstance.get_layout_obj_instance_in_context.html#get_layout_obj_instance_in_context",
        "title": "get_layout_obj_instance_in_context",
        "section": "get_layout_obj_instance_in_context",
        "text": "Get the layout object instance of the given connectable in the provided context.\nLayout object with the instances to search.\nList of strings specifying the context that the /\nlayout object instance is retrieved from.\ncontext\nget_layout_obj_instance_in_context\npython:list\npython:str\ncontext\ncontext\nLayoutObjInstance"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance.LayoutInstance.get_layout_obj_instance_in_context",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance.LayoutInstance.get_layout_obj_instance_in_context.html#ansys.edb.core.layout_instance.layout_instance.LayoutInstance.get_layout_obj_instance_in_context",
        "title": "get_layout_obj_instance_in_context > get_layout_obj_instance_in_context > get_layout_obj_instance_in_context",
        "section": "get_layout_obj_instance_in_context > get_layout_obj_instance_in_context",
        "text": "LayoutInstance.get_layout_obj_instance_in_context(layout_obj, context)\n\nGet the layout object instance of the given connectable in the provided context.\n\nParameters\n\nlayout_obj\n\nConnectable\n\nLayout object with the instances to search.\n\ncontext\n\npython:list[python:str]\n\nList of strings specifying the context that the /\nlayout object instance is retrieved from.\n\ncontext\n\nReturns\n\nLayoutObjInstance\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.location",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.location.html#location",
        "title": "location",
        "section": "location",
        "text": "tuple (Value,         Value):         Location [x, y] of the hierarchy object on the placement_layer object.\nlocation\ntuple\nValue\nValue\nplacement_layer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.location",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.location.html#ansys.edb.core.hierarchy.group.Group.location",
        "title": "location > location > location",
        "section": "location > location",
        "text": "property Group.location\n\ntuple (Value,         Value):         Location [x, y] of the hierarchy object on the placement_layer object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.msg.html#ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property SIWaveSimulationSetup.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the product property.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.get_product_property.html#ansys.edb.core.primitive.primitive.BoardBendDef.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "BoardBendDef.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nReturns\n\npython:str\n\nString stored in the product property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModelType.DJORDJECVIC_SARKAR",
        "href": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModelType.DJORDJECVIC_SARKAR.html#djordjecvic_sarkar",
        "title": "DJORDJECVIC_SARKAR",
        "section": "DJORDJECVIC_SARKAR",
        "text": "DJORDJECVIC_SARKAR"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModelType.DJORDJECVIC_SARKAR",
        "href": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModelType.DJORDJECVIC_SARKAR.html#ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModelType.DJORDJECVIC_SARKAR",
        "title": "DJORDJECVIC_SARKAR > DJORDJECVIC_SARKAR > DJORDJECVIC_SARKAR",
        "section": "DJORDJECVIC_SARKAR > DJORDJECVIC_SARKAR",
        "text": "DielectricMaterialModelType.DJORDJECVIC_SARKAR = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform.Transform.is_identity",
        "href": "api/_autosummary/ansys.edb.core.utility.transform.Transform.is_identity.html#is_identity",
        "title": "is_identity",
        "section": "is_identity",
        "text": "bool: Flag indicating if the transformation is an identity transformation.\nis_identity\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform.Transform.is_identity",
        "href": "api/_autosummary/ansys.edb.core.utility.transform.Transform.is_identity.html#ansys.edb.core.utility.transform.Transform.is_identity",
        "title": "is_identity > is_identity > is_identity",
        "section": "is_identity > is_identity",
        "text": "property Transform.is_identity\n\nbool: Flag indicating if the transformation is an identity transformation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.PRIM_PLUGIN",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.PRIM_PLUGIN.html#prim_plugin",
        "title": "PRIM_PLUGIN",
        "section": "PRIM_PLUGIN",
        "text": "PRIM_PLUGIN"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.PRIM_PLUGIN",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.PRIM_PLUGIN.html#ansys.edb.core.primitive.primitive.PrimitiveType.PRIM_PLUGIN",
        "title": "PRIM_PLUGIN > PRIM_PLUGIN > PRIM_PLUGIN",
        "section": "PRIM_PLUGIN > PRIM_PLUGIN",
        "text": "PrimitiveType.PRIM_PLUGIN = 5\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.get_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.get_hfss_prop.html#get_hfss_prop",
        "title": "get_hfss_prop",
        "section": "get_hfss_prop",
        "text": "Get HFSS properties.\nName of the material property.\nWhether to solve inside.\nget_hfss_prop\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.get_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.get_hfss_prop.html#ansys.edb.core.primitive.primitive.Path.get_hfss_prop",
        "title": "get_hfss_prop > get_hfss_prop > get_hfss_prop",
        "section": "get_hfss_prop > get_hfss_prop",
        "text": "Path.get_hfss_prop()\n\nGet HFSS properties.\n\nReturns\n\nmaterial\n\npython:str\n\nName of the material property.\n\nsolve_inside\n\nbool\n\nWhether to solve inside.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.obj_type",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.obj_type.html#obj_type",
        "title": "obj_type",
        "section": "obj_type",
        "text": "LayoutObjType: Layout object type.\nThis property is read-only.\nobj_type\nLayoutObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.obj_type",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.obj_type.html#ansys.edb.core.hierarchy.group.Group.obj_type",
        "title": "obj_type > obj_type > obj_type",
        "section": "obj_type > obj_type",
        "text": "property Group.obj_type\n\nLayoutObjType: Layout object type.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.create",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a group.\nLayout to create the group in.\nName of the group.\nGroup created.\ncreate\nLayout\npython:str\nGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.create",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.create.html#ansys.edb.core.hierarchy.via_group.ViaGroup.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod ViaGroup.create(layout, name)\n\nCreate a group.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to create the group in.\n\nname\n\npython:str\n\nName of the group.\n\nReturns\n\nGroup\n\nGroup created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.id",
        "href": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.id",
        "href": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.id.html#ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property RLCComponentProperty.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.edge_mesh",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.edge_mesh.html#edge_mesh",
        "title": "edge_mesh",
        "section": "edge_mesh",
        "text": "str: Thickness and width of the exterior conductor filament.\nedge_mesh\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.edge_mesh",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.edge_mesh.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.edge_mesh",
        "title": "edge_mesh > edge_mesh > edge_mesh",
        "section": "edge_mesh > edge_mesh",
        "text": "property RaptorXAdvancedSettings.edge_mesh\n\nstr: Thickness and width of the exterior conductor filament.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap.is_null",
        "href": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap.is_null",
        "href": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap.is_null.html#ansys.edb.core.utility.layer_map.LayerMap.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property LayerMap.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.package_def",
        "href": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.package_def.html#package_def",
        "title": "package_def",
        "section": "package_def",
        "text": "PackageDef: Package definition object.\npackage_def\nPackageDef"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.package_def",
        "href": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.package_def.html#ansys.edb.core.definition.ic_component_property.ICComponentProperty.package_def",
        "title": "package_def > package_def > package_def",
        "section": "package_def > package_def",
        "text": "property ICComponentProperty.package_def\n\nPackageDef: Package definition object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.padstack_instance",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.padstack_instance.html#padstack_instance",
        "title": "padstack_instance",
        "section": "padstack_instance",
        "text": "PadstackInstance: Padstack instance that the edge is on.\npadstack_instance\nPadstackInstance"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.padstack_instance",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.padstack_instance.html#ansys.edb.core.terminal.terminals.PadEdge.padstack_instance",
        "title": "padstack_instance > padstack_instance > padstack_instance",
        "section": "padstack_instance > padstack_instance",
        "text": "property PadEdge.padstack_instance\n\nPadstackInstance: Padstack instance that the edge is on.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.hfss_pi_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.hfss_pi_type.html#hfss_pi_type",
        "title": "hfss_pi_type",
        "section": "hfss_pi_type",
        "text": "HfssPIType: HFSS PI type.\nhfss_pi_type\nHfssPIType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.hfss_pi_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.hfss_pi_type.html#ansys.edb.core.terminal.terminals.Terminal.hfss_pi_type",
        "title": "hfss_pi_type > hfss_pi_type > hfss_pi_type",
        "section": "hfss_pi_type > hfss_pi_type",
        "text": "property Terminal.hfss_pi_type\n\nHfssPIType: HFSS PI type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.terminals",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.terminals.html#terminals",
        "title": "terminals",
        "section": "terminals",
        "text": "list of Terminal: All terminal instances on the             net object instance.\nterminals\nlist\nTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.terminals",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.terminals.html#ansys.edb.core.net.net.Net.terminals",
        "title": "terminals > terminals > terminals",
        "section": "terminals > terminals",
        "text": "property Net.terminals\n\nlist of Terminal: All terminal instances on the             net object instance.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier.msg.html#ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property MaterialPropertyThermalModifier.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.TopBottomAssociation.BOTTOM_ASSOCIATED",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.TopBottomAssociation.BOTTOM_ASSOCIATED.html#bottom_associated",
        "title": "BOTTOM_ASSOCIATED",
        "section": "BOTTOM_ASSOCIATED",
        "text": "BOTTOM_ASSOCIATED"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.TopBottomAssociation.BOTTOM_ASSOCIATED",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.TopBottomAssociation.BOTTOM_ASSOCIATED.html#ansys.edb.core.layer.layer.TopBottomAssociation.BOTTOM_ASSOCIATED",
        "title": "BOTTOM_ASSOCIATED > BOTTOM_ASSOCIATED > BOTTOM_ASSOCIATED",
        "section": "BOTTOM_ASSOCIATED > BOTTOM_ASSOCIATED",
        "text": "TopBottomAssociation.BOTTOM_ASSOCIATED = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.create",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create an HFSS simulation setup.\nCell to create the simulation setup in.\nName of the simulation setup.\nHFSS simulation setup created.\ncreate\nCell\npython:str\nHfssSimulationSetup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.create",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.create.html#ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod HfssSimulationSetup.create(cell, name)\n\nCreate an HFSS simulation setup.\n\nParameters\n\ncell\n\nCell\n\nCell to create the simulation setup in.\n\nname\n\npython:str\n\nName of the simulation setup.\n\nReturns\n\nHfssSimulationSetup\n\nHFSS simulation setup created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.netlist_model.NetlistModel.clone",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.netlist_model.NetlistModel.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Clone a model.\nclone\nModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.netlist_model.NetlistModel.clone",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.netlist_model.NetlistModel.clone.html#ansys.edb.core.hierarchy.netlist_model.NetlistModel.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "NetlistModel.clone()\n\nClone a model.\n\nReturns\n\nModel cloned.\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_auto_removal_sliver_poly",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_auto_removal_sliver_poly.html#use_auto_removal_sliver_poly",
        "title": "use_auto_removal_sliver_poly",
        "section": "use_auto_removal_sliver_poly",
        "text": "bool: Flag indicating if slight misaligned overlapping polygons are to be automatically aligned.\nuse_auto_removal_sliver_poly\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_auto_removal_sliver_poly",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_auto_removal_sliver_poly.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_auto_removal_sliver_poly",
        "title": "use_auto_removal_sliver_poly > use_auto_removal_sliver_poly > use_auto_removal_sliver_poly",
        "section": "use_auto_removal_sliver_poly > use_auto_removal_sliver_poly",
        "text": "property RaptorXAdvancedSettings.use_auto_removal_sliver_poly\n\nbool: Flag indicating if slight misaligned overlapping polygons are to be automatically aligned.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_property.ComponentProperty.package_mounting_offset",
        "href": "api/_autosummary/ansys.edb.core.definition.component_property.ComponentProperty.package_mounting_offset.html#package_mounting_offset",
        "title": "package_mounting_offset",
        "section": "package_mounting_offset",
        "text": "Value: Mounting offset of the package definition object.\nThis property can be set with ValueLike.\npackage_mounting_offset\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_property.ComponentProperty.package_mounting_offset",
        "href": "api/_autosummary/ansys.edb.core.definition.component_property.ComponentProperty.package_mounting_offset.html#ansys.edb.core.definition.component_property.ComponentProperty.package_mounting_offset",
        "title": "package_mounting_offset > package_mounting_offset > package_mounting_offset",
        "section": "package_mounting_offset > package_mounting_offset",
        "text": "property ComponentProperty.package_mounting_offset\n\nValue: Mounting offset of the package definition object.\n\nThis property can be set with ValueLike.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap.get_mapping_backward",
        "href": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap.get_mapping_backward.html#get_mapping_backward",
        "title": "get_mapping_backward",
        "section": "get_mapping_backward",
        "text": "Get a list of IDs mapped backward with the given ID (value).\nget_mapping_backward"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap.get_mapping_backward",
        "href": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap.get_mapping_backward.html#ansys.edb.core.utility.layer_map.LayerMap.get_mapping_backward",
        "title": "get_mapping_backward > get_mapping_backward > get_mapping_backward",
        "section": "get_mapping_backward > get_mapping_backward",
        "text": "LayerMap.get_mapping_backward(layer_id)\n\nGet a list of IDs mapped backward with the given ID (value).\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDefType.JEDEC4_BONDWIRE_DEF",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDefType.JEDEC4_BONDWIRE_DEF.html#jedec4_bondwire_def",
        "title": "JEDEC4_BONDWIRE_DEF",
        "section": "JEDEC4_BONDWIRE_DEF",
        "text": "JEDEC4_BONDWIRE_DEF"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDefType.JEDEC4_BONDWIRE_DEF",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDefType.JEDEC4_BONDWIRE_DEF.html#ansys.edb.core.definition.bondwire_def.BondwireDefType.JEDEC4_BONDWIRE_DEF",
        "title": "JEDEC4_BONDWIRE_DEF > JEDEC4_BONDWIRE_DEF > JEDEC4_BONDWIRE_DEF",
        "section": "JEDEC4_BONDWIRE_DEF > JEDEC4_BONDWIRE_DEF",
        "text": "BondwireDefType.JEDEC4_BONDWIRE_DEF = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.layer",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.layer.html#layer",
        "title": "layer",
        "section": "layer",
        "text": "Layer: Layer that the primitive object is on.\nlayer\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.layer",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.layer.html#ansys.edb.core.primitive.primitive.Primitive.layer",
        "title": "layer > layer > layer",
        "section": "layer > layer",
        "text": "property Primitive.layer\n\nLayer: Layer that the primitive object is on.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.msg.html#ansys.edb.core.definition.dataset_def.DatasetDef.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property DatasetDef.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.id.html#ansys.edb.core.hierarchy.group.Group.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property Group.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.create",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create an extended net.\nLayout to create the extended net in.\nName of the extended net.\nExtended net created.\ncreate\nLayout\npython:str\nExtendedNet"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.create",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.create.html#ansys.edb.core.net.extended_net.ExtendedNet.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod ExtendedNet.create(layout, name)\n\nCreate an extended net.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to create the extended net in.\n\nname\n\npython:str\n\nName of the extended net.\n\nReturns\n\nExtendedNet\n\nExtended net created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.set_all_diag_constant",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.set_all_diag_constant.html#set_all_diag_constant",
        "title": "set_all_diag_constant",
        "section": "set_all_diag_constant",
        "text": "Set all diagonal entries in the matrix to have the given magnitude and phase values.\nMagnitude limit.\nPhase limit.\nList of port names.\nWhether to clear entries.\nset_all_diag_constant\npython:float\npython:float\npython:list\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.set_all_diag_constant",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.set_all_diag_constant.html#ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.set_all_diag_constant",
        "title": "set_all_diag_constant > set_all_diag_constant > set_all_diag_constant",
        "section": "set_all_diag_constant > set_all_diag_constant",
        "text": "MatrixConvergenceData.set_all_diag_constant(mag_limit, phase_limit, port_names, clear_entries)\n\nSet all diagonal entries in the matrix to have the given magnitude and phase values.\n\nParameters\n\nmag_limit\n\npython:float\n\nMagnitude limit.\n\nphase_limit\n\npython:float\n\nPhase limit.\n\nport_names\n\npython:list[str]\n\nList of port names.\n\nclear_entries\n\nbool\n\nWhether to clear entries.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.id",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.id",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.id.html#ansys.edb.core.definition.package_def.PackageDef.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property PackageDef.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_negative",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_negative.html#is_negative",
        "title": "is_negative",
        "section": "is_negative",
        "text": "bool: Flag indicating if the primitive is negative.\nis_negative\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_negative",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_negative.html#ansys.edb.core.primitive.primitive.Text.is_negative",
        "title": "is_negative > is_negative > is_negative",
        "section": "is_negative > is_negative",
        "text": "property Text.is_negative\n\nbool: Flag indicating if the primitive is negative.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.get_connection_pt",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.get_connection_pt.html#get_connection_pt",
        "title": "get_connection_pt",
        "section": "get_connection_pt",
        "text": "Get connection point position and direction by layer name.\nLayer name.\nThe tuple is in a (position, direction) format:\nposition: Position of the connection point.\ndirection: Direction of the connection point.\nget_connection_pt\npython:str\npython:tuple\nPointData\nConnectionPtDirection\n(position, direction)\nposition\ndirection"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.get_connection_pt",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.get_connection_pt.html#ansys.edb.core.definition.padstack_def_data.PadstackDefData.get_connection_pt",
        "title": "get_connection_pt > get_connection_pt > get_connection_pt",
        "section": "get_connection_pt > get_connection_pt",
        "text": "PadstackDefData.get_connection_pt(layer)\n\nGet connection point position and direction by layer name.\n\nParameters\n\nlayer\n\npython:str\n\nLayer name.\n\nReturns\n\npython:tuple[PointData, ConnectionPtDirection]\n\nThe tuple is in a (position, direction) format:\n\nposition: Position of the connection point.\n\ndirection: Direction of the connection point.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.name",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the bondwire definition.\nThis property is read-only.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.name",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.name.html#ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property Jedec4BondwireDef.name\n\nstr: Name of the bondwire definition.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.get_roughness_model",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.get_roughness_model.html#get_roughness_model",
        "title": "get_roughness_model",
        "section": "get_roughness_model",
        "text": "Get the roughness model used by the layer.\nget_roughness_model\nRoughnessRegion"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.get_roughness_model",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.get_roughness_model.html#ansys.edb.core.layer.stackup_layer.StackupLayer.get_roughness_model",
        "title": "get_roughness_model > get_roughness_model > get_roughness_model",
        "section": "get_roughness_model > get_roughness_model",
        "text": "StackupLayer.get_roughness_model(region)\n\nGet the roughness model used by the layer.\n\nParameters\n\nregion\n\nRoughnessRegion\n\n\n\nReturns\n\nRoughnessModel\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonSenseType.SENSE_CCW",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonSenseType.SENSE_CCW.html#sense_ccw",
        "title": "SENSE_CCW",
        "section": "SENSE_CCW",
        "text": "SENSE_CCW"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonSenseType.SENSE_CCW",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonSenseType.SENSE_CCW.html#ansys.edb.core.geometry.polygon_data.PolygonSenseType.SENSE_CCW",
        "title": "SENSE_CCW > SENSE_CCW > SENSE_CCW",
        "section": "SENSE_CCW > SENSE_CCW",
        "text": "PolygonSenseType.SENSE_CCW = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.set_fill_material",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.set_fill_material.html#set_fill_material",
        "title": "set_fill_material",
        "section": "set_fill_material",
        "text": "Set the name of the fill material of the layer.\nNew name of the fill material.\nset_fill_material\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.set_fill_material",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.set_fill_material.html#ansys.edb.core.layer.via_layer.ViaLayer.set_fill_material",
        "title": "set_fill_material > set_fill_material > set_fill_material",
        "section": "set_fill_material > set_fill_material",
        "text": "ViaLayer.set_fill_material(fill_material_name)\n\nSet the name of the fill material of the layer.\n\nParameters\n\nfill_material_name\n\npython:str\n\nNew name of the fill material.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalType.BUNDLE",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalType.BUNDLE.html#bundle",
        "title": "BUNDLE",
        "section": "BUNDLE",
        "text": "BUNDLE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalType.BUNDLE",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalType.BUNDLE.html#ansys.edb.core.terminal.terminals.TerminalType.BUNDLE",
        "title": "BUNDLE > BUNDLE > BUNDLE",
        "section": "BUNDLE > BUNDLE",
        "text": "TerminalType.BUNDLE = 4\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.id.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property CellInstance.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.html#net",
        "title": "Net",
        "section": "Net",
        "text": "Represents a net.\nNet.create(layout, name)\nCreate a net.\nNet.delete()\nDelete the layout object.\nNet.find_by_name(layout, name)\nFind a net by name in a given layout.\nNet.get_product_property(prod_id, attr_id)\nGet the product property of the layout object for a given product ID and attribute ID.\nNet.get_product_property_ids(prod_id)\nGet a list of attribute IDs given a product ID for the layout object.\nNet.set_product_property(prod_id, attr_id, ...)\nSet the product property of the layout object for a given product ID and attribute ID.\nNet.extended_net\nExtendedNet or None: Extended net that the net belongs to.\nNet.id\nint: Unique ID of the EDB object.\nNet.is_null\nbool: Flag indicating if the object exists in the database.\nNet.is_power_ground\nbool: Flag indicating if the net belongs to a power/ground NetClass instance.\nNet.layout\nLayout: Layout owning the object.\nNet.layout_obj_type\n\nNet.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nNet.name\nstr: Name of the net.\nNet.net_classes\nlist of NetClass: All net classes on the net.\nNet.no_net_name\n\nNet.obj_type\nLayoutObjType: Layout object type.\nNet.padstack_instances\nlist of PadstackInstance: All padstack instances on the net         object instance.\nNet.primitives\nlist of Primitive: All primitives on the net.\nNet.terminal_instances\nlist of Layer: All terminal instances on the net object instance.\nNet.terminals\nlist of Terminal: All terminal instances on the             net object instance.\nNet\nNet.create\nNet.delete\nNet.find_by_name\nNet.get_product_property\nNet.get_product_property_ids\nNet.set_product_property\nNet.extended_net\nExtendedNet\nNone\nNet.id\nint\nNet.is_null\nbool\nNet.is_power_ground\nbool\nNetClass\nNet.layout\nLayout\nNet.layout_obj_type\nNet.msg\nEDBObjMessage\nNet.name\nstr\nNet.net_classes\nlist\nNetClass\nNet.no_net_name\nNet.obj_type\nLayoutObjType\nNet.padstack_instances\nlist\nPadstackInstance\nNet.primitives\nlist\nPrimitive\nNet.terminal_instances\nlist\nLayer\nNet.terminals\nlist\nTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.html#ansys.edb.core.net.net.Net",
        "title": "Net > Net > Net",
        "section": "Net > Net",
        "text": "class ansys.edb.core.net.net.Net(msg)\n\nRepresents a net.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nNet.create(layout, name)\n\nCreate a net.\n\nNet.delete()\n\nDelete the layout object.\n\nNet.find_by_name(layout, name)\n\nFind a net by name in a given layout.\n\nNet.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nNet.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nNet.set_product_property(prod_id, attr_id, ...)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\n\n\nAttributes\n\n\n\n\n\n\n\nNet.extended_net\n\nExtendedNet or None: Extended net that the net belongs to.\n\nNet.id\n\nint: Unique ID of the EDB object.\n\nNet.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nNet.is_power_ground\n\nbool: Flag indicating if the net belongs to a power/ground NetClass instance.\n\nNet.layout\n\nLayout: Layout owning the object.\n\nNet.layout_obj_type\n\n\n\nNet.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nNet.name\n\nstr: Name of the net.\n\nNet.net_classes\n\nlist of NetClass: All net classes on the net.\n\nNet.no_net_name\n\n\n\nNet.obj_type\n\nLayoutObjType: Layout object type.\n\nNet.padstack_instances\n\nlist of PadstackInstance: All padstack instances on the net         object instance.\n\nNet.primitives\n\nlist of Primitive: All primitives on the net.\n\nNet.terminal_instances\n\nlist of Layer: All terminal instances on the net object instance.\n\nNet.terminals\n\nlist of Terminal: All terminal instances on the             net object instance.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.msg.html#ansys.edb.core.definition.port_property.PortProperty.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property PortProperty.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.delete",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the layout object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.delete",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.delete.html#ansys.edb.core.primitive.primitive.Polygon.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "Polygon.delete()\n\nDelete the layout object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.is_null.html#ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property Jedec5BondwireDef.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.nets",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.nets.html#nets",
        "title": "nets",
        "section": "nets",
        "text": "This property is invalid for a differential pair.\nUse ansys.edb.core.net.differential_pair.DifferentialPair instead.\nnets\nansys.edb.core.net.differential_pair.DifferentialPair"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.nets",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.nets.html#ansys.edb.core.net.differential_pair.DifferentialPair.nets",
        "title": "nets > nets > nets",
        "section": "nets > nets",
        "text": "property DifferentialPair.nets\n\nThis property is invalid for a differential pair.\n\nUse ansys.edb.core.net.differential_pair.DifferentialPair instead.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance.LayoutInstance.query_layout_obj_instances",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance.LayoutInstance.query_layout_obj_instances.html#query_layout_obj_instances",
        "title": "query_layout_obj_instances",
        "section": "query_layout_obj_instances",
        "text": "Query layout object instances using the provided filters.\nLayers to query. The default is None, in which case all layers are queried.\nNets to query. The default is None, in which case all nets are queried.\nArea of the design to query. The default is None, in which case the entire\nspatial domain of the design is queried.\nIf a polygonal spatial filter is specified, a tuple of lists of hits is returned in this\nformat: [<hits_completely_enclosed_in_polygon_region>, <hits_partially_enclosed_in_polygon_region>].\nOtherwise, a list containing all hits is returned.\nquery_layout_obj_instances\npython:list\nLayer\npython:str\npython:None\npython:None\nNone\npython:list\nNet\npython:str\npython:None\npython:None\nNone\nPolygonData\nor\nPointData\nNone\nNone\npython:list\nLayoutObjInstance\nor\npython:tuple\npython:list\nLayoutObjInstance\npython:list\nLayoutObjInstance\n[<hits_completely_enclosed_in_polygon_region>, <hits_partially_enclosed_in_polygon_region>]"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance.LayoutInstance.query_layout_obj_instances",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance.LayoutInstance.query_layout_obj_instances.html#ansys.edb.core.layout_instance.layout_instance.LayoutInstance.query_layout_obj_instances",
        "title": "query_layout_obj_instances > query_layout_obj_instances > query_layout_obj_instances",
        "section": "query_layout_obj_instances > query_layout_obj_instances",
        "text": "LayoutInstance.query_layout_obj_instances(layer_filter=None, net_filter=None, spatial_filter=None)\n\nQuery layout object instances using the provided filters.\n\nParameters\n\nlayer_filter\n\npython:list[Layer or python:str or python:None], default: python:None\n\nLayers to query. The default is None, in which case all layers are queried.\n\nnet_filter\n\npython:list[Net or python:str or python:None], default: python:None\n\nNets to query. The default is None, in which case all nets are queried.\n\nspatial_filter\n\nPolygonData or\n\nPointData or None, default: None\n\nArea of the design to query. The default is None, in which case the entire\nspatial domain of the design is queried.\n\nReturns\n\npython:list[LayoutObjInstance] or python:tuple[python:list[LayoutObjInstance], python:list[LayoutObjInstance]]\n\nIf a polygonal spatial filter is specified, a tuple of lists of hits is returned in this\nformat: [<hits_completely_enclosed_in_polygon_region>, <hits_partially_enclosed_in_polygon_region>].\nOtherwise, a list containing all hits is returned.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.is_null",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.is_null",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.is_null.html#ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property SimulationSetup.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.edges",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.edges.html#edges",
        "title": "edges",
        "section": "edges",
        "text": "list of Edge: All edges on the terminal.\nedges\nlist\nEdge"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.edges",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.edges.html#ansys.edb.core.terminal.terminals.EdgeTerminal.edges",
        "title": "edges > edges > edges",
        "section": "edges > edges",
        "text": "property EdgeTerminal.edges\n\nlist of Edge: All edges on the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.package_defs",
        "href": "api/_autosummary/ansys.edb.core.database.Database.package_defs.html#package_defs",
        "title": "package_defs",
        "section": "package_defs",
        "text": "list of PackageDef: All package definitions in the database.\npackage_defs\nlist\nPackageDef"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.package_defs",
        "href": "api/_autosummary/ansys.edb.core.database.Database.package_defs.html#ansys.edb.core.database.Database.package_defs",
        "title": "package_defs > package_defs > package_defs",
        "section": "package_defs > package_defs",
        "text": "property Database.package_defs\n\nlist of PackageDef: All package definitions in the database.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.DCThicknessType",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.DCThicknessType.html#dcthicknesstype",
        "title": "DCThicknessType",
        "section": "DCThicknessType",
        "text": "Provides an enum representing DC thickness types of stackup layers.\nDCThicknessType.EFFECTIVE\n\nDCThicknessType.LAYER\n\nDCThicknessType.MANUAL\n\nDCThicknessType\nDCThicknessType.EFFECTIVE\nDCThicknessType.LAYER\nDCThicknessType.MANUAL"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.DCThicknessType",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.DCThicknessType.html#ansys.edb.core.layer.stackup_layer.DCThicknessType",
        "title": "DCThicknessType > DCThicknessType > DCThicknessType",
        "section": "DCThicknessType > DCThicknessType",
        "text": "class ansys.edb.core.layer.stackup_layer.DCThicknessType(value)\n\nProvides an enum representing DC thickness types of stackup layers.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nDCThicknessType.EFFECTIVE\n\n\n\nDCThicknessType.LAYER\n\n\n\nDCThicknessType.MANUAL\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.use_reference_from_hierarchy",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.use_reference_from_hierarchy.html#use_reference_from_hierarchy",
        "title": "use_reference_from_hierarchy",
        "section": "use_reference_from_hierarchy",
        "text": "bool: Flag indicating if the terminal can use references from the hierarchy.\nuse_reference_from_hierarchy\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.use_reference_from_hierarchy",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.use_reference_from_hierarchy.html#ansys.edb.core.terminal.terminals.Terminal.use_reference_from_hierarchy",
        "title": "use_reference_from_hierarchy > use_reference_from_hierarchy > use_reference_from_hierarchy",
        "section": "use_reference_from_hierarchy > use_reference_from_hierarchy",
        "text": "property Terminal.use_reference_from_hierarchy\n\nbool: Flag indicating if the terminal can use references from the hierarchy.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.SourceTermToGroundType.NO_GROUND",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.SourceTermToGroundType.NO_GROUND.html#no_ground",
        "title": "NO_GROUND",
        "section": "NO_GROUND",
        "text": "NO_GROUND"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.SourceTermToGroundType.NO_GROUND",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.SourceTermToGroundType.NO_GROUND.html#ansys.edb.core.terminal.terminals.SourceTermToGroundType.NO_GROUND",
        "title": "NO_GROUND > NO_GROUND > NO_GROUND",
        "section": "NO_GROUND > NO_GROUND",
        "text": "SourceTermToGroundType.NO_GROUND = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.msg",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.msg",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.msg.html#ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property PinPairModel.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.name",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the net class.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.name",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.name.html#ansys.edb.core.net.extended_net.ExtendedNet.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property ExtendedNet.name\n\nstr: Name of the net class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_circuit_port",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_circuit_port.html#is_circuit_port",
        "title": "is_circuit_port",
        "section": "is_circuit_port",
        "text": "bool: Flag indicating if the terminal is a circuit port.\nis_circuit_port\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_circuit_port",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_circuit_port.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_circuit_port",
        "title": "is_circuit_port > is_circuit_port > is_circuit_port",
        "section": "is_circuit_port > is_circuit_port",
        "text": "property PadstackInstanceTerminal.is_circuit_port\n\nbool: Flag indicating if the terminal is a circuit port.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.type",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.type.html#type",
        "title": "type",
        "section": "type",
        "text": "SimulationSetupType: Type of the simulation setup.\ntype\nSimulationSetupType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.type",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.type.html#ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.type",
        "title": "type > type > type",
        "section": "type > type",
        "text": "property SIWaveDCIRSimulationSetup.type\n\nSimulationSetupType: Type of the simulation setup.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.product_solver_names",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.product_solver_names.html#product_solver_names",
        "title": "product_solver_names",
        "section": "product_solver_names",
        "text": "Get the list of solver names.\nID of the product.\nproduct_solver_names\nProductIdType\npython:list\nof\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.product_solver_names",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.product_solver_names.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.product_solver_names",
        "title": "product_solver_names > product_solver_names > product_solver_names",
        "section": "product_solver_names > product_solver_names",
        "text": "PinGroupTerminal.product_solver_names(product_id)\n\nGet the list of solver names.\n\nParameters\n\nproduct_id\n\nProductIdType\n\nID of the product.\n\nReturns\n\npython:list of python:str\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.DesignMode",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.DesignMode.html#designmode",
        "title": "DesignMode",
        "section": "DesignMode",
        "text": "Provides an enum representing design modes.\nDesignMode.GENERAL\n\nDesignMode.IC\n\nDesignMode\nDesignMode.GENERAL\nDesignMode.IC"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.DesignMode",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.DesignMode.html#ansys.edb.core.layout.cell.DesignMode",
        "title": "DesignMode > DesignMode > DesignMode",
        "section": "DesignMode > DesignMode",
        "text": "class ansys.edb.core.layout.cell.DesignMode(value)\n\nProvides an enum representing design modes.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nDesignMode.GENERAL\n\n\n\nDesignMode.IC\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.id",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.id",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.id.html#ansys.edb.core.layout.layout.Layout.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property Layout.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.term_to_ground",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.term_to_ground.html#term_to_ground",
        "title": "term_to_ground",
        "section": "term_to_ground",
        "text": "SourceTermToGroundType: Source terminal-to-ground type.\nterm_to_ground\nSourceTermToGroundType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.term_to_ground",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.term_to_ground.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.term_to_ground",
        "title": "term_to_ground > term_to_ground > term_to_ground",
        "section": "term_to_ground > term_to_ground",
        "text": "property TerminalInstanceTerminal.term_to_ground\n\nSourceTermToGroundType: Source terminal-to-ground type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.is_big",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.is_big.html#is_big",
        "title": "is_big",
        "section": "is_big",
        "text": "Determine if the arc is big.\nTrue when the arc is big, False otherwise.\nis_big\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.is_big",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.is_big.html#ansys.edb.core.geometry.arc_data.ArcData.is_big",
        "title": "is_big > is_big > is_big",
        "section": "is_big > is_big",
        "text": "ArcData.is_big()\n\nDetermine if the arc is big.\n\nReturns\n\nbool\n\nTrue when the arc is big, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_INVALID_GEOMETRY",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_INVALID_GEOMETRY.html#padgeomtype_invalid_geometry",
        "title": "PADGEOMTYPE_INVALID_GEOMETRY",
        "section": "PADGEOMTYPE_INVALID_GEOMETRY",
        "text": "PADGEOMTYPE_INVALID_GEOMETRY"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_INVALID_GEOMETRY",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_INVALID_GEOMETRY.html#ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_INVALID_GEOMETRY",
        "title": "PADGEOMTYPE_INVALID_GEOMETRY > PADGEOMTYPE_INVALID_GEOMETRY > PADGEOMTYPE_INVALID_GEOMETRY",
        "section": "PADGEOMTYPE_INVALID_GEOMETRY > PADGEOMTYPE_INVALID_GEOMETRY",
        "text": "PadGeometryType.PADGEOMTYPE_INVALID_GEOMETRY = 12\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.defeature_absolute_length",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.defeature_absolute_length.html#defeature_absolute_length",
        "title": "defeature_absolute_length",
        "section": "defeature_absolute_length",
        "text": "str: Absolute length used as tolerance when defeaturing polygons.\ndefeature_absolute_length\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.defeature_absolute_length",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.defeature_absolute_length.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.defeature_absolute_length",
        "title": "defeature_absolute_length > defeature_absolute_length > defeature_absolute_length",
        "section": "defeature_absolute_length > defeature_absolute_length",
        "text": "property HFSSAdvancedSettings.defeature_absolute_length\n\nstr: Absolute length used as tolerance when defeaturing polygons.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.html#vialayer",
        "title": "ViaLayer",
        "section": "ViaLayer",
        "text": "Represents a via layer.\nViaLayer.cast()\nCast the layer object to the correct concrete type.\nViaLayer.clone([copy_id])\nCreate a clone of the layer.\nViaLayer.create(name, lr_layer, ur_layer, ...)\nCreate a via layer.\nViaLayer.get_fill_material([evaluated])\nGet the name of the fill material of the layer.\nViaLayer.get_material([evaluated])\nGet the name of the material of the layer.\nViaLayer.get_product_property(prod_id, attr_it)\nGet the product property of the layer for a given product ID and attribute ID.\nViaLayer.get_product_property_ids(prod_id)\nGet a list of attribute IDs for a given product ID for the layer.\nViaLayer.get_ref_layer_name(upper_ref)\nGet the name of the reference layer of the via layer.\nViaLayer.get_roughness_model(region)\nGet the roughness model used by the layer.\nViaLayer.is_in_zone(zone)\nDetermine if the layer exists in the given zone.\nViaLayer.set_fill_material(fill_material_name)\nSet the name of the fill material of the layer.\nViaLayer.set_is_in_zone(zone[, in_zone])\nSet whether the layer exists in a given zone.\nViaLayer.set_material(material_name)\nSet the name of the material of the layer.\nViaLayer.set_product_property(prod_id, ...)\nSet the product property of the layer for a given product ID and attribute ID.\nViaLayer.set_ref_layer(ref_layer, upper_ref)\nSet the reference layer of the via layer.\nViaLayer.set_roughness_model(...)\nSet the roughness model used by the layer.\nViaLayer.color\ntuple[int, int, int]: Color of the layer in (R,G,B) format.\nViaLayer.draw_override\nDrawOverride: Draw override of the layer.\nViaLayer.etch_factor\nValue: Etch factor of the layer.\nViaLayer.etch_factor_enabled\nbool: Flag indicating if an etch factor is used by the layer.\nViaLayer.hfss_solver_properties\nHFSSSolverProperties: HFSS solver properties of the layer.\nViaLayer.id\nint: Unique ID of the EDB object.\nViaLayer.is_null\nbool: Flag indicating if the object exists in the database.\nViaLayer.is_stackup_layer\nbool: Flag indicating if the layer is a StackupLayer instance.\nViaLayer.is_via_layer\nbool: Flag indicating if the layer is a ViaLayer instance.\nViaLayer.layer_id\nint: Layer ID.\nViaLayer.layout_obj_type\n\nViaLayer.locked\nbool: Flag indicating if the layer is locked.\nViaLayer.lower_elevation\nValue: Lower elevation value of the layer.\nViaLayer.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nViaLayer.name\nstr: Name of the layer.\nViaLayer.negative\nbool: Flag indicating if the layer is a negative layer.\nViaLayer.referencing_via_layer_ids\nlist[int]: Layer IDs for all via layers referencing the layer.\nViaLayer.roughness_enabled\nbool: Flag indicating if roughness models are used by the layer.\nViaLayer.thickness\nValue: Thickness value of the layer.\nViaLayer.top_bottom_association\nTopBottomAssociation: Top-bottom association of the layer.\nViaLayer.transparency\nint: Transparency value of the layer.\nViaLayer.type\nLayerType: Type of the layer.\nViaLayer.upper_elevation\nValue: Upper elevation value of the layer.\nViaLayer.use_solver_properties\nbool: Flag indicating if solver properties are used by the layer.\nViaLayer.visibility_mask\nint: Visibility mask of the layer.\nViaLayer.zone\nint: Zone index associated with the owning layer collection.\nViaLayer.zones\nlist[int]: IDs of all zones containing the layer.\nViaLayer\nViaLayer.cast\nViaLayer.clone\nViaLayer.create\nViaLayer.get_fill_material\nViaLayer.get_material\nViaLayer.get_product_property\nViaLayer.get_product_property_ids\nViaLayer.get_ref_layer_name\nViaLayer.get_roughness_model\nViaLayer.is_in_zone\nViaLayer.set_fill_material\nViaLayer.set_is_in_zone\nViaLayer.set_material\nViaLayer.set_product_property\nViaLayer.set_ref_layer\nViaLayer.set_roughness_model\nViaLayer.color\ntuple\nint\nint\nint\nViaLayer.draw_override\nDrawOverride\nViaLayer.etch_factor\nValue\nViaLayer.etch_factor_enabled\nbool\nViaLayer.hfss_solver_properties\nViaLayer.id\nint\nViaLayer.is_null\nbool\nViaLayer.is_stackup_layer\nbool\nStackupLayer\nViaLayer.is_via_layer\nbool\nViaLayer\nViaLayer.layer_id\nint\nViaLayer.layout_obj_type\nViaLayer.locked\nbool\nViaLayer.lower_elevation\nValue\nViaLayer.msg\nEDBObjMessage\nViaLayer.name\nstr\nViaLayer.negative\nbool\nViaLayer.referencing_via_layer_ids\nlist\nint\nViaLayer.roughness_enabled\nbool\nViaLayer.thickness\nValue\nViaLayer.top_bottom_association\nTopBottomAssociation\nViaLayer.transparency\nint\nViaLayer.type\nLayerType\nViaLayer.upper_elevation\nValue\nViaLayer.use_solver_properties\nbool\nViaLayer.visibility_mask\nint\nViaLayer.zone\nint\nViaLayer.zones\nlist\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.html#ansys.edb.core.layer.via_layer.ViaLayer",
        "title": "ViaLayer > ViaLayer > ViaLayer",
        "section": "ViaLayer > ViaLayer",
        "text": "class ansys.edb.core.layer.via_layer.ViaLayer(msg)\n\nRepresents a via layer.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nViaLayer.cast()\n\nCast the layer object to the correct concrete type.\n\nViaLayer.clone([copy_id])\n\nCreate a clone of the layer.\n\nViaLayer.create(name, lr_layer, ur_layer, ...)\n\nCreate a via layer.\n\nViaLayer.get_fill_material([evaluated])\n\nGet the name of the fill material of the layer.\n\nViaLayer.get_material([evaluated])\n\nGet the name of the material of the layer.\n\nViaLayer.get_product_property(prod_id, attr_it)\n\nGet the product property of the layer for a given product ID and attribute ID.\n\nViaLayer.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs for a given product ID for the layer.\n\nViaLayer.get_ref_layer_name(upper_ref)\n\nGet the name of the reference layer of the via layer.\n\nViaLayer.get_roughness_model(region)\n\nGet the roughness model used by the layer.\n\nViaLayer.is_in_zone(zone)\n\nDetermine if the layer exists in the given zone.\n\nViaLayer.set_fill_material(fill_material_name)\n\nSet the name of the fill material of the layer.\n\nViaLayer.set_is_in_zone(zone[, in_zone])\n\nSet whether the layer exists in a given zone.\n\nViaLayer.set_material(material_name)\n\nSet the name of the material of the layer.\n\nViaLayer.set_product_property(prod_id, ...)\n\nSet the product property of the layer for a given product ID and attribute ID.\n\nViaLayer.set_ref_layer(ref_layer, upper_ref)\n\nSet the reference layer of the via layer.\n\nViaLayer.set_roughness_model(...)\n\nSet the roughness model used by the layer.\n\n\n\nAttributes\n\n\n\n\n\n\n\nViaLayer.color\n\ntuple[int, int, int]: Color of the layer in (R,G,B) format.\n\nViaLayer.draw_override\n\nDrawOverride: Draw override of the layer.\n\nViaLayer.etch_factor\n\nValue: Etch factor of the layer.\n\nViaLayer.etch_factor_enabled\n\nbool: Flag indicating if an etch factor is used by the layer.\n\nViaLayer.hfss_solver_properties\n\nHFSSSolverProperties: HFSS solver properties of the layer.\n\nViaLayer.id\n\nint: Unique ID of the EDB object.\n\nViaLayer.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nViaLayer.is_stackup_layer\n\nbool: Flag indicating if the layer is a StackupLayer instance.\n\nViaLayer.is_via_layer\n\nbool: Flag indicating if the layer is a ViaLayer instance.\n\nViaLayer.layer_id\n\nint: Layer ID.\n\nViaLayer.layout_obj_type\n\n\n\nViaLayer.locked\n\nbool: Flag indicating if the layer is locked.\n\nViaLayer.lower_elevation\n\nValue: Lower elevation value of the layer.\n\nViaLayer.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nViaLayer.name\n\nstr: Name of the layer.\n\nViaLayer.negative\n\nbool: Flag indicating if the layer is a negative layer.\n\nViaLayer.referencing_via_layer_ids\n\nlist[int]: Layer IDs for all via layers referencing the layer.\n\nViaLayer.roughness_enabled\n\nbool: Flag indicating if roughness models are used by the layer.\n\nViaLayer.thickness\n\nValue: Thickness value of the layer.\n\nViaLayer.top_bottom_association\n\nTopBottomAssociation: Top-bottom association of the layer.\n\nViaLayer.transparency\n\nint: Transparency value of the layer.\n\nViaLayer.type\n\nLayerType: Type of the layer.\n\nViaLayer.upper_elevation\n\nValue: Upper elevation value of the layer.\n\nViaLayer.use_solver_properties\n\nbool: Flag indicating if solver properties are used by the layer.\n\nViaLayer.visibility_mask\n\nint: Visibility mask of the layer.\n\nViaLayer.zone\n\nint: Zone index associated with the owning layer collection.\n\nViaLayer.zones\n\nlist[int]: IDs of all zones containing the layer.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the product property.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.get_product_property.html#ansys.edb.core.primitive.primitive.Primitive.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "Primitive.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nReturns\n\npython:str\n\nString stored in the product property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings.html#advancedmeshingsettings",
        "title": "AdvancedMeshingSettings",
        "section": "AdvancedMeshingSettings",
        "text": "Class representing base advanced meshing simulation settings.\nAdvancedMeshingSettings.arc_step_size\nstr: Arc step size used when approximating arcs.\nAdvancedMeshingSettings.arc_to_chord_error\nstr: Maximum allowable arc to chord error.\nAdvancedMeshingSettings.circle_start_azimuth\nstr: Starting azimuth used when approximating arcs.\nAdvancedMeshingSettings.max_num_arc_points\nstr: Maximum number of points used to approximate arcs.\nAdvancedMeshingSettings.msg\nEDBObjMessage: Protobuf message that represents this object's ID.\nAdvancedMeshingSettings.use_arc_chord_error_approx\nbool: Flag indicating if arc chord error approximation is used.\nAdvancedMeshingSettings\nAdvancedMeshingSettings.arc_step_size\nstr\nAdvancedMeshingSettings.arc_to_chord_error\nstr\nAdvancedMeshingSettings.circle_start_azimuth\nstr\nAdvancedMeshingSettings.max_num_arc_points\nstr\nAdvancedMeshingSettings.msg\nEDBObjMessage\nAdvancedMeshingSettings.use_arc_chord_error_approx\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings.html#ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings",
        "title": "AdvancedMeshingSettings > AdvancedMeshingSettings > AdvancedMeshingSettings",
        "section": "AdvancedMeshingSettings > AdvancedMeshingSettings",
        "text": "class ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings(sim_setup)\n\nClass representing base advanced meshing simulation settings.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nAdvancedMeshingSettings.arc_step_size\n\nstr: Arc step size used when approximating arcs.\n\nAdvancedMeshingSettings.arc_to_chord_error\n\nstr: Maximum allowable arc to chord error.\n\nAdvancedMeshingSettings.circle_start_azimuth\n\nstr: Starting azimuth used when approximating arcs.\n\nAdvancedMeshingSettings.max_num_arc_points\n\nstr: Maximum number of points used to approximate arcs.\n\nAdvancedMeshingSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object's ID.\n\nAdvancedMeshingSettings.use_arc_chord_error_approx\n\nbool: Flag indicating if arc chord error approximation is used.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.reference_layer",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.reference_layer.html#reference_layer",
        "title": "reference_layer",
        "section": "reference_layer",
        "text": "Layer: Layer that the terminal references, if any, by either layer object or name.\nreference_layer\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.reference_layer",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.reference_layer.html#ansys.edb.core.terminal.terminals.PointTerminal.reference_layer",
        "title": "reference_layer > reference_layer > reference_layer",
        "section": "reference_layer > reference_layer",
        "text": "property PointTerminal.reference_layer\n\nLayer: Layer that the terminal references, if any, by either layer object or name.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.use_dc_relative_conductivity",
        "href": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.use_dc_relative_conductivity.html#use_dc_relative_conductivity",
        "title": "use_dc_relative_conductivity",
        "section": "use_dc_relative_conductivity",
        "text": "bool: Flag indicating whether the DC relative permitivity nominal value is used.\nuse_dc_relative_conductivity\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.use_dc_relative_conductivity",
        "href": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.use_dc_relative_conductivity.html#ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.use_dc_relative_conductivity",
        "title": "use_dc_relative_conductivity > use_dc_relative_conductivity > use_dc_relative_conductivity",
        "section": "use_dc_relative_conductivity > use_dc_relative_conductivity",
        "text": "property DjordjecvicSarkarModel.use_dc_relative_conductivity\n\nbool: Flag indicating whether the DC relative permitivity nominal value is used.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.is_parameter",
        "href": "api/_autosummary/ansys.edb.core.database.Database.is_parameter.html#is_parameter",
        "title": "is_parameter",
        "section": "is_parameter",
        "text": "Determine if the variable is a parameter.\nVariable name.\nTrue if the variable is a parameter, False otherwise.\nis_parameter\npython:str\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.is_parameter",
        "href": "api/_autosummary/ansys.edb.core.database.Database.is_parameter.html#ansys.edb.core.database.Database.is_parameter",
        "title": "is_parameter > is_parameter > is_parameter",
        "section": "is_parameter > is_parameter",
        "text": "Database.is_parameter(name)\n\nDetermine if the variable is a parameter.\n\nParameters\n\nname\n\npython:str\n\nVariable name.\n\nReturns\n\nbool\n\nTrue if the variable is a parameter, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.msg.html#ansys.edb.core.definition.padstack_def.PadstackDef.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property PadstackDef.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.name",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the mesh operation.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.name",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.name.html#ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property LengthMeshOperation.name\n\nstr: Name of the mesh operation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.html#voltageregulator",
        "title": "VoltageRegulator",
        "section": "VoltageRegulator",
        "text": "Represents a voltage regulator.\nVoltageRegulator.add_power_module(power_module)\nAdd a power module to the voltage regulator.\nVoltageRegulator.add_power_modules(power_modules)\nAdd multiple power modules to the voltage regulator.\nVoltageRegulator.create(layout, name, ...)\nCreate a voltage regulator.\nVoltageRegulator.create_3d_comp()\nCreate a 3D composite model from an MCAD file.\nVoltageRegulator.create_hfss()\nCreate an HFSS model from an MCAD file.\nVoltageRegulator.create_stride()\nCreate a Stride model from an MCAD file.\nVoltageRegulator.delete()\nDelete the layout object.\nVoltageRegulator.find_by_id(layout, uid)\nFind a Connectable object by database ID in a given layout.\nVoltageRegulator.get_all_power_modules()\nGet all power modules in the voltage regulator.\nVoltageRegulator.get_power_module(...)\nGet the power module for a given component group name.\nVoltageRegulator.get_product_property(...)\nGet the product property of the layout object for a given product ID and attribute ID.\nVoltageRegulator.get_product_property_ids(prod_id)\nGet a list of attribute IDs given a product ID for the layout object.\nVoltageRegulator.remove_all_power_modules()\nRemove all power modules in the voltage regulator.\nVoltageRegulator.remove_power_module(name)\nRemove a power module from the voltage regulator.\nVoltageRegulator.remove_power_modules(names)\nRemove multiple power modules from the voltage regulator.\nVoltageRegulator.set_product_property(...)\nSet the product property of the layout object for a given product ID and attribute ID.\nVoltageRegulator.active\nbool: Flag indicating if the voltage regular is active.\nVoltageRegulator.component\nComponentGroup:         Component of the Connectable object.\nVoltageRegulator.edb_uid\nint: Unique, persistent ID for the Connectable object.\nVoltageRegulator.group\nGroup object.\nVoltageRegulator.id\nint: Unique ID of the EDB object.\nVoltageRegulator.is_mcad\nbool: Flag indicating if this is an MCAD model.\nVoltageRegulator.is_mcad_3d_comp\nbool: Flag indicating if this is a 3D composite MCAD model.\nVoltageRegulator.is_mcad_hfss\nbool: Flag indicating if this is an HFSS MCAD model.\nVoltageRegulator.is_mcad_stride\nbool: Flag indicating if this is a Stride MCAD model.\nVoltageRegulator.is_null\nbool: Flag indicating if the object exists in the database.\nVoltageRegulator.layout\nLayout: Layout owning the object.\nVoltageRegulator.layout_obj_type\n\nVoltageRegulator.lrc\nValue: Load regulation current of the voltage regulator.\nVoltageRegulator.lrp\nValue: Load regulation percent of the voltage regulator.\nVoltageRegulator.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nVoltageRegulator.name\nstr: Name of the voltage regulator.\nVoltageRegulator.neg_remote_sense_pin\nPadstackInstance:         Negative remote sense pin of the voltage regulator.\nVoltageRegulator.net\nNet: Net of the Connectable object.\nVoltageRegulator.num_active_power_modules\nobj\n\nint: Number of active power modules.\nint: Number of active power modules.\nVoltageRegulator.num_power_modules\nobj\n\nint: Number of power modules.\nint: Number of power modules.\nVoltageRegulator.obj_type\nLayoutObjType: Layout object type.\nVoltageRegulator.pos_remote_sense_pin\nPadstackInstance:         Positive remote sense pin of the voltage regulator.\nVoltageRegulator.voltage\nValue: Voltage of the voltage regulator.\nVoltageRegulator\nVoltageRegulator.add_power_module\nVoltageRegulator.add_power_modules\nVoltageRegulator.create\nVoltageRegulator.create_3d_comp\nVoltageRegulator.create_hfss\nVoltageRegulator.create_stride\nVoltageRegulator.delete\nVoltageRegulator.find_by_id\nVoltageRegulator.get_all_power_modules\nVoltageRegulator.get_power_module\nVoltageRegulator.get_product_property\nVoltageRegulator.get_product_property_ids\nVoltageRegulator.remove_all_power_modules\nVoltageRegulator.remove_power_module\nVoltageRegulator.remove_power_modules\nVoltageRegulator.set_product_property\nVoltageRegulator.active\nbool\nVoltageRegulator.component\nComponentGroup\nVoltageRegulator.edb_uid\nint\nVoltageRegulator.group\nGroup\nVoltageRegulator.id\nint\nVoltageRegulator.is_mcad\nbool\nVoltageRegulator.is_mcad_3d_comp\nbool\nVoltageRegulator.is_mcad_hfss\nbool\nVoltageRegulator.is_mcad_stride\nbool\nVoltageRegulator.is_null\nbool\nVoltageRegulator.layout\nLayout\nVoltageRegulator.layout_obj_type\nVoltageRegulator.lrc\nValue\nVoltageRegulator.lrp\nValue\nVoltageRegulator.msg\nEDBObjMessage\nVoltageRegulator.name\nstr\nVoltageRegulator.neg_remote_sense_pin\nPadstackInstance\nVoltageRegulator.net\nNet\nVoltageRegulator.num_active_power_modules\nVoltageRegulator.num_power_modules\nVoltageRegulator.obj_type\nLayoutObjType\nVoltageRegulator.pos_remote_sense_pin\nPadstackInstance\nVoltageRegulator.voltage\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator",
        "title": "VoltageRegulator > VoltageRegulator > VoltageRegulator",
        "section": "VoltageRegulator > VoltageRegulator",
        "text": "class ansys.edb.core.layout.voltage_regulator.VoltageRegulator(msg)\n\nRepresents a voltage regulator.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nVoltageRegulator.add_power_module(power_module)\n\nAdd a power module to the voltage regulator.\n\nVoltageRegulator.add_power_modules(power_modules)\n\nAdd multiple power modules to the voltage regulator.\n\nVoltageRegulator.create(layout, name, ...)\n\nCreate a voltage regulator.\n\nVoltageRegulator.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nVoltageRegulator.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nVoltageRegulator.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nVoltageRegulator.delete()\n\nDelete the layout object.\n\nVoltageRegulator.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nVoltageRegulator.get_all_power_modules()\n\nGet all power modules in the voltage regulator.\n\nVoltageRegulator.get_power_module(...)\n\nGet the power module for a given component group name.\n\nVoltageRegulator.get_product_property(...)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nVoltageRegulator.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nVoltageRegulator.remove_all_power_modules()\n\nRemove all power modules in the voltage regulator.\n\nVoltageRegulator.remove_power_module(name)\n\nRemove a power module from the voltage regulator.\n\nVoltageRegulator.remove_power_modules(names)\n\nRemove multiple power modules from the voltage regulator.\n\nVoltageRegulator.set_product_property(...)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\n\n\nAttributes\n\n\n\n\n\n\n\nVoltageRegulator.active\n\nbool: Flag indicating if the voltage regular is active.\n\nVoltageRegulator.component\n\nComponentGroup:         Component of the Connectable object.\n\nVoltageRegulator.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nVoltageRegulator.group\n\nGroup object.\n\nVoltageRegulator.id\n\nint: Unique ID of the EDB object.\n\nVoltageRegulator.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nVoltageRegulator.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nVoltageRegulator.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nVoltageRegulator.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nVoltageRegulator.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nVoltageRegulator.layout\n\nLayout: Layout owning the object.\n\nVoltageRegulator.layout_obj_type\n\n\n\nVoltageRegulator.lrc\n\nValue: Load regulation current of the voltage regulator.\n\nVoltageRegulator.lrp\n\nValue: Load regulation percent of the voltage regulator.\n\nVoltageRegulator.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nVoltageRegulator.name\n\nstr: Name of the voltage regulator.\n\nVoltageRegulator.neg_remote_sense_pin\n\nPadstackInstance:         Negative remote sense pin of the voltage regulator.\n\nVoltageRegulator.net\n\nNet: Net of the Connectable object.\n\nVoltageRegulator.num_active_power_modules\n\nobj\n\nint: Number of active power modules.\n\nVoltageRegulator.num_power_modules\n\nobj\n\nint: Number of power modules.\n\nVoltageRegulator.obj_type\n\nLayoutObjType: Layout object type.\n\nVoltageRegulator.pos_remote_sense_pin\n\nPadstackInstance:         Positive remote sense pin of the voltage regulator.\n\nVoltageRegulator.voltage\n\nValue: Voltage of the voltage regulator.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType.DATASET_DEF",
        "href": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType.DATASET_DEF.html#dataset_def",
        "title": "DATASET_DEF",
        "section": "DATASET_DEF",
        "text": "DATASET_DEF"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType.DATASET_DEF",
        "href": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType.DATASET_DEF.html#ansys.edb.core.edb_defs.DefinitionObjType.DATASET_DEF",
        "title": "DATASET_DEF > DATASET_DEF > DATASET_DEF",
        "section": "DATASET_DEF > DATASET_DEF",
        "text": "DefinitionObjType.DATASET_DEF = 4\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.LayerVisibility.HOLE_VISIBLE",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.LayerVisibility.HOLE_VISIBLE.html#hole_visible",
        "title": "HOLE_VISIBLE",
        "section": "HOLE_VISIBLE",
        "text": "HOLE_VISIBLE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.LayerVisibility.HOLE_VISIBLE",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.LayerVisibility.HOLE_VISIBLE.html#ansys.edb.core.layer.layer.LayerVisibility.HOLE_VISIBLE",
        "title": "HOLE_VISIBLE > HOLE_VISIBLE > HOLE_VISIBLE",
        "section": "HOLE_VISIBLE > HOLE_VISIBLE",
        "text": "LayerVisibility.HOLE_VISIBLE = 8\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.BasisFunctionOrder",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.BasisFunctionOrder.html#basisfunctionorder",
        "title": "BasisFunctionOrder",
        "section": "BasisFunctionOrder",
        "text": "Provides an enum representing basis function order types.\nBasisFunctionOrder.ZERO_ORDER\n\nBasisFunctionOrder.FIRST_ORDER\n\nBasisFunctionOrder.SECOND_ORDER\n\nBasisFunctionOrder.MIXED_ORDER\n\nBasisFunctionOrder\nBasisFunctionOrder.ZERO_ORDER\nBasisFunctionOrder.FIRST_ORDER\nBasisFunctionOrder.SECOND_ORDER\nBasisFunctionOrder.MIXED_ORDER"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.BasisFunctionOrder",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.BasisFunctionOrder.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.BasisFunctionOrder",
        "title": "BasisFunctionOrder > BasisFunctionOrder > BasisFunctionOrder",
        "section": "BasisFunctionOrder > BasisFunctionOrder",
        "text": "class ansys.edb.core.simulation_setup.hfss_simulation_settings.BasisFunctionOrder(value)\n\nProvides an enum representing basis function order types.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nBasisFunctionOrder.ZERO_ORDER\n\n\n\nBasisFunctionOrder.FIRST_ORDER\n\n\n\nBasisFunctionOrder.SECOND_ORDER\n\n\n\nBasisFunctionOrder.MIXED_ORDER\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackHoleRange",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackHoleRange.html#padstackholerange",
        "title": "PadstackHoleRange",
        "section": "PadstackHoleRange",
        "text": "Provides an enum representing pad hole ranges.\nPadstackHoleRange.THROUGH\n\nPadstackHoleRange.BEGIN_ON_UPPER_PAD\n\nPadstackHoleRange.END_ON_LOWER_PAD\n\nPadstackHoleRange.UPPER_PAD_TO_LOWER_PAD\n\nPadstackHoleRange.UNKNOWN_RANGE\n\nPadstackHoleRange\nPadstackHoleRange.THROUGH\nPadstackHoleRange.BEGIN_ON_UPPER_PAD\nPadstackHoleRange.END_ON_LOWER_PAD\nPadstackHoleRange.UPPER_PAD_TO_LOWER_PAD\nPadstackHoleRange.UNKNOWN_RANGE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackHoleRange",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackHoleRange.html#ansys.edb.core.definition.padstack_def_data.PadstackHoleRange",
        "title": "PadstackHoleRange > PadstackHoleRange > PadstackHoleRange",
        "section": "PadstackHoleRange > PadstackHoleRange",
        "text": "class ansys.edb.core.definition.padstack_def_data.PadstackHoleRange(value)\n\nProvides an enum representing pad hole ranges.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nPadstackHoleRange.THROUGH\n\n\n\nPadstackHoleRange.BEGIN_ON_UPPER_PAD\n\n\n\nPadstackHoleRange.END_ON_LOWER_PAD\n\n\n\nPadstackHoleRange.UPPER_PAD_TO_LOWER_PAD\n\n\n\nPadstackHoleRange.UNKNOWN_RANGE\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.obj_type.html#obj_type",
        "title": "obj_type",
        "section": "obj_type",
        "text": "LayoutObjType: Layout object type.\nThis property is read-only.\nobj_type\nLayoutObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.obj_type.html#ansys.edb.core.primitive.primitive.Rectangle.obj_type",
        "title": "obj_type > obj_type > obj_type",
        "section": "obj_type > obj_type",
        "text": "property Rectangle.obj_type\n\nLayoutObjType: Layout object type.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.padstack_instances",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.padstack_instances.html#padstack_instances",
        "title": "padstack_instances",
        "section": "padstack_instances",
        "text": "list of PadstackInstance: List of             all padstack instances in the layout.\nThis property is read-only.\npadstack_instances\nlist\nPadstackInstance"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.padstack_instances",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.padstack_instances.html#ansys.edb.core.layout.layout.Layout.padstack_instances",
        "title": "padstack_instances > padstack_instances > padstack_instances",
        "section": "padstack_instances > padstack_instances",
        "text": "property Layout.padstack_instances\n\nlist of PadstackInstance: List of             all padstack instances in the layout.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.skin_depth",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.skin_depth.html#skin_depth",
        "title": "skin_depth",
        "section": "skin_depth",
        "text": "str: Skin depth.\nskin_depth\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.skin_depth",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.skin_depth.html#ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.skin_depth",
        "title": "skin_depth > skin_depth > skin_depth",
        "section": "skin_depth > skin_depth",
        "text": "property SkinDepthMeshOperation.skin_depth\n\nstr: Skin depth.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier.is_null.html#ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property MaterialPropertyThermalModifier.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.get_variable_desc",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.get_variable_desc.html#get_variable_desc",
        "title": "get_variable_desc",
        "section": "get_variable_desc",
        "text": "Get the description of a variable.\nVariable name.\nDescription of the variable.\nget_variable_desc\npython:str\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.get_variable_desc",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.get_variable_desc.html#ansys.edb.core.layout.cell.Cell.get_variable_desc",
        "title": "get_variable_desc > get_variable_desc > get_variable_desc",
        "section": "get_variable_desc > get_variable_desc",
        "text": "Cell.get_variable_desc(name)\n\nGet the description of a variable.\n\nParameters\n\nname\n\npython:str\n\nVariable name.\n\nReturns\n\npython:str\n\nDescription of the variable.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_circuit_port",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_circuit_port.html#is_circuit_port",
        "title": "is_circuit_port",
        "section": "is_circuit_port",
        "text": "bool: Flag indicating if the terminal is a circuit port.\nis_circuit_port\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_circuit_port",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_circuit_port.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.is_circuit_port",
        "title": "is_circuit_port > is_circuit_port > is_circuit_port",
        "section": "is_circuit_port > is_circuit_port",
        "text": "property PinGroupTerminal.is_circuit_port\n\nbool: Flag indicating if the terminal is a circuit port.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.get_material",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.get_material.html#get_material",
        "title": "get_material",
        "section": "get_material",
        "text": "Get the material of the bondwire.\nWhether an evaluated (in variable namespace) material name is wanted.\nMaterial name.\nget_material\npython:True\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.get_material",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.get_material.html#ansys.edb.core.primitive.primitive.Bondwire.get_material",
        "title": "get_material > get_material > get_material",
        "section": "get_material > get_material",
        "text": "Bondwire.get_material(evaluated=True)\n\nGet the material of the bondwire.\n\nParameters\n\nevaluated\n\nbool, default: python:True\n\nWhether an evaluated (in variable namespace) material name is wanted.\n\nReturns\n\npython:str\n\nMaterial name.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.set_rotation",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.set_rotation.html#set_rotation",
        "title": "set_rotation",
        "section": "set_rotation",
        "text": "Set rotation from/to the axis and the angle in radians.\nAngle in radians.\nset_rotation\nPoint3DData\nPoint3DData\npython:float"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.set_rotation",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.set_rotation.html#ansys.edb.core.layout.mcad_model.McadModel.set_rotation",
        "title": "set_rotation > set_rotation > set_rotation",
        "section": "set_rotation > set_rotation",
        "text": "McadModel.set_rotation(axis_from, axis_to, angle)\n\nSet rotation from/to the axis and the angle in radians.\n\nParameters\n\naxis_from\n\nPoint3DData\n\n\n\naxis_to\n\nPoint3DData\n\n\n\nangle\n\npython:float\n\nAngle in radians.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.delete",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the layout object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.delete",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.delete.html#ansys.edb.core.primitive.primitive.Circle.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "Circle.delete()\n\nDelete the layout object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_mcad_stride.html#is_mcad_stride",
        "title": "is_mcad_stride",
        "section": "is_mcad_stride",
        "text": "bool: Flag indicating if this is a Stride MCAD model.\nThis property is read-only.\nis_mcad_stride\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_mcad_stride.html#ansys.edb.core.terminal.terminals.Terminal.is_mcad_stride",
        "title": "is_mcad_stride > is_mcad_stride > is_mcad_stride",
        "section": "is_mcad_stride > is_mcad_stride",
        "text": "property Terminal.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.material_property_thermal_modifier_params.BasicQuadraticParams",
        "href": "api/_autosummary/ansys.edb.core.utility.material_property_thermal_modifier_params.BasicQuadraticParams.html#basicquadraticparams",
        "title": "BasicQuadraticParams",
        "section": "BasicQuadraticParams",
        "text": "Represents basic quadratic parameters.\nTemperature reference value in the quadratic model.\nC1 value in the quadratic model.\nC2 value in the quadratic model.\nBasicQuadraticParams\npython:str\npython:int\npython:float\ncomplex\nValue\npython:str\npython:int\npython:float\ncomplex\nValue\npython:str\npython:int\npython:float\ncomplex\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.material_property_thermal_modifier_params.BasicQuadraticParams",
        "href": "api/_autosummary/ansys.edb.core.utility.material_property_thermal_modifier_params.BasicQuadraticParams.html#ansys.edb.core.utility.material_property_thermal_modifier_params.BasicQuadraticParams",
        "title": "BasicQuadraticParams > BasicQuadraticParams > BasicQuadraticParams",
        "section": "BasicQuadraticParams > BasicQuadraticParams",
        "text": "class ansys.edb.core.utility.material_property_thermal_modifier_params.BasicQuadraticParams(temp_ref_val='22cel', c1_val=<ansys.edb.core.utility.value.Value object>, c2_val=<ansys.edb.core.utility.value.Value object>)\n\nRepresents basic quadratic parameters.\n\nAttributes\n\ntemp_ref_val\n\npython:str, python:int, python:float, complex, Value\n\nTemperature reference value in the quadratic model.\n\nc1_val\n\npython:str, python:int, python:float, complex, Value\n\nC1 value in the quadratic model.\n\nc2_val\n\npython:str, python:int, python:float, complex, Value\n\nC2 value in the quadratic model.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.conductor_percentage",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.conductor_percentage.html#conductor_percentage",
        "title": "conductor_percentage",
        "section": "conductor_percentage",
        "text": "float: Conductor percentage of the via group.\nThis property is read-only.\nconductor_percentage\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.conductor_percentage",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.conductor_percentage.html#ansys.edb.core.hierarchy.via_group.ViaGroup.conductor_percentage",
        "title": "conductor_percentage > conductor_percentage > conductor_percentage",
        "section": "conductor_percentage > conductor_percentage",
        "text": "property ViaGroup.conductor_percentage\n\nfloat: Conductor percentage of the via group.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.is_null",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.is_null",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.is_null.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property CellInstance.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.get_roughness_model",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.get_roughness_model.html#get_roughness_model",
        "title": "get_roughness_model",
        "section": "get_roughness_model",
        "text": "Get the roughness model used by the layer.\nget_roughness_model\nRoughnessRegion"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.get_roughness_model",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.get_roughness_model.html#ansys.edb.core.layer.via_layer.ViaLayer.get_roughness_model",
        "title": "get_roughness_model > get_roughness_model > get_roughness_model",
        "section": "get_roughness_model > get_roughness_model",
        "text": "ViaLayer.get_roughness_model(region)\n\nGet the roughness model used by the layer.\n\nParameters\n\nregion\n\nRoughnessRegion\n\n\n\nReturns\n\nRoughnessModel\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.remove_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.remove_hfss_prop.html#remove_hfss_prop",
        "title": "remove_hfss_prop",
        "section": "remove_hfss_prop",
        "text": "Remove HFSS properties.\nremove_hfss_prop"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.remove_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.remove_hfss_prop.html#ansys.edb.core.primitive.primitive.Path.remove_hfss_prop",
        "title": "remove_hfss_prop > remove_hfss_prop > remove_hfss_prop",
        "section": "remove_hfss_prop > remove_hfss_prop",
        "text": "Path.remove_hfss_prop()\n\nRemove HFSS properties.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.msg",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.msg",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.msg.html#ansys.edb.core.utility.transform3d.Transform3D.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property Transform3D.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_SQUARE45",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_SQUARE45.html#padgeomtype_square45",
        "title": "PADGEOMTYPE_SQUARE45",
        "section": "PADGEOMTYPE_SQUARE45",
        "text": "PADGEOMTYPE_SQUARE45"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_SQUARE45",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_SQUARE45.html#ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_SQUARE45",
        "title": "PADGEOMTYPE_SQUARE45 > PADGEOMTYPE_SQUARE45 > PADGEOMTYPE_SQUARE45",
        "section": "PADGEOMTYPE_SQUARE45 > PADGEOMTYPE_SQUARE45",
        "text": "PadGeometryType.PADGEOMTYPE_SQUARE45 = 10\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.is_mcad.html#is_mcad",
        "title": "is_mcad",
        "section": "is_mcad",
        "text": "bool: Flag indicating if this is an MCAD model.\nThis property is read-only.\nis_mcad\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.is_mcad.html#ansys.edb.core.hierarchy.via_group.ViaGroup.is_mcad",
        "title": "is_mcad > is_mcad > is_mcad",
        "section": "is_mcad > is_mcad",
        "text": "property ViaGroup.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.is_null",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.is_null",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.is_null.html#ansys.edb.core.layout.mcad_model.McadModel.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property McadModel.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.ProductIdType.INVALID_PRODUCT",
        "href": "api/_autosummary/ansys.edb.core.database.ProductIdType.INVALID_PRODUCT.html#invalid_product",
        "title": "INVALID_PRODUCT",
        "section": "INVALID_PRODUCT",
        "text": "INVALID_PRODUCT"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.ProductIdType.INVALID_PRODUCT",
        "href": "api/_autosummary/ansys.edb.core.database.ProductIdType.INVALID_PRODUCT.html#ansys.edb.core.database.ProductIdType.INVALID_PRODUCT",
        "title": "INVALID_PRODUCT > INVALID_PRODUCT > INVALID_PRODUCT",
        "section": "INVALID_PRODUCT > INVALID_PRODUCT",
        "text": "ProductIdType.INVALID_PRODUCT = -1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.obj_type.html#obj_type",
        "title": "obj_type",
        "section": "obj_type",
        "text": "LayoutObjType: Layout object type.\nThis property is read-only.\nobj_type\nLayoutObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.obj_type.html#ansys.edb.core.primitive.primitive.Circle.obj_type",
        "title": "obj_type > obj_type > obj_type",
        "section": "obj_type > obj_type",
        "text": "property Circle.obj_type\n\nLayoutObjType: Layout object type.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.CONDUCTING_LAYER",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.CONDUCTING_LAYER.html#conducting_layer",
        "title": "CONDUCTING_LAYER",
        "section": "CONDUCTING_LAYER",
        "text": "CONDUCTING_LAYER"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.CONDUCTING_LAYER",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.CONDUCTING_LAYER.html#ansys.edb.core.layer.layer_collection.LayerType.CONDUCTING_LAYER",
        "title": "CONDUCTING_LAYER > CONDUCTING_LAYER > CONDUCTING_LAYER",
        "section": "CONDUCTING_LAYER > CONDUCTING_LAYER",
        "text": "LayerType.CONDUCTING_LAYER = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance.LayoutInstance.is_null",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance.LayoutInstance.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance.LayoutInstance.is_null",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance.LayoutInstance.is_null.html#ansys.edb.core.layout_instance.layout_instance.LayoutInstance.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property LayoutInstance.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballPlacement.UNKNOWN_PLACEMENT",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballPlacement.UNKNOWN_PLACEMENT.html#unknown_placement",
        "title": "UNKNOWN_PLACEMENT",
        "section": "UNKNOWN_PLACEMENT",
        "text": "UNKNOWN_PLACEMENT"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballPlacement.UNKNOWN_PLACEMENT",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballPlacement.UNKNOWN_PLACEMENT.html#ansys.edb.core.definition.padstack_def_data.SolderballPlacement.UNKNOWN_PLACEMENT",
        "title": "UNKNOWN_PLACEMENT > UNKNOWN_PLACEMENT > UNKNOWN_PLACEMENT",
        "section": "UNKNOWN_PLACEMENT > UNKNOWN_PLACEMENT",
        "text": "SolderballPlacement.UNKNOWN_PLACEMENT = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.SingleFrequencyAdaptiveSolution.use_mx_conv_data",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.SingleFrequencyAdaptiveSolution.use_mx_conv_data.html#use_mx_conv_data",
        "title": "use_mx_conv_data",
        "section": "use_mx_conv_data",
        "text": "bool: Flag indicating whether matrix convergence data is used.\nuse_mx_conv_data\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.SingleFrequencyAdaptiveSolution.use_mx_conv_data",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.SingleFrequencyAdaptiveSolution.use_mx_conv_data.html#ansys.edb.core.simulation_setup.adaptive_solutions.SingleFrequencyAdaptiveSolution.use_mx_conv_data",
        "title": "use_mx_conv_data > use_mx_conv_data > use_mx_conv_data",
        "section": "use_mx_conv_data > use_mx_conv_data",
        "text": "property SingleFrequencyAdaptiveSolution.use_mx_conv_data\n\nbool: Flag indicating whether matrix convergence data is used.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.layout_obj_type.html#layout_obj_type",
        "title": "layout_obj_type",
        "section": "layout_obj_type",
        "text": "layout_obj_type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.layout_obj_type.html#ansys.edb.core.hierarchy.group.Group.layout_obj_type",
        "title": "layout_obj_type > layout_obj_type > layout_obj_type",
        "section": "layout_obj_type > layout_obj_type",
        "text": "Group.layout_obj_type = 8\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.voids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.voids.html#voids",
        "title": "voids",
        "section": "voids",
        "text": "list of Primitive: List of void        primitive objects inside the primitive.\nThis property is read-only.\nvoids\nlist\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.voids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.voids.html#ansys.edb.core.primitive.primitive.Rectangle.voids",
        "title": "voids > voids > voids",
        "section": "voids > voids",
        "text": "property Rectangle.voids\n\nlist of Primitive: List of void        primitive objects inside the primitive.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData",
        "href": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData.html#point3ddata",
        "title": "Point3DData",
        "section": "Point3DData",
        "text": "Represents a point on a 3D coordinate system.\nPoint3DData.distance(other)\nCompute the distance from this point to another point.\nPoint3DData.equals(other[, tolerance])\nCompare the equality of two 3D points within a given tolerance.\nPoint3DData.midpoint(other)\nCompute the midpoint of this point and another point.\nPoint3DData.magnitude\nfloat: Magnitude or length of the point.\nPoint3DData.magnitude_sqr\nfloat: Magnitude-square of the point.\nPoint3DData.x\nValue: X coordinate.\nPoint3DData.y\nValue: Y coordinate.\nPoint3DData.z\nValue: Z coordinate.\nPoint3DData\nPoint3DData.distance\nPoint3DData.equals\nPoint3DData.midpoint\nPoint3DData.magnitude\nfloat\nPoint3DData.magnitude_sqr\nfloat\nPoint3DData.x\nValue\nPoint3DData.y\nValue\nPoint3DData.z\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData",
        "href": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData.html#ansys.edb.core.geometry.point3d_data.Point3DData",
        "title": "Point3DData > Point3DData > Point3DData",
        "section": "Point3DData > Point3DData",
        "text": "class ansys.edb.core.geometry.point3d_data.Point3DData(x, y, z)\n\nRepresents a point on a 3D coordinate system.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nPoint3DData.distance(other)\n\nCompute the distance from this point to another point.\n\nPoint3DData.equals(other[, tolerance])\n\nCompare the equality of two 3D points within a given tolerance.\n\nPoint3DData.midpoint(other)\n\nCompute the midpoint of this point and another point.\n\n\n\nAttributes\n\n\n\n\n\n\n\nPoint3DData.magnitude\n\nfloat: Magnitude or length of the point.\n\nPoint3DData.magnitude_sqr\n\nfloat: Magnitude-square of the point.\n\nPoint3DData.x\n\nValue: X coordinate.\n\nPoint3DData.y\n\nValue: Y coordinate.\n\nPoint3DData.z\n\nValue: Z coordinate.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.id.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property ComponentGroup.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.name",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the terminal.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.name",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.name.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property PadstackInstanceTerminal.name\n\nstr: Name of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.net",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.net.html#net",
        "title": "net",
        "section": "net",
        "text": "Net: Net of the Connectable object.\nThis property can be set with a Net instance, a string, or None.\nnet\nNet\nNet\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.net",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.net.html#ansys.edb.core.hierarchy.pin_group.PinGroup.net",
        "title": "net > net > net",
        "section": "net > net",
        "text": "property PinGroup.net\n\nNet: Net of the Connectable object.\n\nThis property can be set with a Net instance, a string, or None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.cross_section_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.cross_section_type.html#cross_section_type",
        "title": "cross_section_type",
        "section": "cross_section_type",
        "text": "BondwireCrossSectionType:Cross-section type of the bondwire.\ncross_section_type\nBondwireCrossSectionType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.cross_section_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.cross_section_type.html#ansys.edb.core.primitive.primitive.Bondwire.cross_section_type",
        "title": "cross_section_type > cross_section_type > cross_section_type",
        "section": "cross_section_type > cross_section_type",
        "text": "property Bondwire.cross_section_type\n\nBondwireCrossSectionType:Cross-section type of the bondwire.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the property.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.set_product_property.html#ansys.edb.core.net.differential_pair.DifferentialPair.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "DifferentialPair.set_product_property(prod_id, attr_id, prop_value)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nprop_value\n\npython:str\n\nString stored in the property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.name",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of simulation setup.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.name",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.name.html#ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property HfssSimulationSetup.name\n\nstr: Name of simulation setup.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.is_null",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.is_null",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.is_null.html#ansys.edb.core.layout.layout.Layout.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property Layout.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.advanced",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.advanced.html#advanced",
        "title": "advanced",
        "section": "advanced",
        "text": "SIWaveAdvancedSettings: Advanced settings for SIWave simulations.\nadvanced\nSIWaveAdvancedSettings"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.advanced",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.advanced.html#ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.advanced",
        "title": "advanced > advanced > advanced",
        "section": "advanced > advanced",
        "text": "property SIWaveDCIRSimulationSettings.advanced\n\nSIWaveAdvancedSettings: Advanced settings for SIWave simulations.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.net_layer_info",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.net_layer_info.html#net_layer_info",
        "title": "net_layer_info",
        "section": "net_layer_info",
        "text": "list of tuple of (str, str, bool): List of net layer         information for the mesh operation.\nThe tuple is in this form: (net_name, layer_name, is_sheet)``.\nnet_layer_info\nlist\ntuple\nstr\nstr\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.net_layer_info",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.net_layer_info.html#ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.net_layer_info",
        "title": "net_layer_info > net_layer_info > net_layer_info",
        "section": "net_layer_info > net_layer_info",
        "text": "property LengthMeshOperation.net_layer_info\n\nlist of tuple of (str, str, bool): List of net layer         information for the mesh operation.\n\nThe tuple is in this form: (net_name, layer_name, is_sheet)``.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.is_mcad_3d_comp.html#is_mcad_3d_comp",
        "title": "is_mcad_3d_comp",
        "section": "is_mcad_3d_comp",
        "text": "bool: Flag indicating if this is a 3D composite MCAD model.\nThis property is read-only.\nis_mcad_3d_comp\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.is_mcad_3d_comp.html#ansys.edb.core.hierarchy.inst_array.InstArray.is_mcad_3d_comp",
        "title": "is_mcad_3d_comp > is_mcad_3d_comp > is_mcad_3d_comp",
        "section": "is_mcad_3d_comp > is_mcad_3d_comp",
        "text": "property InstArray.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ViaStyle.RIBBON",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ViaStyle.RIBBON.html#ribbon",
        "title": "RIBBON",
        "section": "RIBBON",
        "text": "RIBBON"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ViaStyle.RIBBON",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ViaStyle.RIBBON.html#ansys.edb.core.simulation_setup.simulation_settings.ViaStyle.RIBBON",
        "title": "RIBBON > RIBBON > RIBBON",
        "section": "RIBBON > RIBBON",
        "text": "ViaStyle.RIBBON = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.TopBottomAssociation.TOP_BOTTOM_ASSOCIATION_COUNT",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.TopBottomAssociation.TOP_BOTTOM_ASSOCIATION_COUNT.html#top_bottom_association_count",
        "title": "TOP_BOTTOM_ASSOCIATION_COUNT",
        "section": "TOP_BOTTOM_ASSOCIATION_COUNT",
        "text": "TOP_BOTTOM_ASSOCIATION_COUNT"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.TopBottomAssociation.TOP_BOTTOM_ASSOCIATION_COUNT",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.TopBottomAssociation.TOP_BOTTOM_ASSOCIATION_COUNT.html#ansys.edb.core.layer.layer.TopBottomAssociation.TOP_BOTTOM_ASSOCIATION_COUNT",
        "title": "TOP_BOTTOM_ASSOCIATION_COUNT > TOP_BOTTOM_ASSOCIATION_COUNT > TOP_BOTTOM_ASSOCIATION_COUNT",
        "section": "TOP_BOTTOM_ASSOCIATION_COUNT > TOP_BOTTOM_ASSOCIATION_COUNT",
        "text": "TopBottomAssociation.TOP_BOTTOM_ASSOCIATION_COUNT = 4\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.is_mcad_3d_comp.html#is_mcad_3d_comp",
        "title": "is_mcad_3d_comp",
        "section": "is_mcad_3d_comp",
        "text": "bool: Flag indicating if this is a 3D composite MCAD model.\nThis property is read-only.\nis_mcad_3d_comp\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.is_mcad_3d_comp.html#ansys.edb.core.terminal.terminals.TerminalInstance.is_mcad_3d_comp",
        "title": "is_mcad_3d_comp > is_mcad_3d_comp > is_mcad_3d_comp",
        "section": "is_mcad_3d_comp > is_mcad_3d_comp",
        "text": "property TerminalInstance.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.ThermalModifier.id",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.ThermalModifier.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.ThermalModifier.id",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.ThermalModifier.id.html#ansys.edb.core.definition.material_def.ThermalModifier.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property ThermalModifier.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.type",
        "href": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.type.html#type",
        "title": "type",
        "section": "type",
        "text": "DielectricMaterialModelType: Type of the dielectric material model.\ntype\nDielectricMaterialModelType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.type",
        "href": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.type.html#ansys.edb.core.definition.debye_model.DebyeModel.type",
        "title": "type > type > type",
        "section": "type > type",
        "text": "property DebyeModel.type\n\nDielectricMaterialModelType: Type of the dielectric material model.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.transparency",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.transparency.html#transparency",
        "title": "transparency",
        "section": "transparency",
        "text": "int: Transparency value of the layer.\nThe transparency value is between 0 and 100, where 0 indicates a completely\nopaque layer and 100 indicates a completely transparent layer.\ntransparency\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.transparency",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.transparency.html#ansys.edb.core.layer.via_layer.ViaLayer.transparency",
        "title": "transparency > transparency > transparency",
        "section": "transparency > transparency",
        "text": "property ViaLayer.transparency\n\nint: Transparency value of the layer.\n\nThe transparency value is between 0 and 100, where 0 indicates a completely\nopaque layer and 100 indicates a completely transparent layer.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap.clear",
        "href": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap.clear.html#clear",
        "title": "clear",
        "section": "clear",
        "text": "Clear the entrties of the layer map.\nclear"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap.clear",
        "href": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap.clear.html#ansys.edb.core.utility.layer_map.LayerMap.clear",
        "title": "clear > clear > clear",
        "section": "clear > clear",
        "text": "LayerMap.clear()\n\nClear the entrties of the layer map.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType.PACKAGE_DEF",
        "href": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType.PACKAGE_DEF.html#package_def",
        "title": "PACKAGE_DEF",
        "section": "PACKAGE_DEF",
        "text": "PACKAGE_DEF"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType.PACKAGE_DEF",
        "href": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType.PACKAGE_DEF.html#ansys.edb.core.edb_defs.DefinitionObjType.PACKAGE_DEF",
        "title": "PACKAGE_DEF > PACKAGE_DEF > PACKAGE_DEF",
        "section": "PACKAGE_DEF > PACKAGE_DEF",
        "text": "DefinitionObjType.PACKAGE_DEF = 5\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_split_plane_coupling",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_split_plane_coupling.html#include_split_plane_coupling",
        "title": "include_split_plane_coupling",
        "section": "include_split_plane_coupling",
        "text": "bool: Flag indicating if the split-plane coupling is included.\ninclude_split_plane_coupling\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_split_plane_coupling",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_split_plane_coupling.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_split_plane_coupling",
        "title": "include_split_plane_coupling > include_split_plane_coupling > include_split_plane_coupling",
        "section": "include_split_plane_coupling > include_split_plane_coupling",
        "text": "property SIWaveAdvancedSettings.include_split_plane_coupling\n\nbool: Flag indicating if the split-plane coupling is included.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.add_menu_variable",
        "href": "api/_autosummary/ansys.edb.core.database.Database.add_menu_variable.html#add_menu_variable",
        "title": "add_menu_variable",
        "section": "add_menu_variable",
        "text": "Add a menu variable.\nVariable name.\nEach element can be any type that can be converted to a Value\ninstance.\nWhether the new variable is a parameter. The default is False, which means it is a local variable.\nIndex of the value that is initially selected.\nadd_menu_variable\npython:str\npython:list\npython:str\npython:int\npython:float\ncomplex\nValue\nValue\npython:False\nFalse\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.add_menu_variable",
        "href": "api/_autosummary/ansys.edb.core.database.Database.add_menu_variable.html#ansys.edb.core.database.Database.add_menu_variable",
        "title": "add_menu_variable > add_menu_variable > add_menu_variable",
        "section": "add_menu_variable > add_menu_variable",
        "text": "Database.add_menu_variable(name, values, is_param=False, index=0)\n\nAdd a menu variable.\n\nParameters\n\nname\n\npython:str\n\nVariable name.\n\nvalues\n\npython:list[python:str, python:int, python:float, complex, Value]\n\nEach element can be any type that can be converted to a Value\ninstance.\n\nis_param\n\nbool, default: python:False\n\nWhether the new variable is a parameter. The default is False, which means it is a local variable.\n\nindex\n\npython:int, default: 0\n\nIndex of the value that is initially selected.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.boundary_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.boundary_primitive.html#boundary_primitive",
        "title": "boundary_primitive",
        "section": "boundary_primitive",
        "text": "Primitive: Zone primitive the board bend is placed on.\nThis property is read-only.\nboundary_primitive\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.boundary_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.boundary_primitive.html#ansys.edb.core.primitive.primitive.BoardBendDef.boundary_primitive",
        "title": "boundary_primitive > boundary_primitive > boundary_primitive",
        "section": "boundary_primitive > boundary_primitive",
        "text": "property BoardBendDef.boundary_primitive\n\nPrimitive: Zone primitive the board bend is placed on.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackHoleRange.THROUGH",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackHoleRange.THROUGH.html#through",
        "title": "THROUGH",
        "section": "THROUGH",
        "text": "THROUGH"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackHoleRange.THROUGH",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackHoleRange.THROUGH.html#ansys.edb.core.definition.padstack_def_data.PadstackHoleRange.THROUGH",
        "title": "THROUGH > THROUGH > THROUGH",
        "section": "THROUGH > THROUGH",
        "text": "PadstackHoleRange.THROUGH = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.contains_net",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.contains_net.html#contains_net",
        "title": "contains_net",
        "section": "contains_net",
        "text": "Determine if a net exists in the net class.\nNet to search for.\nTrue if the net is in the net class, False otherwise.\ncontains_net\nNet\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.contains_net",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.contains_net.html#ansys.edb.core.net.extended_net.ExtendedNet.contains_net",
        "title": "contains_net > contains_net > contains_net",
        "section": "contains_net > contains_net",
        "text": "ExtendedNet.contains_net(net)\n\nDetermine if a net exists in the net class.\n\nParameters\n\nnet\n\nNet\n\nNet to search for.\n\nReturns\n\nbool\n\nTrue if the net is in the net class, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.definition_type",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.definition_type.html#definition_type",
        "title": "definition_type",
        "section": "definition_type",
        "text": "DefinitionObjType: Definition type.\ndefinition_type\nDefinitionObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.definition_type",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.definition_type.html#ansys.edb.core.definition.padstack_def.PadstackDef.definition_type",
        "title": "definition_type > definition_type > definition_type",
        "section": "definition_type > definition_type",
        "text": "property PadstackDef.definition_type\n\nDefinitionObjType: Definition type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_negative",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_negative.html#is_negative",
        "title": "is_negative",
        "section": "is_negative",
        "text": "bool: Flag indicating if the primitive is negative.\nis_negative\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_negative",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_negative.html#ansys.edb.core.primitive.primitive.BoardBendDef.is_negative",
        "title": "is_negative > is_negative > is_negative",
        "section": "is_negative > is_negative",
        "text": "property BoardBendDef.is_negative\n\nbool: Flag indicating if the primitive is negative.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.html#hfsssimulationsettings",
        "title": "HFSSSimulationSettings",
        "section": "HFSSSimulationSettings",
        "text": "Represents HFSS simulation settings.\nHFSSSimulationSettings.advanced\nHFSSAdvancedSettings: Advanced settings for HFSS simulations.\nHFSSSimulationSettings.advanced_meshing\nHFSSAdvancedMeshingSettings: Advanced meshing settings for HFSS simulations.\nHFSSSimulationSettings.dcr\nHFSSDCRSettings: DCR settings for HFSS simulations.\nHFSSSimulationSettings.enabled\nbool: Flag indicating if the simulation setup is enabled.\nHFSSSimulationSettings.general\nHFSSGeneralSettings: General settings for HFSS simulations.\nHFSSSimulationSettings.msg\nEDBObjMessage: Protobuf message that represents this object's ID.\nHFSSSimulationSettings.options\nHFSSSettingsOptions: HFSS simulation setting options.\nHFSSSimulationSettings.solver\nHFSSSolverSettings: Solver settings for HFSS simulations.\nHFSSSimulationSettings\nHFSSSimulationSettings.advanced\nHFSSAdvancedSettings\nHFSSSimulationSettings.advanced_meshing\nHFSSAdvancedMeshingSettings\nHFSSSimulationSettings.dcr\nHFSSDCRSettings\nHFSSSimulationSettings.enabled\nbool\nHFSSSimulationSettings.general\nHFSSGeneralSettings\nHFSSSimulationSettings.msg\nEDBObjMessage\nHFSSSimulationSettings.options\nHFSSSettingsOptions\nHFSSSimulationSettings.solver\nHFSSSolverSettings"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings",
        "title": "HFSSSimulationSettings > HFSSSimulationSettings > HFSSSimulationSettings",
        "section": "HFSSSimulationSettings > HFSSSimulationSettings",
        "text": "class ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings(sim_setup)\n\nRepresents HFSS simulation settings.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nHFSSSimulationSettings.advanced\n\nHFSSAdvancedSettings: Advanced settings for HFSS simulations.\n\nHFSSSimulationSettings.advanced_meshing\n\nHFSSAdvancedMeshingSettings: Advanced meshing settings for HFSS simulations.\n\nHFSSSimulationSettings.dcr\n\nHFSSDCRSettings: DCR settings for HFSS simulations.\n\nHFSSSimulationSettings.enabled\n\nbool: Flag indicating if the simulation setup is enabled.\n\nHFSSSimulationSettings.general\n\nHFSSGeneralSettings: General settings for HFSS simulations.\n\nHFSSSimulationSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object's ID.\n\nHFSSSimulationSettings.options\n\nHFSSSettingsOptions: HFSS simulation setting options.\n\nHFSSSimulationSettings.solver\n\nHFSSSolverSettings: Solver settings for HFSS simulations.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.HfssPIType.DEFAULT",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.HfssPIType.DEFAULT.html#default",
        "title": "DEFAULT",
        "section": "DEFAULT",
        "text": "DEFAULT"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.HfssPIType.DEFAULT",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.HfssPIType.DEFAULT.html#ansys.edb.core.terminal.terminals.HfssPIType.DEFAULT",
        "title": "DEFAULT > DEFAULT > DEFAULT",
        "section": "DEFAULT > DEFAULT",
        "text": "HfssPIType.DEFAULT = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.create_hfss.html#create_hfss",
        "title": "create_hfss",
        "section": "create_hfss",
        "text": "Create an HFSS model from an MCAD file.\nHFSS model created.\ncreate_hfss\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.create_hfss.html#ansys.edb.core.primitive.primitive.Rectangle.create_hfss",
        "title": "create_hfss > create_hfss > create_hfss",
        "section": "create_hfss > create_hfss",
        "text": "Rectangle.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nReturns\n\nMcadModel\n\nHFSS model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.mesh_region",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.mesh_region.html#mesh_region",
        "title": "mesh_region",
        "section": "mesh_region",
        "text": "str: Name of the mesh region.\nmesh_region\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.mesh_region",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.mesh_region.html#ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.mesh_region",
        "title": "mesh_region > mesh_region > mesh_region",
        "section": "mesh_region > mesh_region",
        "text": "property SkinDepthMeshOperation.mesh_region\n\nstr: Name of the mesh region.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.position",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.position.html#position",
        "title": "position",
        "section": "position",
        "text": "int: Position of the simulation in the setup order.\nposition\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.position",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.position.html#ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.position",
        "title": "position > position > position",
        "section": "position > position",
        "text": "property SIWaveSimulationSetup.position\n\nint: Position of the simulation in the setup order.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.term_to_ground",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.term_to_ground.html#term_to_ground",
        "title": "term_to_ground",
        "section": "term_to_ground",
        "text": "SourceTermToGroundType: Source terminal-to-ground type.\nterm_to_ground\nSourceTermToGroundType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.term_to_ground",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.term_to_ground.html#ansys.edb.core.terminal.terminals.Terminal.term_to_ground",
        "title": "term_to_ground > term_to_ground > term_to_ground",
        "section": "term_to_ground > term_to_ground",
        "text": "property Terminal.term_to_ground\n\nSourceTermToGroundType: Source terminal-to-ground type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.create_value",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.create_value.html#create_value",
        "title": "create_value",
        "section": "create_value",
        "text": "Create a value instance.\nThis value instance can reference variables on the variable server.\nValue, which can be any type that can be converted to a Value\ninstance.\nCreating a value from a Database instance can reference variables\nin the Database instance.\nCreating a value from a Cell instance can reference variables in\nboth the Database instance and the\nCell instance\nCreating a value from a ComponentDef\ninstance can reference variables in both the Database instance and\nthe ComponentDef instance.\ncreate_value\npython:str\npython:int\npython:float\ncomplex\nValue\nValue\nDatabase\nDatabase\nCell\nDatabase\nCell\nComponentDef\nDatabase\nComponentDef"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.create_value",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.create_value.html#ansys.edb.core.layout.layout.Layout.create_value",
        "title": "create_value > create_value > create_value",
        "section": "create_value > create_value",
        "text": "Layout.create_value(val)\n\nCreate a value instance.\n\nThis value instance can reference variables on the variable server.\n\nParameters\n\nval\n\npython:str, python:int, python:float, complex\n\nValue, which can be any type that can be converted to a Value\ninstance.\n\nReturns\n\nValue\n\n\n\nNotes\n\nCreating a value from a Database instance can reference variables\nin the Database instance.\n\nCreating a value from a Cell instance can reference variables in\nboth the Database instance and the\nCell instance\n\nCreating a value from a ComponentDef\ninstance can reference variables in both the Database instance and\nthe ComponentDef instance.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.circuit_cells",
        "href": "api/_autosummary/ansys.edb.core.database.Database.circuit_cells.html#circuit_cells",
        "title": "circuit_cells",
        "section": "circuit_cells",
        "text": "list of Cell: All circuit cells in the database.\ncircuit_cells\nlist\nCell"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.circuit_cells",
        "href": "api/_autosummary/ansys.edb.core.database.Database.circuit_cells.html#ansys.edb.core.database.Database.circuit_cells",
        "title": "circuit_cells > circuit_cells > circuit_cells",
        "section": "circuit_cells > circuit_cells",
        "text": "property Database.circuit_cells\n\nlist of Cell: All circuit cells in the database.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.find",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.find.html#find",
        "title": "find",
        "section": "find",
        "text": "Find a group by name.\nLayout to search for the group.\nName of the group.\nGroup that is found, None otherwise.\nfind\nLayout\npython:str\nGroup\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.find",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.find.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.find",
        "title": "find > find > find",
        "section": "find > find",
        "text": "classmethod ComponentGroup.find(layout, name)\n\nFind a group by name.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the group.\n\nname\n\npython:str\n\nName of the group.\n\nReturns\n\nGroup\n\nGroup that is found, None otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.create",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a package definition in a given database.\nDatabase to create the package definition in.\nName of the package definition.\nPackage definition created.\ncreate\npython:str\nPackageDef"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.create",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.create.html#ansys.edb.core.definition.package_def.PackageDef.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod PackageDef.create(db, name)\n\nCreate a package definition in a given database.\n\nParameters\n\ndb :class:`.Database`\n\nDatabase to create the package definition in.\n\nname\n\npython:str\n\nName of the package definition.\n\nReturns\n\nPackageDef\n\nPackage definition created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.ThermalModifier.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.ThermalModifier.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.ThermalModifier.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.ThermalModifier.is_null.html#ansys.edb.core.definition.material_def.ThermalModifier.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property ThermalModifier.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.delete",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the layout object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.delete",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.delete.html#ansys.edb.core.terminal.terminals.PointTerminal.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "PointTerminal.delete()\n\nDelete the layout object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.html#extendednet",
        "title": "ExtendedNet",
        "section": "ExtendedNet",
        "text": "Represents an extended net.\nExtendedNet.add_net(net)\nAdd a net to the extended net.\nExtendedNet.contains_net(net)\nDetermine if a net exists in the net class.\nExtendedNet.create(layout, name)\nCreate an extended net.\nExtendedNet.delete()\nDelete the layout object.\nExtendedNet.find_by_name(layout, name)\nFind an extended net by name in a given layout.\nExtendedNet.get_product_property(prod_id, ...)\nGet the product property of the layout object for a given product ID and attribute ID.\nExtendedNet.get_product_property_ids(prod_id)\nGet a list of attribute IDs given a product ID for the layout object.\nExtendedNet.remove_all_nets()\nRemove all nets from the extended net.\nExtendedNet.remove_net(net)\nRemove a net from the extended net.\nExtendedNet.set_product_property(prod_id, ...)\nSet the product property of the layout object for a given product ID and attribute ID.\nExtendedNet.description\nstr : Description of the net class.\nExtendedNet.id\nint: Unique ID of the EDB object.\nExtendedNet.is_null\nbool: Flag indicating if the object exists in the database.\nExtendedNet.is_power_ground\nbool: Flag indicating in the net class belongs to the power/ground             NetClass class.\nExtendedNet.layout\nLayout: Layout owning the object.\nExtendedNet.layout_obj_type\n\nExtendedNet.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nExtendedNet.name\nstr: Name of the net class.\nExtendedNet.nets\nlist of Net: List of nets in the net class.\nExtendedNet.obj_type\nLayoutObjType: Layout object type.\nExtendedNet\nExtendedNet.add_net\nExtendedNet.contains_net\nExtendedNet.create\nExtendedNet.delete\nExtendedNet.find_by_name\nExtendedNet.get_product_property\nExtendedNet.get_product_property_ids\nExtendedNet.remove_all_nets\nExtendedNet.remove_net\nExtendedNet.set_product_property\nExtendedNet.description\nstr\nExtendedNet.id\nint\nExtendedNet.is_null\nbool\nExtendedNet.is_power_ground\nbool\nNetClass\nExtendedNet.layout\nLayout\nExtendedNet.layout_obj_type\nExtendedNet.msg\nEDBObjMessage\nExtendedNet.name\nstr\nExtendedNet.nets\nlist\nNet\nExtendedNet.obj_type\nLayoutObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.html#ansys.edb.core.net.extended_net.ExtendedNet",
        "title": "ExtendedNet > ExtendedNet > ExtendedNet",
        "section": "ExtendedNet > ExtendedNet",
        "text": "class ansys.edb.core.net.extended_net.ExtendedNet(msg)\n\nRepresents an extended net.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nExtendedNet.add_net(net)\n\nAdd a net to the extended net.\n\nExtendedNet.contains_net(net)\n\nDetermine if a net exists in the net class.\n\nExtendedNet.create(layout, name)\n\nCreate an extended net.\n\nExtendedNet.delete()\n\nDelete the layout object.\n\nExtendedNet.find_by_name(layout, name)\n\nFind an extended net by name in a given layout.\n\nExtendedNet.get_product_property(prod_id, ...)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nExtendedNet.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nExtendedNet.remove_all_nets()\n\nRemove all nets from the extended net.\n\nExtendedNet.remove_net(net)\n\nRemove a net from the extended net.\n\nExtendedNet.set_product_property(prod_id, ...)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\n\n\nAttributes\n\n\n\n\n\n\n\nExtendedNet.description\n\nstr : Description of the net class.\n\nExtendedNet.id\n\nint: Unique ID of the EDB object.\n\nExtendedNet.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nExtendedNet.is_power_ground\n\nbool: Flag indicating in the net class belongs to the power/ground             NetClass class.\n\nExtendedNet.layout\n\nLayout: Layout owning the object.\n\nExtendedNet.layout_obj_type\n\n\n\nExtendedNet.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nExtendedNet.name\n\nstr: Name of the net class.\n\nExtendedNet.nets\n\nlist of Net: List of nets in the net class.\n\nExtendedNet.obj_type\n\nLayoutObjType: Layout object type.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.is_null",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.is_null",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.is_null.html#ansys.edb.core.primitive.primitive.PadstackInstance.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property PadstackInstance.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.is_null",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.is_null",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.is_null.html#ansys.edb.core.net.differential_pair.DifferentialPair.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property DifferentialPair.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.id.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property PinGroupTerminal.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDs given a product ID for the layout object.\nID representing a product that supports the EDB.\nAll user-defined attribute IDs for properties stored in the object\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.get_product_property_ids.html#ansys.edb.core.primitive.primitive.BoardBendDef.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "BoardBendDef.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nReturns\n\npython:list[python:int]\n\nAll user-defined attribute IDs for properties stored in the object\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.YOUNGS_MODULUS",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.YOUNGS_MODULUS.html#youngs_modulus",
        "title": "YOUNGS_MODULUS",
        "section": "YOUNGS_MODULUS",
        "text": "YOUNGS_MODULUS"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.YOUNGS_MODULUS",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.YOUNGS_MODULUS.html#ansys.edb.core.definition.material_def.MaterialProperty.YOUNGS_MODULUS",
        "title": "YOUNGS_MODULUS > YOUNGS_MODULUS > YOUNGS_MODULUS",
        "section": "YOUNGS_MODULUS > YOUNGS_MODULUS",
        "text": "MaterialProperty.YOUNGS_MODULUS = 39\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.pin_pairs",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.pin_pairs.html#pin_pairs",
        "title": "pin_pairs",
        "section": "pin_pairs",
        "text": "Get all pin pairs.\npin_pairs\npython:list\npython:tuple\npython:str\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.pin_pairs",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.pin_pairs.html#ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.pin_pairs",
        "title": "pin_pairs > pin_pairs > pin_pairs",
        "section": "pin_pairs > pin_pairs",
        "text": "PinPairModel.pin_pairs()\n\nGet all pin pairs.\n\nReturns\n\npython:list[python:tuple[python:str, python:str]]\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.find",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.find.html#find",
        "title": "find",
        "section": "find",
        "text": "Find a group by name.\nLayout to search for the group.\nName of the group.\nGroup that is found, None otherwise.\nfind\nLayout\npython:str\nGroup\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.find",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.find.html#ansys.edb.core.hierarchy.structure3d.Structure3D.find",
        "title": "find > find > find",
        "section": "find > find",
        "text": "classmethod Structure3D.find(layout, name)\n\nFind a group by name.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the group.\n\nname\n\npython:str\n\nName of the group.\n\nReturns\n\nGroup\n\nGroup that is found, None otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.id",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.id",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.id.html#ansys.edb.core.geometry.r_tree.RTree.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property RTree.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.use_solver_properties",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.use_solver_properties.html#use_solver_properties",
        "title": "use_solver_properties",
        "section": "use_solver_properties",
        "text": "bool: Flag indicating if solver properties are used by the layer.\nuse_solver_properties\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.use_solver_properties",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.use_solver_properties.html#ansys.edb.core.layer.via_layer.ViaLayer.use_solver_properties",
        "title": "use_solver_properties > use_solver_properties > use_solver_properties",
        "section": "use_solver_properties > use_solver_properties",
        "text": "property ViaLayer.use_solver_properties\n\nbool: Flag indicating if solver properties are used by the layer.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry.msg",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "Protobuf message that represents this object’s ID.\nmsg\nLayoutObjInstanceGeometryMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry.msg",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry.msg.html#ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property LayoutObjInstance3DGeometry.msg\n\nProtobuf message that represents this object’s ID.\n\nReturns\n\nLayoutObjInstanceGeometryMessage\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.reference_layer",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.reference_layer.html#reference_layer",
        "title": "reference_layer",
        "section": "reference_layer",
        "text": "Layer: Layer that the terminal references, if any, by either layer object or name.\nreference_layer\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.reference_layer",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.reference_layer.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.reference_layer",
        "title": "reference_layer > reference_layer > reference_layer",
        "section": "reference_layer > reference_layer",
        "text": "property PinGroupTerminal.reference_layer\n\nLayer: Layer that the terminal references, if any, by either layer object or name.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.group",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.group.html#group",
        "title": "group",
        "section": "group",
        "text": "Group object.\ngroup\nGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.group",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.group.html#ansys.edb.core.hierarchy.inst_array.InstArray.group",
        "title": "group > group > group",
        "section": "group > group",
        "text": "property InstArray.group\n\nGroup object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry.html#layoutobjinstance3dgeometry",
        "title": "LayoutObjInstance3DGeometry",
        "section": "LayoutObjInstance3DGeometry",
        "text": "Represents a layout object instance 3D geometry.\nLayoutObjInstance3DGeometry.color\nint: Color of the geometry.\nLayoutObjInstance3DGeometry.id\nint: Unique ID of the EDB object.\nLayoutObjInstance3DGeometry.is_null\nbool: Flag indicating if the object exists in the database.\nLayoutObjInstance3DGeometry.material\nstr: Material of the geometry.\nLayoutObjInstance3DGeometry.msg\nProtobuf message that represents this object's ID.\nLayoutObjInstance3DGeometry.tesselation_data\nlist of Triangle3DData: All triangle 3D data instances.\nLayoutObjInstance3DGeometry\nLayoutObjInstance3DGeometry.color\nint\nLayoutObjInstance3DGeometry.id\nint\nLayoutObjInstance3DGeometry.is_null\nbool\nLayoutObjInstance3DGeometry.material\nstr\nLayoutObjInstance3DGeometry.msg\nLayoutObjInstance3DGeometry.tesselation_data\nlist\nTriangle3DData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry.html#ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry",
        "title": "LayoutObjInstance3DGeometry > LayoutObjInstance3DGeometry > LayoutObjInstance3DGeometry",
        "section": "LayoutObjInstance3DGeometry > LayoutObjInstance3DGeometry",
        "text": "class ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry(geometry, owning_drawing, placement_lyr)\n\nRepresents a layout object instance 3D geometry.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nLayoutObjInstance3DGeometry.color\n\nint: Color of the geometry.\n\nLayoutObjInstance3DGeometry.id\n\nint: Unique ID of the EDB object.\n\nLayoutObjInstance3DGeometry.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nLayoutObjInstance3DGeometry.material\n\nstr: Material of the geometry.\n\nLayoutObjInstance3DGeometry.msg\n\nProtobuf message that represents this object's ID.\n\nLayoutObjInstance3DGeometry.tesselation_data\n\nlist of Triangle3DData: All triangle 3D data instances.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BackDrillType.DEPTH_DRILL",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BackDrillType.DEPTH_DRILL.html#depth_drill",
        "title": "DEPTH_DRILL",
        "section": "DEPTH_DRILL",
        "text": "DEPTH_DRILL"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BackDrillType.DEPTH_DRILL",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BackDrillType.DEPTH_DRILL.html#ansys.edb.core.primitive.primitive.BackDrillType.DEPTH_DRILL",
        "title": "DEPTH_DRILL > DEPTH_DRILL > DEPTH_DRILL",
        "section": "DEPTH_DRILL > DEPTH_DRILL",
        "text": "BackDrillType.DEPTH_DRILL = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.BasisFunctionOrder.FIRST_ORDER",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.BasisFunctionOrder.FIRST_ORDER.html#first_order",
        "title": "FIRST_ORDER",
        "section": "FIRST_ORDER",
        "text": "FIRST_ORDER"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.BasisFunctionOrder.FIRST_ORDER",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.BasisFunctionOrder.FIRST_ORDER.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.BasisFunctionOrder.FIRST_ORDER",
        "title": "FIRST_ORDER > FIRST_ORDER > FIRST_ORDER",
        "section": "FIRST_ORDER > FIRST_ORDER",
        "text": "BasisFunctionOrder.FIRST_ORDER = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.msg",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.msg",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.msg.html#ansys.edb.core.net.differential_pair.DifferentialPair.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property DifferentialPair.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.is_visited",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.is_visited.html#is_visited",
        "title": "is_visited",
        "section": "is_visited",
        "text": "Determine whether an RTree object has been visited.\nR-tree data object with index in this form: (polygon, id pair).\nTrue if the Rtree object has been visited, False otherwise.\nis_visited\nRTreeObj\n(polygon, id pair)\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.is_visited",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.is_visited.html#ansys.edb.core.geometry.r_tree.RTree.is_visited",
        "title": "is_visited > is_visited > is_visited",
        "section": "is_visited > is_visited",
        "text": "RTree.is_visited(rtree_obj)\n\nDetermine whether an RTree object has been visited.\n\nParameters\n\nrtree_obj\n\nRTreeObj\n\nR-tree data object with index in this form: (polygon, id pair).\n\nReturns\n\nbool\n\nTrue if the Rtree object has been visited, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the product property.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.get_product_property.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "VoltageRegulator.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nReturns\n\npython:str\n\nString stored in the product property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.thickness",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.thickness.html#thickness",
        "title": "thickness",
        "section": "thickness",
        "text": "Value: Thickness value of the layer.\nThe setter accepts a ValueLike term.\nthickness\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.thickness",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.thickness.html#ansys.edb.core.layer.via_layer.ViaLayer.thickness",
        "title": "thickness > thickness > thickness",
        "section": "thickness > thickness",
        "text": "property ViaLayer.thickness\n\nValue: Thickness value of the layer.\n\nThe setter accepts a ValueLike term.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.corner_style",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.corner_style.html#corner_style",
        "title": "corner_style",
        "section": "corner_style",
        "text": "PathCornerType: Corner style of the path.\ncorner_style\nPathCornerType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.corner_style",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.corner_style.html#ansys.edb.core.primitive.primitive.Path.corner_style",
        "title": "corner_style > corner_style > corner_style",
        "section": "corner_style > corner_style",
        "text": "property Path.corner_style\n\nPathCornerType: Corner style of the path.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.voids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.voids.html#voids",
        "title": "voids",
        "section": "voids",
        "text": "list of Primitive: List of void        primitive objects inside the primitive.\nThis property is read-only.\nvoids\nlist\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.voids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.voids.html#ansys.edb.core.primitive.primitive.Primitive.voids",
        "title": "voids > voids > voids",
        "section": "voids > voids",
        "text": "property Primitive.voids\n\nlist of Primitive: List of void        primitive objects inside the primitive.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.net",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.net.html#net",
        "title": "net",
        "section": "net",
        "text": "Net: Net of the Connectable object.\nThis property can be set with a Net instance, a string, or None.\nnet\nNet\nNet\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.net",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.net.html#ansys.edb.core.hierarchy.structure3d.Structure3D.net",
        "title": "net > net > net",
        "section": "net > net",
        "text": "property Structure3D.net\n\nNet: Net of the Connectable object.\n\nThis property can be set with a Net instance, a string, or None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.edb_uid.html#edb_uid",
        "title": "edb_uid",
        "section": "edb_uid",
        "text": "int: Unique, persistent ID for the Connectable object.\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\nThis property is read-only.\nedb_uid\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.edb_uid.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.edb_uid",
        "title": "edb_uid > edb_uid > edb_uid",
        "section": "edb_uid > edb_uid",
        "text": "property PadstackInstanceTerminal.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the product property.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.get_product_property.html#ansys.edb.core.terminal.terminals.PointTerminal.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "PointTerminal.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nReturns\n\npython:str\n\nString stored in the product property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.enabled",
        "href": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.enabled.html#enabled",
        "title": "enabled",
        "section": "enabled",
        "text": "bool: Flag indicating if the RLC component property is enabled.\nenabled\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.enabled",
        "href": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.enabled.html#ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.enabled",
        "title": "enabled > enabled > enabled",
        "section": "enabled > enabled",
        "text": "property RLCComponentProperty.enabled\n\nbool: Flag indicating if the RLC component property is enabled.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.add_layers",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.add_layers.html#add_layers",
        "title": "add_layers",
        "section": "add_layers",
        "text": "Add a list of layers to the layer collection.\nList of layers.\nadd_layers\npython:list\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.add_layers",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.add_layers.html#ansys.edb.core.layer.layer_collection.LayerCollection.add_layers",
        "title": "add_layers > add_layers > add_layers",
        "section": "add_layers > add_layers",
        "text": "LayerCollection.add_layers(layers)\n\nAdd a list of layers to the layer collection.\n\nParameters\n\nlayers\n\npython:list[Layer]\n\nList of layers.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.html#padstackdef",
        "title": "PadstackDef",
        "section": "PadstackDef",
        "text": "Represents a padstack definition.\nPadstackDef.create(db, name)\nCreate a padstack definition in a given database.\nPadstackDef.delete()\nDelete the padstack definition.\nPadstackDef.find_by_name(db, name)\nFind a padstack definition by name in a given database.\nPadstackDef.data\nPadstackDefData:         Data for the padstack definition.\nPadstackDef.definition_type\nDefinitionObjType: Definition type.\nPadstackDef.id\nint: Unique ID of the EDB object.\nPadstackDef.is_null\nbool: Flag indicating if the object exists in the database.\nPadstackDef.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nPadstackDef.name\nstr: Name of the padstack definition.\nPadstackDef\nPadstackDef.create\nPadstackDef.delete\nPadstackDef.find_by_name\nPadstackDef.data\nPadstackDefData\nPadstackDef.definition_type\nDefinitionObjType\nPadstackDef.id\nint\nPadstackDef.is_null\nbool\nPadstackDef.msg\nEDBObjMessage\nPadstackDef.name\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.html#ansys.edb.core.definition.padstack_def.PadstackDef",
        "title": "PadstackDef > PadstackDef > PadstackDef",
        "section": "PadstackDef > PadstackDef",
        "text": "class ansys.edb.core.definition.padstack_def.PadstackDef(msg)\n\nRepresents a padstack definition.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nPadstackDef.create(db, name)\n\nCreate a padstack definition in a given database.\n\nPadstackDef.delete()\n\nDelete the padstack definition.\n\nPadstackDef.find_by_name(db, name)\n\nFind a padstack definition by name in a given database.\n\n\n\nAttributes\n\n\n\n\n\n\n\nPadstackDef.data\n\nPadstackDefData:         Data for the padstack definition.\n\nPadstackDef.definition_type\n\nDefinitionObjType: Definition type.\n\nPadstackDef.id\n\nint: Unique ID of the EDB object.\n\nPadstackDef.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nPadstackDef.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nPadstackDef.name\n\nstr: Name of the padstack definition.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.temperature_settings",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.temperature_settings.html#temperature_settings",
        "title": "temperature_settings",
        "section": "temperature_settings",
        "text": "TemperatureSettings:         Temperature settings.\ntemperature_settings\nTemperatureSettings"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.temperature_settings",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.temperature_settings.html#ansys.edb.core.layout.cell.Cell.temperature_settings",
        "title": "temperature_settings > temperature_settings > temperature_settings",
        "section": "temperature_settings > temperature_settings",
        "text": "property Cell.temperature_settings\n\nTemperatureSettings:         Temperature settings.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.find",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.find.html#find",
        "title": "find",
        "section": "find",
        "text": "Find a via group by name in the given layout.\nLayout to search for the via group.\nName of the via group.\nVia group that is found, None otherwise.\nfind\nLayout\npython:str\nViaGroup\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.find",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.find.html#ansys.edb.core.hierarchy.via_group.ViaGroup.find",
        "title": "find > find > find",
        "section": "find > find",
        "text": "classmethod ViaGroup.find(layout, name)\n\nFind a via group by name in the given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the via group.\n\nname\n\npython:str\n\nName of the via group.\n\nReturns\n\nViaGroup\n\nVia group that is found, None otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.cell_instance",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.cell_instance.html#cell_instance",
        "title": "cell_instance",
        "section": "cell_instance",
        "text": "CellInstance: Cell instance         of the MCAD model.\nThis property is read-only.\ncell_instance\nCellInstance"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.cell_instance",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.cell_instance.html#ansys.edb.core.layout.mcad_model.McadModel.cell_instance",
        "title": "cell_instance > cell_instance > cell_instance",
        "section": "cell_instance > cell_instance",
        "text": "property McadModel.cell_instance\n\nCellInstance: Cell instance         of the MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.location",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.location.html#location",
        "title": "location",
        "section": "location",
        "text": "tuple (Value,         Value):         Location [x, y] of the hierarchy object on the placement_layer object.\nlocation\ntuple\nValue\nValue\nplacement_layer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.location",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.location.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.location",
        "title": "location > location > location",
        "section": "location > location",
        "text": "property ComponentGroup.location\n\ntuple (Value,         Value):         Location [x, y] of the hierarchy object on the placement_layer object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.add_component_model",
        "href": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.add_component_model.html#add_component_model",
        "title": "add_component_model",
        "section": "add_component_model",
        "text": "Add a component model to this component def.\nComponent Model to be added.\nOnce a component model is added to one component def, it cannot be added to any other, even when removed.\nadd_component_model\nComponent Model"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.add_component_model",
        "href": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.add_component_model.html#ansys.edb.core.definition.component_def.ComponentDef.add_component_model",
        "title": "add_component_model > add_component_model > add_component_model",
        "section": "add_component_model > add_component_model",
        "text": "ComponentDef.add_component_model(value)\n\nAdd a component model to this component def.\n\nParameters\n\nvalue\n\nComponent Model\n\nComponent Model to be added.\n\nNotes\n\nOnce a component model is added to one component def, it cannot be added to any other, even when removed.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SettingsOptions.lambda_target",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SettingsOptions.lambda_target.html#lambda_target",
        "title": "lambda_target",
        "section": "lambda_target",
        "text": "float: Target lambda value for lambda refinement.\nlambda_target\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SettingsOptions.lambda_target",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SettingsOptions.lambda_target.html#ansys.edb.core.simulation_setup.simulation_settings.SettingsOptions.lambda_target",
        "title": "lambda_target > lambda_target > lambda_target",
        "section": "lambda_target > lambda_target",
        "text": "property SettingsOptions.lambda_target\n\nfloat: Target lambda value for lambda refinement.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.GLUE_LAYER",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.GLUE_LAYER.html#glue_layer",
        "title": "GLUE_LAYER",
        "section": "GLUE_LAYER",
        "text": "GLUE_LAYER"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.GLUE_LAYER",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.GLUE_LAYER.html#ansys.edb.core.layer.layer_collection.LayerType.GLUE_LAYER",
        "title": "GLUE_LAYER > GLUE_LAYER > GLUE_LAYER",
        "section": "GLUE_LAYER > GLUE_LAYER",
        "text": "LayerType.GLUE_LAYER = 12\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.create_3d_comp.html#create_3d_comp",
        "title": "create_3d_comp",
        "section": "create_3d_comp",
        "text": "Create a 3D composite model from an MCAD file.\n3D composite model created.\ncreate_3d_comp\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.create_3d_comp.html#ansys.edb.core.primitive.primitive.PadstackInstance.create_3d_comp",
        "title": "create_3d_comp > create_3d_comp > create_3d_comp",
        "section": "create_3d_comp > create_3d_comp",
        "text": "PadstackInstance.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nReturns\n\nMcadModel\n\n3D composite model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.create",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a JEDEC4 bondwire definition.\nDatabase to create the JEDEC4 bondwire definition in.\nName of the JEDEC4 bondwire definition.\nJEDEC4 bondwire definition created.\ncreate\nDatabase\npython:str\nJedec4BondwireDef"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.create",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.create.html#ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod Jedec4BondwireDef.create(database, name)\n\nCreate a JEDEC4 bondwire definition.\n\nParameters\n\ndatabase\n\nDatabase\n\nDatabase to create the JEDEC4 bondwire definition in.\n\nname\n\npython:str\n\nName of the JEDEC4 bondwire definition.\n\nReturns\n\nJedec4BondwireDef\n\nJEDEC4 bondwire definition created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.is_parametric",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.is_parametric.html#is_parametric",
        "title": "is_parametric",
        "section": "is_parametric",
        "text": "Determine whether a polygon contains any parametrized points.\nTrue when the polygon contains parametrized points, False otherwise.\nis_parametric\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.is_parametric",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.is_parametric.html#ansys.edb.core.geometry.polygon_data.PolygonData.is_parametric",
        "title": "is_parametric > is_parametric > is_parametric",
        "section": "is_parametric > is_parametric",
        "text": "PolygonData.is_parametric()\n\nDetermine whether a polygon contains any parametrized points.\n\nReturns\n\nbool\n\nTrue when the polygon contains parametrized points, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.layout_obj_type.html#layout_obj_type",
        "title": "layout_obj_type",
        "section": "layout_obj_type",
        "text": "layout_obj_type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.layout_obj_type.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.layout_obj_type",
        "title": "layout_obj_type > layout_obj_type > layout_obj_type",
        "section": "layout_obj_type > layout_obj_type",
        "text": "CellInstance.layout_obj_type = 4\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_identity",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_identity.html#create_identity",
        "title": "create_identity",
        "section": "create_identity",
        "text": "Create an identity transformation 3D matrix.\ncreate_identity\nTransform3D"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_identity",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_identity.html#ansys.edb.core.utility.transform3d.Transform3D.create_identity",
        "title": "create_identity > create_identity > create_identity",
        "section": "create_identity > create_identity",
        "text": "classmethod Transform3D.create_identity()\n\nCreate an identity transformation 3D matrix.\n\nReturns\n\nTransform3D\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.impedance",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.impedance.html#impedance",
        "title": "impedance",
        "section": "impedance",
        "text": "Value: Impedance of the terminal.\nimpedance\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.impedance",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.impedance.html#ansys.edb.core.terminal.terminals.BundleTerminal.impedance",
        "title": "impedance > impedance > impedance",
        "section": "impedance > impedance",
        "text": "property BundleTerminal.impedance\n\nValue: Impedance of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.enhanced_low_frequency_accuracy",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.enhanced_low_frequency_accuracy.html#enhanced_low_frequency_accuracy",
        "title": "enhanced_low_frequency_accuracy",
        "section": "enhanced_low_frequency_accuracy",
        "text": "bool: Flag indicating if enhanced low-frequency accuracy is enabled during simulation.\nenhanced_low_frequency_accuracy\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.enhanced_low_frequency_accuracy",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.enhanced_low_frequency_accuracy.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.enhanced_low_frequency_accuracy",
        "title": "enhanced_low_frequency_accuracy > enhanced_low_frequency_accuracy > enhanced_low_frequency_accuracy",
        "section": "enhanced_low_frequency_accuracy > enhanced_low_frequency_accuracy",
        "text": "property HFSSSettingsOptions.enhanced_low_frequency_accuracy\n\nbool: Flag indicating if enhanced low-frequency accuracy is enabled during simulation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.use_defeature",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.use_defeature.html#use_defeature",
        "title": "use_defeature",
        "section": "use_defeature",
        "text": "bool: Flag indicating if polygon defeaturing is performed.\nuse_defeature\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.use_defeature",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.use_defeature.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.use_defeature",
        "title": "use_defeature > use_defeature > use_defeature",
        "section": "use_defeature > use_defeature",
        "text": "property HFSSAdvancedSettings.use_defeature\n\nbool: Flag indicating if polygon defeaturing is performed.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.edb_uid.html#edb_uid",
        "title": "edb_uid",
        "section": "edb_uid",
        "text": "int: Unique, persistent ID for the Connectable object.\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\nThis property is read-only.\nedb_uid\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.edb_uid.html#ansys.edb.core.primitive.primitive.Circle.edb_uid",
        "title": "edb_uid > edb_uid > edb_uid",
        "section": "edb_uid > edb_uid",
        "text": "property Circle.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireCrossSectionType.ROUND",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireCrossSectionType.ROUND.html#round",
        "title": "ROUND",
        "section": "ROUND",
        "text": "ROUND"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireCrossSectionType.ROUND",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireCrossSectionType.ROUND.html#ansys.edb.core.primitive.primitive.BondwireCrossSectionType.ROUND",
        "title": "ROUND > ROUND > ROUND",
        "section": "ROUND > ROUND",
        "text": "BondwireCrossSectionType.ROUND = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.delete",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the layout object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.delete",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.delete.html#ansys.edb.core.hierarchy.pin_group.PinGroup.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "PinGroup.delete()\n\nDelete the layout object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.NPortComponentModel.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.NPortComponentModel.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.NPortComponentModel.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.NPortComponentModel.is_null.html#ansys.edb.core.definition.component_model.NPortComponentModel.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property NPortComponentModel.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.delete",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the layout object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.delete",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.delete.html#ansys.edb.core.hierarchy.group.Group.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "Group.delete()\n\nDelete the layout object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.CONDUCTIVITY",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.CONDUCTIVITY.html#conductivity",
        "title": "CONDUCTIVITY",
        "section": "CONDUCTIVITY",
        "text": "CONDUCTIVITY"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.CONDUCTIVITY",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.CONDUCTIVITY.html#ansys.edb.core.definition.material_def.MaterialProperty.CONDUCTIVITY",
        "title": "CONDUCTIVITY > CONDUCTIVITY > CONDUCTIVITY",
        "section": "CONDUCTIVITY > CONDUCTIVITY",
        "text": "MaterialProperty.CONDUCTIVITY = 5\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDs given a product ID for the layout object.\nID representing a product that supports the EDB.\nAll user-defined attribute IDs for properties stored in the object\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.get_product_property_ids.html#ansys.edb.core.net.net.Net.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "Net.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nReturns\n\npython:list[python:int]\n\nAll user-defined attribute IDs for properties stored in the object\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireType.JEDEC4",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireType.JEDEC4.html#jedec4",
        "title": "JEDEC4",
        "section": "JEDEC4",
        "text": "JEDEC4"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireType.JEDEC4",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireType.JEDEC4.html#ansys.edb.core.primitive.primitive.BondwireType.JEDEC4",
        "title": "JEDEC4 > JEDEC4 > JEDEC4",
        "section": "JEDEC4 > JEDEC4",
        "text": "BondwireType.JEDEC4 = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.create_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.create_stride.html#create_stride",
        "title": "create_stride",
        "section": "create_stride",
        "text": "Create a Stride model from an MCAD file.\nStride model created.\ncreate_stride\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.create_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.create_stride.html#ansys.edb.core.primitive.primitive.Text.create_stride",
        "title": "create_stride > create_stride > create_stride",
        "section": "create_stride > create_stride",
        "text": "Text.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nReturns\n\nMcadModel\n\nStride model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.is_null",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.is_null",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.is_null.html#ansys.edb.core.layer.layer_collection.LayerCollection.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property LayerCollection.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.id",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.id",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.id.html#ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property SimulationSetup.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.mesh_operations",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.mesh_operations.html#mesh_operations",
        "title": "mesh_operations",
        "section": "mesh_operations",
        "text": "list of MeshOperation: Mesh operations of the HFSS simulation setup.\nmesh_operations\nlist\nMeshOperation"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.mesh_operations",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.mesh_operations.html#ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.mesh_operations",
        "title": "mesh_operations > mesh_operations > mesh_operations",
        "section": "mesh_operations > mesh_operations",
        "text": "property HfssSimulationSetup.mesh_operations\n\nlist of MeshOperation: Mesh operations of the HFSS simulation setup.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry.tesselation_data",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry.tesselation_data.html#tesselation_data",
        "title": "tesselation_data",
        "section": "tesselation_data",
        "text": "list of Triangle3DData: All triangle 3D data instances.\nThis list contains triangle 3D data instances that correspond to the\nunderlying tessellation data of the geometry.\ntesselation_data\nlist\nTriangle3DData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry.tesselation_data",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry.tesselation_data.html#ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry.tesselation_data",
        "title": "tesselation_data > tesselation_data > tesselation_data",
        "section": "tesselation_data > tesselation_data",
        "text": "property LayoutObjInstance3DGeometry.tesselation_data\n\nlist of Triangle3DData: All triangle 3D data instances.\n\nThis list contains triangle 3D data instances that correspond to the\nunderlying tessellation data of the geometry.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.BroadbandAdaptiveSolution.max_num_passes",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.BroadbandAdaptiveSolution.max_num_passes.html#max_num_passes",
        "title": "max_num_passes",
        "section": "max_num_passes",
        "text": "int: Maximum number of adaptive passes.\nmax_num_passes\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.BroadbandAdaptiveSolution.max_num_passes",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.BroadbandAdaptiveSolution.max_num_passes.html#ansys.edb.core.simulation_setup.adaptive_solutions.BroadbandAdaptiveSolution.max_num_passes",
        "title": "max_num_passes > max_num_passes > max_num_passes",
        "section": "max_num_passes > max_num_passes",
        "text": "property BroadbandAdaptiveSolution.max_num_passes\n\nint: Maximum number of adaptive passes.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform.Transform",
        "href": "api/_autosummary/ansys.edb.core.utility.transform.Transform.html#transform",
        "title": "Transform",
        "section": "Transform",
        "text": "Represents a transformation.\nTransform.create(scale, angle, mirror, ...)\nCreate a transform object.\nTransform.transform_point(point)\nTransform a point.\nTransform.transform_polygon(polygon)\nTransform a polygon.\nTransform.id\nint: Unique ID of the EDB object.\nTransform.is_identity\nbool: Flag indicating if the transformation is an identity transformation.\nTransform.is_null\nbool: Flag indicating if the object exists in the database.\nTransform.mirror\nbool: Mirror property.\nTransform.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nTransform.offset_x\nValue: X offset property.\nTransform.offset_y\nValue: Y offset property.\nTransform.rotation\nValue: Rotation property.\nTransform.scale\nValue: Scale property.\nTransform\nTransform.create\nTransform.transform_point\nTransform.transform_polygon\nTransform.id\nint\nTransform.is_identity\nbool\nTransform.is_null\nbool\nTransform.mirror\nbool\nTransform.msg\nEDBObjMessage\nTransform.offset_x\nValue\nTransform.offset_y\nValue\nTransform.rotation\nValue\nTransform.scale\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform.Transform",
        "href": "api/_autosummary/ansys.edb.core.utility.transform.Transform.html#ansys.edb.core.utility.transform.Transform",
        "title": "Transform > Transform > Transform",
        "section": "Transform > Transform",
        "text": "class ansys.edb.core.utility.transform.Transform(msg)\n\nRepresents a transformation.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nTransform.create(scale, angle, mirror, ...)\n\nCreate a transform object.\n\nTransform.transform_point(point)\n\nTransform a point.\n\nTransform.transform_polygon(polygon)\n\nTransform a polygon.\n\n\n\nAttributes\n\n\n\n\n\n\n\nTransform.id\n\nint: Unique ID of the EDB object.\n\nTransform.is_identity\n\nbool: Flag indicating if the transformation is an identity transformation.\n\nTransform.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nTransform.mirror\n\nbool: Mirror property.\n\nTransform.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nTransform.offset_x\n\nValue: X offset property.\n\nTransform.offset_y\n\nValue: Y offset property.\n\nTransform.rotation\n\nValue: Rotation property.\n\nTransform.scale\n\nValue: Scale property.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.component_def",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.component_def.html#component_def",
        "title": "component_def",
        "section": "component_def",
        "text": "ComponentDef: Component definition for the         hierarchy object if it exists, None otherwise.\nThis property is read-only.\ncomponent_def\nComponentDef\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.component_def",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.component_def.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.component_def",
        "title": "component_def > component_def > component_def",
        "section": "component_def > component_def",
        "text": "property CellInstance.component_def\n\nComponentDef: Component definition for the         hierarchy object if it exists, None otherwise.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.is_valid",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.is_valid.html#is_valid",
        "title": "is_valid",
        "section": "is_valid",
        "text": "Determine if the layer collection is in a valid state.\nFor a laminate stackup, this method checks whether there is layer overlapping or a gap.\nFor an overlapping stackup, this method checks whether there is a dielectric layer\noverlapping or a gap.\nTrue if the layer collection is in a valid state, False otherwise.\nis_valid\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.is_valid",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.is_valid.html#ansys.edb.core.layer.layer_collection.LayerCollection.is_valid",
        "title": "is_valid > is_valid > is_valid",
        "section": "is_valid > is_valid",
        "text": "LayerCollection.is_valid()\n\nDetermine if the layer collection is in a valid state.\n\nFor a laminate stackup, this method checks whether there is layer overlapping or a gap.\nFor an overlapping stackup, this method checks whether there is a dielectric layer\noverlapping or a gap.\n\nReturns\n\nbool\n\nTrue if the layer collection is in a valid state, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.differential_pairs",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.differential_pairs.html#differential_pairs",
        "title": "differential_pairs",
        "section": "differential_pairs",
        "text": "list of DifferentialPair:         List of all differential pairs in the layout.\nThis property is read-only.\ndifferential_pairs\nlist\nDifferentialPair"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.differential_pairs",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.differential_pairs.html#ansys.edb.core.layout.layout.Layout.differential_pairs",
        "title": "differential_pairs > differential_pairs > differential_pairs",
        "section": "differential_pairs > differential_pairs",
        "text": "property Layout.differential_pairs\n\nlist of DifferentialPair:         List of all differential pairs in the layout.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.point",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.point.html#point",
        "title": "point",
        "section": "point",
        "text": "PointData: Coordinates (x, y) of the point terminal.\npoint\nPointData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.point",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.point.html#ansys.edb.core.terminal.terminals.PointTerminal.point",
        "title": "point > point > point",
        "section": "point > point",
        "text": "property PointTerminal.point\n\nPointData: Coordinates (x, y) of the point terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDs given a product ID for the layout object.\nID representing a product that supports the EDB.\nAll user-defined attribute IDs for properties stored in the object\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.get_product_property_ids.html#ansys.edb.core.terminal.terminals.Terminal.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "Terminal.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nReturns\n\npython:list[python:int]\n\nAll user-defined attribute IDs for properties stored in the object\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.placement_elevation",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.placement_elevation.html#placement_elevation",
        "title": "placement_elevation",
        "section": "placement_elevation",
        "text": "float: Placement elevation of the context.\nThis parameter only applies if the context does not have 3D placement enabled.\nIf the context has 3D placement enabled, None is returned because the\nplacement of the context is dictated by the underlying 3D transformation.\nOtherwise, the placement elevation of the context is returned.\nThis property is read-only.\nplacement_elevation\nfloat\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.placement_elevation",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.placement_elevation.html#ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.placement_elevation",
        "title": "placement_elevation > placement_elevation > placement_elevation",
        "section": "placement_elevation > placement_elevation",
        "text": "property LayoutInstanceContext.placement_elevation\n\nfloat: Placement elevation of the context.\n\nThis parameter only applies if the context does not have 3D placement enabled.\nIf the context has 3D placement enabled, None is returned because the\nplacement of the context is dictated by the underlying 3D transformation.\nOtherwise, the placement elevation of the context is returned.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance.LayoutInstance.get_connected_objects",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance.LayoutInstance.get_connected_objects.html#get_connected_objects",
        "title": "get_connected_objects",
        "section": "get_connected_objects",
        "text": "Get the layout object instance connected to the origin layout object instance.\nLayout object instance that is to act as the origin to get connected objects from.\nWhether to get only layout object instances touching the orgigin layout object instance\non the placement layer of the origin layout object. If False all layout object\ninstances across all layers that are electrically connected to the origin layout object\ninstance are returned.\nList of layout object instances connected to the origin layout object instance.\nget_connected_objects\nLayoutObjInstance\nFalse\npython:list\nLayoutObjInstance"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance.LayoutInstance.get_connected_objects",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance.LayoutInstance.get_connected_objects.html#ansys.edb.core.layout_instance.layout_instance.LayoutInstance.get_connected_objects",
        "title": "get_connected_objects > get_connected_objects > get_connected_objects",
        "section": "get_connected_objects > get_connected_objects",
        "text": "LayoutInstance.get_connected_objects(origin_layout_obj_inst, touching_only)\n\nGet the layout object instance connected to the origin layout object instance.\n\nParameters\n\norigin_layout_obj_inst\n\nLayoutObjInstance\n\nLayout object instance that is to act as the origin to get connected objects from.\n\ntouching_only\n\nbool\n\nWhether to get only layout object instances touching the orgigin layout object instance\non the placement layer of the origin layout object. If False all layout object\ninstances across all layers that are electrically connected to the origin layout object\ninstance are returned.\n\nReturns\n\npython:list[LayoutObjInstance]\n\nList of layout object instances connected to the origin layout object instance.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.location",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.location.html#location",
        "title": "location",
        "section": "location",
        "text": "tuple (Value,         Value):         Location [x, y] of the hierarchy object on the placement_layer object.\nlocation\ntuple\nValue\nValue\nplacement_layer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.location",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.location.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.location",
        "title": "location > location > location",
        "section": "location > location",
        "text": "property CellInstance.location\n\ntuple (Value,         Value):         Location [x, y] of the hierarchy object on the placement_layer object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the property.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.set_product_property.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "VoltageRegulator.set_product_property(prod_id, attr_id, prop_value)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nprop_value\n\npython:str\n\nString stored in the property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.get_variable_desc",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.get_variable_desc.html#get_variable_desc",
        "title": "get_variable_desc",
        "section": "get_variable_desc",
        "text": "Get the description of a variable.\nVariable name.\nDescription of the variable.\nget_variable_desc\npython:str\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.get_variable_desc",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.get_variable_desc.html#ansys.edb.core.layout.layout.Layout.get_variable_desc",
        "title": "get_variable_desc > get_variable_desc > get_variable_desc",
        "section": "get_variable_desc > get_variable_desc",
        "text": "Layout.get_variable_desc(name)\n\nGet the description of a variable.\n\nParameters\n\nname\n\npython:str\n\nVariable name.\n\nReturns\n\npython:str\n\nDescription of the variable.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.id",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.id",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.id.html#ansys.edb.core.net.net_class.NetClass.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property NetClass.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData.y",
        "href": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData.y.html#y",
        "title": "y",
        "section": "y",
        "text": "Value: Y coordinate.\ny\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData.y",
        "href": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData.y.html#ansys.edb.core.geometry.point3d_data.Point3DData.y",
        "title": "y > y > y",
        "section": "y > y",
        "text": "property Point3DData.y\n\nValue: Y coordinate.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.layout_obj_type.html#layout_obj_type",
        "title": "layout_obj_type",
        "section": "layout_obj_type",
        "text": "layout_obj_type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.layout_obj_type.html#ansys.edb.core.terminal.terminals.TerminalInstance.layout_obj_type",
        "title": "layout_obj_type > layout_obj_type > layout_obj_type",
        "section": "layout_obj_type > layout_obj_type",
        "text": "TerminalInstance.layout_obj_type = 3\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_mcad_stride.html#is_mcad_stride",
        "title": "is_mcad_stride",
        "section": "is_mcad_stride",
        "text": "bool: Flag indicating if this is a Stride MCAD model.\nThis property is read-only.\nis_mcad_stride\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_mcad_stride.html#ansys.edb.core.primitive.primitive.BoardBendDef.is_mcad_stride",
        "title": "is_mcad_stride > is_mcad_stride > is_mcad_stride",
        "section": "is_mcad_stride > is_mcad_stride",
        "text": "property BoardBendDef.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_mcad_hfss.html#is_mcad_hfss",
        "title": "is_mcad_hfss",
        "section": "is_mcad_hfss",
        "text": "bool: Flag indicating if this is an HFSS MCAD model.\nThis property is read-only.\nis_mcad_hfss\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_mcad_hfss.html#ansys.edb.core.terminal.terminals.BundleTerminal.is_mcad_hfss",
        "title": "is_mcad_hfss > is_mcad_hfss > is_mcad_hfss",
        "section": "is_mcad_hfss > is_mcad_hfss",
        "text": "property BundleTerminal.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap.get_mapping_forward",
        "href": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap.get_mapping_forward.html#get_mapping_forward",
        "title": "get_mapping_forward",
        "section": "get_mapping_forward",
        "text": "Get the list of IDs mapped forward with the given ID (key).\nget_mapping_forward"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap.get_mapping_forward",
        "href": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap.get_mapping_forward.html#ansys.edb.core.utility.layer_map.LayerMap.get_mapping_forward",
        "title": "get_mapping_forward > get_mapping_forward > get_mapping_forward",
        "section": "get_mapping_forward > get_mapping_forward",
        "text": "LayerMap.get_mapping_forward(layer_id)\n\nGet the list of IDs mapped forward with the given ID (key).\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.WIREBOND_LAYER",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.WIREBOND_LAYER.html#wirebond_layer",
        "title": "WIREBOND_LAYER",
        "section": "WIREBOND_LAYER",
        "text": "WIREBOND_LAYER"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.WIREBOND_LAYER",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.WIREBOND_LAYER.html#ansys.edb.core.layer.layer_collection.LayerType.WIREBOND_LAYER",
        "title": "WIREBOND_LAYER > WIREBOND_LAYER > WIREBOND_LAYER",
        "section": "WIREBOND_LAYER > WIREBOND_LAYER",
        "text": "LayerType.WIREBOND_LAYER = 13\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData.z",
        "href": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData.z.html#z",
        "title": "z",
        "section": "z",
        "text": "Value: Z coordinate.\nz\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData.z",
        "href": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData.z.html#ansys.edb.core.geometry.point3d_data.Point3DData.z",
        "title": "z > z > z",
        "section": "z > z",
        "text": "property Point3DData.z\n\nValue: Z coordinate.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.layout_obj_type.html#layout_obj_type",
        "title": "layout_obj_type",
        "section": "layout_obj_type",
        "text": "layout_obj_type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.layout_obj_type.html#ansys.edb.core.net.net.Net.layout_obj_type",
        "title": "layout_obj_type > layout_obj_type > layout_obj_type",
        "section": "layout_obj_type > layout_obj_type",
        "text": "Net.layout_obj_type = 6\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.component",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.component.html#component",
        "title": "component",
        "section": "component",
        "text": "ComponentGroup:         Component of the Connectable object.\ncomponent\nComponentGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.component",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.component.html#ansys.edb.core.primitive.primitive.BoardBendDef.component",
        "title": "component > component > component",
        "section": "component > component",
        "text": "property BoardBendDef.component\n\nComponentGroup:         Component of the Connectable object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.number_of_layers",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.number_of_layers.html#number_of_layers",
        "title": "number_of_layers",
        "section": "number_of_layers",
        "text": "str: Number of layers.\nnumber_of_layers\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.number_of_layers",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.number_of_layers.html#ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.number_of_layers",
        "title": "number_of_layers > number_of_layers > number_of_layers",
        "section": "number_of_layers > number_of_layers",
        "text": "property SkinDepthMeshOperation.number_of_layers\n\nstr: Number of layers.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.create",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a board bend definition.\nLayout to create the board bend definition in.\nZone primitive to create the board bend definition on.\nTuple containing the starting and ending points of the line that represents\nthe middle of the bend.\nRadius of the bend.\nAngle of the bend.\nBoard bend definition created.\ncreate\nLayout\nPrimitive\nBoardBendDef"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.create",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.create.html#ansys.edb.core.primitive.primitive.BoardBendDef.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod BoardBendDef.create(layout, zone_prim, bend_middle, bend_radius, bend_angle)\n\nCreate a board bend definition.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to create the board bend definition in.\n\nzone_prim\n\nPrimitive\n\nZone primitive to create the board bend definition on.\n\nbend_middle\n\n(Point2DLike, Point2DLike)\n\nTuple containing the starting and ending points of the line that represents\nthe middle of the bend.\n\nbend_radius\n\nValueLike\n\nRadius of the bend.\n\nbend_angle\n\nValueLike\n\nAngle of the bend.\n\nReturns\n\nBoardBendDef\n\nBoard bend definition created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_mcad_3d_comp.html#is_mcad_3d_comp",
        "title": "is_mcad_3d_comp",
        "section": "is_mcad_3d_comp",
        "text": "bool: Flag indicating if this is a 3D composite MCAD model.\nThis property is read-only.\nis_mcad_3d_comp\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_mcad_3d_comp.html#ansys.edb.core.terminal.terminals.EdgeTerminal.is_mcad_3d_comp",
        "title": "is_mcad_3d_comp > is_mcad_3d_comp > is_mcad_3d_comp",
        "section": "is_mcad_3d_comp > is_mcad_3d_comp",
        "text": "property EdgeTerminal.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SolverSettings.thin_signal_layer_threshold",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SolverSettings.thin_signal_layer_threshold.html#thin_signal_layer_threshold",
        "title": "thin_signal_layer_threshold",
        "section": "thin_signal_layer_threshold",
        "text": "str: Value below which signal layers are considered to have zero thickness.\nthin_signal_layer_threshold\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SolverSettings.thin_signal_layer_threshold",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SolverSettings.thin_signal_layer_threshold.html#ansys.edb.core.simulation_setup.simulation_settings.SolverSettings.thin_signal_layer_threshold",
        "title": "thin_signal_layer_threshold > thin_signal_layer_threshold > thin_signal_layer_threshold",
        "section": "thin_signal_layer_threshold > thin_signal_layer_threshold",
        "text": "property SolverSettings.thin_signal_layer_threshold\n\nstr: Value below which signal layers are considered to have zero thickness.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.get_reference_size",
        "href": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.get_reference_size.html#get_reference_size",
        "title": "get_reference_size",
        "section": "get_reference_size",
        "text": "Get the X and Y reference sizes for the port property.\nget_reference_size\npython:tuple\nValue\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.get_reference_size",
        "href": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.get_reference_size.html#ansys.edb.core.definition.port_property.PortProperty.get_reference_size",
        "title": "get_reference_size > get_reference_size > get_reference_size",
        "section": "get_reference_size > get_reference_size",
        "text": "PortProperty.get_reference_size()\n\nGet the X and Y reference sizes for the port property.\n\nReturns\n\npython:tuple[Value, Value]\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.create_3d_comp.html#create_3d_comp",
        "title": "create_3d_comp",
        "section": "create_3d_comp",
        "text": "Create a 3D composite model from an MCAD file.\n3D composite model created.\ncreate_3d_comp\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.create_3d_comp.html#ansys.edb.core.terminal.terminals.EdgeTerminal.create_3d_comp",
        "title": "create_3d_comp > create_3d_comp > create_3d_comp",
        "section": "create_3d_comp > create_3d_comp",
        "text": "EdgeTerminal.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nReturns\n\nMcadModel\n\n3D composite model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp",
        "href": "api/_autosummary/ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.html#portpostprocessingprop",
        "title": "PortPostProcessingProp",
        "section": "PortPostProcessingProp",
        "text": "Represents the port postprocessing properties.\nPortPostProcessingProp.deembed_length\nDeembed length.\nPortPostProcessingProp.renormalization_impedance\nRenormalization impedance.\nPortPostProcessingProp.voltage_magnitude\nExcitation voltage magnitude.\nPortPostProcessingProp.voltage_phase\nExcitation voltage phase.\nPortPostProcessingProp.do_deembed\nEnable port to be deembedded.\nPortPostProcessingProp.do_deembed_gap_l\nEnable port impedance renormalization.\nPortPostProcessingProp.do_renormalize\nEnable port impedance renormalization.\nPortPostProcessingProp\nPortPostProcessingProp.deembed_length\nPortPostProcessingProp.renormalization_impedance\nPortPostProcessingProp.voltage_magnitude\nPortPostProcessingProp.voltage_phase\nPortPostProcessingProp.do_deembed\nPortPostProcessingProp.do_deembed_gap_l\nPortPostProcessingProp.do_renormalize"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp",
        "href": "api/_autosummary/ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.html#ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp",
        "title": "PortPostProcessingProp > PortPostProcessingProp > PortPostProcessingProp",
        "section": "PortPostProcessingProp > PortPostProcessingProp",
        "text": "class ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp(voltage_magnitude=0, voltage_phase=0, deembed_length=0, renormalization_impedance=50, do_deembed=False, do_deembed_gap_l=False, do_renormalize=False)\n\nRepresents the port postprocessing properties.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nPortPostProcessingProp.deembed_length\n\nDeembed length.\n\nPortPostProcessingProp.renormalization_impedance\n\nRenormalization impedance.\n\nPortPostProcessingProp.voltage_magnitude\n\nExcitation voltage magnitude.\n\nPortPostProcessingProp.voltage_phase\n\nExcitation voltage phase.\n\nPortPostProcessingProp.do_deembed\n\nEnable port to be deembedded.\n\nPortPostProcessingProp.do_deembed_gap_l\n\nEnable port impedance renormalization.\n\nPortPostProcessingProp.do_renormalize\n\nEnable port impedance renormalization.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.is_hole",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.is_hole.html#is_hole",
        "title": "is_hole",
        "section": "is_hole",
        "text": "Determine whether the polygon is a hole.\nTrue when the polygon is a hole, False otherwise.\nis_hole\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.is_hole",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.is_hole.html#ansys.edb.core.geometry.polygon_data.PolygonData.is_hole",
        "title": "is_hole > is_hole > is_hole",
        "section": "is_hole > is_hole",
        "text": "PolygonData.is_hole()\n\nDetermine whether the polygon is a hole.\n\nReturns\n\nbool\n\nTrue when the polygon is a hole, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.extent",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.extent.html#extent",
        "title": "extent",
        "section": "extent",
        "text": "tuple of [:class:.PointData, :class:.PointData]: Bounding box         for the contents of the RTree.\nextent\ntuple"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.extent",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.extent.html#ansys.edb.core.geometry.r_tree.RTree.extent",
        "title": "extent > extent > extent",
        "section": "extent > extent",
        "text": "property RTree.extent\n\ntuple of [:class:.PointData, :class:.PointData]: Bounding box         for the contents of the RTree.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_null",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_null",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_null.html#ansys.edb.core.primitive.primitive.Circle.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property Circle.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.model",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.model.html#model",
        "title": "model",
        "section": "model",
        "text": "str: S-parameter model.\nmodel\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.model",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.model.html#ansys.edb.core.terminal.terminals.PointTerminal.model",
        "title": "model > model > model",
        "section": "model > model",
        "text": "property PointTerminal.model\n\nstr: S-parameter model.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.negative",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.negative.html#negative",
        "title": "negative",
        "section": "negative",
        "text": "bool: Flag indicating if the layer is a negative layer.\nnegative\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.negative",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.negative.html#ansys.edb.core.layer.via_layer.ViaLayer.negative",
        "title": "negative > negative > negative",
        "section": "negative > negative",
        "text": "property ViaLayer.negative\n\nbool: Flag indicating if the layer is a negative layer.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.get_ref_layer_name",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.get_ref_layer_name.html#get_ref_layer_name",
        "title": "get_ref_layer_name",
        "section": "get_ref_layer_name",
        "text": "Get the name of the reference layer of the via layer.\nWhether to get the name of the upper or lower reference layer.\nName of the reference layer.\nget_ref_layer_name\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.get_ref_layer_name",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.get_ref_layer_name.html#ansys.edb.core.layer.via_layer.ViaLayer.get_ref_layer_name",
        "title": "get_ref_layer_name > get_ref_layer_name > get_ref_layer_name",
        "section": "get_ref_layer_name > get_ref_layer_name",
        "text": "ViaLayer.get_ref_layer_name(upper_ref)\n\nGet the name of the reference layer of the via layer.\n\nParameters\n\nupper_ref\n\nbool\n\nWhether to get the name of the upper or lower reference layer.\n\nReturns\n\npython:str\n\nName of the reference layer.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonSenseType.SENSE_UNKNOWN",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonSenseType.SENSE_UNKNOWN.html#sense_unknown",
        "title": "SENSE_UNKNOWN",
        "section": "SENSE_UNKNOWN",
        "text": "SENSE_UNKNOWN"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonSenseType.SENSE_UNKNOWN",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonSenseType.SENSE_UNKNOWN.html#ansys.edb.core.geometry.polygon_data.PolygonSenseType.SENSE_UNKNOWN",
        "title": "SENSE_UNKNOWN > SENSE_UNKNOWN > SENSE_UNKNOWN",
        "section": "SENSE_UNKNOWN > SENSE_UNKNOWN",
        "text": "PolygonSenseType.SENSE_UNKNOWN = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.impedance",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.impedance.html#impedance",
        "title": "impedance",
        "section": "impedance",
        "text": "Value: Impedance of the terminal.\nimpedance\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.impedance",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.impedance.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.impedance",
        "title": "impedance > impedance > impedance",
        "section": "impedance > impedance",
        "text": "property PadstackInstanceTerminal.impedance\n\nValue: Impedance of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.create_3d_comp.html#create_3d_comp",
        "title": "create_3d_comp",
        "section": "create_3d_comp",
        "text": "Create a 3D composite model from an MCAD file.\n3D composite model created.\ncreate_3d_comp\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.create_3d_comp.html#ansys.edb.core.primitive.primitive.Text.create_3d_comp",
        "title": "create_3d_comp > create_3d_comp > create_3d_comp",
        "section": "create_3d_comp > create_3d_comp",
        "text": "Text.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nReturns\n\nMcadModel\n\n3D composite model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.name",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the cell.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.name",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.name.html#ansys.edb.core.layout.cell.Cell.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property Cell.name\n\nstr: Name of the cell.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.maximum_power",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.maximum_power.html#maximum_power",
        "title": "maximum_power",
        "section": "maximum_power",
        "text": "Value: Maximum power of the package.\nmaximum_power\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.maximum_power",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.maximum_power.html#ansys.edb.core.definition.package_def.PackageDef.maximum_power",
        "title": "maximum_power > maximum_power > maximum_power",
        "section": "maximum_power > maximum_power",
        "text": "property PackageDef.maximum_power\n\nValue: Maximum power of the package.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform.Transform.scale",
        "href": "api/_autosummary/ansys.edb.core.utility.transform.Transform.scale.html#scale",
        "title": "scale",
        "section": "scale",
        "text": "Value: Scale property.\nThis property can be set to ValueLike.\nscale\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform.Transform.scale",
        "href": "api/_autosummary/ansys.edb.core.utility.transform.Transform.scale.html#ansys.edb.core.utility.transform.Transform.scale",
        "title": "scale > scale > scale",
        "section": "scale > scale",
        "text": "property Transform.scale\n\nValue: Scale property.\n\nThis property can be set to ValueLike.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty.is_null.html#ansys.edb.core.definition.die_property.DieProperty.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property DieProperty.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.component",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.component.html#component",
        "title": "component",
        "section": "component",
        "text": "ComponentGroup:         Component of the Connectable object.\ncomponent\nComponentGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.component",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.component.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.component",
        "title": "component > component > component",
        "section": "component > component",
        "text": "property TerminalInstanceTerminal.component\n\nComponentGroup:         Component of the Connectable object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.exterior_boundary",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.exterior_boundary.html#exterior_boundary",
        "title": "exterior_boundary",
        "section": "exterior_boundary",
        "text": "PolygonData:         Exterior boundary of the package definition.\nexterior_boundary\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.exterior_boundary",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.exterior_boundary.html#ansys.edb.core.definition.package_def.PackageDef.exterior_boundary",
        "title": "exterior_boundary > exterior_boundary > exterior_boundary",
        "section": "exterior_boundary > exterior_boundary",
        "text": "property PackageDef.exterior_boundary\n\nPolygonData:         Exterior boundary of the package definition.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.component",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.component.html#component",
        "title": "component",
        "section": "component",
        "text": "ComponentGroup:         Component of the Connectable object.\ncomponent\nComponentGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.component",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.component.html#ansys.edb.core.primitive.primitive.Path.component",
        "title": "component > component > component",
        "section": "component > component",
        "text": "property Path.component\n\nComponentGroup:         Component of the Connectable object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.DrawOverride.FILL",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.DrawOverride.FILL.html#fill",
        "title": "FILL",
        "section": "FILL",
        "text": "FILL"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.DrawOverride.FILL",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.DrawOverride.FILL.html#ansys.edb.core.layer.layer.DrawOverride.FILL",
        "title": "FILL > FILL > FILL",
        "section": "FILL > FILL",
        "text": "DrawOverride.FILL = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_negative",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_negative.html#is_negative",
        "title": "is_negative",
        "section": "is_negative",
        "text": "bool: Flag indicating if the primitive is negative.\nis_negative\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_negative",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_negative.html#ansys.edb.core.primitive.primitive.Bondwire.is_negative",
        "title": "is_negative > is_negative > is_negative",
        "section": "is_negative > is_negative",
        "text": "property Bondwire.is_negative\n\nbool: Flag indicating if the primitive is negative.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.net",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.net.html#net",
        "title": "net",
        "section": "net",
        "text": "Net: Net of the Connectable object.\nThis property can be set with a Net instance, a string, or None.\nnet\nNet\nNet\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.net",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.net.html#ansys.edb.core.terminal.terminals.Terminal.net",
        "title": "net > net > net",
        "section": "net > net",
        "text": "property Terminal.net\n\nNet: Net of the Connectable object.\n\nThis property can be set with a Net instance, a string, or None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.get_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.get_hfss_prop.html#get_hfss_prop",
        "title": "get_hfss_prop",
        "section": "get_hfss_prop",
        "text": "Get HFSS properties.\nName of the material property.\nWhether to solve inside.\nget_hfss_prop\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.get_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.get_hfss_prop.html#ansys.edb.core.primitive.primitive.Primitive.get_hfss_prop",
        "title": "get_hfss_prop > get_hfss_prop > get_hfss_prop",
        "section": "get_hfss_prop > get_hfss_prop",
        "text": "Primitive.get_hfss_prop()\n\nGet HFSS properties.\n\nReturns\n\nmaterial\n\npython:str\n\nName of the material property.\n\nsolve_inside\n\nbool\n\nWhether to solve inside.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.type.html#type",
        "title": "type",
        "section": "type",
        "text": "type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.type.html#ansys.edb.core.terminal.terminals.PointTerminal.type",
        "title": "type > type > type",
        "section": "type > type",
        "text": "PointTerminal.type = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.is_null",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.is_null",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.is_null.html#ansys.edb.core.net.net.Net.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property Net.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.group",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.group.html#group",
        "title": "group",
        "section": "group",
        "text": "Group object.\ngroup\nGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.group",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.group.html#ansys.edb.core.primitive.primitive.Rectangle.group",
        "title": "group > group > group",
        "section": "group > group",
        "text": "property Rectangle.group\n\nGroup object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.layer",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.layer.html#layer",
        "title": "layer",
        "section": "layer",
        "text": "Layer: Layer that the primitive object is on.\nlayer\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.layer",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.layer.html#ansys.edb.core.primitive.primitive.Bondwire.layer",
        "title": "layer > layer > layer",
        "section": "layer > layer",
        "text": "property Bondwire.layer\n\nLayer: Layer that the primitive object is on.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.SOLDER_PASTE_LAYER",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.SOLDER_PASTE_LAYER.html#solder_paste_layer",
        "title": "SOLDER_PASTE_LAYER",
        "section": "SOLDER_PASTE_LAYER",
        "text": "SOLDER_PASTE_LAYER"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.SOLDER_PASTE_LAYER",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.SOLDER_PASTE_LAYER.html#ansys.edb.core.layer.layer_collection.LayerType.SOLDER_PASTE_LAYER",
        "title": "SOLDER_PASTE_LAYER > SOLDER_PASTE_LAYER > SOLDER_PASTE_LAYER",
        "section": "SOLDER_PASTE_LAYER > SOLDER_PASTE_LAYER",
        "text": "LayerType.SOLDER_PASTE_LAYER = 11\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.create",
        "href": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a component definition in a given database.\nDatabase to create the component definition in.\nName of the component definition to create.\nFootprint cell of the component definition, optional\nComponent definition created.\ncreate\nDatabase\npython:str\nCell\nComponentDef"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.create",
        "href": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.create.html#ansys.edb.core.definition.component_def.ComponentDef.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod ComponentDef.create(db, comp_def_name, fp)\n\nCreate a component definition in a given database.\n\nParameters\n\ndb\n\nDatabase\n\nDatabase to create the component definition in.\n\ncomp_def_name\n\npython:str\n\nName of the component definition to create.\n\nfp\n\nCell\n\nFootprint cell of the component definition, optional\n\nReturns\n\nComponentDef\n\nComponent definition created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDs given a product ID for the layout object.\nID representing a product that supports the EDB.\nAll user-defined attribute IDs for properties stored in the object\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.get_product_property_ids.html#ansys.edb.core.primitive.primitive.Bondwire.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "Bondwire.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nReturns\n\npython:list[python:int]\n\nAll user-defined attribute IDs for properties stored in the object\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.is_arc",
        "href": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.is_arc.html#is_arc",
        "title": "is_arc",
        "section": "is_arc",
        "text": "bool: Flag indicating if the point represents an arc.\nis_arc\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.is_arc",
        "href": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.is_arc.html#ansys.edb.core.geometry.point_data.PointData.is_arc",
        "title": "is_arc > is_arc > is_arc",
        "section": "is_arc > is_arc",
        "text": "property PointData.is_arc\n\nbool: Flag indicating if the point represents an arc.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.is_null",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.is_null",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.is_null.html#ansys.edb.core.utility.transform3d.Transform3D.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property Transform3D.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.component",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.component.html#component",
        "title": "component",
        "section": "component",
        "text": "ComponentGroup:         Component of the Connectable object.\ncomponent\nComponentGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.component",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.component.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.component",
        "title": "component > component > component",
        "section": "component > component",
        "text": "property VoltageRegulator.component\n\nComponentGroup:         Component of the Connectable object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentType.IC",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentType.IC.html#ic",
        "title": "IC",
        "section": "IC",
        "text": "IC"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentType.IC",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentType.IC.html#ansys.edb.core.hierarchy.component_group.ComponentType.IC",
        "title": "IC > IC > IC",
        "section": "IC > IC",
        "text": "ComponentType.IC = 4\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel.reference_file",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel.reference_file.html#reference_file",
        "title": "reference_file",
        "section": "reference_file",
        "text": "str: Name of the reference file associated with the component model.\nreference_file\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel.reference_file",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel.reference_file.html#ansys.edb.core.definition.component_model.DynamicLinkComponentModel.reference_file",
        "title": "reference_file > reference_file > reference_file",
        "section": "reference_file > reference_file",
        "text": "property DynamicLinkComponentModel.reference_file\n\nstr: Name of the reference file associated with the component model.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.value.Value.is_parametric",
        "href": "api/_autosummary/ansys.edb.core.utility.value.Value.is_parametric.html#is_parametric",
        "title": "is_parametric",
        "section": "is_parametric",
        "text": "bool: Flag indicating if the value is parametric (dependent on variables).\nis_parametric\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.value.Value.is_parametric",
        "href": "api/_autosummary/ansys.edb.core.utility.value.Value.is_parametric.html#ansys.edb.core.utility.value.Value.is_parametric",
        "title": "is_parametric > is_parametric > is_parametric",
        "section": "is_parametric > is_parametric",
        "text": "property Value.is_parametric\n\nbool: Flag indicating if the value is parametric (dependent on variables).\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.rlc.Rlc",
        "href": "api/_autosummary/ansys.edb.core.utility.rlc.Rlc.html#rlc",
        "title": "Rlc",
        "section": "Rlc",
        "text": "Represents an RLC.\nResistance value. This parameter is only used if\nr_enabled=True.\nWhether resistance is enabled.\nInductance value. This parameter is only used if\nc-l_enabled=True.\nWhether inductance is enabled.\nCapacitance value. This parameter is only used if\nc_enabled=True.\nWhether capacitance is enabled.\nWhether the r, l, and c elements are in parallel. If False, these\nelements are in series.\nRlc\npython:str\npython:int\npython:float\ncomplex\nValue\nr_enabled=True\npython:False\npython:str\npython:int\npython:float\ncomplex\nValue\nc-l_enabled=True\npython:False\npython:str\npython:int\npython:float\ncomplex\nValue\nc_enabled=True\npython:False\npython:True\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.rlc.Rlc",
        "href": "api/_autosummary/ansys.edb.core.utility.rlc.Rlc.html#ansys.edb.core.utility.rlc.Rlc",
        "title": "Rlc > Rlc > Rlc",
        "section": "Rlc > Rlc",
        "text": "class ansys.edb.core.utility.rlc.Rlc(r=<ansys.edb.core.utility.value.Value object>, r_enabled=False, l=<ansys.edb.core.utility.value.Value object>, l_enabled=False, c=<ansys.edb.core.utility.value.Value object>, c_enabled=False, is_parallel=True)\n\nRepresents an RLC.\n\nAttributes\n\nr\n\npython:str, python:int, python:float, complex, Value, default: 0\n\nResistance value. This parameter is only used if\nr_enabled=True.\n\nr_enabled\n\nbool, default: python:False\n\nWhether resistance is enabled.\n\nl\n\npython:str, python:int, python:float, complex, Value, default: 0\n\nInductance value. This parameter is only used if\nc-l_enabled=True.\n\nl_enabled\n\nbool, default: python:False\n\nWhether inductance is enabled.\n\nc\n\npython:str, python:int, python:float, complex, Value, default: 0\n\nCapacitance value. This parameter is only used if\nc_enabled=True.\n\nc_enabled\n\nbool, default: python:False\n\nWhether capacitance is enabled.\n\nis_parallel\n\nbool, default: python:True\n\nWhether the r, l, and c elements are in parallel. If False, these\nelements are in series.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n"
    },
    {
        "objectID": "getting_started/index",
        "href": "getting_started/index.html#getting-started",
        "title": "Getting started",
        "section": "Getting started",
        "text": "To run PyEDB-Core, you must have a licensed copy of AEDT installed.\nPyEDB-Core has two installation modes: user and developer. The following instructions\nassume that you want to install PyEDB-Core in user mode. If you want to contribute to the\ndevelopment of PyEDB-Core, you must install it in developer mode. For more information, see\ncontribute_pyedb.\nGetting started"
    },
    {
        "objectID": "getting_started/index",
        "href": "getting_started/index.html#installation",
        "title": "Getting started > Installation",
        "section": "Installation",
        "text": "To ensure that you have the latest version of pip, run this command:\nTo install PyEDB-Core, run this command:\nInstallation"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.color",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.color.html#color",
        "title": "color",
        "section": "color",
        "text": "tuple[int, int, int]: Color of the layer in (R,G,B) format.\nTuple contains the color values in (R,G,B) format.\ncolor\ntuple\nint\nint\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.color",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.color.html#ansys.edb.core.layer.stackup_layer.StackupLayer.color",
        "title": "color > color > color",
        "section": "color > color",
        "text": "property StackupLayer.color\n\ntuple[int, int, int]: Color of the layer in (R,G,B) format.\n\nTuple contains the color values in (R,G,B) format.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings.dc_slider_pos",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings.dc_slider_pos.html#dc_slider_pos",
        "title": "dc_slider_pos",
        "section": "dc_slider_pos",
        "text": "int: DC slider position.\ndc_slider_pos\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings.dc_slider_pos",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings.dc_slider_pos.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings.dc_slider_pos",
        "title": "dc_slider_pos > dc_slider_pos > dc_slider_pos",
        "section": "dc_slider_pos > dc_slider_pos",
        "text": "property SIWaveDCSettings.dc_slider_pos\n\nint: DC slider position.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.LayerVisibility.COMPONENT_VISIBLE",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.LayerVisibility.COMPONENT_VISIBLE.html#component_visible",
        "title": "COMPONENT_VISIBLE",
        "section": "COMPONENT_VISIBLE",
        "text": "COMPONENT_VISIBLE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.LayerVisibility.COMPONENT_VISIBLE",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.LayerVisibility.COMPONENT_VISIBLE.html#ansys.edb.core.layer.layer.LayerVisibility.COMPONENT_VISIBLE",
        "title": "COMPONENT_VISIBLE > COMPONENT_VISIBLE > COMPONENT_VISIBLE",
        "section": "COMPONENT_VISIBLE > COMPONENT_VISIBLE",
        "text": "LayerVisibility.COMPONENT_VISIBLE = 16\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.delete_rlc",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.delete_rlc.html#delete_rlc",
        "title": "delete_rlc",
        "section": "delete_rlc",
        "text": "Delete the RLC value for a pin pair.\ndelete_rlc\npython:tuple\npython:str\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.delete_rlc",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.delete_rlc.html#ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.delete_rlc",
        "title": "delete_rlc > delete_rlc > delete_rlc",
        "section": "delete_rlc > delete_rlc",
        "text": "PinPairModel.delete_rlc(pin_pair)\n\nDelete the RLC value for a pin pair.\n\nParameters\n\npin_pair\n\npython:tuple[python:str, python:str]\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.group",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.group.html#group",
        "title": "group",
        "section": "group",
        "text": "Group object.\ngroup\nGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.group",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.group.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.group",
        "title": "group > group > group",
        "section": "group > group",
        "text": "property TerminalInstanceTerminal.group\n\nGroup object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.solder_ball_param",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.solder_ball_param.html#solder_ball_param",
        "title": "solder_ball_param",
        "section": "solder_ball_param",
        "text": "tuple of [Value,         Value]: Solder ball parameters (d1, d2)         in their original values in the database.\nd1 is the diameter for a cylinder solder ball or the top diameter for a spheroid\nsolder ball.\nd2 is the middle diameter for a spheroid solder ball. It is not used for a cylinder solder ball.\nsolder_ball_param\ntuple\nValue\nValue\n(d1, d2)\nd1\nd2"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.solder_ball_param",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.solder_ball_param.html#ansys.edb.core.definition.padstack_def_data.PadstackDefData.solder_ball_param",
        "title": "solder_ball_param > solder_ball_param > solder_ball_param",
        "section": "solder_ball_param > solder_ball_param",
        "text": "property PadstackDefData.solder_ball_param\n\ntuple of [Value,         Value]: Solder ball parameters (d1, d2)         in their original values in the database.\n\nd1 is the diameter for a cylinder solder ball or the top diameter for a spheroid\nsolder ball.\n\nd2 is the middle diameter for a spheroid solder ball. It is not used for a cylinder solder ball.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.is_null",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.is_null",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.is_null.html#ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property PinPairModel.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.reference_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.reference_terminal.html#reference_terminal",
        "title": "reference_terminal",
        "section": "reference_terminal",
        "text": "Terminal: Terminal that the terminal references, if any.\nreference_terminal\nTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.reference_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.reference_terminal.html#ansys.edb.core.terminal.terminals.BundleTerminal.reference_terminal",
        "title": "reference_terminal > reference_terminal > reference_terminal",
        "section": "reference_terminal > reference_terminal",
        "text": "property BundleTerminal.reference_terminal\n\nTerminal: Terminal that the terminal references, if any.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.package_mounting_offset",
        "href": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.package_mounting_offset.html#package_mounting_offset",
        "title": "package_mounting_offset",
        "section": "package_mounting_offset",
        "text": "Value: Mounting offset of the package definition object.\nThis property can be set with ValueLike.\npackage_mounting_offset\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.package_mounting_offset",
        "href": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.package_mounting_offset.html#ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.package_mounting_offset",
        "title": "package_mounting_offset > package_mounting_offset > package_mounting_offset",
        "section": "package_mounting_offset > package_mounting_offset",
        "text": "property RLCComponentProperty.package_mounting_offset\n\nValue: Mounting offset of the package definition object.\n\nThis property can be set with ValueLike.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_negative",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_negative.html#is_negative",
        "title": "is_negative",
        "section": "is_negative",
        "text": "bool: Flag indicating if the primitive is negative.\nis_negative\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_negative",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_negative.html#ansys.edb.core.primitive.primitive.Primitive.is_negative",
        "title": "is_negative > is_negative > is_negative",
        "section": "is_negative > is_negative",
        "text": "property Primitive.is_negative\n\nbool: Flag indicating if the primitive is negative.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.primitive_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.primitive_type.html#primitive_type",
        "title": "primitive_type",
        "section": "primitive_type",
        "text": "PrimitiveType: Primitive type of the primitive.\nThis property is read-only.\nprimitive_type\nPrimitiveType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.primitive_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.primitive_type.html#ansys.edb.core.primitive.primitive.BoardBendDef.primitive_type",
        "title": "primitive_type > primitive_type > primitive_type",
        "section": "primitive_type > primitive_type",
        "text": "property BoardBendDef.primitive_type\n\nPrimitiveType: Primitive type of the primitive.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.name",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the hierarchy object.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.name",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.name.html#ansys.edb.core.hierarchy.inst_array.InstArray.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property InstArray.name\n\nstr: Name of the hierarchy object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.msg",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.msg",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.msg.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property TerminalInstanceTerminal.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.rlc_boundary_parameters",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.rlc_boundary_parameters.html#rlc_boundary_parameters",
        "title": "rlc_boundary_parameters",
        "section": "rlc_boundary_parameters",
        "text": "Rlc: RLC boundary parameters.\nrlc_boundary_parameters\nRlc"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.rlc_boundary_parameters",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.rlc_boundary_parameters.html#ansys.edb.core.terminal.terminals.PointTerminal.rlc_boundary_parameters",
        "title": "rlc_boundary_parameters > rlc_boundary_parameters > rlc_boundary_parameters",
        "section": "rlc_boundary_parameters > rlc_boundary_parameters",
        "text": "property PointTerminal.rlc_boundary_parameters\n\nRlc: RLC boundary parameters.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.set_is_in_zone",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.set_is_in_zone.html#set_is_in_zone",
        "title": "set_is_in_zone",
        "section": "set_is_in_zone",
        "text": "Set whether the layer exists in a given zone.\nZone.\nWhether the layer exists in this zone.\nset_is_in_zone\npython:int\npython:True"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.set_is_in_zone",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.set_is_in_zone.html#ansys.edb.core.layer.stackup_layer.StackupLayer.set_is_in_zone",
        "title": "set_is_in_zone > set_is_in_zone > set_is_in_zone",
        "section": "set_is_in_zone > set_is_in_zone",
        "text": "StackupLayer.set_is_in_zone(zone, in_zone=True)\n\nSet whether the layer exists in a given zone.\n\nParameters\n\nzone\n\npython:int\n\nZone.\n\nin_zone\n\nbool, default: python:True\n\nWhether the layer exists in this zone.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.term_to_ground",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.term_to_ground.html#term_to_ground",
        "title": "term_to_ground",
        "section": "term_to_ground",
        "text": "SourceTermToGroundType: Source terminal-to-ground type.\nterm_to_ground\nSourceTermToGroundType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.term_to_ground",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.term_to_ground.html#ansys.edb.core.terminal.terminals.BundleTerminal.term_to_ground",
        "title": "term_to_ground > term_to_ground > term_to_ground",
        "section": "term_to_ground > term_to_ground",
        "text": "property BundleTerminal.term_to_ground\n\nSourceTermToGroundType: Source terminal-to-ground type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the property.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.set_product_property.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "ComponentGroup.set_product_property(prod_id, attr_id, prop_value)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nprop_value\n\npython:str\n\nString stored in the property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.import_from_control_file",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.import_from_control_file.html#import_from_control_file",
        "title": "import_from_control_file",
        "section": "import_from_control_file",
        "text": "Import layers from a control file and optional XML schema file.\nFull path to the control file.\nFull path to the XML schema file.\nimport_from_control_file\npython:str\npython:str\npython:None"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.import_from_control_file",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.import_from_control_file.html#ansys.edb.core.layer.layer_collection.LayerCollection.import_from_control_file",
        "title": "import_from_control_file > import_from_control_file > import_from_control_file",
        "section": "import_from_control_file > import_from_control_file",
        "text": "LayerCollection.import_from_control_file(control_file_path, schema_file_path=None)\n\nImport layers from a control file and optional XML schema file.\n\nParameters\n\ncontrol_file_path\n\npython:str\n\nFull path to the control file.\n\nschema_file_path\n\npython:str, default: python:None\n\nFull path to the XML schema file.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.source",
        "href": "api/_autosummary/ansys.edb.core.database.Database.source.html#source",
        "title": "source",
        "section": "source",
        "text": "str: Name of the source database.\nsource\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.source",
        "href": "api/_autosummary/ansys.edb.core.database.Database.source.html#ansys.edb.core.database.Database.source",
        "title": "source > source > source",
        "section": "source > source",
        "text": "property Database.source\n\nstr: Name of the source database.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.name",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the material definition.\nThis property is read-only.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.name",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.name.html#ansys.edb.core.definition.material_def.MaterialDef.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property MaterialDef.name\n\nstr: Name of the material definition.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.name",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the layer.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.name",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.name.html#ansys.edb.core.layer.via_layer.ViaLayer.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property ViaLayer.name\n\nstr: Name of the layer.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.set_end_elevation",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.set_end_elevation.html#set_end_elevation",
        "title": "set_end_elevation",
        "section": "set_end_elevation",
        "text": "Set the end elevation of the bondwire.\nEnd cell context of the bondwire. None means top-level.\nEnd layer of the bondwire.\nset_end_elevation\nCellInstance\nNone\npython:str\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.set_end_elevation",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.set_end_elevation.html#ansys.edb.core.primitive.primitive.Bondwire.set_end_elevation",
        "title": "set_end_elevation > set_end_elevation > set_end_elevation",
        "section": "set_end_elevation > set_end_elevation",
        "text": "Bondwire.set_end_elevation(end_context, layer)\n\nSet the end elevation of the bondwire.\n\nParameters\n\nend_context\n\nCellInstance\n\nEnd cell context of the bondwire. None means top-level.\n\nlayer\n\npython:str or Layer\n\nEnd layer of the bondwire.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.arc_step_size",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.arc_step_size.html#arc_step_size",
        "title": "arc_step_size",
        "section": "arc_step_size",
        "text": "str: Arc step size used when approximating arcs.\narc_step_size\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.arc_step_size",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.arc_step_size.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.arc_step_size",
        "title": "arc_step_size > arc_step_size > arc_step_size",
        "section": "arc_step_size > arc_step_size",
        "text": "property HFSSAdvancedMeshingSettings.arc_step_size\n\nstr: Arc step size used when approximating arcs.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.top_bottom_association",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.top_bottom_association.html#top_bottom_association",
        "title": "top_bottom_association",
        "section": "top_bottom_association",
        "text": "TopBottomAssociation: Top-bottom association of the layer.\ntop_bottom_association\nTopBottomAssociation"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.top_bottom_association",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.top_bottom_association.html#ansys.edb.core.layer.via_layer.ViaLayer.top_bottom_association",
        "title": "top_bottom_association > top_bottom_association > top_bottom_association",
        "section": "top_bottom_association > top_bottom_association",
        "text": "property ViaLayer.top_bottom_association\n\nTopBottomAssociation: Top-bottom association of the layer.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.load_definitions_from_file",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.load_definitions_from_file.html#load_definitions_from_file",
        "title": "load_definitions_from_file",
        "section": "load_definitions_from_file",
        "text": "Load an APD bondwire definition into a given database.\nDatabase to load the APD bondwire into.\nName of the APD bondwire definition.\nload_definitions_from_file\nDatabase\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.load_definitions_from_file",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.load_definitions_from_file.html#ansys.edb.core.definition.bondwire_def.ApdBondwireDef.load_definitions_from_file",
        "title": "load_definitions_from_file > load_definitions_from_file > load_definitions_from_file",
        "section": "load_definitions_from_file > load_definitions_from_file",
        "text": "classmethod ApdBondwireDef.load_definitions_from_file(database, name)\n\nLoad an APD bondwire definition into a given database.\n\nParameters\n\ndatabase\n\nDatabase\n\nDatabase to load the APD bondwire into.\n\nname\n\npython:str\n\nName of the APD bondwire definition.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.create",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a text object.\nLayout to create the text object in.\nLayer to place the text object on.\nX value of the center point.\nY value of the center point.\nText string.\nText object created.\ncreate\nLayout\npython:str\nLayer\nValue\nValue\nText"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.create",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.create.html#ansys.edb.core.primitive.primitive.Text.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod Text.create(layout, layer, center_x, center_y, text)\n\nCreate a text object.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to create the text object in.\n\nlayer\n\npython:str or Layer\n\nLayer to place the text object on.\n\ncenter_x\n\nValue\n\nX value of the center point.\n\ncenter_y\n\nValue\n\nY value of the center point.\n\ntext: str\n\nText string.\n\nReturns\n\nText\n\nText object created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_negative",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_negative.html#is_negative",
        "title": "is_negative",
        "section": "is_negative",
        "text": "bool: Flag indicating if the primitive is negative.\nis_negative\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_negative",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_negative.html#ansys.edb.core.primitive.primitive.Rectangle.is_negative",
        "title": "is_negative > is_negative > is_negative",
        "section": "is_negative > is_negative",
        "text": "property Rectangle.is_negative\n\nbool: Flag indicating if the primitive is negative.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_fringe_plane_coupling",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_fringe_plane_coupling.html#include_fringe_plane_coupling",
        "title": "include_fringe_plane_coupling",
        "section": "include_fringe_plane_coupling",
        "text": "bool: Flag indicating if the fringe-plane coupling is included.\ninclude_fringe_plane_coupling\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_fringe_plane_coupling",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_fringe_plane_coupling.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_fringe_plane_coupling",
        "title": "include_fringe_plane_coupling > include_fringe_plane_coupling > include_fringe_plane_coupling",
        "section": "include_fringe_plane_coupling > include_fringe_plane_coupling",
        "text": "property SIWaveAdvancedSettings.include_fringe_plane_coupling\n\nbool: Flag indicating if the fringe-plane coupling is included.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.component_def",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.component_def.html#component_def",
        "title": "component_def",
        "section": "component_def",
        "text": "ComponentDef: Component definition for the         hierarchy object if it exists, None otherwise.\nThis property is read-only.\ncomponent_def\nComponentDef\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.component_def",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.component_def.html#ansys.edb.core.hierarchy.structure3d.Structure3D.component_def",
        "title": "component_def > component_def > component_def",
        "section": "component_def > component_def",
        "text": "property Structure3D.component_def\n\nComponentDef: Component definition for the         hierarchy object if it exists, None otherwise.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.component",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.component.html#component",
        "title": "component",
        "section": "component",
        "text": "ComponentGroup:         Component of the Connectable object.\ncomponent\nComponentGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.component",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.component.html#ansys.edb.core.terminal.terminals.PointTerminal.component",
        "title": "component > component > component",
        "section": "component > component",
        "text": "property PointTerminal.component\n\nComponentGroup:         Component of the Connectable object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.html#layertype",
        "title": "LayerType",
        "section": "LayerType",
        "text": "Provides an enum representing the types of layers.\nLayerType.SIGNAL_LAYER\n\nLayerType.DIELECTRIC_LAYER\n\nLayerType.CONDUCTING_LAYER\n\nLayerType.AIRLINES_LAYER\n\nLayerType.ERRORS_LAYER\n\nLayerType.SYMBOL_LAYER\n\nLayerType.MEASURE_LAYER\n\nLayerType.ASSEMBLY_LAYER\n\nLayerType.SILKSCREEN_LAYER\n\nLayerType.SOLDER_MASK_LAYER\n\nLayerType.SOLDER_PASTE_LAYER\n\nLayerType.GLUE_LAYER\n\nLayerType.WIREBOND_LAYER\n\nLayerType.USER_LAYER\n\nLayerType.SIWAVE_HFSS_SOLVER_REGIONS\n\nLayerType.POST_PROCESSING_LAYER\n\nLayerType.OUTLINE_LAYER\n\nLayerType.LAYER_TYPES_COUNT\n\nLayerType.UNDEFINED_LAYER_TYPE\n\nLayerType\nLayerType.SIGNAL_LAYER\nLayerType.DIELECTRIC_LAYER\nLayerType.CONDUCTING_LAYER\nLayerType.AIRLINES_LAYER\nLayerType.ERRORS_LAYER\nLayerType.SYMBOL_LAYER\nLayerType.MEASURE_LAYER\nLayerType.ASSEMBLY_LAYER\nLayerType.SILKSCREEN_LAYER\nLayerType.SOLDER_MASK_LAYER\nLayerType.SOLDER_PASTE_LAYER\nLayerType.GLUE_LAYER\nLayerType.WIREBOND_LAYER\nLayerType.USER_LAYER\nLayerType.SIWAVE_HFSS_SOLVER_REGIONS\nLayerType.POST_PROCESSING_LAYER\nLayerType.OUTLINE_LAYER\nLayerType.LAYER_TYPES_COUNT\nLayerType.UNDEFINED_LAYER_TYPE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.html#ansys.edb.core.layer.layer_collection.LayerType",
        "title": "LayerType > LayerType > LayerType",
        "section": "LayerType > LayerType",
        "text": "class ansys.edb.core.layer.layer_collection.LayerType(value)\n\nProvides an enum representing the types of layers.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nLayerType.SIGNAL_LAYER\n\n\n\nLayerType.DIELECTRIC_LAYER\n\n\n\nLayerType.CONDUCTING_LAYER\n\n\n\nLayerType.AIRLINES_LAYER\n\n\n\nLayerType.ERRORS_LAYER\n\n\n\nLayerType.SYMBOL_LAYER\n\n\n\nLayerType.MEASURE_LAYER\n\n\n\nLayerType.ASSEMBLY_LAYER\n\n\n\nLayerType.SILKSCREEN_LAYER\n\n\n\nLayerType.SOLDER_MASK_LAYER\n\n\n\nLayerType.SOLDER_PASTE_LAYER\n\n\n\nLayerType.GLUE_LAYER\n\n\n\nLayerType.WIREBOND_LAYER\n\n\n\nLayerType.USER_LAYER\n\n\n\nLayerType.SIWAVE_HFSS_SOLVER_REGIONS\n\n\n\nLayerType.POST_PROCESSING_LAYER\n\n\n\nLayerType.OUTLINE_LAYER\n\n\n\nLayerType.LAYER_TYPES_COUNT\n\n\n\nLayerType.UNDEFINED_LAYER_TYPE\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.use_default_lambda_value",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.use_default_lambda_value.html#use_default_lambda_value",
        "title": "use_default_lambda_value",
        "section": "use_default_lambda_value",
        "text": "bool: Flag indicating if the default lambda target value is used.\nuse_default_lambda_value\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.use_default_lambda_value",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.use_default_lambda_value.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.use_default_lambda_value",
        "title": "use_default_lambda_value > use_default_lambda_value > use_default_lambda_value",
        "section": "use_default_lambda_value > use_default_lambda_value",
        "text": "property HFSSSettingsOptions.use_default_lambda_value\n\nbool: Flag indicating if the default lambda target value is used.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.num_via_sides",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.num_via_sides.html#num_via_sides",
        "title": "num_via_sides",
        "section": "num_via_sides",
        "text": "int: Number of sides a via is considered to have.\nnum_via_sides\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.num_via_sides",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.num_via_sides.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.num_via_sides",
        "title": "num_via_sides > num_via_sides > num_via_sides",
        "section": "num_via_sides > num_via_sides",
        "text": "property HFSSAdvancedSettings.num_via_sides\n\nint: Number of sides a via is considered to have.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin.name",
        "href": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the component pin.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin.name",
        "href": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin.name.html#ansys.edb.core.definition.component_pin.ComponentPin.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property ComponentPin.name\n\nstr: Name of the component pin.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty.id",
        "href": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty.id",
        "href": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty.id.html#ansys.edb.core.definition.die_property.DieProperty.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property DieProperty.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.normalized",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.normalized.html#normalized",
        "title": "normalized",
        "section": "normalized",
        "text": "Get the normalized points of the polygon.\nnormalized\npython:list\nPointData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.normalized",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.normalized.html#ansys.edb.core.geometry.polygon_data.PolygonData.normalized",
        "title": "normalized > normalized > normalized",
        "section": "normalized > normalized",
        "text": "PolygonData.normalized()\n\nGet the normalized points of the polygon.\n\nReturns\n\npython:list[PointData]\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.placement_layer",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.placement_layer.html#placement_layer",
        "title": "placement_layer",
        "section": "placement_layer",
        "text": "Layer: Placement layer for the hierarchy object.\nplacement_layer\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.placement_layer",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.placement_layer.html#ansys.edb.core.hierarchy.inst_array.InstArray.placement_layer",
        "title": "placement_layer > placement_layer > placement_layer",
        "section": "placement_layer > placement_layer",
        "text": "property InstArray.placement_layer\n\nLayer: Placement layer for the hierarchy object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.impedance",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.impedance.html#impedance",
        "title": "impedance",
        "section": "impedance",
        "text": "Value: Impedance of the terminal.\nimpedance\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.impedance",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.impedance.html#ansys.edb.core.terminal.terminals.PointTerminal.impedance",
        "title": "impedance > impedance > impedance",
        "section": "impedance > impedance",
        "text": "property PointTerminal.impedance\n\nValue: Impedance of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.lower_elevation",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.lower_elevation.html#lower_elevation",
        "title": "lower_elevation",
        "section": "lower_elevation",
        "text": "Value: Lower elevation value of the layer.\nThe setter accepts a ValueLike term.\nlower_elevation\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.lower_elevation",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.lower_elevation.html#ansys.edb.core.layer.stackup_layer.StackupLayer.lower_elevation",
        "title": "lower_elevation > lower_elevation > lower_elevation",
        "section": "lower_elevation > lower_elevation",
        "text": "property StackupLayer.lower_elevation\n\nValue: Lower elevation value of the layer.\n\nThe setter accepts a ValueLike term.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.id",
        "href": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.id",
        "href": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.id.html#ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property DjordjecvicSarkarModel.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.add_member",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.add_member.html#add_member",
        "title": "add_member",
        "section": "add_member",
        "text": "Add an object to the group.\nObject to add to the group.\nadd_member"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.add_member",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.add_member.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.add_member",
        "title": "add_member > add_member > add_member",
        "section": "add_member > add_member",
        "text": "ComponentGroup.add_member(member)\n\nAdd an object to the group.\n\nParameters\n\nmember\n\nConnectable\n\nObject to add to the group.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.top_or_black_box",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.top_or_black_box.html#top_or_black_box",
        "title": "top_or_black_box",
        "section": "top_or_black_box",
        "text": "LayoutInstanceContext: Top-level or blackbox context instance.\nThis property is read-only.\ntop_or_black_box\nLayoutInstanceContext\ncontext"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.top_or_black_box",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.top_or_black_box.html#ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.top_or_black_box",
        "title": "top_or_black_box > top_or_black_box > top_or_black_box",
        "section": "top_or_black_box > top_or_black_box",
        "text": "property LayoutInstanceContext.top_or_black_box\n\nLayoutInstanceContext: Top-level or blackbox context instance.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.html#primitivetype",
        "title": "PrimitiveType",
        "section": "PrimitiveType",
        "text": "Provides an enum representing primitive types.\nPrimitiveType.RECTANGLE\n\nPrimitiveType.CIRCLE\n\nPrimitiveType.POLYGON\n\nPrimitiveType.PATH\n\nPrimitiveType.BONDWIRE\n\nPrimitiveType.PRIM_PLUGIN\n\nPrimitiveType.TEXT\n\nPrimitiveType.PATH_3D\n\nPrimitiveType.BOARD_BEND\n\nPrimitiveType.INVALID_TYPE\n\nPrimitiveType\nPrimitiveType.RECTANGLE\nPrimitiveType.CIRCLE\nPrimitiveType.POLYGON\nPrimitiveType.PATH\nPrimitiveType.BONDWIRE\nPrimitiveType.PRIM_PLUGIN\nPrimitiveType.TEXT\nPrimitiveType.PATH_3D\nPrimitiveType.BOARD_BEND\nPrimitiveType.INVALID_TYPE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.html#ansys.edb.core.primitive.primitive.PrimitiveType",
        "title": "PrimitiveType > PrimitiveType > PrimitiveType",
        "section": "PrimitiveType > PrimitiveType",
        "text": "class ansys.edb.core.primitive.primitive.PrimitiveType(value)\n\nProvides an enum representing primitive types.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nPrimitiveType.RECTANGLE\n\n\n\nPrimitiveType.CIRCLE\n\n\n\nPrimitiveType.POLYGON\n\n\n\nPrimitiveType.PATH\n\n\n\nPrimitiveType.BONDWIRE\n\n\n\nPrimitiveType.PRIM_PLUGIN\n\n\n\nPrimitiveType.TEXT\n\n\n\nPrimitiveType.PATH_3D\n\n\n\nPrimitiveType.BOARD_BEND\n\n\n\nPrimitiveType.INVALID_TYPE\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType.BONDWIRE_DEF",
        "href": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType.BONDWIRE_DEF.html#bondwire_def",
        "title": "BONDWIRE_DEF",
        "section": "BONDWIRE_DEF",
        "text": "BONDWIRE_DEF"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType.BONDWIRE_DEF",
        "href": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType.BONDWIRE_DEF.html#ansys.edb.core.edb_defs.DefinitionObjType.BONDWIRE_DEF",
        "title": "BONDWIRE_DEF > BONDWIRE_DEF > BONDWIRE_DEF",
        "section": "BONDWIRE_DEF > BONDWIRE_DEF",
        "text": "DefinitionObjType.BONDWIRE_DEF = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.Distribution.LIN",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.Distribution.LIN.html#lin",
        "title": "LIN",
        "section": "LIN",
        "text": "LIN"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.Distribution.LIN",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.Distribution.LIN.html#ansys.edb.core.simulation_setup.simulation_setup.Distribution.LIN",
        "title": "LIN > LIN > LIN",
        "section": "LIN > LIN",
        "text": "Distribution.LIN = 'LIN'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.html#simulationsetup",
        "title": "SimulationSetup",
        "section": "SimulationSetup",
        "text": "Class representing base simulation setup data.\nSimulationSetup.cast()\nCast the base SimulationSetup object to correct subclass, if possible.\nSimulationSetup.id\nint: Unique ID of the EDB object.\nSimulationSetup.is_null\nbool: Flag indicating if the object exists in the database.\nSimulationSetup.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nSimulationSetup.name\nstr: Name of simulation setup.\nSimulationSetup.position\nint: Position of the simulation in the setup order.\nSimulationSetup.sweep_data\nlist of SweepData: Frequency sweeps of the simulation setup.\nSimulationSetup.type\nSimulationSetupType: Type of the simulation setup.\nSimulationSetup\nSimulationSetup.cast\nSimulationSetup.id\nint\nSimulationSetup.is_null\nbool\nSimulationSetup.msg\nEDBObjMessage\nSimulationSetup.name\nstr\nSimulationSetup.position\nint\nSimulationSetup.sweep_data\nlist\nSweepData\nSimulationSetup.type\nSimulationSetupType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.html#ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup",
        "title": "SimulationSetup > SimulationSetup > SimulationSetup",
        "section": "SimulationSetup > SimulationSetup",
        "text": "class ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup(msg)\n\nClass representing base simulation setup data.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nSimulationSetup.cast()\n\nCast the base SimulationSetup object to correct subclass, if possible.\n\n\n\nAttributes\n\n\n\n\n\n\n\nSimulationSetup.id\n\nint: Unique ID of the EDB object.\n\nSimulationSetup.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nSimulationSetup.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nSimulationSetup.name\n\nstr: Name of simulation setup.\n\nSimulationSetup.position\n\nint: Position of the simulation in the setup order.\n\nSimulationSetup.sweep_data\n\nlist of SweepData: Frequency sweeps of the simulation setup.\n\nSimulationSetup.type\n\nSimulationSetupType: Type of the simulation setup.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.bundle_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.bundle_terminal.html#bundle_terminal",
        "title": "bundle_terminal",
        "section": "bundle_terminal",
        "text": "BundleTerminal: Bundle terminal that the terminal belongs to, if any.\nbundle_terminal\nBundleTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.bundle_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.bundle_terminal.html#ansys.edb.core.terminal.terminals.EdgeTerminal.bundle_terminal",
        "title": "bundle_terminal > bundle_terminal > bundle_terminal",
        "section": "bundle_terminal > bundle_terminal",
        "text": "property EdgeTerminal.bundle_terminal\n\nBundleTerminal: Bundle terminal that the terminal belongs to, if any.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform.Transform.rotation",
        "href": "api/_autosummary/ansys.edb.core.utility.transform.Transform.rotation.html#rotation",
        "title": "rotation",
        "section": "rotation",
        "text": "Value: Rotation property.\nThis property can be set to ValueLike.\nrotation\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform.Transform.rotation",
        "href": "api/_autosummary/ansys.edb.core.utility.transform.Transform.rotation.html#ansys.edb.core.utility.transform.Transform.rotation",
        "title": "rotation > rotation > rotation",
        "section": "rotation > rotation",
        "text": "property Transform.rotation\n\nValue: Rotation property.\n\nThis property can be set to ValueLike.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_hole_overrides",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_hole_overrides.html#get_hole_overrides",
        "title": "get_hole_overrides",
        "section": "get_hole_overrides",
        "text": "Get the hole overrides of the padstack instance.\nbool,\nValue\nReturns a tuple in this format:\n(is_hole_override, hole_override)\nis_hole_override : If padstack instance is hole override.\nhole_override : Hole override diameter of this padstack instance.\nget_hole_overrides\npython:tuple\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_hole_overrides",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_hole_overrides.html#ansys.edb.core.primitive.primitive.PadstackInstance.get_hole_overrides",
        "title": "get_hole_overrides > get_hole_overrides > get_hole_overrides",
        "section": "get_hole_overrides > get_hole_overrides",
        "text": "PadstackInstance.get_hole_overrides()\n\nGet the hole overrides of the padstack instance.\n\nReturns\n\npython:tuple[\n\nbool,\nValue\n\n]\n\nReturns a tuple in this format:\n\n(is_hole_override, hole_override)\n\nis_hole_override : If padstack instance is hole override.\n\nhole_override : Hole override diameter of this padstack instance.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.html#hfssgeneralsettings",
        "title": "HFSSGeneralSettings",
        "section": "HFSSGeneralSettings",
        "text": "Represents general settings for HFSS simulations.\nHFSSGeneralSettings.adaptive_solution_type\nAdaptType: Adaptive solution type that is set for the simulation.\nHFSSGeneralSettings.broadband_adaptive_solution\nBroadbandAdaptiveSolution: Settings for a broadband adaptive solution.\nHFSSGeneralSettings.mesh_region_name\nstr: Name of the mesh region to use.\nHFSSGeneralSettings.msg\nEDBObjMessage: Protobuf message that represents this object's ID.\nHFSSGeneralSettings.multi_frequency_adaptive_solution\nMultiFrequencyAdaptiveSolution: Settings for a multi-frequency adaptive solution.\nHFSSGeneralSettings.save_fields\nbool: Flag indicating if field data is to be saved during the simulation.\nHFSSGeneralSettings.save_rad_fields_only\nbool: Flag indicating if only radiated field data is to be saved during the simulation.\nHFSSGeneralSettings.single_frequency_adaptive_solution\n.SingleFrequencyAdaptiveSolution`: Settings for a single frequency adaptive solution.\nHFSSGeneralSettings.use_mesh_region\nbool: Flag indicating if mesh regions are used.\nHFSSGeneralSettings.use_parallel_refinement\nbool: Flag indicating if parallel refinement is used.\nHFSSGeneralSettings\nHFSSGeneralSettings.adaptive_solution_type\nAdaptType\nHFSSGeneralSettings.broadband_adaptive_solution\nBroadbandAdaptiveSolution\nHFSSGeneralSettings.mesh_region_name\nstr\nHFSSGeneralSettings.msg\nEDBObjMessage\nHFSSGeneralSettings.multi_frequency_adaptive_solution\nMultiFrequencyAdaptiveSolution\nHFSSGeneralSettings.save_fields\nbool\nHFSSGeneralSettings.save_rad_fields_only\nbool\nHFSSGeneralSettings.single_frequency_adaptive_solution\nHFSSGeneralSettings.use_mesh_region\nbool\nHFSSGeneralSettings.use_parallel_refinement\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings",
        "title": "HFSSGeneralSettings > HFSSGeneralSettings > HFSSGeneralSettings",
        "section": "HFSSGeneralSettings > HFSSGeneralSettings",
        "text": "class ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings(sim_setup)\n\nRepresents general settings for HFSS simulations.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nHFSSGeneralSettings.adaptive_solution_type\n\nAdaptType: Adaptive solution type that is set for the simulation.\n\nHFSSGeneralSettings.broadband_adaptive_solution\n\nBroadbandAdaptiveSolution: Settings for a broadband adaptive solution.\n\nHFSSGeneralSettings.mesh_region_name\n\nstr: Name of the mesh region to use.\n\nHFSSGeneralSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object's ID.\n\nHFSSGeneralSettings.multi_frequency_adaptive_solution\n\nMultiFrequencyAdaptiveSolution: Settings for a multi-frequency adaptive solution.\n\nHFSSGeneralSettings.save_fields\n\nbool: Flag indicating if field data is to be saved during the simulation.\n\nHFSSGeneralSettings.save_rad_fields_only\n\nbool: Flag indicating if only radiated field data is to be saved during the simulation.\n\nHFSSGeneralSettings.single_frequency_adaptive_solution\n\n.SingleFrequencyAdaptiveSolution`: Settings for a single frequency adaptive solution.\n\nHFSSGeneralSettings.use_mesh_region\n\nbool: Flag indicating if mesh regions are used.\n\nHFSSGeneralSettings.use_parallel_refinement\n\nbool: Flag indicating if parallel refinement is used.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.msg",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.msg",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.msg.html#ansys.edb.core.hierarchy.via_group.ViaGroup.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property ViaGroup.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the property.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.set_product_property.html#ansys.edb.core.net.extended_net.ExtendedNet.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "ExtendedNet.set_product_property(prod_id, attr_id, prop_value)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nprop_value\n\npython:str\n\nString stored in the property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.DesignMode.GENERAL",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.DesignMode.GENERAL.html#general",
        "title": "GENERAL",
        "section": "GENERAL",
        "text": "GENERAL"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.DesignMode.GENERAL",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.DesignMode.GENERAL.html#ansys.edb.core.layout.cell.DesignMode.GENERAL",
        "title": "GENERAL > GENERAL > GENERAL",
        "section": "GENERAL > GENERAL",
        "text": "DesignMode.GENERAL = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireType.APD",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireType.APD.html#apd",
        "title": "APD",
        "section": "APD",
        "text": "APD"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireType.APD",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireType.APD.html#ansys.edb.core.primitive.primitive.BondwireType.APD",
        "title": "APD > APD > APD",
        "section": "APD > APD",
        "text": "BondwireType.APD = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.PowerModule",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.PowerModule.html#powermodule",
        "title": "PowerModule",
        "section": "PowerModule",
        "text": "Represents a power module.\nstr: Component group name of the power module.\nstr: Positive output terminal name for the power module.\nstr: Negative output terminal name for the power module.\nValue: Relative strength for the power module as a percentage.\nbool: Flag indicating if the power module is active.\nPowerModule.active\nbool: Flag indicating if the power module is active.\nPowerModule.comp_group_name\nstr: Component group name of the power module.\nPowerModule.needs_sync\nbool: Flag indicating if the power module needs to be synchronized.\nPowerModule.neg_output_terminal\nstr: Negative output terminal name for the power module.\nPowerModule.pos_output_terminal\nstr: Positive output terminal name for the power module.\nPowerModule.relative_strength\nValue: Relative strength for the power module as a percentage.\nPowerModule\ncomp_group_name\npython:str\nstr\npos_output_terminal\npython:str\nstr\nneg_output_terminal\npython:str\nstr\nrelative_strength\nValue\nValue\nactive\nbool\nPowerModule.active\nbool\nPowerModule.comp_group_name\nstr\nPowerModule.needs_sync\nbool\nPowerModule.neg_output_terminal\nstr\nPowerModule.pos_output_terminal\nstr\nPowerModule.relative_strength\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.PowerModule",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.PowerModule.html#ansys.edb.core.layout.voltage_regulator.PowerModule",
        "title": "PowerModule > PowerModule > PowerModule",
        "section": "PowerModule > PowerModule",
        "text": "class ansys.edb.core.layout.voltage_regulator.PowerModule(comp_group_name, pos_output_terminal='', neg_output_terminal='', relative_strength=<ansys.edb.core.utility.value.Value object>, active=True)\n\nRepresents a power module.\n\nAttributes\n\ncomp_group_name\n\npython:str\n\nstr: Component group name of the power module.\n\npos_output_terminal\n\npython:str\n\nstr: Positive output terminal name for the power module.\n\nneg_output_terminal\n\npython:str\n\nstr: Negative output terminal name for the power module.\n\nrelative_strength\n\nValue\n\nValue: Relative strength for the power module as a percentage.\n\nactive\n\nbool\n\nbool: Flag indicating if the power module is active.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nPowerModule.active\n\nbool: Flag indicating if the power module is active.\n\nPowerModule.comp_group_name\n\nstr: Component group name of the power module.\n\nPowerModule.needs_sync\n\nbool: Flag indicating if the power module needs to be synchronized.\n\nPowerModule.neg_output_terminal\n\nstr: Negative output terminal name for the power module.\n\nPowerModule.pos_output_terminal\n\nstr: Positive output terminal name for the power module.\n\nPowerModule.relative_strength\n\nValue: Relative strength for the power module as a percentage.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.DielectricMergingMethod",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.DielectricMergingMethod.html#dielectricmergingmethod",
        "title": "DielectricMergingMethod",
        "section": "DielectricMergingMethod",
        "text": "Provides an enum representing dielectric merging method options.\nDielectricMergingMethod.WEIGHTED_AVERAGE\n\nDielectricMergingMethod.KRASZEWSKI\n\nDielectricMergingMethod.WEIGHTED_CAPACITANCE\n\nDielectricMergingMethod\nDielectricMergingMethod.WEIGHTED_AVERAGE\nDielectricMergingMethod.KRASZEWSKI\nDielectricMergingMethod.WEIGHTED_CAPACITANCE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.DielectricMergingMethod",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.DielectricMergingMethod.html#ansys.edb.core.layer.layer_collection.DielectricMergingMethod",
        "title": "DielectricMergingMethod > DielectricMergingMethod > DielectricMergingMethod",
        "section": "DielectricMergingMethod > DielectricMergingMethod",
        "text": "class ansys.edb.core.layer.layer_collection.DielectricMergingMethod(value)\n\nProvides an enum representing dielectric merging method options.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nDielectricMergingMethod.WEIGHTED_AVERAGE\n\n\n\nDielectricMergingMethod.KRASZEWSKI\n\n\n\nDielectricMergingMethod.WEIGHTED_CAPACITANCE\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.bent_regions",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.bent_regions.html#bent_regions",
        "title": "bent_regions",
        "section": "bent_regions",
        "text": "list of PolygonData: Bent region polygons.\nThis list of a collection of polygon data represents the areas bent by the bend definition.\nThis property is read-only.\nbent_regions\nlist\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.bent_regions",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.bent_regions.html#ansys.edb.core.primitive.primitive.BoardBendDef.bent_regions",
        "title": "bent_regions > bent_regions > bent_regions",
        "section": "bent_regions > bent_regions",
        "text": "property BoardBendDef.bent_regions\n\nlist of PolygonData: Bent region polygons.\n\nThis list of a collection of polygon data represents the areas bent by the bend definition.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.remove_floating_geometry",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.remove_floating_geometry.html#remove_floating_geometry",
        "title": "remove_floating_geometry",
        "section": "remove_floating_geometry",
        "text": "bool: Flag indicating if a geometry not connected to any other geometry is removed.\nremove_floating_geometry\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.remove_floating_geometry",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.remove_floating_geometry.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.remove_floating_geometry",
        "title": "remove_floating_geometry > remove_floating_geometry > remove_floating_geometry",
        "section": "remove_floating_geometry > remove_floating_geometry",
        "text": "property HFSSAdvancedSettings.remove_floating_geometry\n\nbool: Flag indicating if a geometry not connected to any other geometry is removed.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.find_by_id.html#find_by_id",
        "title": "find_by_id",
        "section": "find_by_id",
        "text": "Find a Connectable object by database ID in a given layout.\nLayout to search for the Connectable object.\nDatabase ID.\nConnectable object with the given database ID.\nfind_by_id\nLayout\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.find_by_id.html#ansys.edb.core.hierarchy.group.Group.find_by_id",
        "title": "find_by_id > find_by_id > find_by_id",
        "section": "find_by_id > find_by_id",
        "text": "classmethod Group.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the Connectable object.\n\nuid\n\npython:int\n\nDatabase ID.\n\nReturns\n\nConnectable\n\nConnectable object with the given database ID.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel.find_by_name",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel.find_by_name.html#find_by_name",
        "title": "find_by_name",
        "section": "find_by_name",
        "text": "Find a component model by name in a given component def.\nComponent def to search for the component model.\nName of the component model.\nComponent model that is found, None otherwise.\nfind_by_name\nComponentDef\npython:str\nComponentModel\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel.find_by_name",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel.find_by_name.html#ansys.edb.core.definition.component_model.DynamicLinkComponentModel.find_by_name",
        "title": "find_by_name > find_by_name > find_by_name",
        "section": "find_by_name > find_by_name",
        "text": "classmethod DynamicLinkComponentModel.find_by_name(comp_def, value)\n\nFind a component model by name in a given component def.\n\nParameters\n\ncomp_def\n\nComponentDef\n\nComponent def to search for the component model.\n\nvalue\n\npython:str\n\nName of the component model.\n\nReturns\n\nComponentModel\n\nComponent model that is found, None otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData.magnitude",
        "href": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData.magnitude.html#magnitude",
        "title": "magnitude",
        "section": "magnitude",
        "text": "float: Magnitude or length of the point.\nmagnitude\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData.magnitude",
        "href": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData.magnitude.html#ansys.edb.core.geometry.point3d_data.Point3DData.magnitude",
        "title": "magnitude > magnitude > magnitude",
        "section": "magnitude > magnitude",
        "text": "property Point3DData.magnitude\n\nfloat: Magnitude or length of the point.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.use_shell_elements",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.use_shell_elements.html#use_shell_elements",
        "title": "use_shell_elements",
        "section": "use_shell_elements",
        "text": "bool: Flag indicating whether to use shell elements.\nuse_shell_elements\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.use_shell_elements",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.use_shell_elements.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.use_shell_elements",
        "title": "use_shell_elements > use_shell_elements > use_shell_elements",
        "section": "use_shell_elements > use_shell_elements",
        "text": "property HFSSSettingsOptions.use_shell_elements\n\nbool: Flag indicating whether to use shell elements.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry.is_null",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry.is_null",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry.is_null.html#ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property LayoutObjInstance3DGeometry.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.delete",
        "href": "api/_autosummary/ansys.edb.core.database.Database.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete a database in a given specified location.\nPath to the top-level database directory.\ndelete\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.delete",
        "href": "api/_autosummary/ansys.edb.core.database.Database.delete.html#ansys.edb.core.database.Database.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "classmethod Database.delete(db_path)\n\nDelete a database in a given specified location.\n\nParameters\n\ndb_path\n\npython:str\n\nPath to the top-level database directory.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_eliminate_slit_per_holes",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_eliminate_slit_per_holes.html#use_eliminate_slit_per_holes",
        "title": "use_eliminate_slit_per_holes",
        "section": "use_eliminate_slit_per_holes",
        "text": "bool: Flag indicating if strain relief or thermal relief slits and holes are removed.\nuse_eliminate_slit_per_holes\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_eliminate_slit_per_holes",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_eliminate_slit_per_holes.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_eliminate_slit_per_holes",
        "title": "use_eliminate_slit_per_holes > use_eliminate_slit_per_holes > use_eliminate_slit_per_holes",
        "section": "use_eliminate_slit_per_holes > use_eliminate_slit_per_holes",
        "text": "property RaptorXAdvancedSettings.use_eliminate_slit_per_holes\n\nbool: Flag indicating if strain relief or thermal relief slits and holes are removed.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.entry_list",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.entry_list.html#entry_list",
        "title": "entry_list",
        "section": "entry_list",
        "text": "list of MatrixConvergenceDataEntry: Matrix entries.\nentry_list\nlist\nMatrixConvergenceDataEntry"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.entry_list",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.entry_list.html#ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.entry_list",
        "title": "entry_list > entry_list > entry_list",
        "section": "entry_list > entry_list",
        "text": "property MatrixConvergenceData.entry_list\n\nlist of MatrixConvergenceDataEntry: Matrix entries.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXSimulationSettings.general",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXSimulationSettings.general.html#general",
        "title": "general",
        "section": "general",
        "text": "RaptorXGeneralSettings: General settings for RaptorX simulations.\ngeneral\nRaptorXGeneralSettings"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXSimulationSettings.general",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXSimulationSettings.general.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXSimulationSettings.general",
        "title": "general > general > general",
        "section": "general > general",
        "text": "property RaptorXSimulationSettings.general\n\nRaptorXGeneralSettings: General settings for RaptorX simulations.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.id",
        "href": "api/_autosummary/ansys.edb.core.database.Database.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.id",
        "href": "api/_autosummary/ansys.edb.core.database.Database.id.html#ansys.edb.core.database.Database.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property Database.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.component_defs",
        "href": "api/_autosummary/ansys.edb.core.database.Database.component_defs.html#component_defs",
        "title": "component_defs",
        "section": "component_defs",
        "text": "list of ComponentDef: All component definitions in the database.\ncomponent_defs\nlist\nComponentDef"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.component_defs",
        "href": "api/_autosummary/ansys.edb.core.database.Database.component_defs.html#ansys.edb.core.database.Database.component_defs",
        "title": "component_defs > component_defs > component_defs",
        "section": "component_defs > component_defs",
        "text": "property Database.component_defs\n\nlist of ComponentDef: All component definitions in the database.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.set_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.set_hfss_prop.html#set_hfss_prop",
        "title": "set_hfss_prop",
        "section": "set_hfss_prop",
        "text": "Set HFSS properties.\nMaterial property name to set.\nWhether to solve inside.\nset_hfss_prop\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.set_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.set_hfss_prop.html#ansys.edb.core.primitive.primitive.Bondwire.set_hfss_prop",
        "title": "set_hfss_prop > set_hfss_prop > set_hfss_prop",
        "section": "set_hfss_prop > set_hfss_prop",
        "text": "Bondwire.set_hfss_prop(material, solve_inside)\n\nSet HFSS properties.\n\nParameters\n\nmaterial\n\npython:str\n\nMaterial property name to set.\n\nsolve_inside\n\nbool\n\nWhether to solve inside.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.layer",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.layer.html#layer",
        "title": "layer",
        "section": "layer",
        "text": "Layer: Layer that the primitive object is on.\nlayer\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.layer",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.layer.html#ansys.edb.core.primitive.primitive.Text.layer",
        "title": "layer > layer > layer",
        "section": "layer > layer",
        "text": "property Text.layer\n\nLayer: Layer that the primitive object is on.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_interface_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_interface_terminal.html#is_interface_terminal",
        "title": "is_interface_terminal",
        "section": "is_interface_terminal",
        "text": "bool: Flag indicating if the terminal is an interface.\nis_interface_terminal\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_interface_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_interface_terminal.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.is_interface_terminal",
        "title": "is_interface_terminal > is_interface_terminal > is_interface_terminal",
        "section": "is_interface_terminal > is_interface_terminal",
        "text": "property PinGroupTerminal.is_interface_terminal\n\nbool: Flag indicating if the terminal is an interface.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.set_parameters",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.set_parameters.html#set_parameters",
        "title": "set_parameters",
        "section": "set_parameters",
        "text": "Set coordinate parameters.\nType that defines the meaning of the given parameters.\nX value of the lower-left point or center point.\nY value of the lower-left point or center point.\nX value of the upper-right point or width.\nY value of the upper-right point or height.\nCorner radius.\nRotation.\nset_parameters\nRectangleRepresentationType\nValue\nValue\nValue\nValue\nValue\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.set_parameters",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.set_parameters.html#ansys.edb.core.primitive.primitive.Rectangle.set_parameters",
        "title": "set_parameters > set_parameters > set_parameters",
        "section": "set_parameters > set_parameters",
        "text": "Rectangle.set_parameters(rep_type, param1, param2, param3, param4, corner_rad, rotation)\n\nSet coordinate parameters.\n\nParameters\n\nrep_type\n\nRectangleRepresentationType\n\nType that defines the meaning of the given parameters.\n\nparam1\n\nValue\n\nX value of the lower-left point or center point.\n\nparam2\n\nValue\n\nY value of the lower-left point or center point.\n\nparam3\n\nValue\n\nX value of the upper-right point or width.\n\nparam4\n\nValue\n\nY value of the upper-right point or height.\n\ncorner_rad\n\nValue\n\nCorner radius.\n\nrotation\n\nValue\n\nRotation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.closest_point",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.closest_point.html#closest_point",
        "title": "closest_point",
        "section": "closest_point",
        "text": "Compute a point on the polygon that is closest to another point.\nOther point.\nPoint closest to the given point.\nclosest_point\nansys.edb.core.typing.PointLikeT\nPointData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.closest_point",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.closest_point.html#ansys.edb.core.geometry.polygon_data.PolygonData.closest_point",
        "title": "closest_point > closest_point > closest_point",
        "section": "closest_point > closest_point",
        "text": "PolygonData.closest_point(point)\n\nCompute a point on the polygon that is closest to another point.\n\nParameters\n\npoint\n\nansys.edb.core.typing.PointLikeT\n\nOther point.\n\nReturns\n\nPointData\n\nPoint closest to the given point.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings.use_dc_custom_settings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings.use_dc_custom_settings.html#use_dc_custom_settings",
        "title": "use_dc_custom_settings",
        "section": "use_dc_custom_settings",
        "text": "bool: Flag indicating if custom DC settings are used.\nuse_dc_custom_settings\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings.use_dc_custom_settings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings.use_dc_custom_settings.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings.use_dc_custom_settings",
        "title": "use_dc_custom_settings > use_dc_custom_settings > use_dc_custom_settings",
        "section": "use_dc_custom_settings > use_dc_custom_settings",
        "text": "property SIWaveDCSettings.use_dc_custom_settings\n\nbool: Flag indicating if custom DC settings are used.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the property.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.set_product_property.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "PadstackInstanceTerminal.set_product_property(prod_id, attr_id, prop_value)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nprop_value\n\npython:str\n\nString stored in the property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.version",
        "href": "api/_autosummary/ansys.edb.core.database.Database.version.html#version",
        "title": "version",
        "section": "version",
        "text": "tuple of (int, int): Version [major, minor] of the database.\nversion\ntuple\nint\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.version",
        "href": "api/_autosummary/ansys.edb.core.database.Database.version.html#ansys.edb.core.database.Database.version",
        "title": "version > version > version",
        "section": "version > version",
        "text": "property Database.version\n\ntuple of (int, int): Version [major, minor] of the database.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.find_by_id.html#find_by_id",
        "title": "find_by_id",
        "section": "find_by_id",
        "text": "Find a Connectable object by database ID in a given layout.\nLayout to search for the Connectable object.\nDatabase ID.\nConnectable object with the given database ID.\nfind_by_id\nLayout\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.find_by_id.html#ansys.edb.core.primitive.primitive.Path.find_by_id",
        "title": "find_by_id > find_by_id > find_by_id",
        "section": "find_by_id > find_by_id",
        "text": "classmethod Path.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the Connectable object.\n\nuid\n\npython:int\n\nDatabase ID.\n\nReturns\n\nConnectable\n\nConnectable object with the given database ID.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.is_mcad.html#is_mcad",
        "title": "is_mcad",
        "section": "is_mcad",
        "text": "bool: Flag indicating if this is an MCAD model.\nThis property is read-only.\nis_mcad\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.is_mcad.html#ansys.edb.core.terminal.terminals.TerminalInstance.is_mcad",
        "title": "is_mcad > is_mcad > is_mcad",
        "section": "is_mcad > is_mcad",
        "text": "property TerminalInstance.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.is_mcad.html#is_mcad",
        "title": "is_mcad",
        "section": "is_mcad",
        "text": "bool: Flag indicating if this is an MCAD model.\nThis property is read-only.\nis_mcad\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.is_mcad.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.is_mcad",
        "title": "is_mcad > is_mcad > is_mcad",
        "section": "is_mcad > is_mcad",
        "text": "property CellInstance.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier.id",
        "href": "api/_autosummary/ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier.id",
        "href": "api/_autosummary/ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier.id.html#ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property MaterialPropertyThermalModifier.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.type",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.type.html#type",
        "title": "type",
        "section": "type",
        "text": "LayerType: Type of the layer.\ntype\nLayerType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.type",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.type.html#ansys.edb.core.layer.via_layer.ViaLayer.type",
        "title": "type > type > type",
        "section": "type > type",
        "text": "property ViaLayer.type\n\nLayerType: Type of the layer.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.cast",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.cast.html#cast",
        "title": "cast",
        "section": "cast",
        "text": "Cast the base SimulationSetup object to correct subclass, if possible.\ncast\nSimulationSetup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.cast",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.cast.html#ansys.edb.core.simulation_setup.simulation_setup.SimulationSetup.cast",
        "title": "cast > cast > cast",
        "section": "cast > cast",
        "text": "SimulationSetup.cast()\n\nCast the base SimulationSetup object to correct subclass, if possible.\n\nReturns\n\nSimulationSetup\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_mcad_hfss.html#is_mcad_hfss",
        "title": "is_mcad_hfss",
        "section": "is_mcad_hfss",
        "text": "bool: Flag indicating if this is an HFSS MCAD model.\nThis property is read-only.\nis_mcad_hfss\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_mcad_hfss.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_mcad_hfss",
        "title": "is_mcad_hfss > is_mcad_hfss > is_mcad_hfss",
        "section": "is_mcad_hfss > is_mcad_hfss",
        "text": "property TerminalInstanceTerminal.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.solder_ball_property",
        "href": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.solder_ball_property.html#solder_ball_property",
        "title": "solder_ball_property",
        "section": "solder_ball_property",
        "text": "SolderBallProperty: Solder ball property.\nA copy is returned. Use the setter for any modifications to be reflected.\nsolder_ball_property\nSolderBallProperty"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.solder_ball_property",
        "href": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.solder_ball_property.html#ansys.edb.core.definition.io_component_property.IOComponentProperty.solder_ball_property",
        "title": "solder_ball_property > solder_ball_property > solder_ball_property",
        "section": "solder_ball_property > solder_ball_property",
        "text": "property IOComponentProperty.solder_ball_property\n\nSolderBallProperty: Solder ball property.\n\nA copy is returned. Use the setter for any modifications to be reflected.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.id.html#ansys.edb.core.hierarchy.structure3d.Structure3D.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property Structure3D.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.id.html#ansys.edb.core.primitive.primitive.Circle.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property Circle.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the property.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.set_product_property.html#ansys.edb.core.primitive.primitive.Polygon.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "Polygon.set_product_property(prod_id, attr_id, prop_value)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nprop_value\n\npython:str\n\nString stored in the property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.rotate",
        "href": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.rotate.html#rotate",
        "title": "rotate",
        "section": "rotate",
        "text": "Rotate a point at a given center by a given angle.\nAngle in radians.\nCenter.\nrotate\npython:float\nansys.edb.core.typing.PointLike\ntyping.Optional\nPointData\nor\nNone\nif\neither\npoint\nis\nan"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.rotate",
        "href": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.rotate.html#ansys.edb.core.geometry.point_data.PointData.rotate",
        "title": "rotate > rotate > rotate",
        "section": "rotate > rotate",
        "text": "PointData.rotate(angle, center)\n\nRotate a point at a given center by a given angle.\n\nParameters\n\nangle\n\npython:float\n\nAngle in radians.\n\ncenter\n\nansys.edb.core.typing.PointLike\n\nCenter.\n\nReturns\n\ntyping.Optional[PointData] or None if either point is an arc.\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.create_stride",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.create_stride.html#create_stride",
        "title": "create_stride",
        "section": "create_stride",
        "text": "Create a Stride model from an MCAD file.\nStride model created.\ncreate_stride\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.create_stride",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.create_stride.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.create_stride",
        "title": "create_stride > create_stride > create_stride",
        "section": "create_stride > create_stride",
        "text": "PinGroupTerminal.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nReturns\n\nMcadModel\n\nStride model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.layout",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.layout.html#layout",
        "title": "layout",
        "section": "layout",
        "text": "Layout: Layout owning the object.\nThis property is read-only.\nlayout\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.layout",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.layout.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.layout",
        "title": "layout > layout > layout",
        "section": "layout > layout",
        "text": "property PinGroupTerminal.layout\n\nLayout: Layout owning the object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.package_def",
        "href": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.package_def.html#package_def",
        "title": "package_def",
        "section": "package_def",
        "text": "PackageDef: Package definition object.\npackage_def\nPackageDef"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.package_def",
        "href": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.package_def.html#ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.package_def",
        "title": "package_def > package_def > package_def",
        "section": "package_def > package_def",
        "text": "property RLCComponentProperty.package_def\n\nPackageDef: Package definition object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.PATH",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.PATH.html#path",
        "title": "PATH",
        "section": "PATH",
        "text": "PATH"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.PATH",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.PATH.html#ansys.edb.core.primitive.primitive.PrimitiveType.PATH",
        "title": "PATH > PATH > PATH",
        "section": "PATH > PATH",
        "text": "PrimitiveType.PATH = 3\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.is_power_ground",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.is_power_ground.html#is_power_ground",
        "title": "is_power_ground",
        "section": "is_power_ground",
        "text": "Flag indicating if the new is power/ground.\nThis property is invalid for a differential pair.\nis_power_ground"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.is_power_ground",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.is_power_ground.html#ansys.edb.core.net.differential_pair.DifferentialPair.is_power_ground",
        "title": "is_power_ground > is_power_ground > is_power_ground",
        "section": "is_power_ground > is_power_ground",
        "text": "property DifferentialPair.is_power_ground\n\nFlag indicating if the new is power/ground.\n\nThis property is invalid for a differential pair.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property of the layer for a given product ID and attribute ID.\nProduct ID.\nAttribute ID.\nNew product property value.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.set_product_property.html#ansys.edb.core.layer.stackup_layer.StackupLayer.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "StackupLayer.set_product_property(prod_id, attr_it, prop_value)\n\nSet the product property of the layer for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nProduct ID.\n\nattr_it\n\npython:int\n\nAttribute ID.\n\nprop_value\n\npython:str\n\nNew product property value.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.create_3d_comp.html#create_3d_comp",
        "title": "create_3d_comp",
        "section": "create_3d_comp",
        "text": "Create a 3D composite model from an MCAD file.\n3D composite model created.\ncreate_3d_comp\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.create_3d_comp.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.create_3d_comp",
        "title": "create_3d_comp > create_3d_comp > create_3d_comp",
        "section": "create_3d_comp > create_3d_comp",
        "text": "PadstackInstanceTerminal.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nReturns\n\nMcadModel\n\n3D composite model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the property.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.set_product_property.html#ansys.edb.core.primitive.primitive.Primitive.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "Primitive.set_product_property(prod_id, attr_id, prop_value)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nprop_value\n\npython:str\n\nString stored in the property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.healing_option",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.healing_option.html#healing_option",
        "title": "healing_option",
        "section": "healing_option",
        "text": "int: Enable/disable healing of mis-aligned points and edges.\nhealing_option\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.healing_option",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.healing_option.html#ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.healing_option",
        "title": "healing_option > healing_option > healing_option",
        "section": "healing_option > healing_option",
        "text": "property AdvancedSettings.healing_option\n\nint: Enable/disable healing of mis-aligned points and edges.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.create_3d_comp.html#create_3d_comp",
        "title": "create_3d_comp",
        "section": "create_3d_comp",
        "text": "Create a 3D composite model from an MCAD file.\n3D composite model created.\ncreate_3d_comp\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.create_3d_comp.html#ansys.edb.core.primitive.primitive.Bondwire.create_3d_comp",
        "title": "create_3d_comp > create_3d_comp > create_3d_comp",
        "section": "create_3d_comp > create_3d_comp",
        "text": "Bondwire.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nReturns\n\nMcadModel\n\n3D composite model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.layout_obj_type.html#layout_obj_type",
        "title": "layout_obj_type",
        "section": "layout_obj_type",
        "text": "layout_obj_type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.layout_obj_type.html#ansys.edb.core.net.extended_net.ExtendedNet.layout_obj_type",
        "title": "layout_obj_type > layout_obj_type > layout_obj_type",
        "section": "layout_obj_type > layout_obj_type",
        "text": "ExtendedNet.layout_obj_type = 14\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.die_property.DieType.WIREBOND",
        "href": "api/_autosummary/ansys.edb.core.definition.die_property.DieType.WIREBOND.html#wirebond",
        "title": "WIREBOND",
        "section": "WIREBOND",
        "text": "WIREBOND"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.die_property.DieType.WIREBOND",
        "href": "api/_autosummary/ansys.edb.core.definition.die_property.DieType.WIREBOND.html#ansys.edb.core.definition.die_property.DieType.WIREBOND",
        "title": "WIREBOND > WIREBOND > WIREBOND",
        "section": "WIREBOND > WIREBOND",
        "text": "DieType.WIREBOND = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.terminals",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.terminals.html#terminals",
        "title": "terminals",
        "section": "terminals",
        "text": "list of Terminal:         List of all terminals in the layout.\nThis property is read-only.\nterminals\nlist\nTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.terminals",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.terminals.html#ansys.edb.core.layout.layout.Layout.terminals",
        "title": "terminals > terminals > terminals",
        "section": "terminals > terminals",
        "text": "property Layout.terminals\n\nlist of Terminal:         List of all terminals in the layout.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.is_mcad_hfss.html#is_mcad_hfss",
        "title": "is_mcad_hfss",
        "section": "is_mcad_hfss",
        "text": "bool: Flag indicating if this is an HFSS MCAD model.\nThis property is read-only.\nis_mcad_hfss\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.is_mcad_hfss.html#ansys.edb.core.primitive.primitive.PadstackInstance.is_mcad_hfss",
        "title": "is_mcad_hfss > is_mcad_hfss > is_mcad_hfss",
        "section": "is_mcad_hfss > is_mcad_hfss",
        "text": "property PadstackInstance.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/layout_instance",
        "href": "api/layout_instance.html#layout-instance",
        "title": "Layout instance",
        "section": "Layout instance",
        "text": "Layout instance"
    },
    {
        "objectID": "api/layout_instance",
        "href": "api/layout_instance.html#classes",
        "title": "Layout instance > Classes",
        "section": "Classes",
        "text": "layout_instance.LayoutInstance(msg)\nRepresents a layout instance object.\nlayout_instance_context.LayoutInstanceContext(msg)\nRepresents the layout instance context object.\nlayout_obj_instance.LayoutObjInstance(msg)\nRepresents a layout object instance.\nlayout_obj_instance.LayoutObjInstance2DGeometry(...)\nRepresents a layout object instance 2D geometry.\nlayout_obj_instance.LayoutObjInstance3DGeometry(...)\nRepresents a layout object instance 3D geometry.\nClasses\nlayout_instance.LayoutInstance\nlayout_instance_context.LayoutInstanceContext\nlayout_obj_instance.LayoutObjInstance\nlayout_obj_instance.LayoutObjInstance2DGeometry\nlayout_obj_instance.LayoutObjInstance3DGeometry"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_zone_primitive.html#is_zone_primitive",
        "title": "is_zone_primitive",
        "section": "is_zone_primitive",
        "text": "bool: Flag indicating if the primitive object is a zone.\nThis property is read-only.\nis_zone_primitive\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_zone_primitive.html#ansys.edb.core.primitive.primitive.Text.is_zone_primitive",
        "title": "is_zone_primitive > is_zone_primitive > is_zone_primitive",
        "section": "is_zone_primitive > is_zone_primitive",
        "text": "property Text.is_zone_primitive\n\nbool: Flag indicating if the primitive object is a zone.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.HfssPIType.GAP",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.HfssPIType.GAP.html#gap",
        "title": "GAP",
        "section": "GAP",
        "text": "GAP"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.HfssPIType.GAP",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.HfssPIType.GAP.html#ansys.edb.core.terminal.terminals.HfssPIType.GAP",
        "title": "GAP > GAP > GAP",
        "section": "GAP > GAP",
        "text": "HfssPIType.GAP = 3\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.edb_uid.html#edb_uid",
        "title": "edb_uid",
        "section": "edb_uid",
        "text": "int: Unique, persistent ID for the Connectable object.\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\nThis property is read-only.\nedb_uid\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.edb_uid.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.edb_uid",
        "title": "edb_uid > edb_uid > edb_uid",
        "section": "edb_uid > edb_uid",
        "text": "property ComponentGroup.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.render",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.render.html#render",
        "title": "render",
        "section": "render",
        "text": "Get the polygon data of a rectangle.\nType that defines the meaning of the given parameters.\nX value of the lower-left point or center point.\nY value of the lower-left point or center point.\nX value of the upper-right point or width.\nY value of the upper-right point or height.\nCorner radius.\nRotation.\nWhether the rectangle is hole.\nPolygon data object created.\nrender\nRectangleRepresentationType\nValue\nValue\nValue\nValue\nValue\nValue\npython:False\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.render",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.render.html#ansys.edb.core.primitive.primitive.Rectangle.render",
        "title": "render > render > render",
        "section": "render > render",
        "text": "classmethod Rectangle.render(rep_type, x_lower_left_or_center_x, y_lower_left_or_center_y, x_upper_right_or_width, y_upper_right_or_height, corner_radius, rotation, is_hole=False)\n\nGet the polygon data of a rectangle.\n\nParameters\n\nrep_type\n\nRectangleRepresentationType\n\nType that defines the meaning of the given parameters.\n\nx_lower_left_or_center_x\n\nValue\n\nX value of the lower-left point or center point.\n\ny_lower_left_or_center_y\n\nValue\n\nY value of the lower-left point or center point.\n\nx_upper_right_or_width\n\nValue\n\nX value of the upper-right point or width.\n\ny_upper_right_or_height\n\nValue\n\nY value of the upper-right point or height.\n\ncorner_radius\n\nValue\n\nCorner radius.\n\nrotation\n\nValue\n\nRotation.\n\nis_hole\n\nbool, default: python:False\n\nWhether the rectangle is hole.\n\nReturns\n\nPolygonData\n\nPolygon data object created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_auto_port",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_auto_port.html#is_auto_port",
        "title": "is_auto_port",
        "section": "is_auto_port",
        "text": "bool: Flag indicating if the terminal is an auto port.\nis_auto_port\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_auto_port",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_auto_port.html#ansys.edb.core.terminal.terminals.PointTerminal.is_auto_port",
        "title": "is_auto_port > is_auto_port > is_auto_port",
        "section": "is_auto_port > is_auto_port",
        "text": "property PointTerminal.is_auto_port\n\nbool: Flag indicating if the terminal is an auto port.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.find_by_name",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.find_by_name.html#find_by_name",
        "title": "find_by_name",
        "section": "find_by_name",
        "text": "Find a padstack definition by name in a given database.\nDatabase to search for the padstack definition.\nName of the padstack definition.\nPadstack definition found.\nfind_by_name\nDatabase\npython:str\nPadstackDef"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.find_by_name",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.find_by_name.html#ansys.edb.core.definition.padstack_def.PadstackDef.find_by_name",
        "title": "find_by_name > find_by_name > find_by_name",
        "section": "find_by_name > find_by_name",
        "text": "classmethod PadstackDef.find_by_name(db, name)\n\nFind a padstack definition by name in a given database.\n\nParameters\n\ndb\n\nDatabase.\n\nDatabase to search for the padstack definition.\n\nname\n\npython:str\n\nName of the padstack definition.\n\nReturns\n\nPadstackDef\n\nPadstack definition found.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.sparameter_model.SParameterModel.msg",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.sparameter_model.SParameterModel.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.sparameter_model.SParameterModel.msg",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.sparameter_model.SParameterModel.msg.html#ansys.edb.core.hierarchy.sparameter_model.SParameterModel.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property SParameterModel.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.hole_range",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.hole_range.html#hole_range",
        "title": "hole_range",
        "section": "hole_range",
        "text": "PadstackHoleRange: Hole range of the padstack data definition.\nhole_range\nPadstackHoleRange"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.hole_range",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.hole_range.html#ansys.edb.core.definition.padstack_def_data.PadstackDefData.hole_range",
        "title": "hole_range > hole_range > hole_range",
        "section": "hole_range > hole_range",
        "text": "property PadstackDefData.hole_range\n\nPadstackHoleRange: Hole range of the padstack data definition.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.html#layoutobjinstance",
        "title": "LayoutObjInstance",
        "section": "LayoutObjInstance",
        "text": "Represents a layout object instance.\nLayoutObjInstance.get_bbox([local])\nGet the bounding box of the layout object instance.\nLayoutObjInstance.get_geometries(layer)\nGet the geometry that exists on a given layer.\nLayoutObjInstance.context\nlist[str]: All strings representing the context of the layout object instance.\nLayoutObjInstance.id\nint: Unique ID of the EDB object.\nLayoutObjInstance.is_null\nbool: Flag indicating if the object exists in the database.\nLayoutObjInstance.layers\nlist of Layer: All layer instances.\nLayoutObjInstance.layout_instance_context\nLayoutInstanceContext: Context that the layout object instance exists in.\nLayoutObjInstance.layout_obj\nConnectable: Definition layout object that the layout object         instance is an instance of.\nLayoutObjInstance.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nLayoutObjInstance\nLayoutObjInstance.get_bbox\nLayoutObjInstance.get_geometries\nLayoutObjInstance.context\nlist\nstr\nLayoutObjInstance.id\nint\nLayoutObjInstance.is_null\nbool\nLayoutObjInstance.layers\nlist\nLayer\nLayoutObjInstance.layout_instance_context\nLayoutInstanceContext\nLayoutObjInstance.layout_obj\nLayoutObjInstance.msg\nEDBObjMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.html#ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance",
        "title": "LayoutObjInstance > LayoutObjInstance > LayoutObjInstance",
        "section": "LayoutObjInstance > LayoutObjInstance",
        "text": "class ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance(msg)\n\nRepresents a layout object instance.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nLayoutObjInstance.get_bbox([local])\n\nGet the bounding box of the layout object instance.\n\nLayoutObjInstance.get_geometries(layer)\n\nGet the geometry that exists on a given layer.\n\n\n\nAttributes\n\n\n\n\n\n\n\nLayoutObjInstance.context\n\nlist[str]: All strings representing the context of the layout object instance.\n\nLayoutObjInstance.id\n\nint: Unique ID of the EDB object.\n\nLayoutObjInstance.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nLayoutObjInstance.layers\n\nlist of Layer: All layer instances.\n\nLayoutObjInstance.layout_instance_context\n\nLayoutInstanceContext: Context that the layout object instance exists in.\n\nLayoutObjInstance.layout_obj\n\nConnectable: Definition layout object that the layout object         instance is an instance of.\n\nLayoutObjInstance.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.set_diameter",
        "href": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.set_diameter.html#set_diameter",
        "title": "set_diameter",
        "section": "set_diameter",
        "text": "Set the diameter parameters of the solder ball property.\nDiameter 1 of the solder ball property.\nDiameter 2 of the solder ball property.\nset_diameter"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.set_diameter",
        "href": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.set_diameter.html#ansys.edb.core.definition.solder_ball_property.SolderBallProperty.set_diameter",
        "title": "set_diameter > set_diameter > set_diameter",
        "section": "set_diameter > set_diameter",
        "text": "SolderBallProperty.set_diameter(diameter1, diameter2)\n\nSet the diameter parameters of the solder ball property.\n\nParameters\n\ndiameter1\n\nValueLike\n\nDiameter 1 of the solder ball property.\n\ndiameter2\n\nValueLike\n\nDiameter 2 of the solder ball property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.material",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.material.html#material",
        "title": "material",
        "section": "material",
        "text": "str: Material name of the hole of the padstack definition data object.\nmaterial\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.material",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.material.html#ansys.edb.core.definition.padstack_def_data.PadstackDefData.material",
        "title": "material > material > material",
        "section": "material > material",
        "text": "property PadstackDefData.material\n\nstr: Material name of the hole of the padstack definition data object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.msg.html#ansys.edb.core.definition.package_def.PackageDef.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property PackageDef.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.find_by_name",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.find_by_name.html#find_by_name",
        "title": "find_by_name",
        "section": "find_by_name",
        "text": "Find an APD bondwire definition by name in a given database.\nDatabase to search for the APD bondwire definition.\nName of the APD bondwire definition.\nAPD bondwire definition found.\nfind_by_name\nDatabase\npython:str\nApdBondwireDef"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.find_by_name",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.find_by_name.html#ansys.edb.core.definition.bondwire_def.ApdBondwireDef.find_by_name",
        "title": "find_by_name > find_by_name > find_by_name",
        "section": "find_by_name > find_by_name",
        "text": "classmethod ApdBondwireDef.find_by_name(database, name)\n\nFind an APD bondwire definition by name in a given database.\n\nParameters\n\ndatabase\n\nDatabase\n\nDatabase to search for the APD bondwire definition.\n\nname\n\npython:str\n\nName of the APD bondwire definition.\n\nReturns\n\nApdBondwireDef\n\nAPD bondwire definition found.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents this object’s ID.\nThis property is read-only.\nmsg\nEDBObjMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.msg.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property SIWaveDCAdvancedSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object’s ID.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.s_parameter",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.s_parameter.html#s_parameter",
        "title": "s_parameter",
        "section": "s_parameter",
        "text": "SIWaveSParameterSettings: S parameter settings for SIWave simulations.\ns_parameter\nSIWaveSParameterSettings"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.s_parameter",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.s_parameter.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.s_parameter",
        "title": "s_parameter > s_parameter > s_parameter",
        "section": "s_parameter > s_parameter",
        "text": "property SIWaveSimulationSettings.s_parameter\n\nSIWaveSParameterSettings: S parameter settings for SIWave simulations.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.name",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the package definition.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.name",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.name.html#ansys.edb.core.definition.package_def.PackageDef.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property PackageDef.name\n\nstr: Name of the package definition.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.owner",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.owner.html#owner",
        "title": "owner",
        "section": "owner",
        "text": "Primitive: Owner of the primitive object.\nThis property is read-only.\nowner\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.owner",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.owner.html#ansys.edb.core.primitive.primitive.Path.owner",
        "title": "owner > owner > owner",
        "section": "owner > owner",
        "text": "property Path.owner\n\nPrimitive: Owner of the primitive object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product property of the layer collection for a given product ID and attribute ID.\nProduct ID.\nAttribute ID.\nProduct property.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.get_product_property.html#ansys.edb.core.layer.layer_collection.LayerCollection.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "LayerCollection.get_product_property(prod_id, attr_it)\n\nGet the product property of the layer collection for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nProduct ID.\n\nattr_it\n\npython:int\n\nAttribute ID.\n\nReturns\n\npython:str\n\nProduct property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.positive_net",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.positive_net.html#positive_net",
        "title": "positive_net",
        "section": "positive_net",
        "text": "Net: Positive net in the differential pair.\npositive_net\nNet"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.positive_net",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.positive_net.html#ansys.edb.core.net.differential_pair.DifferentialPair.positive_net",
        "title": "positive_net > positive_net > positive_net",
        "section": "positive_net > positive_net",
        "text": "property DifferentialPair.positive_net\n\nNet: Positive net in the differential pair.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.layout",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.layout.html#layout",
        "title": "layout",
        "section": "layout",
        "text": "Layout: Layout owning the object.\nThis property is read-only.\nlayout\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.layout",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.layout.html#ansys.edb.core.net.extended_net.ExtendedNet.layout",
        "title": "layout > layout > layout",
        "section": "layout > layout",
        "text": "property ExtendedNet.layout\n\nLayout: Layout owning the object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.set_parameters",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.set_parameters.html#set_parameters",
        "title": "set_parameters",
        "section": "set_parameters",
        "text": "Set parameters of the APD bondwire definition.\nString block of the bondwire parameters.\nset_parameters\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.set_parameters",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.set_parameters.html#ansys.edb.core.definition.bondwire_def.ApdBondwireDef.set_parameters",
        "title": "set_parameters > set_parameters > set_parameters",
        "section": "set_parameters > set_parameters",
        "text": "ApdBondwireDef.set_parameters(name)\n\nSet parameters of the APD bondwire definition.\n\nParameters\n\nname\n\npython:str\n\nString block of the bondwire parameters.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.solver",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.solver.html#solver",
        "title": "solver",
        "section": "solver",
        "text": "HFSSSolverSettings: Solver settings for HFSS simulations.\nsolver\nHFSSSolverSettings"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.solver",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.solver.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.solver",
        "title": "solver > solver > solver",
        "section": "solver > solver",
        "text": "property HFSSSimulationSettings.solver\n\nHFSSSolverSettings: Solver settings for HFSS simulations.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.get_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.get_hfss_prop.html#get_hfss_prop",
        "title": "get_hfss_prop",
        "section": "get_hfss_prop",
        "text": "Get HFSS properties.\nName of the material property.\nWhether to solve inside.\nget_hfss_prop\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.get_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.get_hfss_prop.html#ansys.edb.core.primitive.primitive.Polygon.get_hfss_prop",
        "title": "get_hfss_prop > get_hfss_prop > get_hfss_prop",
        "section": "get_hfss_prop > get_hfss_prop",
        "text": "Polygon.get_hfss_prop()\n\nGet HFSS properties.\n\nReturns\n\nmaterial\n\npython:str\n\nName of the material property.\n\nsolve_inside\n\nbool\n\nWhether to solve inside.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.is_mcad.html#is_mcad",
        "title": "is_mcad",
        "section": "is_mcad",
        "text": "bool: Flag indicating if this is an MCAD model.\nThis property is read-only.\nis_mcad\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.is_mcad.html#ansys.edb.core.hierarchy.structure3d.Structure3D.is_mcad",
        "title": "is_mcad > is_mcad > is_mcad",
        "section": "is_mcad > is_mcad",
        "text": "property Structure3D.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.can_be_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.can_be_zone_primitive.html#can_be_zone_primitive",
        "title": "can_be_zone_primitive",
        "section": "can_be_zone_primitive",
        "text": "bool: Flag indicating if a circle can be a zone.\ncan_be_zone_primitive\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.can_be_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.can_be_zone_primitive.html#ansys.edb.core.primitive.primitive.Circle.can_be_zone_primitive",
        "title": "can_be_zone_primitive > can_be_zone_primitive > can_be_zone_primitive",
        "section": "can_be_zone_primitive > can_be_zone_primitive",
        "text": "Circle.can_be_zone_primitive()\n\nbool: Flag indicating if a circle can be a zone.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.clone",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a clone of the layer.\nID of the layer to clone.\nLayer cloned.\nclone\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.clone",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.clone.html#ansys.edb.core.layer.via_layer.ViaLayer.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "ViaLayer.clone(copy_id=True)\n\nCreate a clone of the layer.\n\nParameters\n\ncopy_id\n\nbool\n\nID of the layer to clone.\n\nReturns\n\nLayer\n\nLayer cloned.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.create_hfss.html#create_hfss",
        "title": "create_hfss",
        "section": "create_hfss",
        "text": "Create an HFSS model from an MCAD file.\nHFSS model created.\ncreate_hfss\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.create_hfss.html#ansys.edb.core.terminal.terminals.EdgeTerminal.create_hfss",
        "title": "create_hfss > create_hfss > create_hfss",
        "section": "create_hfss > create_hfss",
        "text": "EdgeTerminal.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nReturns\n\nMcadModel\n\nHFSS model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_parameterized",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_parameterized.html#is_parameterized",
        "title": "is_parameterized",
        "section": "is_parameterized",
        "text": "bool: Whether the primitive is parametrized.\nThis property is read-only.\nis_parameterized\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_parameterized",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_parameterized.html#ansys.edb.core.primitive.primitive.Polygon.is_parameterized",
        "title": "is_parameterized > is_parameterized > is_parameterized",
        "section": "is_parameterized > is_parameterized",
        "text": "property Polygon.is_parameterized\n\nbool: Whether the primitive is parametrized.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.create_3d_comp.html#create_3d_comp",
        "title": "create_3d_comp",
        "section": "create_3d_comp",
        "text": "Create a 3D composite model from an MCAD file.\n3D composite model created.\ncreate_3d_comp\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.create_3d_comp.html#ansys.edb.core.primitive.primitive.Path.create_3d_comp",
        "title": "create_3d_comp > create_3d_comp > create_3d_comp",
        "section": "create_3d_comp > create_3d_comp",
        "text": "Path.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nReturns\n\nMcadModel\n\n3D composite model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.owner",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.owner.html#owner",
        "title": "owner",
        "section": "owner",
        "text": "Primitive: Owner of the primitive object.\nThis property is read-only.\nowner\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.owner",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.owner.html#ansys.edb.core.primitive.primitive.Circle.owner",
        "title": "owner > owner > owner",
        "section": "owner > owner",
        "text": "property Circle.owner\n\nPrimitive: Owner of the primitive object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.is_segment",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.is_segment.html#is_segment",
        "title": "is_segment",
        "section": "is_segment",
        "text": "Determine if the arc is a straight line segment.\nTolearance.\nTrue when the arc is a straight line segment, False otherwise.\nis_segment\npython:float\noptional\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.is_segment",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.is_segment.html#ansys.edb.core.geometry.arc_data.ArcData.is_segment",
        "title": "is_segment > is_segment > is_segment",
        "section": "is_segment > is_segment",
        "text": "ArcData.is_segment(tolerance=0.0)\n\nDetermine if the arc is a straight line segment.\n\nParameters\n\ntolerance\n\npython:float, optional\n\nTolearance.\n\nReturns\n\nbool\n\nTrue when the arc is a straight line segment, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalType.PIN_GROUP",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalType.PIN_GROUP.html#pin_group",
        "title": "PIN_GROUP",
        "section": "PIN_GROUP",
        "text": "PIN_GROUP"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalType.PIN_GROUP",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalType.PIN_GROUP.html#ansys.edb.core.terminal.terminals.TerminalType.PIN_GROUP",
        "title": "PIN_GROUP > PIN_GROUP > PIN_GROUP",
        "section": "PIN_GROUP > PIN_GROUP",
        "text": "TerminalType.PIN_GROUP = 5\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty",
        "href": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty.html#dieproperty",
        "title": "DieProperty",
        "section": "DieProperty",
        "text": "Represents a die property.\nDieProperty.clone()\nClone a die property.\nDieProperty.create()\nCreate a die property.\nDieProperty.die_orientation\nDieOrientation: Die orientation.\nDieProperty.die_type\nDieType: Die type.\nDieProperty.height\nValue: Die height.\nDieProperty.id\nint: Unique ID of the EDB object.\nDieProperty.is_null\nbool: Flag indicating if the object exists in the database.\nDieProperty.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nDieProperty\nDieProperty.clone\nDieProperty.create\nDieProperty.die_orientation\nDieOrientation\nDieProperty.die_type\nDieType\nDieProperty.height\nValue\nDieProperty.id\nint\nDieProperty.is_null\nbool\nDieProperty.msg\nEDBObjMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty",
        "href": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty.html#ansys.edb.core.definition.die_property.DieProperty",
        "title": "DieProperty > DieProperty > DieProperty",
        "section": "DieProperty > DieProperty",
        "text": "class ansys.edb.core.definition.die_property.DieProperty(msg)\n\nRepresents a die property.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nDieProperty.clone()\n\nClone a die property.\n\nDieProperty.create()\n\nCreate a die property.\n\n\n\nAttributes\n\n\n\n\n\n\n\nDieProperty.die_orientation\n\nDieOrientation: Die orientation.\n\nDieProperty.die_type\n\nDieType: Die type.\n\nDieProperty.height\n\nValue: Die height.\n\nDieProperty.id\n\nint: Unique ID of the EDB object.\n\nDieProperty.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nDieProperty.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.via_model_type",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.via_model_type.html#via_model_type",
        "title": "via_model_type",
        "section": "via_model_type",
        "text": "ViaStyle: Via model type.\nvia_model_type\nViaStyle"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.via_model_type",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.via_model_type.html#ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.via_model_type",
        "title": "via_model_type > via_model_type > via_model_type",
        "section": "via_model_type > via_model_type",
        "text": "property AdvancedSettings.via_model_type\n\nViaStyle: Via model type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings.arc_to_chord_error",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings.arc_to_chord_error.html#arc_to_chord_error",
        "title": "arc_to_chord_error",
        "section": "arc_to_chord_error",
        "text": "str: Maximum allowable arc to chord error.\narc_to_chord_error\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings.arc_to_chord_error",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings.arc_to_chord_error.html#ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings.arc_to_chord_error",
        "title": "arc_to_chord_error > arc_to_chord_error > arc_to_chord_error",
        "section": "arc_to_chord_error > arc_to_chord_error",
        "text": "property AdvancedMeshingSettings.arc_to_chord_error\n\nstr: Maximum allowable arc to chord error.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the product property.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.get_product_property.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "CellInstance.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nReturns\n\npython:str\n\nString stored in the product property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.create_3d_comp.html#create_3d_comp",
        "title": "create_3d_comp",
        "section": "create_3d_comp",
        "text": "Create a 3D composite model from an MCAD file.\nAbsolute path of the MCAD file.\n3D composite model created.\ncreate_3d_comp\npython:str\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.create_3d_comp.html#ansys.edb.core.layout.layout.Layout.create_3d_comp",
        "title": "create_3d_comp > create_3d_comp > create_3d_comp",
        "section": "create_3d_comp > create_3d_comp",
        "text": "Layout.create_3d_comp(filename)\n\nCreate a 3D composite model from an MCAD file.\n\nParameters\n\nfilename\n\npython:str\n\nAbsolute path of the MCAD file.\n\nReturns\n\nMcadModel\n\n3D composite model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.create_with_component",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.create_with_component.html#create_with_component",
        "title": "create_with_component",
        "section": "create_with_component",
        "text": "Create a cell instance with a component definition.\nLayout to create the cell instance in.\nName of the cell instance.\nComponent that the cell instance refers to.\nCell instance created.\ncreate_with_component\nLayout\npython:str\nComponentDef\nCellInstance"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.create_with_component",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.create_with_component.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.create_with_component",
        "title": "create_with_component > create_with_component > create_with_component",
        "section": "create_with_component > create_with_component",
        "text": "classmethod CellInstance.create_with_component(layout, name, ref)\n\nCreate a cell instance with a component definition.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to create the cell instance in.\n\nname\n\npython:str\n\nName of the cell instance.\n\nref\n\nComponentDef\n\nComponent that the cell instance refers to.\n\nReturns\n\nCellInstance\n\nCell instance created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.edb_uid.html#edb_uid",
        "title": "edb_uid",
        "section": "edb_uid",
        "text": "int: Unique, persistent ID for the Connectable object.\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\nThis property is read-only.\nedb_uid\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.edb_uid.html#ansys.edb.core.primitive.primitive.BoardBendDef.edb_uid",
        "title": "edb_uid > edb_uid > edb_uid",
        "section": "edb_uid > edb_uid",
        "text": "property BoardBendDef.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.html#advancedsettings",
        "title": "AdvancedSettings",
        "section": "AdvancedSettings",
        "text": "Class representing base advanced simulation settings.\nAdvancedSettings.defeature_absolute_length\nstr: Absolute length used as tolerance when defeaturing polygons.\nAdvancedSettings.defeature_ratio\nfloat: Extent ratio used as tolerance when defeaturing polygons.\nAdvancedSettings.healing_option\nint: Enable/disable healing of mis-aligned points and edges.\nAdvancedSettings.mesh_for_via_plating\nbool: Flag indicating if meshing for via plating is enabled.\nAdvancedSettings.model_type\nModelType: model type.\nAdvancedSettings.msg\nEDBObjMessage: Protobuf message that represents this object's ID.\nAdvancedSettings.num_via_density\nfloat: Spacing between vias.\nAdvancedSettings.num_via_sides\nint: Number of sides a via is considered to have.\nAdvancedSettings.remove_floating_geometry\nbool: Flag indicating if a geometry not connected to any other geometry is removed.\nAdvancedSettings.small_void_area\nfloat: Voids with an area smaller than this value are ignored during simulation.\nAdvancedSettings.union_polygons\nbool: Flag indicating if polygons are unioned before meshing.\nAdvancedSettings.use_defeature\nbool: Flag indicating if polygon defeaturing is performed.\nAdvancedSettings.use_defeature_absolute_length\nbool: Flag indicating if absolute length or extent ratio is used when defeaturing polygons.\nAdvancedSettings.via_material\nstr: Default via material.\nAdvancedSettings.via_model_type\nViaStyle: Via model type.\nAdvancedSettings\nAdvancedSettings.defeature_absolute_length\nstr\nAdvancedSettings.defeature_ratio\nfloat\nAdvancedSettings.healing_option\nint\nAdvancedSettings.mesh_for_via_plating\nbool\nAdvancedSettings.model_type\nModelType\nAdvancedSettings.msg\nEDBObjMessage\nAdvancedSettings.num_via_density\nfloat\nAdvancedSettings.num_via_sides\nint\nAdvancedSettings.remove_floating_geometry\nbool\nAdvancedSettings.small_void_area\nfloat\nAdvancedSettings.union_polygons\nbool\nAdvancedSettings.use_defeature\nbool\nAdvancedSettings.use_defeature_absolute_length\nbool\nAdvancedSettings.via_material\nstr\nAdvancedSettings.via_model_type\nViaStyle"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.html#ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings",
        "title": "AdvancedSettings > AdvancedSettings > AdvancedSettings",
        "section": "AdvancedSettings > AdvancedSettings",
        "text": "class ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings(sim_setup)\n\nClass representing base advanced simulation settings.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nAdvancedSettings.defeature_absolute_length\n\nstr: Absolute length used as tolerance when defeaturing polygons.\n\nAdvancedSettings.defeature_ratio\n\nfloat: Extent ratio used as tolerance when defeaturing polygons.\n\nAdvancedSettings.healing_option\n\nint: Enable/disable healing of mis-aligned points and edges.\n\nAdvancedSettings.mesh_for_via_plating\n\nbool: Flag indicating if meshing for via plating is enabled.\n\nAdvancedSettings.model_type\n\nModelType: model type.\n\nAdvancedSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object's ID.\n\nAdvancedSettings.num_via_density\n\nfloat: Spacing between vias.\n\nAdvancedSettings.num_via_sides\n\nint: Number of sides a via is considered to have.\n\nAdvancedSettings.remove_floating_geometry\n\nbool: Flag indicating if a geometry not connected to any other geometry is removed.\n\nAdvancedSettings.small_void_area\n\nfloat: Voids with an area smaller than this value are ignored during simulation.\n\nAdvancedSettings.union_polygons\n\nbool: Flag indicating if polygons are unioned before meshing.\n\nAdvancedSettings.use_defeature\n\nbool: Flag indicating if polygon defeaturing is performed.\n\nAdvancedSettings.use_defeature_absolute_length\n\nbool: Flag indicating if absolute length or extent ratio is used when defeaturing polygons.\n\nAdvancedSettings.via_material\n\nstr: Default via material.\n\nAdvancedSettings.via_model_type\n\nViaStyle: Via model type.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.set_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.set_hfss_prop.html#set_hfss_prop",
        "title": "set_hfss_prop",
        "section": "set_hfss_prop",
        "text": "Set HFSS properties.\nMaterial property name to set.\nWhether to solve inside.\nset_hfss_prop\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.set_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.set_hfss_prop.html#ansys.edb.core.primitive.primitive.Circle.set_hfss_prop",
        "title": "set_hfss_prop > set_hfss_prop > set_hfss_prop",
        "section": "set_hfss_prop > set_hfss_prop",
        "text": "Circle.set_hfss_prop(material, solve_inside)\n\nSet HFSS properties.\n\nParameters\n\nmaterial\n\npython:str\n\nMaterial property name to set.\n\nsolve_inside\n\nbool\n\nWhether to solve inside.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDs given a product ID for the layout object.\nID representing a product that supports the EDB.\nAll user-defined attribute IDs for properties stored in the object\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.get_product_property_ids.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "PinGroupTerminal.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nReturns\n\npython:list[python:int]\n\nAll user-defined attribute IDs for properties stored in the object\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.bondwire_type",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.bondwire_type.html#bondwire_type",
        "title": "bondwire_type",
        "section": "bondwire_type",
        "text": "BondwireDefType: Type of the APD bondwire.\nThis property is read-only.\nbondwire_type\nBondwireDefType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.bondwire_type",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.bondwire_type.html#ansys.edb.core.definition.bondwire_def.ApdBondwireDef.bondwire_type",
        "title": "bondwire_type > bondwire_type > bondwire_type",
        "section": "bondwire_type > bondwire_type",
        "text": "property ApdBondwireDef.bondwire_type\n\nBondwireDefType: Type of the APD bondwire.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.get_diameter",
        "href": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.get_diameter.html#get_diameter",
        "title": "get_diameter",
        "section": "get_diameter",
        "text": "Get the diameter parameters of the solder ball property.\nDiameter 1 of the solder ball property.\nDiameter 2 of the solder ball property.\nget_diameter"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.get_diameter",
        "href": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.get_diameter.html#ansys.edb.core.definition.solder_ball_property.SolderBallProperty.get_diameter",
        "title": "get_diameter > get_diameter > get_diameter",
        "section": "get_diameter > get_diameter",
        "text": "SolderBallProperty.get_diameter()\n\nGet the diameter parameters of the solder ball property.\n\nReturns\n\ndiameter1\n\nValueLike\n\nDiameter 1 of the solder ball property.\n\ndiameter2\n\nValueLike\n\nDiameter 2 of the solder ball property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.product_solver_option",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.product_solver_option.html#product_solver_option",
        "title": "product_solver_option",
        "section": "product_solver_option",
        "text": "Get the name of the product solver option.\nID of the product.\nName of the solver.\nName of the product solver option.\nproduct_solver_option\nProductIdType\nstr\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.product_solver_option",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.product_solver_option.html#ansys.edb.core.terminal.terminals.PointTerminal.product_solver_option",
        "title": "product_solver_option > product_solver_option > product_solver_option",
        "section": "product_solver_option > product_solver_option",
        "text": "PointTerminal.product_solver_option(product_id, solver_name)\n\nGet the name of the product solver option.\n\nParameters\n\nproduct_id\n\nProductIdType\n\nID of the product.\n\nsolver_name\n\nstr\n\nName of the solver.\n\nReturns\n\nstr\n\nName of the product solver option.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.make_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.make_zone_primitive.html#make_zone_primitive",
        "title": "make_zone_primitive",
        "section": "make_zone_primitive",
        "text": "Make the primitive a zone primitive with a zone specified by the provided ID.\nID of the zone primitive to use.\nmake_zone_primitive\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.make_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.make_zone_primitive.html#ansys.edb.core.primitive.primitive.Polygon.make_zone_primitive",
        "title": "make_zone_primitive > make_zone_primitive > make_zone_primitive",
        "section": "make_zone_primitive > make_zone_primitive",
        "text": "Polygon.make_zone_primitive(zone_id)\n\nMake the primitive a zone primitive with a zone specified by the provided ID.\n\nParameters\n\nzone_id\n\npython:int\n\nID of the zone primitive to use.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.zone_primitives",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.zone_primitives.html#zone_primitives",
        "title": "zone_primitives",
        "section": "zone_primitives",
        "text": "list of Primitive: List of         all primitives in the zones.\nThis property is read-only.\nzone_primitives\nlist\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.zone_primitives",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.zone_primitives.html#ansys.edb.core.layout.layout.Layout.zone_primitives",
        "title": "zone_primitives > zone_primitives > zone_primitives",
        "section": "zone_primitives > zone_primitives",
        "text": "property Layout.zone_primitives\n\nlist of Primitive: List of         all primitives in the zones.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the property.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.set_product_property.html#ansys.edb.core.terminal.terminals.PointTerminal.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "PointTerminal.set_product_property(prod_id, attr_id, prop_value)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nprop_value\n\npython:str\n\nString stored in the property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.set_ref_layer",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.set_ref_layer.html#set_ref_layer",
        "title": "set_ref_layer",
        "section": "set_ref_layer",
        "text": "Set the reference layer of the via layer.\nLayer to set as the new reference layer of the via layer.\nWhether to set the new reference layer as the\nupper or lower reference layer.\nset_ref_layer\nStackupLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.set_ref_layer",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.set_ref_layer.html#ansys.edb.core.layer.via_layer.ViaLayer.set_ref_layer",
        "title": "set_ref_layer > set_ref_layer > set_ref_layer",
        "section": "set_ref_layer > set_ref_layer",
        "text": "ViaLayer.set_ref_layer(ref_layer, upper_ref)\n\nSet the reference layer of the via layer.\n\nParameters\n\nref_layer\n\nStackupLayer\n\nLayer to set as the new reference layer of the via layer.\n\nupper_ref\n\nbool\n\nWhether to set the new reference layer as the\nupper or lower reference layer.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.set_clip_info",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.set_clip_info.html#set_clip_info",
        "title": "set_clip_info",
        "section": "set_clip_info",
        "text": "Set the data used to clip the path.\nPolygon data to use to clip the path.\nWhether the part of the path inside the polygon should be preserved.\nset_clip_info\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.set_clip_info",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.set_clip_info.html#ansys.edb.core.primitive.primitive.Path.set_clip_info",
        "title": "set_clip_info > set_clip_info > set_clip_info",
        "section": "set_clip_info > set_clip_info",
        "text": "Path.set_clip_info(clipping_poly, keep_inside=True)\n\nSet the data used to clip the path.\n\nParameters\n\nclipping_poly\n\nPolygonData\n\nPolygon data to use to clip the path.\n\nkeep_inside: bool, default: True\n\nWhether the part of the path inside the polygon should be preserved.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.net",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.net.html#net",
        "title": "net",
        "section": "net",
        "text": "Net: Net of the Connectable object.\nThis property can be set with a Net instance, a string, or None.\nnet\nNet\nNet\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.net",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.net.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.net",
        "title": "net > net > net",
        "section": "net > net",
        "text": "property PinGroupTerminal.net\n\nNet: Net of the Connectable object.\n\nThis property can be set with a Net instance, a string, or None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/release_notes",
        "href": "api/release_notes.html#release-notes",
        "title": "Release notes",
        "section": "Release notes",
        "text": "Release notes"
    },
    {
        "objectID": "api/release_notes",
        "href": "api/release_notes.html#v10",
        "title": "Release notes > v1.0",
        "section": "v1.0",
        "text": "Known issues\nIf a new database is opened after another one is closed, the server may fail to properly fetch objects that are created after the new database is opened.\nSee issue #154.\nv1.0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.is_parametric",
        "href": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.is_parametric.html#is_parametric",
        "title": "is_parametric",
        "section": "is_parametric",
        "text": "bool: Flag indicating if the point contains parametric values (variable expressions).\nis_parametric\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.is_parametric",
        "href": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.is_parametric.html#ansys.edb.core.geometry.point_data.PointData.is_parametric",
        "title": "is_parametric > is_parametric > is_parametric",
        "section": "is_parametric > is_parametric",
        "text": "property PointData.is_parametric\n\nbool: Flag indicating if the point contains parametric values (variable expressions).\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.context",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.context.html#context",
        "title": "context",
        "section": "context",
        "text": "list[str]: All strings representing the context of the layout object instance.\nThis list of strings is a list of CellInstance\nnames representing the hierarchy level this layout obj instance’s context\nresides on. The first entry represents the top-level context and the last entry represents\nthe context that the layout object instance exists in.\nThis property is read-only.\ncontext\nlist\nstr\nCellInstance\ncontext"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.context",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.context.html#ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.context",
        "title": "context > context > context",
        "section": "context > context",
        "text": "property LayoutObjInstance.context\n\nlist[str]: All strings representing the context of the layout object instance.\n\nThis list of strings is a list of CellInstance\nnames representing the hierarchy level this layout obj instance’s context\nresides on. The first entry represents the top-level context and the last entry represents\nthe context that the layout object instance exists in.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.Distribution",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.Distribution.html#distribution",
        "title": "Distribution",
        "section": "Distribution",
        "text": "Enum representing frequency distribution types.\nDistribution.LIN\n\nDistribution.LINC\n\nDistribution.ESTP\n\nDistribution.DEC\n\nDistribution.OCT\n\nDistribution\nDistribution.LIN\nDistribution.LINC\nDistribution.ESTP\nDistribution.DEC\nDistribution.OCT"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.Distribution",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.Distribution.html#ansys.edb.core.simulation_setup.simulation_setup.Distribution",
        "title": "Distribution > Distribution > Distribution",
        "section": "Distribution > Distribution",
        "text": "class ansys.edb.core.simulation_setup.simulation_setup.Distribution(value)\n\nEnum representing frequency distribution types.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nDistribution.LIN\n\n\n\nDistribution.LINC\n\n\n\nDistribution.ESTP\n\n\n\nDistribution.DEC\n\n\n\nDistribution.OCT\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.source_amplitude",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.source_amplitude.html#source_amplitude",
        "title": "source_amplitude",
        "section": "source_amplitude",
        "text": "Value: Source amplitude of the terminal.\nsource_amplitude\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.source_amplitude",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.source_amplitude.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.source_amplitude",
        "title": "source_amplitude > source_amplitude > source_amplitude",
        "section": "source_amplitude > source_amplitude",
        "text": "property PadstackInstanceTerminal.source_amplitude\n\nValue: Source amplitude of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.single_frequency_adaptive_solution",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.single_frequency_adaptive_solution.html#single_frequency_adaptive_solution",
        "title": "single_frequency_adaptive_solution",
        "section": "single_frequency_adaptive_solution",
        "text": ".SingleFrequencyAdaptiveSolution`: Settings for a single frequency adaptive solution.\nsingle_frequency_adaptive_solution"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.single_frequency_adaptive_solution",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.single_frequency_adaptive_solution.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.single_frequency_adaptive_solution",
        "title": "single_frequency_adaptive_solution > single_frequency_adaptive_solution > single_frequency_adaptive_solution",
        "section": "single_frequency_adaptive_solution > single_frequency_adaptive_solution",
        "text": "property HFSSGeneralSettings.single_frequency_adaptive_solution\n\n.SingleFrequencyAdaptiveSolution`: Settings for a single frequency adaptive solution.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.NPortComponentModel.create",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.NPortComponentModel.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create an NPort component model.\nName of the NPport component model.\nNPort component model created.\nThe component model does not belong to a specific database until it is added to a\nComponentDef instance.\ncreate\npython:str\nNPortComponentModel\nComponentDef"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.NPortComponentModel.create",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.NPortComponentModel.create.html#ansys.edb.core.definition.component_model.NPortComponentModel.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod NPortComponentModel.create(name)\n\nCreate an NPort component model.\n\nParameters\n\nname\n\npython:str\n\nName of the NPport component model.\n\nReturns\n\nNPortComponentModel\n\nNPort component model created.\n\nNotes\n\nThe component model does not belong to a specific database until it is added to a\nComponentDef instance.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.remove_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.remove_hfss_prop.html#remove_hfss_prop",
        "title": "remove_hfss_prop",
        "section": "remove_hfss_prop",
        "text": "Remove HFSS properties.\nremove_hfss_prop"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.remove_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.remove_hfss_prop.html#ansys.edb.core.primitive.primitive.Bondwire.remove_hfss_prop",
        "title": "remove_hfss_prop > remove_hfss_prop > remove_hfss_prop",
        "section": "remove_hfss_prop > remove_hfss_prop",
        "text": "Bondwire.remove_hfss_prop()\n\nRemove HFSS properties.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.delete",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the bondwire definition.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.delete",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.delete.html#ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "Jedec5BondwireDef.delete()\n\nDelete the bondwire definition.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.product_solver_option",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.product_solver_option.html#product_solver_option",
        "title": "product_solver_option",
        "section": "product_solver_option",
        "text": "Get the name of the product solver option.\nID of the product.\nName of the solver.\nName of the product solver option.\nproduct_solver_option\nProductIdType\nstr\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.product_solver_option",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.product_solver_option.html#ansys.edb.core.terminal.terminals.BundleTerminal.product_solver_option",
        "title": "product_solver_option > product_solver_option > product_solver_option",
        "section": "product_solver_option > product_solver_option",
        "text": "BundleTerminal.product_solver_option(product_id, solver_name)\n\nGet the name of the product solver option.\n\nParameters\n\nproduct_id\n\nProductIdType\n\nID of the product.\n\nsolver_name\n\nstr\n\nName of the solver.\n\nReturns\n\nstr\n\nName of the product solver option.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.edb_uid.html#edb_uid",
        "title": "edb_uid",
        "section": "edb_uid",
        "text": "int: Unique, persistent ID for the Connectable object.\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\nThis property is read-only.\nedb_uid\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.edb_uid.html#ansys.edb.core.primitive.primitive.Path.edb_uid",
        "title": "edb_uid > edb_uid > edb_uid",
        "section": "edb_uid > edb_uid",
        "text": "property Path.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.remove_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.remove_hfss_prop.html#remove_hfss_prop",
        "title": "remove_hfss_prop",
        "section": "remove_hfss_prop",
        "text": "Remove HFSS properties.\nremove_hfss_prop"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.remove_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.remove_hfss_prop.html#ansys.edb.core.primitive.primitive.Circle.remove_hfss_prop",
        "title": "remove_hfss_prop > remove_hfss_prop > remove_hfss_prop",
        "section": "remove_hfss_prop > remove_hfss_prop",
        "text": "Circle.remove_hfss_prop()\n\nRemove HFSS properties.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.msg.html#ansys.edb.core.definition.padstack_def_data.PadstackDefData.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property PadstackDefData.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.set_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.set_hfss_prop.html#set_hfss_prop",
        "title": "set_hfss_prop",
        "section": "set_hfss_prop",
        "text": "Set HFSS properties.\nMaterial property name to set.\nWhether to solve inside.\nset_hfss_prop\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.set_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.set_hfss_prop.html#ansys.edb.core.primitive.primitive.BoardBendDef.set_hfss_prop",
        "title": "set_hfss_prop > set_hfss_prop > set_hfss_prop",
        "section": "set_hfss_prop > set_hfss_prop",
        "text": "BoardBendDef.set_hfss_prop(material, solve_inside)\n\nSet HFSS properties.\n\nParameters\n\nmaterial\n\npython:str\n\nMaterial property name to set.\n\nsolve_inside\n\nbool\n\nWhether to solve inside.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.add_power_module",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.add_power_module.html#add_power_module",
        "title": "add_power_module",
        "section": "add_power_module",
        "text": "Add a power module to the voltage regulator.\nPower module.\nadd_power_module\nPowerModule"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.add_power_module",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.add_power_module.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.add_power_module",
        "title": "add_power_module > add_power_module > add_power_module",
        "section": "add_power_module > add_power_module",
        "text": "VoltageRegulator.add_power_module(power_module)\n\nAdd a power module to the voltage regulator.\n\nParameters\n\npower_module\n\nPowerModule\n\nPower module.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.pins",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.pins.html#pins",
        "title": "pins",
        "section": "pins",
        "text": "list of PadstackInstances:         Padstack instances.\nThis property is read-only.\npins\nlist\nPadstackInstances"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.pins",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.pins.html#ansys.edb.core.hierarchy.pin_group.PinGroup.pins",
        "title": "pins > pins > pins",
        "section": "pins > pins",
        "text": "property PinGroup.pins\n\nlist of PadstackInstances:         Padstack instances.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_mcad.html#is_mcad",
        "title": "is_mcad",
        "section": "is_mcad",
        "text": "bool: Flag indicating if this is an MCAD model.\nThis property is read-only.\nis_mcad\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_mcad.html#ansys.edb.core.primitive.primitive.Bondwire.is_mcad",
        "title": "is_mcad > is_mcad > is_mcad",
        "section": "is_mcad > is_mcad",
        "text": "property Bondwire.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.is_power_ground",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.is_power_ground.html#is_power_ground",
        "title": "is_power_ground",
        "section": "is_power_ground",
        "text": "bool: Flag indicating in the net class belongs to the power/ground             NetClass class.\nThis property is read-only.\nis_power_ground\nbool\nNetClass"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.is_power_ground",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.is_power_ground.html#ansys.edb.core.net.extended_net.ExtendedNet.is_power_ground",
        "title": "is_power_ground > is_power_ground > is_power_ground",
        "section": "is_power_ground > is_power_ground",
        "text": "property ExtendedNet.is_power_ground\n\nbool: Flag indicating in the net class belongs to the power/ground             NetClass class.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.connected_geometry_sets",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.connected_geometry_sets.html#connected_geometry_sets",
        "title": "connected_geometry_sets",
        "section": "connected_geometry_sets",
        "text": "list of list of RTreeObj: Connected geometry sets of an RTree          in this form: (ids, sizes).\nconnected_geometry_sets\nlist\nlist\nRTreeObj\n(ids, sizes)"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.connected_geometry_sets",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.connected_geometry_sets.html#ansys.edb.core.geometry.r_tree.RTree.connected_geometry_sets",
        "title": "connected_geometry_sets > connected_geometry_sets > connected_geometry_sets",
        "section": "connected_geometry_sets > connected_geometry_sets",
        "text": "property RTree.connected_geometry_sets\n\nlist of list of RTreeObj: Connected geometry sets of an RTree          in this form: (ids, sizes).\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.move",
        "href": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.move.html#move",
        "title": "move",
        "section": "move",
        "text": "Move the point by a vector.\nVector.\nmove\nansys.edb.core.typing.PointLike\ntyping.Optional\nPointData\nor\nNone\nif\neither\npoint\nis\nan"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.move",
        "href": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.move.html#ansys.edb.core.geometry.point_data.PointData.move",
        "title": "move > move > move",
        "section": "move > move",
        "text": "PointData.move(vector)\n\nMove the point by a vector.\n\nParameters\n\nvector\n\nansys.edb.core.typing.PointLike\n\nVector.\n\nReturns\n\ntyping.Optional[PointData] or None if either point is an arc.\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentType.IO",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentType.IO.html#io",
        "title": "IO",
        "section": "IO",
        "text": "IO"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentType.IO",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentType.IO.html#ansys.edb.core.hierarchy.component_group.ComponentType.IO",
        "title": "IO > IO > IO",
        "section": "IO > IO",
        "text": "ComponentType.IO = 5\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.create_hfss.html#create_hfss",
        "title": "create_hfss",
        "section": "create_hfss",
        "text": "Create an HFSS model from an MCAD file.\nHFSS model created.\ncreate_hfss\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.create_hfss.html#ansys.edb.core.terminal.terminals.PointTerminal.create_hfss",
        "title": "create_hfss > create_hfss > create_hfss",
        "section": "create_hfss > create_hfss",
        "text": "PointTerminal.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nReturns\n\nMcadModel\n\nHFSS model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.mirror_x",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.mirror_x.html#mirror_x",
        "title": "mirror_x",
        "section": "mirror_x",
        "text": "Mirror a polygon by x line.\nX line.\nmirror_x\npython:float\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.mirror_x",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.mirror_x.html#ansys.edb.core.geometry.polygon_data.PolygonData.mirror_x",
        "title": "mirror_x > mirror_x > mirror_x",
        "section": "mirror_x > mirror_x",
        "text": "PolygonData.mirror_x(x)\n\nMirror a polygon by x line.\n\nParameters\n\nx\n\npython:float\n\nX line.\n\nReturns\n\nPolygonData\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.add_layer_above",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.add_layer_above.html#add_layer_above",
        "title": "add_layer_above",
        "section": "add_layer_above",
        "text": "Add a new layer above the specified layer.\nThis method adjusts existing layers as needed to maintain stackup consistency.\nName of the layer to add.\nName of the layer above which to add the new layer.\nadd_layer_above\nLayer\npython:str\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.add_layer_above",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.add_layer_above.html#ansys.edb.core.layer.layer_collection.LayerCollection.add_layer_above",
        "title": "add_layer_above > add_layer_above > add_layer_above",
        "section": "add_layer_above > add_layer_above",
        "text": "LayerCollection.add_layer_above(layer_to_add, layer_to_add_above_name)\n\nAdd a new layer above the specified layer.\n\nThis method adjusts existing layers as needed to maintain stackup consistency.\n\nParameters\n\nlayer_to_add\n\nLayer\n\nName of the layer to add.\n\nlayer_to_add_above_name\n\npython:str\n\nName of the layer above which to add the new layer.\n\nReturns\n\nLayer\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.net",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.net.html#net",
        "title": "net",
        "section": "net",
        "text": "Net: Net of the Connectable object.\nThis property can be set with a Net instance, a string, or None.\nnet\nNet\nNet\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.net",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.net.html#ansys.edb.core.primitive.primitive.Rectangle.net",
        "title": "net > net > net",
        "section": "net > net",
        "text": "property Rectangle.net\n\nNet: Net of the Connectable object.\n\nThis property can be set with a Net instance, a string, or None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.shape",
        "href": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.shape.html#shape",
        "title": "shape",
        "section": "shape",
        "text": "SolderballShape: Solder ball shape.\nshape\nSolderballShape"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.shape",
        "href": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.shape.html#ansys.edb.core.definition.solder_ball_property.SolderBallProperty.shape",
        "title": "shape > shape > shape",
        "section": "shape > shape",
        "text": "property SolderBallProperty.shape\n\nSolderballShape: Solder ball shape.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.remove_net",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.remove_net.html#remove_net",
        "title": "remove_net",
        "section": "remove_net",
        "text": "Remove a net.\nThis method is invalid for a differential pair.\nremove_net"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.remove_net",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.remove_net.html#ansys.edb.core.net.differential_pair.DifferentialPair.remove_net",
        "title": "remove_net > remove_net > remove_net",
        "section": "remove_net > remove_net",
        "text": "DifferentialPair.remove_net(net)\n\nRemove a net.\n\nThis method is invalid for a differential pair.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the property.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.set_product_property.html#ansys.edb.core.primitive.primitive.Path.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "Path.set_product_property(prod_id, attr_id, prop_value)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nprop_value\n\npython:str\n\nString stored in the property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.copy_cells",
        "href": "api/_autosummary/ansys.edb.core.database.Database.copy_cells.html#copy_cells",
        "title": "copy_cells",
        "section": "copy_cells",
        "text": "Copy cells from other databases or this database into this database.\nCells to copy.\nNew cells created in this database.\ncopy_cells\npython:list\nCell\npython:list\nCell"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.copy_cells",
        "href": "api/_autosummary/ansys.edb.core.database.Database.copy_cells.html#ansys.edb.core.database.Database.copy_cells",
        "title": "copy_cells > copy_cells > copy_cells",
        "section": "copy_cells > copy_cells",
        "text": "Database.copy_cells(cells_to_copy)\n\nCopy cells from other databases or this database into this database.\n\nParameters\n\ncells_to_copy\n\npython:list[Cell]\n\nCells to copy.\n\nReturns\n\npython:list[Cell]\n\nNew cells created in this database.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackHoleRange.UPPER_PAD_TO_LOWER_PAD",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackHoleRange.UPPER_PAD_TO_LOWER_PAD.html#upper_pad_to_lower_pad",
        "title": "UPPER_PAD_TO_LOWER_PAD",
        "section": "UPPER_PAD_TO_LOWER_PAD",
        "text": "UPPER_PAD_TO_LOWER_PAD"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackHoleRange.UPPER_PAD_TO_LOWER_PAD",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackHoleRange.UPPER_PAD_TO_LOWER_PAD.html#ansys.edb.core.definition.padstack_def_data.PadstackHoleRange.UPPER_PAD_TO_LOWER_PAD",
        "title": "UPPER_PAD_TO_LOWER_PAD > UPPER_PAD_TO_LOWER_PAD > UPPER_PAD_TO_LOWER_PAD",
        "section": "UPPER_PAD_TO_LOWER_PAD > UPPER_PAD_TO_LOWER_PAD",
        "text": "PadstackHoleRange.UPPER_PAD_TO_LOWER_PAD = 3\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDef.delete",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDef.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the bondwire definition.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDef.delete",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDef.delete.html#ansys.edb.core.definition.bondwire_def.BondwireDef.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "BondwireDef.delete()\n\nDelete the bondwire definition.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ViaStyle.WIREBOND",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ViaStyle.WIREBOND.html#wirebond",
        "title": "WIREBOND",
        "section": "WIREBOND",
        "text": "WIREBOND"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ViaStyle.WIREBOND",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ViaStyle.WIREBOND.html#ansys.edb.core.simulation_setup.simulation_settings.ViaStyle.WIREBOND",
        "title": "WIREBOND > WIREBOND > WIREBOND",
        "section": "WIREBOND > WIREBOND",
        "text": "ViaStyle.WIREBOND = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.extended_net",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.extended_net.html#extended_net",
        "title": "extended_net",
        "section": "extended_net",
        "text": "ExtendedNet or None: Extended net that the net belongs to.\nNone means that the net does not belong to an extended net.\nThis property is read-only.\nextended_net\nExtendedNet\nNone\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.extended_net",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.extended_net.html#ansys.edb.core.net.net.Net.extended_net",
        "title": "extended_net > extended_net > extended_net",
        "section": "extended_net > extended_net",
        "text": "property Net.extended_net\n\nExtendedNet or None: Extended net that the net belongs to.\n\nNone means that the net does not belong to an extended net.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.can_be_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.can_be_zone_primitive.html#can_be_zone_primitive",
        "title": "can_be_zone_primitive",
        "section": "can_be_zone_primitive",
        "text": "bool: Flag indicating if the primitive can be a zone.\nThis property is read-only.\ncan_be_zone_primitive\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.can_be_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.can_be_zone_primitive.html#ansys.edb.core.primitive.primitive.Primitive.can_be_zone_primitive",
        "title": "can_be_zone_primitive > can_be_zone_primitive > can_be_zone_primitive",
        "section": "can_be_zone_primitive > can_be_zone_primitive",
        "text": "property Primitive.can_be_zone_primitive\n\nbool: Flag indicating if the primitive can be a zone.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.find",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.find.html#find",
        "title": "find",
        "section": "find",
        "text": "Find a cell instance by name in a given layout.\nLayout to search for the cell instance.\nName of the cell instance.\nCell instance that is found, None otherwise.\nfind\nLayout\npython:str\nCellInstance\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.find",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.find.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.find",
        "title": "find > find > find",
        "section": "find > find",
        "text": "classmethod CellInstance.find(layout, name)\n\nFind a cell instance by name in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the cell instance.\n\nname\n\npython:str\n\nName of the cell instance.\n\nReturns\n\nCellInstance\n\nCell instance that is found, None otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.RectangleRepresentationType.INVALID_RECT_TYPE",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.RectangleRepresentationType.INVALID_RECT_TYPE.html#invalid_rect_type",
        "title": "INVALID_RECT_TYPE",
        "section": "INVALID_RECT_TYPE",
        "text": "INVALID_RECT_TYPE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.RectangleRepresentationType.INVALID_RECT_TYPE",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.RectangleRepresentationType.INVALID_RECT_TYPE.html#ansys.edb.core.primitive.primitive.RectangleRepresentationType.INVALID_RECT_TYPE",
        "title": "INVALID_RECT_TYPE > INVALID_RECT_TYPE > INVALID_RECT_TYPE",
        "section": "INVALID_RECT_TYPE > INVALID_RECT_TYPE",
        "text": "RectangleRepresentationType.INVALID_RECT_TYPE = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.is_mcad_3d_comp.html#is_mcad_3d_comp",
        "title": "is_mcad_3d_comp",
        "section": "is_mcad_3d_comp",
        "text": "bool: Flag indicating if this is a 3D composite MCAD model.\nThis property is read-only.\nis_mcad_3d_comp\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.is_mcad_3d_comp.html#ansys.edb.core.hierarchy.group.Group.is_mcad_3d_comp",
        "title": "is_mcad_3d_comp > is_mcad_3d_comp > is_mcad_3d_comp",
        "section": "is_mcad_3d_comp > is_mcad_3d_comp",
        "text": "property Group.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModel",
        "href": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModel.html#dielectricmaterialmodel",
        "title": "DielectricMaterialModel",
        "section": "DielectricMaterialModel",
        "text": "Represents a dielectric material model.\nDielectricMaterialModel.id\nint: Unique ID of the EDB object.\nDielectricMaterialModel.is_null\nbool: Flag indicating if the object exists in the database.\nDielectricMaterialModel.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nDielectricMaterialModel.type\nDielectricMaterialModelType: Type of the dielectric material model.\nDielectricMaterialModel\nDielectricMaterialModel.id\nint\nDielectricMaterialModel.is_null\nbool\nDielectricMaterialModel.msg\nEDBObjMessage\nDielectricMaterialModel.type\nDielectricMaterialModelType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModel",
        "href": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModel.html#ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModel",
        "title": "DielectricMaterialModel > DielectricMaterialModel > DielectricMaterialModel",
        "section": "DielectricMaterialModel > DielectricMaterialModel",
        "text": "class ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModel(msg)\n\nRepresents a dielectric material model.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nDielectricMaterialModel.id\n\nint: Unique ID of the EDB object.\n\nDielectricMaterialModel.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nDielectricMaterialModel.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nDielectricMaterialModel.type\n\nDielectricMaterialModelType: Type of the dielectric material model.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.msg.html#ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property HfssSimulationSetup.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.create",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a layer collection.\nMode of the layer collection.\nLayer collection created.\ncreate\nLayerCollectionMode\nLAMINATE\nLayerCollection"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.create",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.create.html#ansys.edb.core.layer.layer_collection.LayerCollection.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "static LayerCollection.create(mode=LayerCollectionMode.LAMINATE)\n\nCreate a layer collection.\n\nParameters\n\nmode\n\nLayerCollectionMode, default: LAMINATE\n\nMode of the layer collection.\n\nReturns\n\nLayerCollection\n\nLayer collection created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.do_deembed",
        "href": "api/_autosummary/ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.do_deembed.html#do_deembed",
        "title": "do_deembed",
        "section": "do_deembed",
        "text": "Enable port to be deembedded.\nTrue when successful, False when failed.\ndo_deembed\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.do_deembed",
        "href": "api/_autosummary/ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.do_deembed.html#ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.do_deembed",
        "title": "do_deembed > do_deembed > do_deembed",
        "section": "do_deembed > do_deembed",
        "text": "PortPostProcessingProp.do_deembed\n\nEnable port to be deembedded.\n\nReturns\n\nbool\n\nTrue when successful, False when failed.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.jedec5_bondwire_defs",
        "href": "api/_autosummary/ansys.edb.core.database.Database.jedec5_bondwire_defs.html#jedec5_bondwire_defs",
        "title": "jedec5_bondwire_defs",
        "section": "jedec5_bondwire_defs",
        "text": "list of:class:.Jedec5BondwireDef: All JEDEC5 bondwire definitions in the database.\njedec5_bondwire_defs\nlist"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.jedec5_bondwire_defs",
        "href": "api/_autosummary/ansys.edb.core.database.Database.jedec5_bondwire_defs.html#ansys.edb.core.database.Database.jedec5_bondwire_defs",
        "title": "jedec5_bondwire_defs > jedec5_bondwire_defs > jedec5_bondwire_defs",
        "section": "jedec5_bondwire_defs > jedec5_bondwire_defs",
        "text": "property Database.jedec5_bondwire_defs\n\nlist of:class:.Jedec5BondwireDef: All JEDEC5 bondwire definitions in the database.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.definition_type",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.definition_type.html#definition_type",
        "title": "definition_type",
        "section": "definition_type",
        "text": "DefinitionObjType: Object type of the bondwire definition.\ndefinition_type\nDefinitionObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.definition_type",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.definition_type.html#ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.definition_type",
        "title": "definition_type > definition_type > definition_type",
        "section": "definition_type > definition_type",
        "text": "property Jedec4BondwireDef.definition_type\n\nDefinitionObjType: Object type of the bondwire definition.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.save_as",
        "href": "api/_autosummary/ansys.edb.core.database.Database.save_as.html#save_as",
        "title": "save_as",
        "section": "save_as",
        "text": "Save the database to a new location and older EDB version.\nLocation for saving the new database file to.\nEDB version for the new database file. The default is \"\", in which case\nthe new database file is saved for the current version.\nsave_as\npython:str\npython:str\n\"\""
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.save_as",
        "href": "api/_autosummary/ansys.edb.core.database.Database.save_as.html#ansys.edb.core.database.Database.save_as",
        "title": "save_as > save_as > save_as",
        "section": "save_as > save_as",
        "text": "Database.save_as(path, version='')\n\nSave the database to a new location and older EDB version.\n\nParameters\n\npath\n\npython:str\n\nLocation for saving the new database file to.\n\nversion\n\npython:str, default: “”\n\nEDB version for the new database file. The default is \"\", in which case\nthe new database file is saved for the current version.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.clone",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a clone of the layer collection.\nLayer collection cloned.\nclone\nLayerCollection"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.clone",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.clone.html#ansys.edb.core.layer.layer_collection.LayerCollection.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "LayerCollection.clone()\n\nCreate a clone of the layer collection.\n\nReturns\n\nLayerCollection\n\nLayer collection cloned.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents this object’s ID.\nThis property is read-only.\nmsg\nEDBObjMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.msg.html#ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property SIWaveDCIRSimulationSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object’s ID.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.edb_uid.html#edb_uid",
        "title": "edb_uid",
        "section": "edb_uid",
        "text": "int: Unique, persistent ID for the Connectable object.\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\nThis property is read-only.\nedb_uid\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.edb_uid.html#ansys.edb.core.terminal.terminals.TerminalInstance.edb_uid",
        "title": "edb_uid > edb_uid > edb_uid",
        "section": "edb_uid > edb_uid",
        "text": "property TerminalInstance.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.delete",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the bondwire definition.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.delete",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.delete.html#ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "Jedec4BondwireDef.delete()\n\nDelete the bondwire definition.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.msg",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.msg",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.msg.html#ansys.edb.core.layout.layout.Layout.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property Layout.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.max_refinement_per_pass",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.max_refinement_per_pass.html#max_refinement_per_pass",
        "title": "max_refinement_per_pass",
        "section": "max_refinement_per_pass",
        "text": "int: Maximum mesh refinement per adaptive pass.\nmax_refinement_per_pass\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.max_refinement_per_pass",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.max_refinement_per_pass.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.max_refinement_per_pass",
        "title": "max_refinement_per_pass > max_refinement_per_pass > max_refinement_per_pass",
        "section": "max_refinement_per_pass > max_refinement_per_pass",
        "text": "property HFSSSettingsOptions.max_refinement_per_pass\n\nint: Maximum mesh refinement per adaptive pass.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.cast",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.cast.html#cast",
        "title": "cast",
        "section": "cast",
        "text": "Cast the primitive object to the correct concrete type.\ncast\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.cast",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.cast.html#ansys.edb.core.primitive.primitive.Polygon.cast",
        "title": "cast > cast > cast",
        "section": "cast > cast",
        "text": "Polygon.cast()\n\nCast the primitive object to the correct concrete type.\n\nReturns\n\nPrimitive\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.html#skindepthmeshoperation",
        "title": "SkinDepthMeshOperation",
        "section": "SkinDepthMeshOperation",
        "text": "Represents a skin depth mesh operation.\nstr: Name of the mesh operation.\nlist of tuple of (str, str, bool): List of net layer         information for the mesh operation.\nbool: Flag indicating if the mesh operation is enabled.\nbool: Flag indicating if refining inside is enabled.\nstr: Name of the mesh region.\nbool: Flag indicating if solve inside is enabled.\nstr: Skin depth.\nstr: Surface triangle length.\nNumber of layers.\nstr: Maximum number of mesh elements.\nbool: Flag indicating if the maximum number of mesh elements is restricted.\nSkinDepthMeshOperation.enabled\nbool: Flag indicating if the mesh operation is enabled.\nSkinDepthMeshOperation.max_elements\nstr: Maximum number of mesh elements.\nSkinDepthMeshOperation.mesh_region\nstr: Name of the mesh region.\nSkinDepthMeshOperation.name\nstr: Name of the mesh operation.\nSkinDepthMeshOperation.net_layer_info\nlist of tuple of (str, str, bool): List of net layer         information for the mesh operation.\nSkinDepthMeshOperation.number_of_layers\nstr: Number of layers.\nSkinDepthMeshOperation.refine_inside\nbool: Flag indicating if refining inside is enabled.\nSkinDepthMeshOperation.restrict_max_elements\nbool: Flag indicating if the maximum number of mesh elements is restricted.\nSkinDepthMeshOperation.skin_depth\nstr: Skin depth.\nSkinDepthMeshOperation.solve_inside\nbool: Flag indicating if solve inside is enabled.\nSkinDepthMeshOperation.surface_triangle_length\nstr: Surface triangle length.\nSkinDepthMeshOperation\nname\npython:str\nstr\nnet_layer_info\npython:list\npython:tuple\npython:str\npython:str\npython:None\nlist\ntuple\nstr\nstr\nbool\nenabled\npython:True\nbool\nrefine_inside\npython:False\nbool\nmesh_region\npython:str\nstr\nsolve_inside\npython:False\nbool\nskin_depth\npython:str\nstr\nsurface_triangle_length\npython:str\nstr\npython:str\nmax_elements\npython:str\nstr\nrestrict_max_elements\npython:False\nbool\nSkinDepthMeshOperation.enabled\nbool\nSkinDepthMeshOperation.max_elements\nstr\nSkinDepthMeshOperation.mesh_region\nstr\nSkinDepthMeshOperation.name\nstr\nSkinDepthMeshOperation.net_layer_info\nlist\ntuple\nstr\nstr\nbool\nSkinDepthMeshOperation.number_of_layers\nstr\nSkinDepthMeshOperation.refine_inside\nbool\nSkinDepthMeshOperation.restrict_max_elements\nbool\nSkinDepthMeshOperation.skin_depth\nstr\nSkinDepthMeshOperation.solve_inside\nbool\nSkinDepthMeshOperation.surface_triangle_length\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.html#ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation",
        "title": "SkinDepthMeshOperation > SkinDepthMeshOperation > SkinDepthMeshOperation",
        "section": "SkinDepthMeshOperation > SkinDepthMeshOperation",
        "text": "class ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation(name='', net_layer_info=None, enabled=True, refine_inside=False, mesh_region='', solve_inside=False, skin_depth='1um', surface_triangle_length='1mm', num_layers='2', max_elements='1000', restrict_max_elements=False)\n\nRepresents a skin depth mesh operation.\n\nAttributes\n\nname\n\npython:str, default: “”\n\nstr: Name of the mesh operation.\n\nnet_layer_info\n\npython:list[python:tuple(python:str, python:str, bool)], default: python:None\n\nlist of tuple of (str, str, bool): List of net layer         information for the mesh operation.\n\nenabled\n\nbool, default: python:True\n\nbool: Flag indicating if the mesh operation is enabled.\n\nrefine_inside\n\nbool, default: python:False\n\nbool: Flag indicating if refining inside is enabled.\n\nmesh_region\n\npython:str, default: “”\n\nstr: Name of the mesh region.\n\nsolve_inside\n\nbool, default: python:False\n\nbool: Flag indicating if solve inside is enabled.\n\nskin_depth\n\npython:str, default: “1um”\n\nstr: Skin depth.\n\nsurface_triangle_length\n\npython:str, default: “1mm”\n\nstr: Surface triangle length.\n\nnum_layers\n\npython:str, default: 2\n\nNumber of layers.\n\nmax_elements\n\npython:str, default: “1000”\n\nstr: Maximum number of mesh elements.\n\nrestrict_max_elements\n\nbool, default: python:False\n\nbool: Flag indicating if the maximum number of mesh elements is restricted.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nSkinDepthMeshOperation.enabled\n\nbool: Flag indicating if the mesh operation is enabled.\n\nSkinDepthMeshOperation.max_elements\n\nstr: Maximum number of mesh elements.\n\nSkinDepthMeshOperation.mesh_region\n\nstr: Name of the mesh region.\n\nSkinDepthMeshOperation.name\n\nstr: Name of the mesh operation.\n\nSkinDepthMeshOperation.net_layer_info\n\nlist of tuple of (str, str, bool): List of net layer         information for the mesh operation.\n\nSkinDepthMeshOperation.number_of_layers\n\nstr: Number of layers.\n\nSkinDepthMeshOperation.refine_inside\n\nbool: Flag indicating if refining inside is enabled.\n\nSkinDepthMeshOperation.restrict_max_elements\n\nbool: Flag indicating if the maximum number of mesh elements is restricted.\n\nSkinDepthMeshOperation.skin_depth\n\nstr: Skin depth.\n\nSkinDepthMeshOperation.solve_inside\n\nbool: Flag indicating if solve inside is enabled.\n\nSkinDepthMeshOperation.surface_triangle_length\n\nstr: Surface triangle length.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.msg",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.msg",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.msg.html#ansys.edb.core.hierarchy.group.Group.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property Group.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.pos_remote_sense_pin",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.pos_remote_sense_pin.html#pos_remote_sense_pin",
        "title": "pos_remote_sense_pin",
        "section": "pos_remote_sense_pin",
        "text": "PadstackInstance:         Positive remote sense pin of the voltage regulator.\nneg_remote_sense_pin\npos_remote_sense_pin\nPadstackInstance\nneg_remote_sense_pin"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.pos_remote_sense_pin",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.pos_remote_sense_pin.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.pos_remote_sense_pin",
        "title": "pos_remote_sense_pin > pos_remote_sense_pin > pos_remote_sense_pin",
        "section": "pos_remote_sense_pin > pos_remote_sense_pin",
        "text": "property VoltageRegulator.pos_remote_sense_pin\n\nPadstackInstance:         Positive remote sense pin of the voltage regulator.\n\nneg_remote_sense_pin\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.cast",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.cast.html#cast",
        "title": "cast",
        "section": "cast",
        "text": "Cast the base SimulationSetup object to correct subclass, if possible.\ncast\nSimulationSetup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.cast",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.cast.html#ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.cast",
        "title": "cast > cast > cast",
        "section": "cast > cast",
        "text": "SIWaveSimulationSetup.cast()\n\nCast the base SimulationSetup object to correct subclass, if possible.\n\nReturns\n\nSimulationSetup\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Edge.cast",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Edge.cast.html#cast",
        "title": "cast",
        "section": "cast",
        "text": "Cast the base edge object to the correct subclass, if possible.\ncast\nEdge"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Edge.cast",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Edge.cast.html#ansys.edb.core.terminal.terminals.Edge.cast",
        "title": "cast > cast > cast",
        "section": "cast > cast",
        "text": "Edge.cast()\n\nCast the base edge object to the correct subclass, if possible.\n\nReturns\n\nEdge\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.type.html#type",
        "title": "type",
        "section": "type",
        "text": "type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.type.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.type",
        "title": "type > type > type",
        "section": "type > type",
        "text": "PinGroupTerminal.type = 5\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.create_3d_comp.html#create_3d_comp",
        "title": "create_3d_comp",
        "section": "create_3d_comp",
        "text": "Create a 3D composite model from an MCAD file.\n3D composite model created.\ncreate_3d_comp\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.create_3d_comp.html#ansys.edb.core.primitive.primitive.Rectangle.create_3d_comp",
        "title": "create_3d_comp > create_3d_comp > create_3d_comp",
        "section": "create_3d_comp > create_3d_comp",
        "text": "Rectangle.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nReturns\n\nMcadModel\n\n3D composite model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentType.RESISTOR",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentType.RESISTOR.html#resistor",
        "title": "RESISTOR",
        "section": "RESISTOR",
        "text": "RESISTOR"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentType.RESISTOR",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentType.RESISTOR.html#ansys.edb.core.hierarchy.component_group.ComponentType.RESISTOR",
        "title": "RESISTOR > RESISTOR > RESISTOR",
        "section": "RESISTOR > RESISTOR",
        "text": "ComponentType.RESISTOR = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.msg",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.msg",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.msg.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property PadstackInstanceTerminal.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.reference_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.reference_terminal.html#reference_terminal",
        "title": "reference_terminal",
        "section": "reference_terminal",
        "text": "Terminal: Terminal that the terminal references, if any.\nreference_terminal\nTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.reference_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.reference_terminal.html#ansys.edb.core.terminal.terminals.EdgeTerminal.reference_terminal",
        "title": "reference_terminal > reference_terminal > reference_terminal",
        "section": "reference_terminal > reference_terminal",
        "text": "property EdgeTerminal.reference_terminal\n\nTerminal: Terminal that the terminal references, if any.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.find_by_id.html#find_by_id",
        "title": "find_by_id",
        "section": "find_by_id",
        "text": "Find a Connectable object by database ID in a given layout.\nLayout to search for the Connectable object.\nDatabase ID.\nConnectable object with the given database ID.\nfind_by_id\nLayout\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.find_by_id.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.find_by_id",
        "title": "find_by_id > find_by_id > find_by_id",
        "section": "find_by_id > find_by_id",
        "text": "classmethod ComponentGroup.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the Connectable object.\n\nuid\n\npython:int\n\nDatabase ID.\n\nReturns\n\nConnectable\n\nConnectable object with the given database ID.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents this object’s ID.\nThis property is read-only.\nmsg\nEDBObjMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.msg.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property SIWaveSimulationSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object’s ID.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.delete",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the layout object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.delete",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.delete.html#ansys.edb.core.terminal.terminals.EdgeTerminal.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "EdgeTerminal.delete()\n\nDelete the layout object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform.Transform.is_null",
        "href": "api/_autosummary/ansys.edb.core.utility.transform.Transform.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform.Transform.is_null",
        "href": "api/_autosummary/ansys.edb.core.utility.transform.Transform.is_null.html#ansys.edb.core.utility.transform.Transform.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property Transform.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.boundary_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.boundary_type.html#boundary_type",
        "title": "boundary_type",
        "section": "boundary_type",
        "text": "BoundaryType: Boundary type of the terminal.\nboundary_type\nBoundaryType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.boundary_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.boundary_type.html#ansys.edb.core.terminal.terminals.Terminal.boundary_type",
        "title": "boundary_type > boundary_type > boundary_type",
        "section": "boundary_type > boundary_type",
        "text": "property Terminal.boundary_type\n\nBoundaryType: Boundary type of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.component",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.component.html#component",
        "title": "component",
        "section": "component",
        "text": "ComponentGroup:         Component of the Connectable object.\ncomponent\nComponentGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.component",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.component.html#ansys.edb.core.primitive.primitive.Rectangle.component",
        "title": "component > component > component",
        "section": "component > component",
        "text": "property Rectangle.component\n\nComponentGroup:         Component of the Connectable object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.get_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.get_hfss_prop.html#get_hfss_prop",
        "title": "get_hfss_prop",
        "section": "get_hfss_prop",
        "text": "Get HFSS properties.\nName of the material property.\nWhether to solve inside.\nget_hfss_prop\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.get_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.get_hfss_prop.html#ansys.edb.core.primitive.primitive.Rectangle.get_hfss_prop",
        "title": "get_hfss_prop > get_hfss_prop > get_hfss_prop",
        "section": "get_hfss_prop > get_hfss_prop",
        "text": "Rectangle.get_hfss_prop()\n\nGet HFSS properties.\n\nReturns\n\nmaterial\n\npython:str\n\nName of the material property.\n\nsolve_inside\n\nbool\n\nWhether to solve inside.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings.percent_refinement_per_pass",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings.percent_refinement_per_pass.html#percent_refinement_per_pass",
        "title": "percent_refinement_per_pass",
        "section": "percent_refinement_per_pass",
        "text": "float: Mesh refinement percentage per conduction adaptive pass.\npercent_refinement_per_pass\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings.percent_refinement_per_pass",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings.percent_refinement_per_pass.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings.percent_refinement_per_pass",
        "title": "percent_refinement_per_pass > percent_refinement_per_pass > percent_refinement_per_pass",
        "section": "percent_refinement_per_pass > percent_refinement_per_pass",
        "text": "property HFSSDCRSettings.percent_refinement_per_pass\n\nfloat: Mesh refinement percentage per conduction adaptive pass.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDs given a product ID for the layout object.\nID representing a product that supports the EDB.\nAll user-defined attribute IDs for properties stored in the object\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.get_product_property_ids.html#ansys.edb.core.primitive.primitive.Primitive.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "Primitive.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nReturns\n\npython:list[python:int]\n\nAll user-defined attribute IDs for properties stored in the object\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.msg",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.msg",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.msg.html#ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property LayoutObjInstance.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.via_material",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.via_material.html#via_material",
        "title": "via_material",
        "section": "via_material",
        "text": "str: Default via material.\nvia_material\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.via_material",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.via_material.html#ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.via_material",
        "title": "via_material > via_material > via_material",
        "section": "via_material > via_material",
        "text": "property AdvancedSettings.via_material\n\nstr: Default via material.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the product property.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.get_product_property.html#ansys.edb.core.hierarchy.via_group.ViaGroup.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "ViaGroup.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nReturns\n\npython:str\n\nString stored in the product property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MultiFrequencyAdaptiveSolution.max_passes",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MultiFrequencyAdaptiveSolution.max_passes.html#max_passes",
        "title": "max_passes",
        "section": "max_passes",
        "text": "int: Maximum number of adaptive passes.\nmax_passes\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MultiFrequencyAdaptiveSolution.max_passes",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MultiFrequencyAdaptiveSolution.max_passes.html#ansys.edb.core.simulation_setup.adaptive_solutions.MultiFrequencyAdaptiveSolution.max_passes",
        "title": "max_passes > max_passes > max_passes",
        "section": "max_passes > max_passes",
        "text": "property MultiFrequencyAdaptiveSolution.max_passes\n\nint: Maximum number of adaptive passes.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.transform",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.transform.html#transform",
        "title": "transform",
        "section": "transform",
        "text": "Transform:         Transformation information of the hierarchy object.\ntransform\nTransform"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.transform",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.transform.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.transform",
        "title": "transform > transform > transform",
        "section": "transform > transform",
        "text": "property CellInstance.transform\n\nTransform:         Transformation information of the hierarchy object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin",
        "href": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin.html#componentpin",
        "title": "ComponentPin",
        "section": "ComponentPin",
        "text": "Represents a component pin.\nComponentPin.create(comp_def, name)\nCreate a component pin in a given component definition.\nComponentPin.find(comp_def, name)\nFind a component pin in a given component definition.\nComponentPin.component_def\nComponentDef: Component definition that the component pin belongs to.\nComponentPin.id\nint: Unique ID of the EDB object.\nComponentPin.is_null\nbool: Flag indicating if the object exists in the database.\nComponentPin.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nComponentPin.name\nstr: Name of the component pin.\nComponentPin.number\nint: Serial number of the component pin inside its component definition.\nComponentPin\nComponentPin.create\nComponentPin.find\nComponentPin.component_def\nComponentDef\nComponentPin.id\nint\nComponentPin.is_null\nbool\nComponentPin.msg\nEDBObjMessage\nComponentPin.name\nstr\nComponentPin.number\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin",
        "href": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin.html#ansys.edb.core.definition.component_pin.ComponentPin",
        "title": "ComponentPin > ComponentPin > ComponentPin",
        "section": "ComponentPin > ComponentPin",
        "text": "class ansys.edb.core.definition.component_pin.ComponentPin(msg)\n\nRepresents a component pin.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nComponentPin.create(comp_def, name)\n\nCreate a component pin in a given component definition.\n\nComponentPin.find(comp_def, name)\n\nFind a component pin in a given component definition.\n\n\n\nAttributes\n\n\n\n\n\n\n\nComponentPin.component_def\n\nComponentDef: Component definition that the component pin belongs to.\n\nComponentPin.id\n\nint: Unique ID of the EDB object.\n\nComponentPin.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nComponentPin.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nComponentPin.name\n\nstr: Name of the component pin.\n\nComponentPin.number\n\nint: Serial number of the component pin inside its component definition.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_zone_primitive.html#is_zone_primitive",
        "title": "is_zone_primitive",
        "section": "is_zone_primitive",
        "text": "bool: Flag indicating if the primitive object is a zone.\nThis property is read-only.\nis_zone_primitive\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_zone_primitive.html#ansys.edb.core.primitive.primitive.Circle.is_zone_primitive",
        "title": "is_zone_primitive > is_zone_primitive > is_zone_primitive",
        "section": "is_zone_primitive > is_zone_primitive",
        "text": "property Circle.is_zone_primitive\n\nbool: Flag indicating if the primitive object is a zone.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_zone_primitive.html#is_zone_primitive",
        "title": "is_zone_primitive",
        "section": "is_zone_primitive",
        "text": "bool: Flag indicating if the primitive object is a zone.\nThis property is read-only.\nis_zone_primitive\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_zone_primitive.html#ansys.edb.core.primitive.primitive.Primitive.is_zone_primitive",
        "title": "is_zone_primitive > is_zone_primitive > is_zone_primitive",
        "section": "is_zone_primitive > is_zone_primitive",
        "text": "property Primitive.is_zone_primitive\n\nbool: Flag indicating if the primitive object is a zone.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.transform",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.transform.html#transform",
        "title": "transform",
        "section": "transform",
        "text": "Transform:         Transformation information of the hierarchy object.\ntransform\nTransform"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.transform",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.transform.html#ansys.edb.core.hierarchy.inst_array.InstArray.transform",
        "title": "transform > transform > transform",
        "section": "transform > transform",
        "text": "property InstArray.transform\n\nTransform:         Transformation information of the hierarchy object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadType.ANTI_PAD",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadType.ANTI_PAD.html#anti_pad",
        "title": "ANTI_PAD",
        "section": "ANTI_PAD",
        "text": "ANTI_PAD"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadType.ANTI_PAD",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadType.ANTI_PAD.html#ansys.edb.core.definition.padstack_def_data.PadType.ANTI_PAD",
        "title": "ANTI_PAD > ANTI_PAD > ANTI_PAD",
        "section": "ANTI_PAD > ANTI_PAD",
        "text": "PadType.ANTI_PAD = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType.INVALID_DEFINITION_TYPE",
        "href": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType.INVALID_DEFINITION_TYPE.html#invalid_definition_type",
        "title": "INVALID_DEFINITION_TYPE",
        "section": "INVALID_DEFINITION_TYPE",
        "text": "INVALID_DEFINITION_TYPE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType.INVALID_DEFINITION_TYPE",
        "href": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType.INVALID_DEFINITION_TYPE.html#ansys.edb.core.edb_defs.DefinitionObjType.INVALID_DEFINITION_TYPE",
        "title": "INVALID_DEFINITION_TYPE > INVALID_DEFINITION_TYPE > INVALID_DEFINITION_TYPE",
        "section": "INVALID_DEFINITION_TYPE > INVALID_DEFINITION_TYPE",
        "text": "DefinitionObjType.INVALID_DEFINITION_TYPE = -1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.msg",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.msg",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.msg.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property VoltageRegulator.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.sub_circuit",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.sub_circuit.html#sub_circuit",
        "title": "sub_circuit",
        "section": "sub_circuit",
        "text": "str: Name of the subcircuit in the SPICE model.\nsub_circuit\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.sub_circuit",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.sub_circuit.html#ansys.edb.core.hierarchy.spice_model.SPICEModel.sub_circuit",
        "title": "sub_circuit > sub_circuit > sub_circuit",
        "section": "sub_circuit > sub_circuit",
        "text": "property SPICEModel.sub_circuit\n\nstr: Name of the subcircuit in the SPICE model.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.dcr",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.dcr.html#dcr",
        "title": "dcr",
        "section": "dcr",
        "text": "HFSSDCRSettings: DCR settings for HFSS simulations.\ndcr\nHFSSDCRSettings"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.dcr",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.dcr.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.dcr",
        "title": "dcr > dcr > dcr",
        "section": "dcr > dcr",
        "text": "property HFSSSimulationSettings.dcr\n\nHFSSDCRSettings: DCR settings for HFSS simulations.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.AdaptType.SINGLE",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.AdaptType.SINGLE.html#single",
        "title": "SINGLE",
        "section": "SINGLE",
        "text": "SINGLE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.AdaptType.SINGLE",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.AdaptType.SINGLE.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.AdaptType.SINGLE",
        "title": "SINGLE > SINGLE > SINGLE",
        "section": "SINGLE > SINGLE",
        "text": "AdaptType.SINGLE = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.obj_type",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.obj_type.html#obj_type",
        "title": "obj_type",
        "section": "obj_type",
        "text": "LayoutObjType: Layout object type.\nThis property is read-only.\nobj_type\nLayoutObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.obj_type",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.obj_type.html#ansys.edb.core.net.extended_net.ExtendedNet.obj_type",
        "title": "obj_type > obj_type > obj_type",
        "section": "obj_type > obj_type",
        "text": "property ExtendedNet.obj_type\n\nLayoutObjType: Layout object type.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadType.HOLE",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadType.HOLE.html#hole",
        "title": "HOLE",
        "section": "HOLE",
        "text": "HOLE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadType.HOLE",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadType.HOLE.html#ansys.edb.core.definition.padstack_def_data.PadType.HOLE",
        "title": "HOLE > HOLE > HOLE",
        "section": "HOLE > HOLE",
        "text": "PadType.HOLE = 3\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty.height",
        "href": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty.height.html#height",
        "title": "height",
        "section": "height",
        "text": "Value: Die height.\nThis property can be set with ValueLike.\nheight\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty.height",
        "href": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty.height.html#ansys.edb.core.definition.die_property.DieProperty.height",
        "title": "height > height > height",
        "section": "height > height",
        "text": "property DieProperty.height\n\nValue: Die height.\n\nThis property can be set with ValueLike.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.make_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.make_zone_primitive.html#make_zone_primitive",
        "title": "make_zone_primitive",
        "section": "make_zone_primitive",
        "text": "Make the primitive a zone primitive with a zone specified by the provided ID.\nID of the zone primitive to use.\nmake_zone_primitive\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.make_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.make_zone_primitive.html#ansys.edb.core.primitive.primitive.Text.make_zone_primitive",
        "title": "make_zone_primitive > make_zone_primitive > make_zone_primitive",
        "section": "make_zone_primitive > make_zone_primitive",
        "text": "Text.make_zone_primitive(zone_id)\n\nMake the primitive a zone primitive with a zone specified by the provided ID.\n\nParameters\n\nzone_id\n\npython:int\n\nID of the zone primitive to use.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.mesh_automatic",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.mesh_automatic.html#mesh_automatic",
        "title": "mesh_automatic",
        "section": "mesh_automatic",
        "text": "bool: Flag indicating it mesh refinement frequency is automatically determined.\nmesh_automatic\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.mesh_automatic",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.mesh_automatic.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.mesh_automatic",
        "title": "mesh_automatic > mesh_automatic > mesh_automatic",
        "section": "mesh_automatic > mesh_automatic",
        "text": "property SIWaveAdvancedSettings.mesh_automatic\n\nbool: Flag indicating it mesh refinement frequency is automatically determined.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.net",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.net.html#net",
        "title": "net",
        "section": "net",
        "text": "Net: Net of the Connectable object.\nThis property can be set with a Net instance, a string, or None.\nnet\nNet\nNet\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.net",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.net.html#ansys.edb.core.primitive.primitive.BoardBendDef.net",
        "title": "net > net > net",
        "section": "net > net",
        "text": "property BoardBendDef.net\n\nNet: Net of the Connectable object.\n\nThis property can be set with a Net instance, a string, or None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.netlist_model.NetlistModel.id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.netlist_model.NetlistModel.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.netlist_model.NetlistModel.id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.netlist_model.NetlistModel.id.html#ansys.edb.core.hierarchy.netlist_model.NetlistModel.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property NetlistModel.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.set_parameters",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.set_parameters.html#set_parameters",
        "title": "set_parameters",
        "section": "set_parameters",
        "text": "Set parameters of the JEDEC4 bondwire definition.\nBondwire top-to-die distance.\nset_parameters\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.set_parameters",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.set_parameters.html#ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.set_parameters",
        "title": "set_parameters > set_parameters > set_parameters",
        "section": "set_parameters > set_parameters",
        "text": "Jedec4BondwireDef.set_parameters(top_to_die_distance)\n\nSet parameters of the JEDEC4 bondwire definition.\n\nParameters\n\ntop_to_die_distance\n\nValue\n\nBondwire top-to-die distance.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.cast",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.cast.html#cast",
        "title": "cast",
        "section": "cast",
        "text": "Cast the terminal object to the correct concrete type, fetching the type if necessary.\ncast\nTerminalType\nTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.cast",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.cast.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.cast",
        "title": "cast > cast > cast",
        "section": "cast > cast",
        "text": "PadstackInstanceTerminal.cast(term_type=None)\n\nCast the terminal object to the correct concrete type, fetching the type if necessary.\n\nParameters\n\nterm_type\n\nTerminalType\n\n\n\nReturns\n\nTerminal\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.html#spicemodel",
        "title": "SPICEModel",
        "section": "SPICEModel",
        "text": "Represents a SPICE model object.\nSPICEModel.add_terminal(terminal, pin)\nAdd a terminal with a pin number.\nSPICEModel.clone()\nClone a model.\nSPICEModel.create(name, path, sub_circuit)\nCreate a SPICE model.\nSPICEModel.remove_terminal(terminal)\nRemove a terminal.\nSPICEModel.id\nint: Unique ID of the EDB object.\nSPICEModel.is_null\nbool: Flag indicating if the object exists in the database.\nSPICEModel.model_name\nstr: Name of the SPICE model file.\nSPICEModel.model_path\nstr: Path to the SPICE model file.\nSPICEModel.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nSPICEModel.sub_circuit\nstr: Name of the subcircuit in the SPICE model.\nSPICEModel\nSPICEModel.add_terminal\nSPICEModel.clone\nSPICEModel.create\nSPICEModel.remove_terminal\nSPICEModel.id\nint\nSPICEModel.is_null\nbool\nSPICEModel.model_name\nstr\nSPICEModel.model_path\nstr\nSPICEModel.msg\nEDBObjMessage\nSPICEModel.sub_circuit\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.html#ansys.edb.core.hierarchy.spice_model.SPICEModel",
        "title": "SPICEModel > SPICEModel > SPICEModel",
        "section": "SPICEModel > SPICEModel",
        "text": "class ansys.edb.core.hierarchy.spice_model.SPICEModel(msg)\n\nRepresents a SPICE model object.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nSPICEModel.add_terminal(terminal, pin)\n\nAdd a terminal with a pin number.\n\nSPICEModel.clone()\n\nClone a model.\n\nSPICEModel.create(name, path, sub_circuit)\n\nCreate a SPICE model.\n\nSPICEModel.remove_terminal(terminal)\n\nRemove a terminal.\n\n\n\nAttributes\n\n\n\n\n\n\n\nSPICEModel.id\n\nint: Unique ID of the EDB object.\n\nSPICEModel.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nSPICEModel.model_name\n\nstr: Name of the SPICE model file.\n\nSPICEModel.model_path\n\nstr: Path to the SPICE model file.\n\nSPICEModel.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nSPICEModel.sub_circuit\n\nstr: Name of the subcircuit in the SPICE model.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.die_property.DieType.FLIPCHIP",
        "href": "api/_autosummary/ansys.edb.core.definition.die_property.DieType.FLIPCHIP.html#flipchip",
        "title": "FLIPCHIP",
        "section": "FLIPCHIP",
        "text": "FLIPCHIP"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.die_property.DieType.FLIPCHIP",
        "href": "api/_autosummary/ansys.edb.core.definition.die_property.DieType.FLIPCHIP.html#ansys.edb.core.definition.die_property.DieType.FLIPCHIP",
        "title": "FLIPCHIP > FLIPCHIP > FLIPCHIP",
        "section": "FLIPCHIP > FLIPCHIP",
        "text": "DieType.FLIPCHIP = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.use_defeature_absolute_length",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.use_defeature_absolute_length.html#use_defeature_absolute_length",
        "title": "use_defeature_absolute_length",
        "section": "use_defeature_absolute_length",
        "text": "bool: Flag indicating if absolute length or extent ratio is used when defeaturing polygons.\nuse_defeature_absolute_length\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.use_defeature_absolute_length",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.use_defeature_absolute_length.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.use_defeature_absolute_length",
        "title": "use_defeature_absolute_length > use_defeature_absolute_length > use_defeature_absolute_length",
        "section": "use_defeature_absolute_length > use_defeature_absolute_length",
        "text": "property HFSSAdvancedSettings.use_defeature_absolute_length\n\nbool: Flag indicating if absolute length or extent ratio is used when defeaturing polygons.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.neg_remote_sense_pin",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.neg_remote_sense_pin.html#neg_remote_sense_pin",
        "title": "neg_remote_sense_pin",
        "section": "neg_remote_sense_pin",
        "text": "PadstackInstance:         Negative remote sense pin of the voltage regulator.\npos_remote_sense_pin\nneg_remote_sense_pin\nPadstackInstance\npos_remote_sense_pin"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.neg_remote_sense_pin",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.neg_remote_sense_pin.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.neg_remote_sense_pin",
        "title": "neg_remote_sense_pin > neg_remote_sense_pin > neg_remote_sense_pin",
        "section": "neg_remote_sense_pin > neg_remote_sense_pin",
        "text": "property VoltageRegulator.neg_remote_sense_pin\n\nPadstackInstance:         Negative remote sense pin of the voltage regulator.\n\npos_remote_sense_pin\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the product property.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.get_product_property.html#ansys.edb.core.primitive.primitive.Polygon.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "Polygon.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nReturns\n\npython:str\n\nString stored in the product property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.delete",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the layout object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.delete",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.delete.html#ansys.edb.core.primitive.primitive.Text.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "Text.delete()\n\nDelete the layout object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.union_polygons",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.union_polygons.html#union_polygons",
        "title": "union_polygons",
        "section": "union_polygons",
        "text": "bool: Flag indicating if polygons are unioned before meshing.\nunion_polygons\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.union_polygons",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.union_polygons.html#ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.union_polygons",
        "title": "union_polygons > union_polygons > union_polygons",
        "section": "union_polygons > union_polygons",
        "text": "property AdvancedSettings.union_polygons\n\nbool: Flag indicating if polygons are unioned before meshing.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDefType.JEDEC5_BONDWIRE_DEF",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDefType.JEDEC5_BONDWIRE_DEF.html#jedec5_bondwire_def",
        "title": "JEDEC5_BONDWIRE_DEF",
        "section": "JEDEC5_BONDWIRE_DEF",
        "text": "JEDEC5_BONDWIRE_DEF"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDefType.JEDEC5_BONDWIRE_DEF",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDefType.JEDEC5_BONDWIRE_DEF.html#ansys.edb.core.definition.bondwire_def.BondwireDefType.JEDEC5_BONDWIRE_DEF",
        "title": "JEDEC5_BONDWIRE_DEF > JEDEC5_BONDWIRE_DEF > JEDEC5_BONDWIRE_DEF",
        "section": "JEDEC5_BONDWIRE_DEF > JEDEC5_BONDWIRE_DEF",
        "text": "BondwireDefType.JEDEC5_BONDWIRE_DEF = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.relative_permitivity_at_high_low_frequency",
        "href": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.relative_permitivity_at_high_low_frequency.html#relative_permitivity_at_high_low_frequency",
        "title": "relative_permitivity_at_high_low_frequency",
        "section": "relative_permitivity_at_high_low_frequency",
        "text": "tuple of float, float: Relative permitivity frequency range (low, high).\nrelative_permitivity_at_high_low_frequency\ntuple\nfloat\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.relative_permitivity_at_high_low_frequency",
        "href": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.relative_permitivity_at_high_low_frequency.html#ansys.edb.core.definition.debye_model.DebyeModel.relative_permitivity_at_high_low_frequency",
        "title": "relative_permitivity_at_high_low_frequency > relative_permitivity_at_high_low_frequency > relative_permitivity_at_high_low_frequency",
        "section": "relative_permitivity_at_high_low_frequency > relative_permitivity_at_high_low_frequency",
        "text": "property DebyeModel.relative_permitivity_at_high_low_frequency\n\ntuple of float, float: Relative permitivity frequency range (low, high).\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData.midpoint",
        "href": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData.midpoint.html#midpoint",
        "title": "midpoint",
        "section": "midpoint",
        "text": "Compute the midpoint of this point and another point.\nOther point\nMidpoint of the two points.\nmidpoint\nPoint3DData\nPoint3DData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData.midpoint",
        "href": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData.midpoint.html#ansys.edb.core.geometry.point3d_data.Point3DData.midpoint",
        "title": "midpoint > midpoint > midpoint",
        "section": "midpoint > midpoint",
        "text": "Point3DData.midpoint(other)\n\nCompute the midpoint of this point and another point.\n\nParameters\n\nother\n\nPoint3DData\n\nOther point\n\nReturns\n\nPoint3DData\n\nMidpoint of the two points.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_mcad_hfss.html#is_mcad_hfss",
        "title": "is_mcad_hfss",
        "section": "is_mcad_hfss",
        "text": "bool: Flag indicating if this is an HFSS MCAD model.\nThis property is read-only.\nis_mcad_hfss\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_mcad_hfss.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_mcad_hfss",
        "title": "is_mcad_hfss > is_mcad_hfss > is_mcad_hfss",
        "section": "is_mcad_hfss > is_mcad_hfss",
        "text": "property PadstackInstanceTerminal.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.set_product_solver_option",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.set_product_solver_option.html#set_product_solver_option",
        "title": "set_product_solver_option",
        "section": "set_product_solver_option",
        "text": "Set the product solver option.\nID of the product.\nName of the solver.\nName of the product solver option.\nset_product_solver_option\nProductIdType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.set_product_solver_option",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.set_product_solver_option.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.set_product_solver_option",
        "title": "set_product_solver_option > set_product_solver_option > set_product_solver_option",
        "section": "set_product_solver_option > set_product_solver_option",
        "text": "PinGroupTerminal.set_product_solver_option(product_id, solver_name, option)\n\nSet the product solver option.\n\nParameters\n\nproduct_id\n\nProductIdType\n\nID of the product.\n\nsolver_name\n\nobj:str\n\nName of the solver.\n\noption\n\nobj:str\n\nName of the product solver option.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.create_hfss.html#create_hfss",
        "title": "create_hfss",
        "section": "create_hfss",
        "text": "Create an HFSS model from an MCAD file.\nHFSS model created.\ncreate_hfss\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.create_hfss.html#ansys.edb.core.primitive.primitive.BoardBendDef.create_hfss",
        "title": "create_hfss > create_hfss > create_hfss",
        "section": "create_hfss > create_hfss",
        "text": "BoardBendDef.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nReturns\n\nMcadModel\n\nHFSS model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.frequency",
        "href": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.frequency.html#frequency",
        "title": "frequency",
        "section": "frequency",
        "text": "float: Frequency.\nfrequency\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.frequency",
        "href": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.frequency.html#ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.frequency",
        "title": "frequency > frequency > frequency",
        "section": "frequency > frequency",
        "text": "property DjordjecvicSarkarModel.frequency\n\nfloat: Frequency.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.is_blackbox",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.is_blackbox.html#is_blackbox",
        "title": "is_blackbox",
        "section": "is_blackbox",
        "text": "bool: Flag indicating if the cell is a blackbox.\nis_blackbox\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.is_blackbox",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.is_blackbox.html#ansys.edb.core.layout.cell.Cell.is_blackbox",
        "title": "is_blackbox > is_blackbox > is_blackbox",
        "section": "is_blackbox > is_blackbox",
        "text": "property Cell.is_blackbox\n\nbool: Flag indicating if the cell is a blackbox.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.msg",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.msg",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.msg.html#ansys.edb.core.primitive.primitive.Primitive.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property Primitive.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings.max_num_arc_points",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings.max_num_arc_points.html#max_num_arc_points",
        "title": "max_num_arc_points",
        "section": "max_num_arc_points",
        "text": "str: Maximum number of points used to approximate arcs.\nmax_num_arc_points\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings.max_num_arc_points",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings.max_num_arc_points.html#ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings.max_num_arc_points",
        "title": "max_num_arc_points > max_num_arc_points > max_num_arc_points",
        "section": "max_num_arc_points > max_num_arc_points",
        "text": "property AdvancedMeshingSettings.max_num_arc_points\n\nstr: Maximum number of points used to approximate arcs.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap.id",
        "href": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap.id",
        "href": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap.id.html#ansys.edb.core.utility.layer_map.LayerMap.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property LayerMap.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.component",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.component.html#component",
        "title": "component",
        "section": "component",
        "text": "ComponentGroup:         Component of the Connectable object.\ncomponent\nComponentGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.component",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.component.html#ansys.edb.core.hierarchy.inst_array.InstArray.component",
        "title": "component > component > component",
        "section": "component > component",
        "text": "property InstArray.component\n\nComponentGroup:         Component of the Connectable object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings.min_converged_passes",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings.min_converged_passes.html#min_converged_passes",
        "title": "min_converged_passes",
        "section": "min_converged_passes",
        "text": "int: Minimum number of converged conduction adaptive passes.\nmin_converged_passes\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings.min_converged_passes",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings.min_converged_passes.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings.min_converged_passes",
        "title": "min_converged_passes > min_converged_passes > min_converged_passes",
        "section": "min_converged_passes > min_converged_passes",
        "text": "property HFSSDCRSettings.min_converged_passes\n\nint: Minimum number of converged conduction adaptive passes.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.operating_power",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.operating_power.html#operating_power",
        "title": "operating_power",
        "section": "operating_power",
        "text": "Value: Operating power of the package.\noperating_power\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.operating_power",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.operating_power.html#ansys.edb.core.definition.package_def.PackageDef.operating_power",
        "title": "operating_power > operating_power > operating_power",
        "section": "operating_power > operating_power",
        "text": "property PackageDef.operating_power\n\nValue: Operating power of the package.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_mcad_stride.html#is_mcad_stride",
        "title": "is_mcad_stride",
        "section": "is_mcad_stride",
        "text": "bool: Flag indicating if this is a Stride MCAD model.\nThis property is read-only.\nis_mcad_stride\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_mcad_stride.html#ansys.edb.core.primitive.primitive.Polygon.is_mcad_stride",
        "title": "is_mcad_stride > is_mcad_stride > is_mcad_stride",
        "section": "is_mcad_stride > is_mcad_stride",
        "text": "property Polygon.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.zones",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.zones.html#zones",
        "title": "zones",
        "section": "zones",
        "text": "list[int]: IDs of all zones containing the layer.\nThis property is read-only.\nzones\nlist\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.zones",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.zones.html#ansys.edb.core.layer.stackup_layer.StackupLayer.zones",
        "title": "zones > zones > zones",
        "section": "zones > zones",
        "text": "property StackupLayer.zones\n\nlist[int]: IDs of all zones containing the layer.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.find_by_id.html#find_by_id",
        "title": "find_by_id",
        "section": "find_by_id",
        "text": "Find a Connectable object by database ID in a given layout.\nLayout to search for the Connectable object.\nDatabase ID.\nConnectable object with the given database ID.\nfind_by_id\nLayout\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.find_by_id.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.find_by_id",
        "title": "find_by_id > find_by_id > find_by_id",
        "section": "find_by_id > find_by_id",
        "text": "classmethod CellInstance.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the Connectable object.\n\nuid\n\npython:int\n\nDatabase ID.\n\nReturns\n\nConnectable\n\nConnectable object with the given database ID.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.surface_triangle_length",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.surface_triangle_length.html#surface_triangle_length",
        "title": "surface_triangle_length",
        "section": "surface_triangle_length",
        "text": "str: Surface triangle length.\nsurface_triangle_length\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.surface_triangle_length",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.surface_triangle_length.html#ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.surface_triangle_length",
        "title": "surface_triangle_length > surface_triangle_length > surface_triangle_length",
        "section": "surface_triangle_length > surface_triangle_length",
        "text": "property SkinDepthMeshOperation.surface_triangle_length\n\nstr: Surface triangle length.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.equals",
        "href": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.equals.html#equals",
        "title": "equals",
        "section": "equals",
        "text": "Determine if two points are located at the same coordinates.\nTrue if the two points are located at the same coordinates,\nFalse otherwise.\nequals\nansys.edb.core.typing.PointLike\npython:float\noptional\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.equals",
        "href": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.equals.html#ansys.edb.core.geometry.point_data.PointData.equals",
        "title": "equals > equals > equals",
        "section": "equals > equals",
        "text": "PointData.equals(other, tolerance=0.0)\n\nDetermine if two points are located at the same coordinates.\n\nParameters\n\nother\n\nansys.edb.core.typing.PointLike\n\n\n\ntolerance\n\npython:float, optional\n\n\n\nReturns\n\nbool\n\nTrue if the two points are located at the same coordinates,\nFalse otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior.LINEAR_DC",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior.LINEAR_DC.html#linear_dc",
        "title": "LINEAR_DC",
        "section": "LINEAR_DC",
        "text": "LINEAR_DC"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior.LINEAR_DC",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior.LINEAR_DC.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior.LINEAR_DC",
        "title": "LINEAR_DC > LINEAR_DC > LINEAR_DC",
        "section": "LINEAR_DC > LINEAR_DC",
        "text": "SParamDCBehavior.LINEAR_DC = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.id.html#ansys.edb.core.terminal.terminals.TerminalInstance.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property TerminalInstance.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.MeshClosure.ENDS_CLOSED",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.MeshClosure.ENDS_CLOSED.html#ends_closed",
        "title": "ENDS_CLOSED",
        "section": "ENDS_CLOSED",
        "text": "ENDS_CLOSED"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.MeshClosure.ENDS_CLOSED",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.MeshClosure.ENDS_CLOSED.html#ansys.edb.core.hierarchy.structure3d.MeshClosure.ENDS_CLOSED",
        "title": "ENDS_CLOSED > ENDS_CLOSED > ENDS_CLOSED",
        "section": "ENDS_CLOSED > ENDS_CLOSED",
        "text": "MeshClosure.ENDS_CLOSED = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.make_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.make_zone_primitive.html#make_zone_primitive",
        "title": "make_zone_primitive",
        "section": "make_zone_primitive",
        "text": "Make the primitive a zone primitive with a zone specified by the provided ID.\nID of the zone primitive to use.\nmake_zone_primitive\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.make_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.make_zone_primitive.html#ansys.edb.core.primitive.primitive.Path.make_zone_primitive",
        "title": "make_zone_primitive > make_zone_primitive > make_zone_primitive",
        "section": "make_zone_primitive > make_zone_primitive",
        "text": "Path.make_zone_primitive(zone_id)\n\nMake the primitive a zone primitive with a zone specified by the provided ID.\n\nParameters\n\nzone_id\n\npython:int\n\nID of the zone primitive to use.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.sweep_data",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.sweep_data.html#sweep_data",
        "title": "sweep_data",
        "section": "sweep_data",
        "text": "list of SweepData: Frequency sweeps of the simulation setup.\nsweep_data\nlist\nSweepData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.sweep_data",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.sweep_data.html#ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.sweep_data",
        "title": "sweep_data > sweep_data > sweep_data",
        "section": "sweep_data > sweep_data",
        "text": "property SIWaveSimulationSetup.sweep_data\n\nlist of SweepData: Frequency sweeps of the simulation setup.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceDataEntry.port_1_name",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceDataEntry.port_1_name.html#port_1_name",
        "title": "port_1_name",
        "section": "port_1_name",
        "text": "str: Name of the first port.\nport_1_name\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceDataEntry.port_1_name",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceDataEntry.port_1_name.html#ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceDataEntry.port_1_name",
        "title": "port_1_name > port_1_name > port_1_name",
        "section": "port_1_name > port_1_name",
        "text": "property MatrixConvergenceDataEntry.port_1_name\n\nstr: Name of the first port.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.scaling",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.scaling.html#scaling",
        "title": "scaling",
        "section": "scaling",
        "text": "Point3DLike: Scaling.\nscaling"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.scaling",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.scaling.html#ansys.edb.core.utility.transform3d.Transform3D.scaling",
        "title": "scaling > scaling > scaling",
        "section": "scaling > scaling",
        "text": "property Transform3D.scaling\n\nPoint3DLike: Scaling.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_mcad.html#is_mcad",
        "title": "is_mcad",
        "section": "is_mcad",
        "text": "bool: Flag indicating if this is an MCAD model.\nThis property is read-only.\nis_mcad\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_mcad.html#ansys.edb.core.primitive.primitive.Circle.is_mcad",
        "title": "is_mcad > is_mcad > is_mcad",
        "section": "is_mcad > is_mcad",
        "text": "property Circle.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.layout_instance",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.layout_instance.html#layout_instance",
        "title": "layout_instance",
        "section": "layout_instance",
        "text": "LayoutInstance:         Instance of the layout.\nThis property is read-only.\nlayout_instance\nLayoutInstance"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.layout_instance",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.layout_instance.html#ansys.edb.core.layout.layout.Layout.layout_instance",
        "title": "layout_instance > layout_instance > layout_instance",
        "section": "layout_instance > layout_instance",
        "text": "property Layout.layout_instance\n\nLayoutInstance:         Instance of the layout.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "user_guide/index",
        "href": "user_guide/index.html#user-guide",
        "title": "User guide",
        "section": "User guide",
        "text": "PyEDB-Core provides an API for accessing and manipulating designs in the EBD format.\nDesign types managing layout data in AEDT have a corresponding aedb directory alongside\nthe AEDT file. The aedb directory contains the EDB database.\nAdditionally, EDB databases can be created by Ansys translators or by using the PyEDB-Core\nAPI directly. You can then import the resulting EDB into AEDT.\nUser guide\naedb\naedb"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the product property.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.get_product_property.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "ComponentGroup.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nReturns\n\npython:str\n\nString stored in the product property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.find_by_id.html#find_by_id",
        "title": "find_by_id",
        "section": "find_by_id",
        "text": "Find a Connectable object by database ID in a given layout.\nLayout to search for the Connectable object.\nDatabase ID.\nConnectable object with the given database ID.\nfind_by_id\nLayout\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.find_by_id.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.find_by_id",
        "title": "find_by_id > find_by_id > find_by_id",
        "section": "find_by_id > find_by_id",
        "text": "classmethod PinGroupTerminal.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the Connectable object.\n\nuid\n\npython:int\n\nDatabase ID.\n\nReturns\n\nConnectable\n\nConnectable object with the given database ID.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.name",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the bondwire definition.\nThis property is read-only.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.name",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.name.html#ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property Jedec5BondwireDef.name\n\nstr: Name of the bondwire definition.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.layout_component.LayoutComponent.is_null",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.layout_component.LayoutComponent.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.layout_component.LayoutComponent.is_null",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.layout_component.LayoutComponent.is_null.html#ansys.edb.core.hierarchy.layout_component.LayoutComponent.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property LayoutComponent.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.msg.html#ansys.edb.core.definition.component_def.ComponentDef.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property ComponentDef.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.is_mcad_hfss.html#is_mcad_hfss",
        "title": "is_mcad_hfss",
        "section": "is_mcad_hfss",
        "text": "bool: Flag indicating if this is an HFSS MCAD model.\nThis property is read-only.\nis_mcad_hfss\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.is_mcad_hfss.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.is_mcad_hfss",
        "title": "is_mcad_hfss > is_mcad_hfss > is_mcad_hfss",
        "section": "is_mcad_hfss > is_mcad_hfss",
        "text": "property VoltageRegulator.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_mcad_3d_comp.html#is_mcad_3d_comp",
        "title": "is_mcad_3d_comp",
        "section": "is_mcad_3d_comp",
        "text": "bool: Flag indicating if this is a 3D composite MCAD model.\nThis property is read-only.\nis_mcad_3d_comp\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_mcad_3d_comp.html#ansys.edb.core.primitive.primitive.Rectangle.is_mcad_3d_comp",
        "title": "is_mcad_3d_comp > is_mcad_3d_comp > is_mcad_3d_comp",
        "section": "is_mcad_3d_comp > is_mcad_3d_comp",
        "text": "property Rectangle.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.padstack_defs",
        "href": "api/_autosummary/ansys.edb.core.database.Database.padstack_defs.html#padstack_defs",
        "title": "padstack_defs",
        "section": "padstack_defs",
        "text": "list of PadstackDef: All padstack definitions in the database.\npadstack_defs\nlist\nPadstackDef"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.padstack_defs",
        "href": "api/_autosummary/ansys.edb.core.database.Database.padstack_defs.html#ansys.edb.core.database.Database.padstack_defs",
        "title": "padstack_defs > padstack_defs > padstack_defs",
        "section": "padstack_defs > padstack_defs",
        "text": "property Database.padstack_defs\n\nlist of PadstackDef: All padstack definitions in the database.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.product_solver_names",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.product_solver_names.html#product_solver_names",
        "title": "product_solver_names",
        "section": "product_solver_names",
        "text": "Get the list of solver names.\nID of the product.\nproduct_solver_names\nProductIdType\npython:list\nof\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.product_solver_names",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.product_solver_names.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.product_solver_names",
        "title": "product_solver_names > product_solver_names > product_solver_names",
        "section": "product_solver_names > product_solver_names",
        "text": "TerminalInstanceTerminal.product_solver_names(product_id)\n\nGet the list of solver names.\n\nParameters\n\nproduct_id\n\nProductIdType\n\nID of the product.\n\nReturns\n\npython:list of python:str\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.obj_type.html#obj_type",
        "title": "obj_type",
        "section": "obj_type",
        "text": "LayoutObjType: Layout object type.\nThis property is read-only.\nobj_type\nLayoutObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.obj_type.html#ansys.edb.core.primitive.primitive.PadstackInstance.obj_type",
        "title": "obj_type > obj_type > obj_type",
        "section": "obj_type > obj_type",
        "text": "property PadstackInstance.obj_type\n\nLayoutObjType: Layout object type.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.cast",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.cast.html#cast",
        "title": "cast",
        "section": "cast",
        "text": "Cast the primitive object to the correct concrete type.\ncast\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.cast",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.cast.html#ansys.edb.core.primitive.primitive.Circle.cast",
        "title": "cast > cast > cast",
        "section": "cast > cast",
        "text": "Circle.cast()\n\nCast the primitive object to the correct concrete type.\n\nReturns\n\nPrimitive\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.msg",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.msg",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.msg.html#ansys.edb.core.hierarchy.spice_model.SPICEModel.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property SPICEModel.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.add_member",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.add_member.html#add_member",
        "title": "add_member",
        "section": "add_member",
        "text": "Add an object to the group.\nObject to add to the group.\nadd_member"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.add_member",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.add_member.html#ansys.edb.core.hierarchy.via_group.ViaGroup.add_member",
        "title": "add_member > add_member > add_member",
        "section": "add_member > add_member",
        "text": "ViaGroup.add_member(member)\n\nAdd an object to the group.\n\nParameters\n\nmember\n\nConnectable\n\nObject to add to the group.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.RoughnessRegion",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.RoughnessRegion.html#roughnessregion",
        "title": "RoughnessRegion",
        "section": "RoughnessRegion",
        "text": "Provides an enum representing regions for roughness models of stackup layers.\nRoughnessRegion.TOP\n\nRoughnessRegion.BOTTOM\n\nRoughnessRegion.SIDE\n\nRoughnessRegion\nRoughnessRegion.TOP\nRoughnessRegion.BOTTOM\nRoughnessRegion.SIDE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.RoughnessRegion",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.RoughnessRegion.html#ansys.edb.core.layer.stackup_layer.RoughnessRegion",
        "title": "RoughnessRegion > RoughnessRegion > RoughnessRegion",
        "section": "RoughnessRegion > RoughnessRegion",
        "text": "class ansys.edb.core.layer.stackup_layer.RoughnessRegion(value)\n\nProvides an enum representing regions for roughness models of stackup layers.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nRoughnessRegion.TOP\n\n\n\nRoughnessRegion.BOTTOM\n\n\n\nRoughnessRegion.SIDE\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.scale",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.scale.html#scale",
        "title": "scale",
        "section": "scale",
        "text": "float: Scale of the MCAD model.\nscale\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.scale",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.scale.html#ansys.edb.core.layout.mcad_model.McadModel.scale",
        "title": "scale > scale > scale",
        "section": "scale > scale",
        "text": "property McadModel.scale\n\nfloat: Scale of the MCAD model.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_mcad.html#is_mcad",
        "title": "is_mcad",
        "section": "is_mcad",
        "text": "bool: Flag indicating if this is an MCAD model.\nThis property is read-only.\nis_mcad\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_mcad.html#ansys.edb.core.primitive.primitive.Rectangle.is_mcad",
        "title": "is_mcad > is_mcad > is_mcad",
        "section": "is_mcad > is_mcad",
        "text": "property Rectangle.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.term_instances",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.term_instances.html#term_instances",
        "title": "term_instances",
        "section": "term_instances",
        "text": "list of TerminalInstance: Terminal         instances associated with the cell instance.\nThis property is read-only.\nterm_instances\nlist\nTerminalInstance"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.term_instances",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.term_instances.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.term_instances",
        "title": "term_instances > term_instances > term_instances",
        "section": "term_instances > term_instances",
        "text": "property CellInstance.term_instances\n\nlist of TerminalInstance: Terminal         instances associated with the cell instance.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModel.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModel.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModel.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModel.msg.html#ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModel.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property DielectricMaterialModel.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/utility",
        "href": "api/utility.html#utility",
        "title": "Utility",
        "section": "Utility",
        "text": "Utility"
    },
    {
        "objectID": "api/utility",
        "href": "api/utility.html#classes",
        "title": "Utility > Classes",
        "section": "Classes",
        "text": "heat_sink.HeatSink([fin_thickness, ...])\nRepresents a heat sink.\nhfss_extent_info.HfssExtentInfo([...])\nProvides HFSS extent information.\nlayer_map.LayerMap(msg)\nRepresents a two-way layer map where the key and value is the layer ID.\nmaterial_property_thermal_modifier_params.AdvancedQuadraticParams([...])\nRepresents advanced quadratic parameters.\nmaterial_property_thermal_modifier_params.BasicQuadraticParams([...])\nRepresents basic quadratic parameters.\nport_post_processing_prop.PortPostProcessingProp([...])\nRepresents the port postprocessing properties.\nrlc.Rlc([r, r_enabled, l, l_enabled, c, ...])\nRepresents an RLC.\ntemperature_settings.TemperatureSettings(...)\nProvides temperature settings.\ntransform.Transform(msg)\nRepresents a transformation.\ntransform3d.Transform3D(msg)\nRepresents a 3D transformation.\nvalue.Value(val[, _owner])\nRepresents a number or an expression.\nClasses\nheat_sink.HeatSink\nhfss_extent_info.HfssExtentInfo\nlayer_map.LayerMap\nmaterial_property_thermal_modifier_params.AdvancedQuadraticParams\nmaterial_property_thermal_modifier_params.BasicQuadraticParams\nport_post_processing_prop.PortPostProcessingProp\nrlc.Rlc\ntemperature_settings.TemperatureSettings\ntransform.Transform\ntransform3d.Transform3D\nvalue.Value"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.product_solver_option",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.product_solver_option.html#product_solver_option",
        "title": "product_solver_option",
        "section": "product_solver_option",
        "text": "Get the name of the product solver option.\nID of the product.\nName of the solver.\nName of the product solver option.\nproduct_solver_option\nProductIdType\nstr\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.product_solver_option",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.product_solver_option.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.product_solver_option",
        "title": "product_solver_option > product_solver_option > product_solver_option",
        "section": "product_solver_option > product_solver_option",
        "text": "TerminalInstanceTerminal.product_solver_option(product_id, solver_name)\n\nGet the name of the product solver option.\n\nParameters\n\nproduct_id\n\nProductIdType\n\nID of the product.\n\nsolver_name\n\nstr\n\nName of the solver.\n\nReturns\n\nstr\n\nName of the product solver option.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.ComponentModel",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.ComponentModel.html#componentmodel",
        "title": "ComponentModel",
        "section": "ComponentModel",
        "text": "Represents a component model.\nComponentModel.find_by_id(comp_def, value)\nFind a component model by ID in a given component def.\nComponentModel.find_by_name(comp_def, value)\nFind a component model by name in a given component def.\nComponentModel.id\nint: Unique ID of the EDB object.\nComponentModel.is_null\nbool: Flag indicating if the object exists in the database.\nComponentModel.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nComponentModel.reference_file\nstr: Name of the reference file associated with the component model.\nComponentModel\nComponentModel.find_by_id\nComponentModel.find_by_name\nComponentModel.id\nint\nComponentModel.is_null\nbool\nComponentModel.msg\nEDBObjMessage\nComponentModel.reference_file\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.ComponentModel",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.ComponentModel.html#ansys.edb.core.definition.component_model.ComponentModel",
        "title": "ComponentModel > ComponentModel > ComponentModel",
        "section": "ComponentModel > ComponentModel",
        "text": "class ansys.edb.core.definition.component_model.ComponentModel(msg)\n\nRepresents a component model.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nComponentModel.find_by_id(comp_def, value)\n\nFind a component model by ID in a given component def.\n\nComponentModel.find_by_name(comp_def, value)\n\nFind a component model by name in a given component def.\n\n\n\nAttributes\n\n\n\n\n\n\n\nComponentModel.id\n\nint: Unique ID of the EDB object.\n\nComponentModel.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nComponentModel.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nComponentModel.reference_file\n\nstr: Name of the reference file associated with the component model.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.create_3d_comp.html#create_3d_comp",
        "title": "create_3d_comp",
        "section": "create_3d_comp",
        "text": "Create a 3D composite model from an MCAD file.\n3D composite model created.\ncreate_3d_comp\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.create_3d_comp.html#ansys.edb.core.hierarchy.group.Group.create_3d_comp",
        "title": "create_3d_comp > create_3d_comp > create_3d_comp",
        "section": "create_3d_comp > create_3d_comp",
        "text": "Group.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nReturns\n\nMcadModel\n\n3D composite model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.group",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.group.html#group",
        "title": "group",
        "section": "group",
        "text": "Group object.\ngroup\nGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.group",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.group.html#ansys.edb.core.primitive.primitive.BoardBendDef.group",
        "title": "group > group > group",
        "section": "group > group",
        "text": "property BoardBendDef.group\n\nGroup object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.remove_power_modules",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.remove_power_modules.html#remove_power_modules",
        "title": "remove_power_modules",
        "section": "remove_power_modules",
        "text": "Remove multiple power modules from the voltage regulator.\nList of component group names of each power module to remove.\nremove_power_modules\npython:list\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.remove_power_modules",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.remove_power_modules.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.remove_power_modules",
        "title": "remove_power_modules > remove_power_modules > remove_power_modules",
        "section": "remove_power_modules > remove_power_modules",
        "text": "VoltageRegulator.remove_power_modules(names)\n\nRemove multiple power modules from the voltage regulator.\n\nParameters\n\nnames\n\npython:list[python:str]\n\nList of component group names of each power module to remove.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.BasisFunctionOrder.SECOND_ORDER",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.BasisFunctionOrder.SECOND_ORDER.html#second_order",
        "title": "SECOND_ORDER",
        "section": "SECOND_ORDER",
        "text": "SECOND_ORDER"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.BasisFunctionOrder.SECOND_ORDER",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.BasisFunctionOrder.SECOND_ORDER.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.BasisFunctionOrder.SECOND_ORDER",
        "title": "SECOND_ORDER > SECOND_ORDER > SECOND_ORDER",
        "section": "SECOND_ORDER > SECOND_ORDER",
        "text": "BasisFunctionOrder.SECOND_ORDER = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.boundary_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.boundary_type.html#boundary_type",
        "title": "boundary_type",
        "section": "boundary_type",
        "text": "BoundaryType: Boundary type of the terminal.\nboundary_type\nBoundaryType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.boundary_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.boundary_type.html#ansys.edb.core.terminal.terminals.EdgeTerminal.boundary_type",
        "title": "boundary_type > boundary_type > boundary_type",
        "section": "boundary_type > boundary_type",
        "text": "property EdgeTerminal.boundary_type\n\nBoundaryType: Boundary type of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.visibility_mask",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.visibility_mask.html#visibility_mask",
        "title": "visibility_mask",
        "section": "visibility_mask",
        "text": "int: Visibility mask of the layer.\nThe setter can take either an int object or a LayerVisibility instance.\nvisibility_mask\nint\nint\nLayerVisibility"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.visibility_mask",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.visibility_mask.html#ansys.edb.core.layer.layer.Layer.visibility_mask",
        "title": "visibility_mask > visibility_mask > visibility_mask",
        "section": "visibility_mask > visibility_mask",
        "text": "property Layer.visibility_mask\n\nint: Visibility mask of the layer.\n\nThe setter can take either an int object or a LayerVisibility instance.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.mag_min_threshold",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.mag_min_threshold.html#mag_min_threshold",
        "title": "mag_min_threshold",
        "section": "mag_min_threshold",
        "text": "float: Minimum magnitude threshold.\nWhen the magnitude is less than the minimal threshold value, the phase is ignored.\nmag_min_threshold\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.mag_min_threshold",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.mag_min_threshold.html#ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.mag_min_threshold",
        "title": "mag_min_threshold > mag_min_threshold > mag_min_threshold",
        "section": "mag_min_threshold > mag_min_threshold",
        "text": "property MatrixConvergenceData.mag_min_threshold\n\nfloat: Minimum magnitude threshold.\n\nWhen the magnitude is less than the minimal threshold value, the phase is ignored.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamExtrapolation.CONSTANT_EX",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamExtrapolation.CONSTANT_EX.html#constant_ex",
        "title": "CONSTANT_EX",
        "section": "CONSTANT_EX",
        "text": "CONSTANT_EX"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamExtrapolation.CONSTANT_EX",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamExtrapolation.CONSTANT_EX.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamExtrapolation.CONSTANT_EX",
        "title": "CONSTANT_EX > CONSTANT_EX > CONSTANT_EX",
        "section": "CONSTANT_EX > CONSTANT_EX",
        "text": "SParamExtrapolation.CONSTANT_EX = 3\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.add_layer_top",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.add_layer_top.html#add_layer_top",
        "title": "add_layer_top",
        "section": "add_layer_top",
        "text": "Add a new layer to the top of the layer collection.\nThis method adjusts existing layers as needed to maintain stackup consistency.\nName of the layer to add.\nadd_layer_top\nLayer\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.add_layer_top",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.add_layer_top.html#ansys.edb.core.layer.layer_collection.LayerCollection.add_layer_top",
        "title": "add_layer_top > add_layer_top > add_layer_top",
        "section": "add_layer_top > add_layer_top",
        "text": "LayerCollection.add_layer_top(layer_to_add)\n\nAdd a new layer to the top of the layer collection.\n\nThis method adjusts existing layers as needed to maintain stackup consistency.\n\nParameters\n\nlayer_to_add\n\nLayer\n\nName of the layer to add.\n\nReturns\n\nLayer\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.auto_removal_sliver_poly",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.auto_removal_sliver_poly.html#auto_removal_sliver_poly",
        "title": "auto_removal_sliver_poly",
        "section": "auto_removal_sliver_poly",
        "text": "float: Automatic sliver polygon removal tolerance.\nauto_removal_sliver_poly\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.auto_removal_sliver_poly",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.auto_removal_sliver_poly.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.auto_removal_sliver_poly",
        "title": "auto_removal_sliver_poly > auto_removal_sliver_poly > auto_removal_sliver_poly",
        "section": "auto_removal_sliver_poly > auto_removal_sliver_poly",
        "text": "property RaptorXAdvancedSettings.auto_removal_sliver_poly\n\nfloat: Automatic sliver polygon removal tolerance.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.all_off_diag_constant",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.all_off_diag_constant.html#all_off_diag_constant",
        "title": "all_off_diag_constant",
        "section": "all_off_diag_constant",
        "text": "bool: Flag indicating if all off-diagonal matrix entries are the same.\nThis property is read-only.\nall_off_diag_constant\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.all_off_diag_constant",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.all_off_diag_constant.html#ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.all_off_diag_constant",
        "title": "all_off_diag_constant > all_off_diag_constant > all_off_diag_constant",
        "section": "all_off_diag_constant > all_off_diag_constant",
        "text": "property MatrixConvergenceData.all_off_diag_constant\n\nbool: Flag indicating if all off-diagonal matrix entries are the same.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.owner",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.owner.html#owner",
        "title": "owner",
        "section": "owner",
        "text": "Primitive: Owner of the primitive object.\nThis property is read-only.\nowner\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.owner",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.owner.html#ansys.edb.core.primitive.primitive.Bondwire.owner",
        "title": "owner > owner > owner",
        "section": "owner > owner",
        "text": "property Bondwire.owner\n\nPrimitive: Owner of the primitive object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.visibility_mask",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.visibility_mask.html#visibility_mask",
        "title": "visibility_mask",
        "section": "visibility_mask",
        "text": "int: Visibility mask of the layer.\nThe setter can take either an int object or a LayerVisibility instance.\nvisibility_mask\nint\nint\nLayerVisibility"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.visibility_mask",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.visibility_mask.html#ansys.edb.core.layer.via_layer.ViaLayer.visibility_mask",
        "title": "visibility_mask > visibility_mask > visibility_mask",
        "section": "visibility_mask > visibility_mask",
        "text": "property ViaLayer.visibility_mask\n\nint: Visibility mask of the layer.\n\nThe setter can take either an int object or a LayerVisibility instance.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.empty",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.empty.html#empty",
        "title": "empty",
        "section": "empty",
        "text": "Determine if the RTree is emppty (contains no geometry).\nTrue if the RTree is empty, False otherwise.\nempty\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.empty",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.empty.html#ansys.edb.core.geometry.r_tree.RTree.empty",
        "title": "empty > empty > empty",
        "section": "empty > empty",
        "text": "RTree.empty()\n\nDetermine if the RTree is emppty (contains no geometry).\n\nReturns\n\nbool\n\nTrue if the RTree is empty, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.add_void",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.add_void.html#add_void",
        "title": "add_void",
        "section": "add_void",
        "text": "Add a void to the primitive.\nVoid to add.\nadd_void\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.add_void",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.add_void.html#ansys.edb.core.primitive.primitive.Bondwire.add_void",
        "title": "add_void > add_void > add_void",
        "section": "add_void > add_void",
        "text": "Bondwire.add_void(hole)\n\nAdd a void to the primitive.\n\nParameters\n\nhole\n\nPrimitive\n\nVoid to add.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.create_3d_comp.html#create_3d_comp",
        "title": "create_3d_comp",
        "section": "create_3d_comp",
        "text": "Create a 3D composite model from an MCAD file.\n3D composite model created.\ncreate_3d_comp\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.create_3d_comp.html#ansys.edb.core.primitive.primitive.BoardBendDef.create_3d_comp",
        "title": "create_3d_comp > create_3d_comp > create_3d_comp",
        "section": "create_3d_comp > create_3d_comp",
        "text": "BoardBendDef.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nReturns\n\nMcadModel\n\n3D composite model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.net_layer_info",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.net_layer_info.html#net_layer_info",
        "title": "net_layer_info",
        "section": "net_layer_info",
        "text": "list of tuple of (str, str, bool): List of net layer         information for the mesh operation.\nThe tuple is in this form: (net_name, layer_name, is_sheet)``.\nnet_layer_info\nlist\ntuple\nstr\nstr\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.net_layer_info",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.net_layer_info.html#ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.net_layer_info",
        "title": "net_layer_info > net_layer_info > net_layer_info",
        "section": "net_layer_info > net_layer_info",
        "text": "property SkinDepthMeshOperation.net_layer_info\n\nlist of tuple of (str, str, bool): List of net layer         information for the mesh operation.\n\nThe tuple is in this form: (net_name, layer_name, is_sheet)``.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.PEC",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.PEC.html#pec",
        "title": "PEC",
        "section": "PEC",
        "text": "PEC"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.PEC",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.PEC.html#ansys.edb.core.terminal.terminals.BoundaryType.PEC",
        "title": "PEC > PEC > PEC",
        "section": "PEC > PEC",
        "text": "BoundaryType.PEC = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_from_center_scale",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_from_center_scale.html#create_from_center_scale",
        "title": "create_from_center_scale",
        "section": "create_from_center_scale",
        "text": "Create a 3D transformation for scaling about a point.\nCenter of the transformation.\nScale factor of the transformation.\ncreate_from_center_scale\nfloat\nTransform3D"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_from_center_scale",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_from_center_scale.html#ansys.edb.core.utility.transform3d.Transform3D.create_from_center_scale",
        "title": "create_from_center_scale > create_from_center_scale > create_from_center_scale",
        "section": "create_from_center_scale > create_from_center_scale",
        "text": "classmethod Transform3D.create_from_center_scale(center, scale)\n\nCreate a 3D transformation for scaling about a point.\n\nParameters\n\ncenter\n\nPoint3DLike\n\nCenter of the transformation.\n\nscale\n\nfloat\n\nScale factor of the transformation.\n\nReturns\n\nTransform3D\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.icepak_temp_file",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.icepak_temp_file.html#icepak_temp_file",
        "title": "icepak_temp_file",
        "section": "icepak_temp_file",
        "text": "bool: Path to the file containing the Icepak temperature map to import.\nicepak_temp_file\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.icepak_temp_file",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.icepak_temp_file.html#ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.icepak_temp_file",
        "title": "icepak_temp_file > icepak_temp_file > icepak_temp_file",
        "section": "icepak_temp_file > icepak_temp_file",
        "text": "property SIWaveDCIRSimulationSettings.icepak_temp_file\n\nbool: Path to the file containing the Icepak temperature map to import.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/index",
        "href": "api/index.html#api-reference",
        "title": "API reference",
        "section": "API reference",
        "text": "This section describes all API classes, functions, and attributes in PyEDB-Core modules.\nAPI reference"
    },
    {
        "objectID": "api/index",
        "href": "api/index.html#modules",
        "title": "API reference > Modules",
        "section": "Modules",
        "text": "Modules"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_interface_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_interface_terminal.html#is_interface_terminal",
        "title": "is_interface_terminal",
        "section": "is_interface_terminal",
        "text": "bool: Flag indicating if the terminal is an interface.\nis_interface_terminal\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_interface_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_interface_terminal.html#ansys.edb.core.terminal.terminals.BundleTerminal.is_interface_terminal",
        "title": "is_interface_terminal > is_interface_terminal > is_interface_terminal",
        "section": "is_interface_terminal > is_interface_terminal",
        "text": "property BundleTerminal.is_interface_terminal\n\nbool: Flag indicating if the terminal is an interface.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.lrp",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.lrp.html#lrp",
        "title": "lrp",
        "section": "lrp",
        "text": "Value: Load regulation percent of the voltage regulator.\nThis property can be set with ValueLike.\nlrp\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.lrp",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.lrp.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.lrp",
        "title": "lrp > lrp > lrp",
        "section": "lrp > lrp",
        "text": "property VoltageRegulator.lrp\n\nValue: Load regulation percent of the voltage regulator.\n\nThis property can be set with ValueLike.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.model_name",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.model_name.html#model_name",
        "title": "model_name",
        "section": "model_name",
        "text": "str: Name of the SPICE model file.\nmodel_name\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.model_name",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.model_name.html#ansys.edb.core.hierarchy.spice_model.SPICEModel.model_name",
        "title": "model_name > model_name > model_name",
        "section": "model_name > model_name",
        "text": "property SPICEModel.model_name\n\nstr: Name of the SPICE model file.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.TopBottomAssociation.NO_TOP_BOTTOM_ASSOCIATED",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.TopBottomAssociation.NO_TOP_BOTTOM_ASSOCIATED.html#no_top_bottom_associated",
        "title": "NO_TOP_BOTTOM_ASSOCIATED",
        "section": "NO_TOP_BOTTOM_ASSOCIATED",
        "text": "NO_TOP_BOTTOM_ASSOCIATED"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.TopBottomAssociation.NO_TOP_BOTTOM_ASSOCIATED",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.TopBottomAssociation.NO_TOP_BOTTOM_ASSOCIATED.html#ansys.edb.core.layer.layer.TopBottomAssociation.NO_TOP_BOTTOM_ASSOCIATED",
        "title": "NO_TOP_BOTTOM_ASSOCIATED > NO_TOP_BOTTOM_ASSOCIATED > NO_TOP_BOTTOM_ASSOCIATED",
        "section": "NO_TOP_BOTTOM_ASSOCIATED > NO_TOP_BOTTOM_ASSOCIATED",
        "text": "TopBottomAssociation.NO_TOP_BOTTOM_ASSOCIATED = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.defeature_ratio",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.defeature_ratio.html#defeature_ratio",
        "title": "defeature_ratio",
        "section": "defeature_ratio",
        "text": "float: Extent ratio used as tolerance when defeaturing polygons.\ndefeature_ratio\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.defeature_ratio",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.defeature_ratio.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.defeature_ratio",
        "title": "defeature_ratio > defeature_ratio > defeature_ratio",
        "section": "defeature_ratio > defeature_ratio",
        "text": "property HFSSAdvancedSettings.defeature_ratio\n\nfloat: Extent ratio used as tolerance when defeaturing polygons.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.has_voids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.has_voids.html#has_voids",
        "title": "has_voids",
        "section": "has_voids",
        "text": "bool: Flag indicating if a primitive has voids inside.\nThis property is read-only.\nhas_voids\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.has_voids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.has_voids.html#ansys.edb.core.primitive.primitive.Path.has_voids",
        "title": "has_voids > has_voids > has_voids",
        "section": "has_voids > has_voids",
        "text": "property Path.has_voids\n\nbool: Flag indicating if a primitive has voids inside.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.get_property",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.get_property.html#get_property",
        "title": "get_property",
        "section": "get_property",
        "text": "Set a property value of the material.\nMaterial property ID.\nComponent ID.\nTensor row.\nTensor column.\nValue of the material property.\nget_property\nMaterialProperty\npython:None\npython:int\npython:None\npython:int\npython:None\npython:int\npython:None\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.get_property",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.get_property.html#ansys.edb.core.definition.material_def.MaterialDef.get_property",
        "title": "get_property > get_property > get_property",
        "section": "get_property > get_property",
        "text": "MaterialDef.get_property(material_property, component_id=None, row=None, col=None)\n\nSet a property value of the material.\n\nParameters\n\nmaterial_property\n\nMaterialProperty, default: python:None\n\nMaterial property ID.\n\ncomponent_id\n\npython:int, default: python:None\n\nComponent ID.\n\nrow\n\npython:int, default: python:None\n\nTensor row.\n\ncol\n\npython:int, default: python:None\n\nTensor column.\n\nReturns\n\nValue\n\nValue of the material property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.visit",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.visit.html#visit",
        "title": "visit",
        "section": "visit",
        "text": "Increment the count of a given RTree object.\nR-tree data object with index in this form: (polygon, id pair).\nvisit\nRTreeObj\n(polygon, id pair)"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.visit",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.visit.html#ansys.edb.core.geometry.r_tree.RTree.visit",
        "title": "visit > visit > visit",
        "section": "visit > visit",
        "text": "RTree.visit(rtree_obj)\n\nIncrement the count of a given RTree object.\n\nParameters\n\nrtree_obj\n\nRTreeObj\n\nR-tree data object with index in this form: (polygon, id pair).\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.is_via_layer",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.is_via_layer.html#is_via_layer",
        "title": "is_via_layer",
        "section": "is_via_layer",
        "text": "bool: Flag indicating if the layer is a ViaLayer instance.\nThis property is read-only.\nis_via_layer\nbool\nViaLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.is_via_layer",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.is_via_layer.html#ansys.edb.core.layer.via_layer.ViaLayer.is_via_layer",
        "title": "is_via_layer > is_via_layer > is_via_layer",
        "section": "is_via_layer > is_via_layer",
        "text": "property ViaLayer.is_via_layer\n\nbool: Flag indicating if the layer is a ViaLayer instance.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.relative_residual",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.relative_residual.html#relative_residual",
        "title": "relative_residual",
        "section": "relative_residual",
        "text": "float: Relative residual value that the HFSS iterative solver is to use.\nrelative_residual\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.relative_residual",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.relative_residual.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.relative_residual",
        "title": "relative_residual > relative_residual > relative_residual",
        "section": "relative_residual > relative_residual",
        "text": "property HFSSSettingsOptions.relative_residual\n\nfloat: Relative residual value that the HFSS iterative solver is to use.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.component_def",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.component_def.html#component_def",
        "title": "component_def",
        "section": "component_def",
        "text": "ComponentDef: Component definition for the         hierarchy object if it exists, None otherwise.\nThis property is read-only.\ncomponent_def\nComponentDef\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.component_def",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.component_def.html#ansys.edb.core.hierarchy.inst_array.InstArray.component_def",
        "title": "component_def > component_def > component_def",
        "section": "component_def > component_def",
        "text": "property InstArray.component_def\n\nComponentDef: Component definition for the         hierarchy object if it exists, None otherwise.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SettingsOptions.use_default_lambda_value",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SettingsOptions.use_default_lambda_value.html#use_default_lambda_value",
        "title": "use_default_lambda_value",
        "section": "use_default_lambda_value",
        "text": "bool: Flag indicating if the default lambda target value is used.\nuse_default_lambda_value\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SettingsOptions.use_default_lambda_value",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SettingsOptions.use_default_lambda_value.html#ansys.edb.core.simulation_setup.simulation_settings.SettingsOptions.use_default_lambda_value",
        "title": "use_default_lambda_value > use_default_lambda_value > use_default_lambda_value",
        "section": "use_default_lambda_value > use_default_lambda_value",
        "text": "property SettingsOptions.use_default_lambda_value\n\nbool: Flag indicating if the default lambda target value is used.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.definition_type",
        "href": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.definition_type.html#definition_type",
        "title": "definition_type",
        "section": "definition_type",
        "text": "DefinitionObjType: Definition type.\ndefinition_type\nDefinitionObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.definition_type",
        "href": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.definition_type.html#ansys.edb.core.definition.component_def.ComponentDef.definition_type",
        "title": "definition_type > definition_type > definition_type",
        "section": "definition_type > definition_type",
        "text": "property ComponentDef.definition_type\n\nDefinitionObjType: Definition type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.DCThicknessType.MANUAL",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.DCThicknessType.MANUAL.html#manual",
        "title": "MANUAL",
        "section": "MANUAL",
        "text": "MANUAL"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.DCThicknessType.MANUAL",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.DCThicknessType.MANUAL.html#ansys.edb.core.layer.stackup_layer.DCThicknessType.MANUAL",
        "title": "MANUAL > MANUAL > MANUAL",
        "section": "MANUAL > MANUAL",
        "text": "DCThicknessType.MANUAL = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.rotation",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.rotation.html#rotation",
        "title": "rotation",
        "section": "rotation",
        "text": "tuple[Point3DData, Point3DData, float]: Rotation from/to the axis and the angle.\nrotation\ntuple\nPoint3DData\nPoint3DData\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.rotation",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.rotation.html#ansys.edb.core.layout.mcad_model.McadModel.rotation",
        "title": "rotation > rotation > rotation",
        "section": "rotation > rotation",
        "text": "property McadModel.rotation\n\ntuple[Point3DData, Point3DData, float]: Rotation from/to the axis and the angle.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.reference_layer",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.reference_layer.html#reference_layer",
        "title": "reference_layer",
        "section": "reference_layer",
        "text": "Layer: Layer that the terminal references, if any, by either layer object or name.\nreference_layer\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.reference_layer",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.reference_layer.html#ansys.edb.core.terminal.terminals.EdgeTerminal.reference_layer",
        "title": "reference_layer > reference_layer > reference_layer",
        "section": "reference_layer > reference_layer",
        "text": "property EdgeTerminal.reference_layer\n\nLayer: Layer that the terminal references, if any, by either layer object or name.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.edb_uid.html#edb_uid",
        "title": "edb_uid",
        "section": "edb_uid",
        "text": "int: Unique, persistent ID for the Connectable object.\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\nThis property is read-only.\nedb_uid\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.edb_uid.html#ansys.edb.core.hierarchy.pin_group.PinGroup.edb_uid",
        "title": "edb_uid > edb_uid > edb_uid",
        "section": "edb_uid > edb_uid",
        "text": "property PinGroup.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.MeshOperation",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.MeshOperation.html#meshoperation",
        "title": "MeshOperation",
        "section": "MeshOperation",
        "text": "Represents mesh operations.\nstr: Name of the mesh operation.\nlist of tuple of (str, str, bool): List of net layer         information for the mesh operation.\nbool: Flag indicating if the mesh operation is enabled.\nbool: Flag indicating if refining inside is enabled.\nstr: Name of the mesh region.\nbool: Flag indicating if solve inside is enabled.\nMeshOperation.enabled\nbool: Flag indicating if the mesh operation is enabled.\nMeshOperation.mesh_region\nstr: Name of the mesh region.\nMeshOperation.name\nstr: Name of the mesh operation.\nMeshOperation.net_layer_info\nlist of tuple of (str, str, bool): List of net layer         information for the mesh operation.\nMeshOperation.refine_inside\nbool: Flag indicating if refining inside is enabled.\nMeshOperation.solve_inside\nbool: Flag indicating if solve inside is enabled.\nMeshOperation\nname\npython:str\nstr\nnet_layer_info\npython:list\npython:tuple\npython:str\npython:str\npython:None\nlist\ntuple\nstr\nstr\nbool\nenabled\npython:True\nbool\nrefine_inside\npython:False\nbool\nmesh_region\npython:str\nstr\nsolve_inside\npython:False\nbool\nMeshOperation.enabled\nbool\nMeshOperation.mesh_region\nstr\nMeshOperation.name\nstr\nMeshOperation.net_layer_info\nlist\ntuple\nstr\nstr\nbool\nMeshOperation.refine_inside\nbool\nMeshOperation.solve_inside\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.MeshOperation",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.MeshOperation.html#ansys.edb.core.simulation_setup.mesh_operation.MeshOperation",
        "title": "MeshOperation > MeshOperation > MeshOperation",
        "section": "MeshOperation > MeshOperation",
        "text": "class ansys.edb.core.simulation_setup.mesh_operation.MeshOperation(name='', net_layer_info=None, enabled=True, refine_inside=False, mesh_region='', solve_inside=False)\n\nRepresents mesh operations.\n\nAttributes\n\nname\n\npython:str, default: “”\n\nstr: Name of the mesh operation.\n\nnet_layer_info\n\npython:list[python:tuple(python:str, python:str, bool)], default: python:None\n\nlist of tuple of (str, str, bool): List of net layer         information for the mesh operation.\n\nenabled\n\nbool, default: python:True\n\nbool: Flag indicating if the mesh operation is enabled.\n\nrefine_inside\n\nbool, default: python:False\n\nbool: Flag indicating if refining inside is enabled.\n\nmesh_region\n\npython:str, default: “”\n\nstr: Name of the mesh region.\n\nsolve_inside\n\nbool, default: python:False\n\nbool: Flag indicating if solve inside is enabled.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nMeshOperation.enabled\n\nbool: Flag indicating if the mesh operation is enabled.\n\nMeshOperation.mesh_region\n\nstr: Name of the mesh region.\n\nMeshOperation.name\n\nstr: Name of the mesh operation.\n\nMeshOperation.net_layer_info\n\nlist of tuple of (str, str, bool): List of net layer         information for the mesh operation.\n\nMeshOperation.refine_inside\n\nbool: Flag indicating if refining inside is enabled.\n\nMeshOperation.solve_inside\n\nbool: Flag indicating if solve inside is enabled.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.dot",
        "href": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.dot.html#dot",
        "title": "dot",
        "section": "dot",
        "text": "Perform per-component multiplication (dot product) of this point and another point.\nOther point.\nDot product of the two points.\ndot\nansys.edb.core.typing.PointLike\npython:float"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.dot",
        "href": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.dot.html#ansys.edb.core.geometry.point_data.PointData.dot",
        "title": "dot > dot > dot",
        "section": "dot > dot",
        "text": "PointData.dot(other)\n\nPerform per-component multiplication (dot product) of this point and another point.\n\nParameters\n\nother\n\nansys.edb.core.typing.PointLike\n\nOther point.\n\nReturns\n\npython:float\n\nDot product of the two points.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.cast",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.cast.html#cast",
        "title": "cast",
        "section": "cast",
        "text": "Cast the primitive object to the correct concrete type.\ncast\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.cast",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.cast.html#ansys.edb.core.primitive.primitive.BoardBendDef.cast",
        "title": "cast > cast > cast",
        "section": "cast > cast",
        "text": "BoardBendDef.cast()\n\nCast the primitive object to the correct concrete type.\n\nReturns\n\nPrimitive\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the property.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.set_product_property.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "PinGroupTerminal.set_product_property(prod_id, attr_id, prop_value)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nprop_value\n\npython:str\n\nString stored in the property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.id",
        "href": "api/_autosummary/ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.id",
        "href": "api/_autosummary/ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.id.html#ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property MultipoleDebyeModel.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.create",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a SIWave simulationsetup.\nCell to create simulation setup in.\nName of the simulation setup.\nSimulation setup created.\ncreate\nCell\npython:str\nSIWaveSimulationSetup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.create",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.create.html#ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod SIWaveSimulationSetup.create(cell, name)\n\nCreate a SIWave simulationsetup.\n\nParameters\n\ncell\n\nCell\n\nCell to create simulation setup in.\n\nname\n\npython:str\n\nName of the simulation setup.\n\nReturns\n\nSIWaveSimulationSetup\n\nSimulation setup created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.html#padstackinstance",
        "title": "PadstackInstance",
        "section": "PadstackInstance",
        "text": "Representis a padstack instance object.\nPadstackInstance.create(layout, net, name, ...)\nCreate a padstack instance.\nPadstackInstance.create_3d_comp()\nCreate a 3D composite model from an MCAD file.\nPadstackInstance.create_hfss()\nCreate an HFSS model from an MCAD file.\nPadstackInstance.create_stride()\nCreate a Stride model from an MCAD file.\nPadstackInstance.delete()\nDelete the layout object.\nPadstackInstance.find_by_id(layout, uid)\nFind a Connectable object by database ID in a given layout.\nPadstackInstance.get_back_drill_by_depth(...)\nGet the back drill type by depth.\nPadstackInstance.get_back_drill_by_layer(...)\nGet the back drill type by the layer.\nPadstackInstance.get_back_drill_type(from_bottom)\nGet the back drill type of the padstack instance.\nPadstackInstance.get_hole_overrides()\nGet the hole overrides of the padstack instance.\nPadstackInstance.get_layer_range()\nGet the top and bottom layers of the padstack instance.\nPadstackInstance.get_padstack_instance_terminal()\nTerminalInstance:         Terminal of the padstack instance.\nPadstackInstance.get_position_and_rotation()\nGet the position and rotation of the padstack instance.\nPadstackInstance.get_product_property(...)\nGet the product property of the layout object for a given product ID and attribute ID.\nPadstackInstance.get_product_property_ids(prod_id)\nGet a list of attribute IDs given a product ID for the layout object.\nPadstackInstance.is_in_pin_group(pin_group)\nDetermine if the padstack instance is in a given pin group.\nPadstackInstance.set_back_drill_by_depth(...)\nSet the back drill type by depth.\nPadstackInstance.set_back_drill_by_layer(...)\nSet the back drill by the layer.\nPadstackInstance.set_hole_overrides(...)\nSet the hole overrides of the padstack instance.\nPadstackInstance.set_layer_range(top_layer, ...)\nSet the top and bottom layers of the padstack instance.\nPadstackInstance.set_position_and_rotation(x, ...)\nSet the position and rotation of the padstack instance.\nPadstackInstance.set_product_property(...)\nSet the product property of the layout object for a given product ID and attribute ID.\nPadstackInstance.component\nComponentGroup:         Component of the Connectable object.\nPadstackInstance.edb_uid\nint: Unique, persistent ID for the Connectable object.\nPadstackInstance.group\nGroup object.\nPadstackInstance.id\nint: Unique ID of the EDB object.\nPadstackInstance.is_layout_pin\nbool: Flag indicating if the padstack instance is a layout pin.\nPadstackInstance.is_mcad\nbool: Flag indicating if this is an MCAD model.\nPadstackInstance.is_mcad_3d_comp\nbool: Flag indicating if this is a 3D composite MCAD model.\nPadstackInstance.is_mcad_hfss\nbool: Flag indicating if this is an HFSS MCAD model.\nPadstackInstance.is_mcad_stride\nbool: Flag indicating if this is a Stride MCAD model.\nPadstackInstance.is_null\nbool: Flag indicating if the object exists in the database.\nPadstackInstance.layer_map\nLayerMap: Layer map of the padstack instance.\nPadstackInstance.layout\nLayout: Layout owning the object.\nPadstackInstance.layout_obj_type\n\nPadstackInstance.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nPadstackInstance.name\nstr: Name of the padstack instance.\nPadstackInstance.net\nNet: Net of the Connectable object.\nPadstackInstance.obj_type\nLayoutObjType: Layout object type.\nPadstackInstance.padstack_def\nPadstackDef:         Definition of the padstack instance.\nPadstackInstance.pin_groups\nlist of PinGroup:         Pin groups of the padstack instance.\nPadstackInstance.solderball_layer\nLayer: Solderball layer of the padstack instance.\nPadstackInstance\nPadstackInstance.create\nPadstackInstance.create_3d_comp\nPadstackInstance.create_hfss\nPadstackInstance.create_stride\nPadstackInstance.delete\nPadstackInstance.find_by_id\nPadstackInstance.get_back_drill_by_depth\nPadstackInstance.get_back_drill_by_layer\nPadstackInstance.get_back_drill_type\nPadstackInstance.get_hole_overrides\nPadstackInstance.get_layer_range\nPadstackInstance.get_padstack_instance_terminal\nTerminalInstance\nPadstackInstance.get_position_and_rotation\nPadstackInstance.get_product_property\nPadstackInstance.get_product_property_ids\nPadstackInstance.is_in_pin_group\nPadstackInstance.set_back_drill_by_depth\nPadstackInstance.set_back_drill_by_layer\nPadstackInstance.set_hole_overrides\nPadstackInstance.set_layer_range\nPadstackInstance.set_position_and_rotation\nPadstackInstance.set_product_property\nPadstackInstance.component\nComponentGroup\nPadstackInstance.edb_uid\nint\nPadstackInstance.group\nGroup\nPadstackInstance.id\nint\nPadstackInstance.is_layout_pin\nbool\nPadstackInstance.is_mcad\nbool\nPadstackInstance.is_mcad_3d_comp\nbool\nPadstackInstance.is_mcad_hfss\nbool\nPadstackInstance.is_mcad_stride\nbool\nPadstackInstance.is_null\nbool\nPadstackInstance.layer_map\nLayerMap\nPadstackInstance.layout\nLayout\nPadstackInstance.layout_obj_type\nPadstackInstance.msg\nEDBObjMessage\nPadstackInstance.name\nstr\nPadstackInstance.net\nNet\nPadstackInstance.obj_type\nLayoutObjType\nPadstackInstance.padstack_def\nPadstackDef\nPadstackInstance.pin_groups\nlist\nPinGroup\nPadstackInstance.solderball_layer\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.html#ansys.edb.core.primitive.primitive.PadstackInstance",
        "title": "PadstackInstance > PadstackInstance > PadstackInstance",
        "section": "PadstackInstance > PadstackInstance",
        "text": "class ansys.edb.core.primitive.primitive.PadstackInstance(msg)\n\nRepresentis a padstack instance object.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nPadstackInstance.create(layout, net, name, ...)\n\nCreate a padstack instance.\n\nPadstackInstance.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nPadstackInstance.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nPadstackInstance.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nPadstackInstance.delete()\n\nDelete the layout object.\n\nPadstackInstance.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nPadstackInstance.get_back_drill_by_depth(...)\n\nGet the back drill type by depth.\n\nPadstackInstance.get_back_drill_by_layer(...)\n\nGet the back drill type by the layer.\n\nPadstackInstance.get_back_drill_type(from_bottom)\n\nGet the back drill type of the padstack instance.\n\nPadstackInstance.get_hole_overrides()\n\nGet the hole overrides of the padstack instance.\n\nPadstackInstance.get_layer_range()\n\nGet the top and bottom layers of the padstack instance.\n\nPadstackInstance.get_padstack_instance_terminal()\n\nTerminalInstance:         Terminal of the padstack instance.\n\nPadstackInstance.get_position_and_rotation()\n\nGet the position and rotation of the padstack instance.\n\nPadstackInstance.get_product_property(...)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nPadstackInstance.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nPadstackInstance.is_in_pin_group(pin_group)\n\nDetermine if the padstack instance is in a given pin group.\n\nPadstackInstance.set_back_drill_by_depth(...)\n\nSet the back drill type by depth.\n\nPadstackInstance.set_back_drill_by_layer(...)\n\nSet the back drill by the layer.\n\nPadstackInstance.set_hole_overrides(...)\n\nSet the hole overrides of the padstack instance.\n\nPadstackInstance.set_layer_range(top_layer, ...)\n\nSet the top and bottom layers of the padstack instance.\n\nPadstackInstance.set_position_and_rotation(x, ...)\n\nSet the position and rotation of the padstack instance.\n\nPadstackInstance.set_product_property(...)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\n\n\nAttributes\n\n\n\n\n\n\n\nPadstackInstance.component\n\nComponentGroup:         Component of the Connectable object.\n\nPadstackInstance.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nPadstackInstance.group\n\nGroup object.\n\nPadstackInstance.id\n\nint: Unique ID of the EDB object.\n\nPadstackInstance.is_layout_pin\n\nbool: Flag indicating if the padstack instance is a layout pin.\n\nPadstackInstance.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nPadstackInstance.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nPadstackInstance.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nPadstackInstance.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nPadstackInstance.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nPadstackInstance.layer_map\n\nLayerMap: Layer map of the padstack instance.\n\nPadstackInstance.layout\n\nLayout: Layout owning the object.\n\nPadstackInstance.layout_obj_type\n\n\n\nPadstackInstance.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nPadstackInstance.name\n\nstr: Name of the padstack instance.\n\nPadstackInstance.net\n\nNet: Net of the Connectable object.\n\nPadstackInstance.obj_type\n\nLayoutObjType: Layout object type.\n\nPadstackInstance.padstack_def\n\nPadstackDef:         Definition of the padstack instance.\n\nPadstackInstance.pin_groups\n\nlist of PinGroup:         Pin groups of the padstack instance.\n\nPadstackInstance.solderball_layer\n\nLayer: Solderball layer of the padstack instance.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.voltage_phase",
        "href": "api/_autosummary/ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.voltage_phase.html#voltage_phase",
        "title": "voltage_phase",
        "section": "voltage_phase",
        "text": "Excitation voltage phase.\nvoltage_phase"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.voltage_phase",
        "href": "api/_autosummary/ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.voltage_phase.html#ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.voltage_phase",
        "title": "voltage_phase > voltage_phase > voltage_phase",
        "section": "voltage_phase > voltage_phase",
        "text": "property PortPostProcessingProp.voltage_phase\n\nExcitation voltage phase.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeType",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeType.html#edgetype",
        "title": "EdgeType",
        "section": "EdgeType",
        "text": "Provides an enum representing edge types.\nEdgeType.PRIMITIVE\n\nEdgeType.PADSTACK\n\nEdgeType\nEdgeType.PRIMITIVE\nEdgeType.PADSTACK"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeType",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeType.html#ansys.edb.core.terminal.terminals.EdgeType",
        "title": "EdgeType > EdgeType > EdgeType",
        "section": "EdgeType > EdgeType",
        "text": "class ansys.edb.core.terminal.terminals.EdgeType(value)\n\nProvides an enum representing edge types.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nEdgeType.PRIMITIVE\n\n\n\nEdgeType.PADSTACK\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.html#hfsssettingsoptions",
        "title": "HFSSSettingsOptions",
        "section": "HFSSSettingsOptions",
        "text": "Represents options for HFSS simulation settings.\nHFSSSettingsOptions.do_lambda_refine\nbool: Flag indicating if lambda refinement is used during meshing.\nHFSSSettingsOptions.enhanced_low_frequency_accuracy\nbool: Flag indicating if enhanced low-frequency accuracy is enabled during simulation.\nHFSSSettingsOptions.lambda_target\nfloat: Target lambda value for lambda refinement.\nHFSSSettingsOptions.max_refinement_per_pass\nint: Maximum mesh refinement per adaptive pass.\nHFSSSettingsOptions.mesh_size_factor\nfloat: Mesh size factor used for lambda refinement.\nHFSSSettingsOptions.min_converged_passes\nint: Minimum number of converged adaptive passes.\nHFSSSettingsOptions.min_passes\nint: Minimum number of adaptive passes.\nHFSSSettingsOptions.msg\nEDBObjMessage: Protobuf message that represents this object's ID.\nHFSSSettingsOptions.order_basis\nBasisFunctionOrder: Basis function order.\nHFSSSettingsOptions.relative_residual\nfloat: Relative residual value that the HFSS iterative solver is to use.\nHFSSSettingsOptions.solver_type\nSolverType: HFSS solver type.\nHFSSSettingsOptions.use_default_lambda_value\nbool: Flag indicating if the default lambda target value is used.\nHFSSSettingsOptions.use_max_refinement\nbool: Flag indicating if maximum refinement values are used during simulation.\nHFSSSettingsOptions.use_shell_elements\nbool: Flag indicating whether to use shell elements.\nHFSSSettingsOptions\nHFSSSettingsOptions.do_lambda_refine\nbool\nHFSSSettingsOptions.enhanced_low_frequency_accuracy\nbool\nHFSSSettingsOptions.lambda_target\nfloat\nHFSSSettingsOptions.max_refinement_per_pass\nint\nHFSSSettingsOptions.mesh_size_factor\nfloat\nHFSSSettingsOptions.min_converged_passes\nint\nHFSSSettingsOptions.min_passes\nint\nHFSSSettingsOptions.msg\nEDBObjMessage\nHFSSSettingsOptions.order_basis\nBasisFunctionOrder\nHFSSSettingsOptions.relative_residual\nfloat\nHFSSSettingsOptions.solver_type\nSolverType\nHFSSSettingsOptions.use_default_lambda_value\nbool\nHFSSSettingsOptions.use_max_refinement\nbool\nHFSSSettingsOptions.use_shell_elements\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions",
        "title": "HFSSSettingsOptions > HFSSSettingsOptions > HFSSSettingsOptions",
        "section": "HFSSSettingsOptions > HFSSSettingsOptions",
        "text": "class ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions(sim_setup)\n\nRepresents options for HFSS simulation settings.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nHFSSSettingsOptions.do_lambda_refine\n\nbool: Flag indicating if lambda refinement is used during meshing.\n\nHFSSSettingsOptions.enhanced_low_frequency_accuracy\n\nbool: Flag indicating if enhanced low-frequency accuracy is enabled during simulation.\n\nHFSSSettingsOptions.lambda_target\n\nfloat: Target lambda value for lambda refinement.\n\nHFSSSettingsOptions.max_refinement_per_pass\n\nint: Maximum mesh refinement per adaptive pass.\n\nHFSSSettingsOptions.mesh_size_factor\n\nfloat: Mesh size factor used for lambda refinement.\n\nHFSSSettingsOptions.min_converged_passes\n\nint: Minimum number of converged adaptive passes.\n\nHFSSSettingsOptions.min_passes\n\nint: Minimum number of adaptive passes.\n\nHFSSSettingsOptions.msg\n\nEDBObjMessage: Protobuf message that represents this object's ID.\n\nHFSSSettingsOptions.order_basis\n\nBasisFunctionOrder: Basis function order.\n\nHFSSSettingsOptions.relative_residual\n\nfloat: Relative residual value that the HFSS iterative solver is to use.\n\nHFSSSettingsOptions.solver_type\n\nSolverType: HFSS solver type.\n\nHFSSSettingsOptions.use_default_lambda_value\n\nbool: Flag indicating if the default lambda target value is used.\n\nHFSSSettingsOptions.use_max_refinement\n\nbool: Flag indicating if maximum refinement values are used during simulation.\n\nHFSSSettingsOptions.use_shell_elements\n\nbool: Flag indicating whether to use shell elements.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_OVAL",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_OVAL.html#padgeomtype_oval",
        "title": "PADGEOMTYPE_OVAL",
        "section": "PADGEOMTYPE_OVAL",
        "text": "PADGEOMTYPE_OVAL"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_OVAL",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_OVAL.html#ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_OVAL",
        "title": "PADGEOMTYPE_OVAL > PADGEOMTYPE_OVAL > PADGEOMTYPE_OVAL",
        "section": "PADGEOMTYPE_OVAL > PADGEOMTYPE_OVAL",
        "text": "PadGeometryType.PADGEOMTYPE_OVAL = 4\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.locked",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.locked.html#locked",
        "title": "locked",
        "section": "locked",
        "text": "bool: Flag indicating if the layer is locked.\nlocked\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.locked",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.locked.html#ansys.edb.core.layer.stackup_layer.StackupLayer.locked",
        "title": "locked > locked > locked",
        "section": "locked > locked",
        "text": "property StackupLayer.locked\n\nbool: Flag indicating if the layer is locked.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property of the cell for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nNew string to store in this property.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.set_product_property.html#ansys.edb.core.layout.cell.Cell.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "Cell.set_product_property(prod_id, attr_id, prop_value)\n\nSet the product property of the cell for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nprop_value\n\npython:str\n\nNew string to store in this property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.design_name",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.design_name.html#design_name",
        "title": "design_name",
        "section": "design_name",
        "text": "str: Design name of the MCAD model.\nThis property is read-only.\ndesign_name\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.design_name",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.design_name.html#ansys.edb.core.layout.mcad_model.McadModel.design_name",
        "title": "design_name > design_name > design_name",
        "section": "design_name > design_name",
        "text": "property McadModel.design_name\n\nstr: Design name of the MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.get_dimensions",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.get_dimensions.html#get_dimensions",
        "title": "get_dimensions",
        "section": "get_dimensions",
        "text": "Get dimensions of a given material definition.\nTypes are Simple 1x1, Anisotropic 3x1, and Tensor 3x3.\nProperty ID.\nThe tuple is in a (col, row) format:\ncol: Number of rows of the material property.\nrow: Number of columns of the material property.\nget_dimensions\nMaterialProperty\npython:tuple\npython:int\npython:int\n(col, row)\ncol\nrow"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.get_dimensions",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.get_dimensions.html#ansys.edb.core.definition.material_def.MaterialDef.get_dimensions",
        "title": "get_dimensions > get_dimensions > get_dimensions",
        "section": "get_dimensions > get_dimensions",
        "text": "MaterialDef.get_dimensions(material_property_id)\n\nGet dimensions of a given material definition.\n\nTypes are Simple 1x1, Anisotropic 3x1, and Tensor 3x3.\n\nParameters\n\nmaterial_property_id\n\nMaterialProperty\n\nProperty ID.\n\nReturns\n\npython:tuple[python:int, python:int]\n\nThe tuple is in a (col, row) format:\n\ncol: Number of rows of the material property.\n\nrow: Number of columns of the material property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.groups",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.groups.html#groups",
        "title": "groups",
        "section": "groups",
        "text": "list of Group: List of all groups         in the layout.\nThis property is read-only.\ngroups\nlist\nGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.groups",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.groups.html#ansys.edb.core.layout.layout.Layout.groups",
        "title": "groups > groups > groups",
        "section": "groups > groups",
        "text": "property Layout.groups\n\nlist of Group: List of all groups         in the layout.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_SQUARE90",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_SQUARE90.html#padgeomtype_square90",
        "title": "PADGEOMTYPE_SQUARE90",
        "section": "PADGEOMTYPE_SQUARE90",
        "text": "PADGEOMTYPE_SQUARE90"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_SQUARE90",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_SQUARE90.html#ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_SQUARE90",
        "title": "PADGEOMTYPE_SQUARE90 > PADGEOMTYPE_SQUARE90 > PADGEOMTYPE_SQUARE90",
        "section": "PADGEOMTYPE_SQUARE90 > PADGEOMTYPE_SQUARE90",
        "text": "PadGeometryType.PADGEOMTYPE_SQUARE90 = 11\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.anti_pads_always_on",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.anti_pads_always_on.html#anti_pads_always_on",
        "title": "anti_pads_always_on",
        "section": "anti_pads_always_on",
        "text": "bool: Flag indicating whether antipads are always enabled.\nTrue if antipads are always enabled, False otherwise. If antipads\nare not always enabled, they are triggered only when the via center point falls         within fill from another net.\nanti_pads_always_on\nbool\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.anti_pads_always_on",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.anti_pads_always_on.html#ansys.edb.core.layout.cell.Cell.anti_pads_always_on",
        "title": "anti_pads_always_on > anti_pads_always_on > anti_pads_always_on",
        "section": "anti_pads_always_on > anti_pads_always_on",
        "text": "property Cell.anti_pads_always_on\n\nbool: Flag indicating whether antipads are always enabled.\n\nTrue if antipads are always enabled, False otherwise. If antipads\nare not always enabled, they are triggered only when the via center point falls         within fill from another net.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.msg",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.msg",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.msg.html#ansys.edb.core.primitive.primitive.Path.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property Path.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModelType.MULTIPOLE_DEBYE",
        "href": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModelType.MULTIPOLE_DEBYE.html#multipole_debye",
        "title": "MULTIPOLE_DEBYE",
        "section": "MULTIPOLE_DEBYE",
        "text": "MULTIPOLE_DEBYE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModelType.MULTIPOLE_DEBYE",
        "href": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModelType.MULTIPOLE_DEBYE.html#ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModelType.MULTIPOLE_DEBYE",
        "title": "MULTIPOLE_DEBYE > MULTIPOLE_DEBYE > MULTIPOLE_DEBYE",
        "section": "MULTIPOLE_DEBYE > MULTIPOLE_DEBYE",
        "text": "DielectricMaterialModelType.MULTIPOLE_DEBYE = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.cast",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.cast.html#cast",
        "title": "cast",
        "section": "cast",
        "text": "Cast the terminal object to the correct concrete type, fetching the type if necessary.\ncast\nTerminalType\nTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.cast",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.cast.html#ansys.edb.core.terminal.terminals.PointTerminal.cast",
        "title": "cast > cast > cast",
        "section": "cast > cast",
        "text": "PointTerminal.cast(term_type=None)\n\nCast the terminal object to the correct concrete type, fetching the type if necessary.\n\nParameters\n\nterm_type\n\nTerminalType\n\n\n\nReturns\n\nTerminal\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.is_null",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.is_null",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.is_null.html#ansys.edb.core.layer.layer.Layer.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property Layer.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.reference_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.reference_terminal.html#reference_terminal",
        "title": "reference_terminal",
        "section": "reference_terminal",
        "text": "Terminal: Terminal that the terminal references, if any.\nreference_terminal\nTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.reference_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.reference_terminal.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.reference_terminal",
        "title": "reference_terminal > reference_terminal > reference_terminal",
        "section": "reference_terminal > reference_terminal",
        "text": "property PinGroupTerminal.reference_terminal\n\nTerminal: Terminal that the terminal references, if any.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.use_parallel_refinement",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.use_parallel_refinement.html#use_parallel_refinement",
        "title": "use_parallel_refinement",
        "section": "use_parallel_refinement",
        "text": "bool: Flag indicating if parallel refinement is used.\nuse_parallel_refinement\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.use_parallel_refinement",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.use_parallel_refinement.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.use_parallel_refinement",
        "title": "use_parallel_refinement > use_parallel_refinement > use_parallel_refinement",
        "section": "use_parallel_refinement > use_parallel_refinement",
        "text": "property HFSSGeneralSettings.use_parallel_refinement\n\nbool: Flag indicating if parallel refinement is used.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_mcad_stride.html#is_mcad_stride",
        "title": "is_mcad_stride",
        "section": "is_mcad_stride",
        "text": "bool: Flag indicating if this is a Stride MCAD model.\nThis property is read-only.\nis_mcad_stride\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_mcad_stride.html#ansys.edb.core.primitive.primitive.Rectangle.is_mcad_stride",
        "title": "is_mcad_stride > is_mcad_stride > is_mcad_stride",
        "section": "is_mcad_stride > is_mcad_stride",
        "text": "property Rectangle.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_reference_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_reference_terminal.html#is_reference_terminal",
        "title": "is_reference_terminal",
        "section": "is_reference_terminal",
        "text": "bool: Flag indicating if the terminal is a reference terminal.\nis_reference_terminal\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_reference_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_reference_terminal.html#ansys.edb.core.terminal.terminals.BundleTerminal.is_reference_terminal",
        "title": "is_reference_terminal > is_reference_terminal > is_reference_terminal",
        "section": "is_reference_terminal > is_reference_terminal",
        "text": "property BundleTerminal.is_reference_terminal\n\nbool: Flag indicating if the terminal is a reference terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.cell_instances",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.cell_instances.html#cell_instances",
        "title": "cell_instances",
        "section": "cell_instances",
        "text": "list of CellInstances:         List of all cell instances in the layout.\nThis property is read-only.\ncell_instances\nlist\nCellInstances"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.cell_instances",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.cell_instances.html#ansys.edb.core.layout.layout.Layout.cell_instances",
        "title": "cell_instances > cell_instances > cell_instances",
        "section": "cell_instances > cell_instances",
        "text": "property Layout.cell_instances\n\nlist of CellInstances:         List of all cell instances in the layout.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.shift",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.shift.html#shift",
        "title": "shift",
        "section": "shift",
        "text": "Point3DLike: Shift.\nshift"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.shift",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.shift.html#ansys.edb.core.utility.transform3d.Transform3D.shift",
        "title": "shift > shift > shift",
        "section": "shift > shift",
        "text": "property Transform3D.shift\n\nPoint3DLike: Shift.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.create_hfss.html#create_hfss",
        "title": "create_hfss",
        "section": "create_hfss",
        "text": "Create an HFSS model from an MCAD file.\nHFSS model created.\ncreate_hfss\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.create_hfss.html#ansys.edb.core.primitive.primitive.Text.create_hfss",
        "title": "create_hfss > create_hfss > create_hfss",
        "section": "create_hfss > create_hfss",
        "text": "Text.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nReturns\n\nMcadModel\n\nHFSS model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.eliminate_slit_per_holes",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.eliminate_slit_per_holes.html#eliminate_slit_per_holes",
        "title": "eliminate_slit_per_holes",
        "section": "eliminate_slit_per_holes",
        "text": "float: Threshold for strain or thermal relief slits and hole polygon areas.\neliminate_slit_per_holes\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.eliminate_slit_per_holes",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.eliminate_slit_per_holes.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.eliminate_slit_per_holes",
        "title": "eliminate_slit_per_holes > eliminate_slit_per_holes > eliminate_slit_per_holes",
        "section": "eliminate_slit_per_holes > eliminate_slit_per_holes",
        "text": "property RaptorXAdvancedSettings.eliminate_slit_per_holes\n\nfloat: Threshold for strain or thermal relief slits and hole polygon areas.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.insert",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.insert.html#insert",
        "title": "insert",
        "section": "insert",
        "text": "Insert an RTree object from a given RTree object.\nR-tree data object with an index.\ninsert\nRTreeObj"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.insert",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.insert.html#ansys.edb.core.geometry.r_tree.RTree.insert",
        "title": "insert > insert > insert",
        "section": "insert > insert",
        "text": "RTree.insert(rtree_obj)\n\nInsert an RTree object from a given RTree object.\n\nParameters\n\nrtree_obj\n\nRTreeObj\n\nR-tree data object with an index.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.find",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.find.html#find",
        "title": "find",
        "section": "find",
        "text": "Find a terminal by name in a given layout.\nLayout to search for the terminal.\nName of the terminal.\nfind\nLayout\nstr\nTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.find",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.find.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.find",
        "title": "find > find > find",
        "section": "find > find",
        "text": "classmethod PadstackInstanceTerminal.find(layout, name)\n\nFind a terminal by name in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the terminal.\n\nname\n\nstr\n\nName of the terminal.\n\nReturns\n\nTerminal\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.is_parameter",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.is_parameter.html#is_parameter",
        "title": "is_parameter",
        "section": "is_parameter",
        "text": "Determine if the variable is a parameter.\nVariable name.\nTrue if the variable is a parameter, False otherwise.\nis_parameter\npython:str\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.is_parameter",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.is_parameter.html#ansys.edb.core.layout.cell.Cell.is_parameter",
        "title": "is_parameter > is_parameter > is_parameter",
        "section": "is_parameter > is_parameter",
        "text": "Cell.is_parameter(name)\n\nDetermine if the variable is a parameter.\n\nParameters\n\nname\n\npython:str\n\nVariable name.\n\nReturns\n\nbool\n\nTrue if the variable is a parameter, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_NO_GEOMETRY",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_NO_GEOMETRY.html#padgeomtype_no_geometry",
        "title": "PADGEOMTYPE_NO_GEOMETRY",
        "section": "PADGEOMTYPE_NO_GEOMETRY",
        "text": "PADGEOMTYPE_NO_GEOMETRY"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_NO_GEOMETRY",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_NO_GEOMETRY.html#ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_NO_GEOMETRY",
        "title": "PADGEOMTYPE_NO_GEOMETRY > PADGEOMTYPE_NO_GEOMETRY > PADGEOMTYPE_NO_GEOMETRY",
        "section": "PADGEOMTYPE_NO_GEOMETRY > PADGEOMTYPE_NO_GEOMETRY",
        "text": "PadGeometryType.PADGEOMTYPE_NO_GEOMETRY = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.voids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.voids.html#voids",
        "title": "voids",
        "section": "voids",
        "text": "list of Primitive: List of void        primitive objects inside the primitive.\nThis property is read-only.\nvoids\nlist\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.voids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.voids.html#ansys.edb.core.primitive.primitive.Circle.voids",
        "title": "voids > voids > voids",
        "section": "voids > voids",
        "text": "property Circle.voids\n\nlist of Primitive: List of void        primitive objects inside the primitive.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.ProductIdType.GENERIC_TRANSLATOR",
        "href": "api/_autosummary/ansys.edb.core.database.ProductIdType.GENERIC_TRANSLATOR.html#generic_translator",
        "title": "GENERIC_TRANSLATOR",
        "section": "GENERIC_TRANSLATOR",
        "text": "GENERIC_TRANSLATOR"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.ProductIdType.GENERIC_TRANSLATOR",
        "href": "api/_autosummary/ansys.edb.core.database.ProductIdType.GENERIC_TRANSLATOR.html#ansys.edb.core.database.ProductIdType.GENERIC_TRANSLATOR",
        "title": "GENERIC_TRANSLATOR > GENERIC_TRANSLATOR > GENERIC_TRANSLATOR",
        "section": "GENERIC_TRANSLATOR > GENERIC_TRANSLATOR",
        "text": "ProductIdType.GENERIC_TRANSLATOR = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.hfss_pi_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.hfss_pi_type.html#hfss_pi_type",
        "title": "hfss_pi_type",
        "section": "hfss_pi_type",
        "text": "HfssPIType: HFSS PI type.\nhfss_pi_type\nHfssPIType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.hfss_pi_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.hfss_pi_type.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.hfss_pi_type",
        "title": "hfss_pi_type > hfss_pi_type > hfss_pi_type",
        "section": "hfss_pi_type > hfss_pi_type",
        "text": "property PinGroupTerminal.hfss_pi_type\n\nHfssPIType: HFSS PI type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.RoughnessRegion.TOP",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.RoughnessRegion.TOP.html#top",
        "title": "TOP",
        "section": "TOP",
        "text": "TOP"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.RoughnessRegion.TOP",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.RoughnessRegion.TOP.html#ansys.edb.core.layer.stackup_layer.RoughnessRegion.TOP",
        "title": "TOP > TOP > TOP",
        "section": "TOP > TOP",
        "text": "RoughnessRegion.TOP = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.get_definition_name",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.get_definition_name.html#get_definition_name",
        "title": "get_definition_name",
        "section": "get_definition_name",
        "text": "Get the definition name of the bondwire object.\nWhether an evaluated (in variable namespace) material name is wanted.\nBondwire definition name.\nget_definition_name\npython:True\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.get_definition_name",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.get_definition_name.html#ansys.edb.core.primitive.primitive.Bondwire.get_definition_name",
        "title": "get_definition_name > get_definition_name > get_definition_name",
        "section": "get_definition_name > get_definition_name",
        "text": "Bondwire.get_definition_name(evaluated=True)\n\nGet the definition name of the bondwire object.\n\nParameters\n\nevaluated\n\nbool, default: python:True\n\nWhether an evaluated (in variable namespace) material name is wanted.\n\nReturns\n\npython:str\n\nBondwire definition name.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.MASS_DENSITY",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.MASS_DENSITY.html#mass_density",
        "title": "MASS_DENSITY",
        "section": "MASS_DENSITY",
        "text": "MASS_DENSITY"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.MASS_DENSITY",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.MASS_DENSITY.html#ansys.edb.core.definition.material_def.MaterialProperty.MASS_DENSITY",
        "title": "MASS_DENSITY > MASS_DENSITY > MASS_DENSITY",
        "section": "MASS_DENSITY > MASS_DENSITY",
        "text": "MaterialProperty.MASS_DENSITY = 34\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.value.Value.complex",
        "href": "api/_autosummary/ansys.edb.core.utility.value.Value.complex.html#complex",
        "title": "complex",
        "section": "complex",
        "text": "complex: Complex value from the value object.\nIf the number is real, the imaginary part is 0.\ncomplex\ncomplex\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.value.Value.complex",
        "href": "api/_autosummary/ansys.edb.core.utility.value.Value.complex.html#ansys.edb.core.utility.value.Value.complex",
        "title": "complex > complex > complex",
        "section": "complex > complex",
        "text": "property Value.complex\n\ncomplex: Complex value from the value object.\n\nIf the number is real, the imaginary part is 0.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.get_top_bottom_stackup_layers",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.get_top_bottom_stackup_layers.html#get_top_bottom_stackup_layers",
        "title": "get_top_bottom_stackup_layers",
        "section": "get_top_bottom_stackup_layers",
        "text": "Get the top and bottom stackup layers of a specific type and their elevations.\nLayer type set indicating the layer types to retrieve.\nReturns a tuple in this format:\n(upper_layer, upper_layer_top_elevation, lower_layer, lower_layer_lower_elevation)\nget_top_bottom_stackup_layers\nLayerTypeSet\npython:tuple\nLayer\npython:float\nLayer\npython:float"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.get_top_bottom_stackup_layers",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.get_top_bottom_stackup_layers.html#ansys.edb.core.layer.layer_collection.LayerCollection.get_top_bottom_stackup_layers",
        "title": "get_top_bottom_stackup_layers > get_top_bottom_stackup_layers > get_top_bottom_stackup_layers",
        "section": "get_top_bottom_stackup_layers > get_top_bottom_stackup_layers",
        "text": "LayerCollection.get_top_bottom_stackup_layers(layer_type_set)\n\nGet the top and bottom stackup layers of a specific type and their elevations.\n\nParameters\n\nlayer_type_set\n\nLayerTypeSet\n\nLayer type set indicating the layer types to retrieve.\n\nReturns\n\npython:tuple[Layer, python:float, Layer, python:float]\n\nReturns a tuple in this format:\n(upper_layer, upper_layer_top_elevation, lower_layer, lower_layer_lower_elevation)\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.create_hfss.html#create_hfss",
        "title": "create_hfss",
        "section": "create_hfss",
        "text": "Create an HFSS model from an MCAD file.\nHFSS model created.\ncreate_hfss\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.create_hfss.html#ansys.edb.core.primitive.primitive.PadstackInstance.create_hfss",
        "title": "create_hfss > create_hfss > create_hfss",
        "section": "create_hfss > create_hfss",
        "text": "PadstackInstance.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nReturns\n\nMcadModel\n\nHFSS model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.get_parameters",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.get_parameters.html#get_parameters",
        "title": "get_parameters",
        "section": "get_parameters",
        "text": "Get parameters of the circle.\nValue,\nValue,\nValue\nReturns a tuple in this format:\n(center_x, center_y, radius)\ncenter_x : X value of center point.\ncenter_y : Y value of center point.\nradius : Radius value of the circle.\nget_parameters\npython:tuple\nValue\nValue\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.get_parameters",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.get_parameters.html#ansys.edb.core.primitive.primitive.Circle.get_parameters",
        "title": "get_parameters > get_parameters > get_parameters",
        "section": "get_parameters > get_parameters",
        "text": "Circle.get_parameters()\n\nGet parameters of the circle.\n\nReturns\n\npython:tuple[\n\nValue,\nValue,\nValue\n\n]\n\nReturns a tuple in this format:\n\n(center_x, center_y, radius)\n\ncenter_x : X value of center point.\n\ncenter_y : Y value of center point.\n\nradius : Radius value of the circle.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the property.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.set_product_property.html#ansys.edb.core.primitive.primitive.Text.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "Text.set_product_property(prod_id, attr_id, prop_value)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nprop_value\n\npython:str\n\nString stored in the property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.layer_ids",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.layer_ids.html#layer_ids",
        "title": "layer_ids",
        "section": "layer_ids",
        "text": "list of int: All layer IDs in the padstack definition data object.\nThis property is read-only.\nlayer_ids\nlist\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.layer_ids",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.layer_ids.html#ansys.edb.core.definition.padstack_def_data.PadstackDefData.layer_ids",
        "title": "layer_ids > layer_ids > layer_ids",
        "section": "layer_ids > layer_ids",
        "text": "property PadstackDefData.layer_ids\n\nlist of int: All layer IDs in the padstack definition data object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDs for a given product ID for the layer.\nProduct ID.\nList of attribute IDs.\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.get_product_property_ids.html#ansys.edb.core.layer.layer.Layer.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "Layer.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs for a given product ID for the layer.\n\nParameters\n\nprod_id\n\nProductIdType\n\nProduct ID.\n\nReturns\n\npython:list[python:int]\n\nList of attribute IDs.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.layout_obj_type.html#layout_obj_type",
        "title": "layout_obj_type",
        "section": "layout_obj_type",
        "text": "layout_obj_type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.layout_obj_type.html#ansys.edb.core.terminal.terminals.Terminal.layout_obj_type",
        "title": "layout_obj_type > layout_obj_type > layout_obj_type",
        "section": "layout_obj_type > layout_obj_type",
        "text": "Terminal.layout_obj_type = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.make_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.make_zone_primitive.html#make_zone_primitive",
        "title": "make_zone_primitive",
        "section": "make_zone_primitive",
        "text": "Make the primitive a zone primitive with a zone specified by the provided ID.\nID of the zone primitive to use.\nmake_zone_primitive\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.make_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.make_zone_primitive.html#ansys.edb.core.primitive.primitive.Rectangle.make_zone_primitive",
        "title": "make_zone_primitive > make_zone_primitive > make_zone_primitive",
        "section": "make_zone_primitive > make_zone_primitive",
        "text": "Rectangle.make_zone_primitive(zone_id)\n\nMake the primitive a zone primitive with a zone specified by the provided ID.\n\nParameters\n\nzone_id\n\npython:int\n\nID of the zone primitive to use.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents this object’s ID.\nThis property is read-only.\nmsg\nEDBObjMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.msg.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property HFSSAdvancedSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object’s ID.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.SingleFrequencyAdaptiveSolution.max_delta",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.SingleFrequencyAdaptiveSolution.max_delta.html#max_delta",
        "title": "max_delta",
        "section": "max_delta",
        "text": "str: Maximum delta S between adaptive passes.\nmax_delta\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.SingleFrequencyAdaptiveSolution.max_delta",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.SingleFrequencyAdaptiveSolution.max_delta.html#ansys.edb.core.simulation_setup.adaptive_solutions.SingleFrequencyAdaptiveSolution.max_delta",
        "title": "max_delta > max_delta > max_delta",
        "section": "max_delta > max_delta",
        "text": "property SingleFrequencyAdaptiveSolution.max_delta\n\nstr: Maximum delta S between adaptive passes.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.width",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.width.html#width",
        "title": "width",
        "section": "width",
        "text": "Value: Width of the bondwire.\nwidth\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.width",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.width.html#ansys.edb.core.primitive.primitive.Bondwire.width",
        "title": "width > width > width",
        "section": "width > width",
        "text": "property Bondwire.width\n\nValue: Width of the bondwire.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceDataEntry.port_2_name",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceDataEntry.port_2_name.html#port_2_name",
        "title": "port_2_name",
        "section": "port_2_name",
        "text": "str: Name of the second port.\nport_2_name\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceDataEntry.port_2_name",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceDataEntry.port_2_name.html#ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceDataEntry.port_2_name",
        "title": "port_2_name > port_2_name > port_2_name",
        "section": "port_2_name > port_2_name",
        "text": "property MatrixConvergenceDataEntry.port_2_name\n\nstr: Name of the second port.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef",
        "href": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.html#datasetdef",
        "title": "DatasetDef",
        "section": "DatasetDef",
        "text": "Represents a dataset definition.\nDatasetDef.create(database, name)\nCreate a dataset definition object.\nDatasetDef.find_by_name(database, name)\nFind a dataset definition by name in a given database.\nDatasetDef.get_data()\nGet a list of data points in the dataset definition.\nDatasetDef.set_data(points)\nSet a list of data points in the dataset definition.\nDatasetDef.definition_type\nDefinitionObjType: Definition type.\nDatasetDef.id\nint: Unique ID of the EDB object.\nDatasetDef.is_null\nbool: Flag indicating if the object exists in the database.\nDatasetDef.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nDatasetDef.name\nstr: Name of the dataset definition.\nDatasetDef\nDatasetDef.create\nDatasetDef.find_by_name\nDatasetDef.get_data\nDatasetDef.set_data\nDatasetDef.definition_type\nDefinitionObjType\nDatasetDef.id\nint\nDatasetDef.is_null\nbool\nDatasetDef.msg\nEDBObjMessage\nDatasetDef.name\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef",
        "href": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.html#ansys.edb.core.definition.dataset_def.DatasetDef",
        "title": "DatasetDef > DatasetDef > DatasetDef",
        "section": "DatasetDef > DatasetDef",
        "text": "class ansys.edb.core.definition.dataset_def.DatasetDef(msg)\n\nRepresents a dataset definition.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nDatasetDef.create(database, name)\n\nCreate a dataset definition object.\n\nDatasetDef.find_by_name(database, name)\n\nFind a dataset definition by name in a given database.\n\nDatasetDef.get_data()\n\nGet a list of data points in the dataset definition.\n\nDatasetDef.set_data(points)\n\nSet a list of data points in the dataset definition.\n\n\n\nAttributes\n\n\n\n\n\n\n\nDatasetDef.definition_type\n\nDefinitionObjType: Definition type.\n\nDatasetDef.id\n\nint: Unique ID of the EDB object.\n\nDatasetDef.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nDatasetDef.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nDatasetDef.name\n\nstr: Name of the dataset definition.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.transparency",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.transparency.html#transparency",
        "title": "transparency",
        "section": "transparency",
        "text": "int: Transparency value of the layer.\nThe transparency value is between 0 and 100, where 0 indicates a completely\nopaque layer and 100 indicates a completely transparent layer.\ntransparency\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.transparency",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.transparency.html#ansys.edb.core.layer.stackup_layer.StackupLayer.transparency",
        "title": "transparency > transparency > transparency",
        "section": "transparency > transparency",
        "text": "property StackupLayer.transparency\n\nint: Transparency value of the layer.\n\nThe transparency value is between 0 and 100, where 0 indicates a completely\nopaque layer and 100 indicates a completely transparent layer.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.sweep_data",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.sweep_data.html#sweep_data",
        "title": "sweep_data",
        "section": "sweep_data",
        "text": "list of SweepData: Frequency sweeps of the simulation setup.\nsweep_data\nlist\nSweepData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.sweep_data",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.sweep_data.html#ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.sweep_data",
        "title": "sweep_data > sweep_data > sweep_data",
        "section": "sweep_data > sweep_data",
        "text": "property RaptorXSimulationSetup.sweep_data\n\nlist of SweepData: Frequency sweeps of the simulation setup.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_mcad_hfss.html#is_mcad_hfss",
        "title": "is_mcad_hfss",
        "section": "is_mcad_hfss",
        "text": "bool: Flag indicating if this is an HFSS MCAD model.\nThis property is read-only.\nis_mcad_hfss\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_mcad_hfss.html#ansys.edb.core.primitive.primitive.Circle.is_mcad_hfss",
        "title": "is_mcad_hfss > is_mcad_hfss > is_mcad_hfss",
        "section": "is_mcad_hfss > is_mcad_hfss",
        "text": "property Circle.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSParameterSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSParameterSettings.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents this object’s ID.\nThis property is read-only.\nmsg\nEDBObjMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSParameterSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSParameterSettings.msg.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSParameterSettings.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property SIWaveSParameterSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object’s ID.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.session.launch_session",
        "href": "api/_autosummary/ansys.edb.core.session.launch_session.html#launch_session",
        "title": "launch_session",
        "section": "launch_session",
        "text": "Launch a local session to an EDB API server.\nThe session must be manually disconnected after use by calling session.disconnect()\nDirectory where the EDB_RPC_Server.exe file is installed.\nPort number to listen on. The default is None, in which\ncase localhost is used.\nCreate a session and then disconnect it\nlaunch_session\npython:str\nEDB_RPC_Server.exe\npython:int\npython:None\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.session.launch_session",
        "href": "api/_autosummary/ansys.edb.core.session.launch_session.html#ansys.edb.core.session.launch_session",
        "title": "launch_session > launch_session > launch_session",
        "section": "launch_session > launch_session",
        "text": "ansys.edb.core.session.launch_session(ansys_em_root, port_num=None)\n\nLaunch a local session to an EDB API server.\n\nThe session must be manually disconnected after use by calling session.disconnect()\n\nParameters\n\nansys_em_root\n\npython:str\n\nDirectory where the EDB_RPC_Server.exe file is installed.\n\nport_num\n\npython:int, default: python:None\n\nPort number to listen on. The default is None, in which\ncase localhost is used.\n\nExamples\n\nCreate a session and then disconnect it\n\n>>> session = launch_session(\"C:\\\\Program Files\\\\AnsysEM\\\\v231\\\\Win64\", 50051)\n>>> # program goes here\n>>> session.disconnect()\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.referencing_via_layer_ids",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.referencing_via_layer_ids.html#referencing_via_layer_ids",
        "title": "referencing_via_layer_ids",
        "section": "referencing_via_layer_ids",
        "text": "list[int]: Layer IDs for all via layers referencing the layer.\nThis property is read-only.\nreferencing_via_layer_ids\nlist\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.referencing_via_layer_ids",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.referencing_via_layer_ids.html#ansys.edb.core.layer.stackup_layer.StackupLayer.referencing_via_layer_ids",
        "title": "referencing_via_layer_ids > referencing_via_layer_ids > referencing_via_layer_ids",
        "section": "referencing_via_layer_ids > referencing_via_layer_ids",
        "text": "property StackupLayer.referencing_via_layer_ids\n\nlist[int]: Layer IDs for all via layers referencing the layer.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.html#instarray",
        "title": "InstArray",
        "section": "InstArray",
        "text": "Represents an instance array object.\nInstArray.create(layout, name, ref, orig, ...)\nCreate an instance array with a layout.\nInstArray.create_3d_comp()\nCreate a 3D composite model from an MCAD file.\nInstArray.create_hfss()\nCreate an HFSS model from an MCAD file.\nInstArray.create_stride()\nCreate a Stride model from an MCAD file.\nInstArray.create_with_component(layout, ...)\nCreate a cell instance with a component definition.\nInstArray.decompose()\nDecompose the instance array.\nInstArray.delete()\nDelete the layout object.\nInstArray.find(layout, name)\nFind an instance array by name in a given layout.\nInstArray.find_by_id(layout, uid)\nFind a Connectable object by database ID in a given layout.\nInstArray.get_parameter_override(param_name)\nGet the override of the cell instance parameter by name.\nInstArray.get_product_property(prod_id, attr_id)\nGet the product property of the layout object for a given product ID and attribute ID.\nInstArray.get_product_property_ids(prod_id)\nGet a list of attribute IDs given a product ID for the layout object.\nInstArray.set_parameter_override(param_name, ...)\nSet an override value for a given cell instance parameter.\nInstArray.set_product_property(prod_id, ...)\nSet the product property of the layout object for a given product ID and attribute ID.\nInstArray.component\nComponentGroup:         Component of the Connectable object.\nInstArray.component_def\nComponentDef: Component definition for the         hierarchy object if it exists, None otherwise.\nInstArray.edb_uid\nint: Unique, persistent ID for the Connectable object.\nInstArray.group\nGroup object.\nInstArray.id\nint: Unique ID of the EDB object.\nInstArray.is_mcad\nbool: Flag indicating if this is an MCAD model.\nInstArray.is_mcad_3d_comp\nbool: Flag indicating if this is a 3D composite MCAD model.\nInstArray.is_mcad_hfss\nbool: Flag indicating if this is an HFSS MCAD model.\nInstArray.is_mcad_stride\nbool: Flag indicating if this is a Stride MCAD model.\nInstArray.is_null\nbool: Flag indicating if the object exists in the database.\nInstArray.layout\nLayout: Layout owning the object.\nInstArray.layout_obj_type\n\nInstArray.location\ntuple (Value,         Value):         Location [x, y] of the hierarchy object on the placement_layer object.\nInstArray.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nInstArray.name\nstr: Name of the hierarchy object.\nInstArray.net\nNet: Net of the Connectable object.\nInstArray.obj_type\nLayoutObjType: Layout object type.\nInstArray.orig\nPointData: Origin of the instance array.\nInstArray.placement_3d\nbool: Flag indicating if the cell instance is 3D placed in the owning layout.\nInstArray.placement_layer\nLayer: Placement layer for the hierarchy object.\nInstArray.reference_layout\nLayout: Reference layout of the cell instance.\nInstArray.solve_independent_preference\nbool: Flag indicating if the object is assigned to solve independent of its parent context.\nInstArray.term_instances\nlist of TerminalInstance: Terminal         instances associated with the cell instance.\nInstArray.transform\nTransform:         Transformation information of the hierarchy object.\nInstArray.transform3d\nTransform3D:         3D transformation information of the cell instance.\nInstArray.x_axis\nPointData: X axis of the instance array.\nInstArray.x_count\nValue: X count of the instance array.\nInstArray.y_axis\nPointData: Y axis of the instance array.\nInstArray.y_count\nValue: Y count of the instance array.\nInstArray\nInstArray.create\nInstArray.create_3d_comp\nInstArray.create_hfss\nInstArray.create_stride\nInstArray.create_with_component\nInstArray.decompose\nInstArray.delete\nInstArray.find\nInstArray.find_by_id\nInstArray.get_parameter_override\nInstArray.get_product_property\nInstArray.get_product_property_ids\nInstArray.set_parameter_override\nInstArray.set_product_property\nInstArray.component\nComponentGroup\nInstArray.component_def\nComponentDef\nNone\nInstArray.edb_uid\nint\nInstArray.group\nGroup\nInstArray.id\nint\nInstArray.is_mcad\nbool\nInstArray.is_mcad_3d_comp\nbool\nInstArray.is_mcad_hfss\nbool\nInstArray.is_mcad_stride\nbool\nInstArray.is_null\nbool\nInstArray.layout\nLayout\nInstArray.layout_obj_type\nInstArray.location\ntuple\nValue\nValue\nplacement_layer\nInstArray.msg\nEDBObjMessage\nInstArray.name\nstr\nInstArray.net\nNet\nInstArray.obj_type\nLayoutObjType\nInstArray.orig\nPointData\nInstArray.placement_3d\nbool\nInstArray.placement_layer\nLayer\nInstArray.reference_layout\nLayout\nInstArray.solve_independent_preference\nbool\nInstArray.term_instances\nlist\nTerminalInstance\nInstArray.transform\nTransform\nInstArray.transform3d\nTransform3D\nInstArray.x_axis\nPointData\nInstArray.x_count\nValue\nInstArray.y_axis\nPointData\nInstArray.y_count\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.html#ansys.edb.core.hierarchy.inst_array.InstArray",
        "title": "InstArray > InstArray > InstArray",
        "section": "InstArray > InstArray",
        "text": "class ansys.edb.core.hierarchy.inst_array.InstArray(msg)\n\nRepresents an instance array object.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nInstArray.create(layout, name, ref, orig, ...)\n\nCreate an instance array with a layout.\n\nInstArray.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nInstArray.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nInstArray.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nInstArray.create_with_component(layout, ...)\n\nCreate a cell instance with a component definition.\n\nInstArray.decompose()\n\nDecompose the instance array.\n\nInstArray.delete()\n\nDelete the layout object.\n\nInstArray.find(layout, name)\n\nFind an instance array by name in a given layout.\n\nInstArray.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nInstArray.get_parameter_override(param_name)\n\nGet the override of the cell instance parameter by name.\n\nInstArray.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nInstArray.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nInstArray.set_parameter_override(param_name, ...)\n\nSet an override value for a given cell instance parameter.\n\nInstArray.set_product_property(prod_id, ...)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\n\n\nAttributes\n\n\n\n\n\n\n\nInstArray.component\n\nComponentGroup:         Component of the Connectable object.\n\nInstArray.component_def\n\nComponentDef: Component definition for the         hierarchy object if it exists, None otherwise.\n\nInstArray.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nInstArray.group\n\nGroup object.\n\nInstArray.id\n\nint: Unique ID of the EDB object.\n\nInstArray.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nInstArray.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nInstArray.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nInstArray.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nInstArray.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nInstArray.layout\n\nLayout: Layout owning the object.\n\nInstArray.layout_obj_type\n\n\n\nInstArray.location\n\ntuple (Value,         Value):         Location [x, y] of the hierarchy object on the placement_layer object.\n\nInstArray.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nInstArray.name\n\nstr: Name of the hierarchy object.\n\nInstArray.net\n\nNet: Net of the Connectable object.\n\nInstArray.obj_type\n\nLayoutObjType: Layout object type.\n\nInstArray.orig\n\nPointData: Origin of the instance array.\n\nInstArray.placement_3d\n\nbool: Flag indicating if the cell instance is 3D placed in the owning layout.\n\nInstArray.placement_layer\n\nLayer: Placement layer for the hierarchy object.\n\nInstArray.reference_layout\n\nLayout: Reference layout of the cell instance.\n\nInstArray.solve_independent_preference\n\nbool: Flag indicating if the object is assigned to solve independent of its parent context.\n\nInstArray.term_instances\n\nlist of TerminalInstance: Terminal         instances associated with the cell instance.\n\nInstArray.transform\n\nTransform:         Transformation information of the hierarchy object.\n\nInstArray.transform3d\n\nTransform3D:         3D transformation information of the cell instance.\n\nInstArray.x_axis\n\nPointData: X axis of the instance array.\n\nInstArray.x_count\n\nValue: X count of the instance array.\n\nInstArray.y_axis\n\nPointData: Y axis of the instance array.\n\nInstArray.y_count\n\nValue: Y count of the instance array.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.msg",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.msg",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.msg.html#ansys.edb.core.terminal.terminals.TerminalInstance.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property TerminalInstance.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.top_circuit_cells",
        "href": "api/_autosummary/ansys.edb.core.database.Database.top_circuit_cells.html#top_circuit_cells",
        "title": "top_circuit_cells",
        "section": "top_circuit_cells",
        "text": "list of Cell: Top circuit cells in the database.\ntop_circuit_cells\nlist\nCell"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.top_circuit_cells",
        "href": "api/_autosummary/ansys.edb.core.database.Database.top_circuit_cells.html#ansys.edb.core.database.Database.top_circuit_cells",
        "title": "top_circuit_cells > top_circuit_cells > top_circuit_cells",
        "section": "top_circuit_cells > top_circuit_cells",
        "text": "property Database.top_circuit_cells\n\nlist of Cell: Top circuit cells in the database.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the product property.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.get_product_property.html#ansys.edb.core.terminal.terminals.EdgeTerminal.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "EdgeTerminal.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nReturns\n\npython:str\n\nString stored in the product property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballPlacement.BELOW_PADSTACK",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballPlacement.BELOW_PADSTACK.html#below_padstack",
        "title": "BELOW_PADSTACK",
        "section": "BELOW_PADSTACK",
        "text": "BELOW_PADSTACK"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballPlacement.BELOW_PADSTACK",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballPlacement.BELOW_PADSTACK.html#ansys.edb.core.definition.padstack_def_data.SolderballPlacement.BELOW_PADSTACK",
        "title": "BELOW_PADSTACK > BELOW_PADSTACK > BELOW_PADSTACK",
        "section": "BELOW_PADSTACK > BELOW_PADSTACK",
        "text": "SolderballPlacement.BELOW_PADSTACK = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.settings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.settings.html#settings",
        "title": "settings",
        "section": "settings",
        "text": "HfssSimulationSettings: Simulation settings of the HFSS simulation setup.\nsettings\nHfssSimulationSettings"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.settings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.settings.html#ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.settings",
        "title": "settings > settings > settings",
        "section": "settings > settings",
        "text": "property HfssSimulationSetup.settings\n\nHfssSimulationSettings: Simulation settings of the HFSS simulation setup.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.enable_intra_plane_coupling",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.enable_intra_plane_coupling.html#enable_intra_plane_coupling",
        "title": "enable_intra_plane_coupling",
        "section": "enable_intra_plane_coupling",
        "text": "bool: Flag indicating if intra-plane coupling of power/ground nets is enabled to enhance accuracy.\nenable_intra_plane_coupling\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.enable_intra_plane_coupling",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.enable_intra_plane_coupling.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.enable_intra_plane_coupling",
        "title": "enable_intra_plane_coupling > enable_intra_plane_coupling > enable_intra_plane_coupling",
        "section": "enable_intra_plane_coupling > enable_intra_plane_coupling",
        "text": "property HFSSSolverSettings.enable_intra_plane_coupling\n\nbool: Flag indicating if intra-plane coupling of power/ground nets is enabled to enhance accuracy.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetupType.RAPTOR_X",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetupType.RAPTOR_X.html#raptor_x",
        "title": "RAPTOR_X",
        "section": "RAPTOR_X",
        "text": "RAPTOR_X"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetupType.RAPTOR_X",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetupType.RAPTOR_X.html#ansys.edb.core.simulation_setup.simulation_setup.SimulationSetupType.RAPTOR_X",
        "title": "RAPTOR_X > RAPTOR_X > RAPTOR_X",
        "section": "RAPTOR_X > RAPTOR_X",
        "text": "SimulationSetupType.RAPTOR_X = 12\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.net",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.net.html#net",
        "title": "net",
        "section": "net",
        "text": "Net: Net of the Connectable object.\nThis property can be set with a Net instance, a string, or None.\nnet\nNet\nNet\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.net",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.net.html#ansys.edb.core.primitive.primitive.PadstackInstance.net",
        "title": "net > net > net",
        "section": "net > net",
        "text": "property PadstackInstance.net\n\nNet: Net of the Connectable object.\n\nThis property can be set with a Net instance, a string, or None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.group",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.group.html#group",
        "title": "group",
        "section": "group",
        "text": "Group object.\ngroup\nGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.group",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.group.html#ansys.edb.core.primitive.primitive.Polygon.group",
        "title": "group > group > group",
        "section": "group > group",
        "text": "property Polygon.group\n\nGroup object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_from_one_axis_to_another",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_from_one_axis_to_another.html#create_from_one_axis_to_another",
        "title": "create_from_one_axis_to_another",
        "section": "create_from_one_axis_to_another",
        "text": "Create a 3D transformformation with rotation from an axis to an axis.\nFrom axis.\nTo axis.\ncreate_from_one_axis_to_another\nTransform3D"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_from_one_axis_to_another",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_from_one_axis_to_another.html#ansys.edb.core.utility.transform3d.Transform3D.create_from_one_axis_to_another",
        "title": "create_from_one_axis_to_another > create_from_one_axis_to_another > create_from_one_axis_to_another",
        "section": "create_from_one_axis_to_another > create_from_one_axis_to_another",
        "text": "classmethod Transform3D.create_from_one_axis_to_another(from_axis, to_axis)\n\nCreate a 3D transformformation with rotation from an axis to an axis.\n\nParameters\n\nfrom_axis\n\nPoint3DLike\n\nFrom axis.\n\nto_axis\n\nPoint3DLike\n\nTo axis.\n\nReturns\n\nTransform3D\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.cutout",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.cutout.html#cutout",
        "title": "cutout",
        "section": "cutout",
        "text": "Cut out an existing cell into a new cell.\nNets to keep after cutout.\nNets to kept and clip at the boundary after cutout.\nClipping polygon.\nWhether to perform clean clipping. The default is True.\nCell created.\ncutout\npython:list\nNet\npython:list\nNet\nPolygonData\noptional\nTrue\nCell"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.cutout",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.cutout.html#ansys.edb.core.layout.cell.Cell.cutout",
        "title": "cutout > cutout > cutout",
        "section": "cutout > cutout",
        "text": "Cell.cutout(included_nets, clipped_nets, clipping_polygon, clean_clipping=True)\n\nCut out an existing cell into a new cell.\n\nParameters\n\nincluded_nets\n\npython:list[Net]\n\nNets to keep after cutout.\n\nclipped_nets\n\npython:list[Net]\n\nNets to kept and clip at the boundary after cutout.\n\nclipping_polygon\n\nPolygonData\n\nClipping polygon.\n\nclean_clipping\n\nbool, optional\n\nWhether to perform clean clipping. The default is True.\n\nReturns\n\nCell\n\nCell created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_interface_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_interface_terminal.html#is_interface_terminal",
        "title": "is_interface_terminal",
        "section": "is_interface_terminal",
        "text": "bool: Flag indicating if the terminal is an interface.\nis_interface_terminal\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_interface_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_interface_terminal.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_interface_terminal",
        "title": "is_interface_terminal > is_interface_terminal > is_interface_terminal",
        "section": "is_interface_terminal > is_interface_terminal",
        "text": "property TerminalInstanceTerminal.is_interface_terminal\n\nbool: Flag indicating if the terminal is an interface.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDs given a product ID for the layout object.\nID representing a product that supports the EDB.\nAll user-defined attribute IDs for properties stored in the object\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.get_product_property_ids.html#ansys.edb.core.primitive.primitive.Path.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "Path.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nReturns\n\npython:list[python:int]\n\nAll user-defined attribute IDs for properties stored in the object\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.generate_via_smart_box",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.generate_via_smart_box.html#generate_via_smart_box",
        "title": "generate_via_smart_box",
        "section": "generate_via_smart_box",
        "text": "Generate a via smart box.\nThis method automatically identifies the locations of vias and significant geometry around them.\nName of the net to crawl in the search for vias.\nList of boxes, one around each via discovered.\ngenerate_via_smart_box\npython:str\npython:list\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.generate_via_smart_box",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.generate_via_smart_box.html#ansys.edb.core.layout.cell.Cell.generate_via_smart_box",
        "title": "generate_via_smart_box > generate_via_smart_box > generate_via_smart_box",
        "section": "generate_via_smart_box > generate_via_smart_box",
        "text": "Cell.generate_via_smart_box(net_name)\n\nGenerate a via smart box.\n\nThis method automatically identifies the locations of vias and significant geometry around them.\n\nParameters\n\nnet_name\n\npython:str\n\nName of the net to crawl in the search for vias.\n\nReturns\n\npython:list[PolygonData]\n\nList of boxes, one around each via discovered.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.remove_zone",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.remove_zone.html#remove_zone",
        "title": "remove_zone",
        "section": "remove_zone",
        "text": "Remove a zone.\nID of the zone.\nremove_zone\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.remove_zone",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.remove_zone.html#ansys.edb.core.layer.layer_collection.LayerCollection.remove_zone",
        "title": "remove_zone > remove_zone > remove_zone",
        "section": "remove_zone > remove_zone",
        "text": "LayerCollection.remove_zone(zone)\n\nRemove a zone.\n\nParameters\n\nzone\n\npython:int\n\nID of the zone.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.SingleFrequencyAdaptiveSolution.mx_conv_data",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.SingleFrequencyAdaptiveSolution.mx_conv_data.html#mx_conv_data",
        "title": "mx_conv_data",
        "section": "mx_conv_data",
        "text": "MatrixConvergenceData: Matrix convergence data.\nmx_conv_data\nMatrixConvergenceData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.SingleFrequencyAdaptiveSolution.mx_conv_data",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.SingleFrequencyAdaptiveSolution.mx_conv_data.html#ansys.edb.core.simulation_setup.adaptive_solutions.SingleFrequencyAdaptiveSolution.mx_conv_data",
        "title": "mx_conv_data > mx_conv_data > mx_conv_data",
        "section": "mx_conv_data > mx_conv_data",
        "text": "property SingleFrequencyAdaptiveSolution.mx_conv_data\n\nMatrixConvergenceData: Matrix convergence data.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.hfss_extent_info.HfssExtentInfo",
        "href": "api/_autosummary/ansys.edb.core.utility.hfss_extent_info.HfssExtentInfo.html#hfssextentinfo",
        "title": "HfssExtentInfo",
        "section": "HfssExtentInfo",
        "text": "Provides HFSS extent information.\nWhether an open region is used.\nExtent type.\nOpen region type.\nPolygon to use if the extent is the Polygon type.\nDielectric extent type.\nPolygon to use if dielectric extent is is the Polygon type.\nDielectric extent size. The first parameter is the value, and the second parameter             indicates if the value is a multiple.\nWhether to honor a user-defined dielectric primitive when calculating a dielectric extent.\nWhether to truncate the airbox at the ground layers.\nAirbox horizontal extent size. The first parameter is the value, and the second parameter             indicates if the value is a multiple.\nAirbox positive vertical extent size. The first parameter is the value, and the second parameter             indicates if the value is a multiple.\nAirbox negative vertical extent size. The first parameter is the value, and the second parameter             indicates if the value is a multiple.\nWhether to synchronize the airbox positive and negative vertical extent.\nWhether to check to see if the PML boxes are to rendered.\nPML operating frequency.\nPML radiation level for calculating the thickness of the boundary.\nWhether to retain the old behavior for the vertical expansion of the airbox.\nIf True, the vertical extent is calculated from the XY data extent.\nHfssExtentInfo\nPolygon\nPrimitive\nPolygon\nValue\nValue\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.hfss_extent_info.HfssExtentInfo",
        "href": "api/_autosummary/ansys.edb.core.utility.hfss_extent_info.HfssExtentInfo.html#ansys.edb.core.utility.hfss_extent_info.HfssExtentInfo",
        "title": "HfssExtentInfo > HfssExtentInfo > HfssExtentInfo",
        "section": "HfssExtentInfo > HfssExtentInfo",
        "text": "class ansys.edb.core.utility.hfss_extent_info.HfssExtentInfo(use_open_region=True, extent_type=HFSSExtentInfoType.BOUNDING_BOX, open_region_type=OpenRegionType.RADIATION, base_polygon=None, dielectric_extent_type=HFSSExtentInfoType.BOUNDING_BOX, dielectric_base_polygon=None, dielectric=(0, True), honor_user_dielectric=True, airbox_truncate_at_ground=False, airbox_horizontal=(0.15, True), airbox_vertical_positive=(0.15, True), airbox_vertical_negative=(0.15, True), sync_airbox_vertical_extent=True, is_pml_visible=False, operating_frequency='5GHz', radiation_level=<ansys.edb.core.utility.value.Value object>, user_xy_data_extent_for_vertical_expansion=True)\n\nProvides HFSS extent information.\n\nAttributes\n\nuse_open_region: bool\n\nWhether an open region is used.\n\nextent_type: HfssExtentInfo.HFSSExtentInfoType\n\nExtent type.\n\nopen_region_type: HfssExtentInfo.OpenRegionType\n\nOpen region type.\n\nbase_polygon: Primitive\n\nPolygon to use if the extent is the Polygon type.\n\ndielectric_extent_type: HfssExtentInfo.HFSSExtentInfoType\n\nDielectric extent type.\n\ndielectric_base_polygon\n\nPrimitive\n\nPolygon to use if dielectric extent is is the Polygon type.\n\ndielectric: (float, bool)\n\nDielectric extent size. The first parameter is the value, and the second parameter             indicates if the value is a multiple.\n\nhonor_user_dielectric: bool\n\nWhether to honor a user-defined dielectric primitive when calculating a dielectric extent.\n\nairbox_truncate_at_ground: bool\n\nWhether to truncate the airbox at the ground layers.\n\nairbox_horizontal: (float, bool)\n\nAirbox horizontal extent size. The first parameter is the value, and the second parameter             indicates if the value is a multiple.\n\nairbox_vertical_positive: (float, bool)\n\nAirbox positive vertical extent size. The first parameter is the value, and the second parameter             indicates if the value is a multiple.\n\nairbox_vertical_negative: (float, bool)\n\nAirbox negative vertical extent size. The first parameter is the value, and the second parameter             indicates if the value is a multiple.\n\nsync_airbox_vertical_extent: bool\n\nWhether to synchronize the airbox positive and negative vertical extent.\n\nis_pml_visible: bool\n\nWhether to check to see if the PML boxes are to rendered.\n\noperating_frequency\n\nValue\n\nPML operating frequency.\n\nradiation_level\n\nValue\n\nPML radiation level for calculating the thickness of the boundary.\n\nuser_xy_data_extent_for_vertical_expansion: bool\n\nWhether to retain the old behavior for the vertical expansion of the airbox.\nIf True, the vertical extent is calculated from the XY data extent.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.obj_type",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.obj_type.html#obj_type",
        "title": "obj_type",
        "section": "obj_type",
        "text": "LayoutObjType: Layout object type.\nThis property is read-only.\nobj_type\nLayoutObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.obj_type",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.obj_type.html#ansys.edb.core.net.net_class.NetClass.obj_type",
        "title": "obj_type > obj_type > obj_type",
        "section": "obj_type > obj_type",
        "text": "property NetClass.obj_type\n\nLayoutObjType: Layout object type.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_mcad_stride.html#is_mcad_stride",
        "title": "is_mcad_stride",
        "section": "is_mcad_stride",
        "text": "bool: Flag indicating if this is a Stride MCAD model.\nThis property is read-only.\nis_mcad_stride\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_mcad_stride.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_mcad_stride",
        "title": "is_mcad_stride > is_mcad_stride > is_mcad_stride",
        "section": "is_mcad_stride > is_mcad_stride",
        "text": "property TerminalInstanceTerminal.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.layout_instance_context",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.layout_instance_context.html#layout_instance_context",
        "title": "layout_instance_context",
        "section": "layout_instance_context",
        "text": "LayoutInstanceContext: Context that the layout object instance exists in.\nThis property is read-only.\nlayout_instance_context\nLayoutInstanceContext"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.layout_instance_context",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.layout_instance_context.html#ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.layout_instance_context",
        "title": "layout_instance_context > layout_instance_context > layout_instance_context",
        "section": "layout_instance_context > layout_instance_context",
        "text": "property LayoutObjInstance.layout_instance_context\n\nLayoutInstanceContext: Context that the layout object instance exists in.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.set_rlc",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.set_rlc.html#set_rlc",
        "title": "set_rlc",
        "section": "set_rlc",
        "text": "Set the RLC value for a pin pair.\nset_rlc\npython:tuple\npython:str\npython:str\nRlc"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.set_rlc",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.set_rlc.html#ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.set_rlc",
        "title": "set_rlc > set_rlc > set_rlc",
        "section": "set_rlc > set_rlc",
        "text": "PinPairModel.set_rlc(pin_pair, rlc)\n\nSet the RLC value for a pin pair.\n\nParameters\n\npin_pair\n\npython:tuple[python:str, python:str]\n\n\n\nrlc\n\nRlc\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.contains_net",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.contains_net.html#contains_net",
        "title": "contains_net",
        "section": "contains_net",
        "text": "Determine if a net exists in the net class.\nNet to search for.\nTrue if the net is in the net class, False otherwise.\ncontains_net\nNet\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.contains_net",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.contains_net.html#ansys.edb.core.net.differential_pair.DifferentialPair.contains_net",
        "title": "contains_net > contains_net > contains_net",
        "section": "contains_net > contains_net",
        "text": "DifferentialPair.contains_net(net)\n\nDetermine if a net exists in the net class.\n\nParameters\n\nnet\n\nNet\n\nNet to search for.\n\nReturns\n\nbool\n\nTrue if the net is in the net class, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.id",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.id",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.id.html#ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property HfssSimulationSetup.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.arc_height",
        "href": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.arc_height.html#arc_height",
        "title": "arc_height",
        "section": "arc_height",
        "text": "Value: Height of the arc.\narc_height\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.arc_height",
        "href": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.arc_height.html#ansys.edb.core.geometry.point_data.PointData.arc_height",
        "title": "arc_height > arc_height > arc_height",
        "section": "arc_height > arc_height",
        "text": "property PointData.arc_height\n\nValue: Height of the arc.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.type.html#type",
        "title": "type",
        "section": "type",
        "text": "type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.type.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.type",
        "title": "type > type > type",
        "section": "type > type",
        "text": "TerminalInstanceTerminal.type = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.bondwire_type",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.bondwire_type.html#bondwire_type",
        "title": "bondwire_type",
        "section": "bondwire_type",
        "text": "BondwireDefType: Type of the JEDEC4 bondwire.\nThis property is read-only.\nbondwire_type\nBondwireDefType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.bondwire_type",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.bondwire_type.html#ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.bondwire_type",
        "title": "bondwire_type > bondwire_type > bondwire_type",
        "section": "bondwire_type > bondwire_type",
        "text": "property Jedec4BondwireDef.bondwire_type\n\nBondwireDefType: Type of the JEDEC4 bondwire.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.source_phase",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.source_phase.html#source_phase",
        "title": "source_phase",
        "section": "source_phase",
        "text": "Value: Source phase of the terminal.\nsource_phase\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.source_phase",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.source_phase.html#ansys.edb.core.terminal.terminals.Terminal.source_phase",
        "title": "source_phase > source_phase > source_phase",
        "section": "source_phase > source_phase",
        "text": "property Terminal.source_phase\n\nValue: Source phase of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.component",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.component.html#component",
        "title": "component",
        "section": "component",
        "text": "ComponentGroup:         Component of the Connectable object.\ncomponent\nComponentGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.component",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.component.html#ansys.edb.core.primitive.primitive.PadstackInstance.component",
        "title": "component > component > component",
        "section": "component > component",
        "text": "property PadstackInstance.component\n\nComponentGroup:         Component of the Connectable object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.voids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.voids.html#voids",
        "title": "voids",
        "section": "voids",
        "text": "list of Primitive: List of void        primitive objects inside the primitive.\nThis property is read-only.\nvoids\nlist\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.voids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.voids.html#ansys.edb.core.primitive.primitive.Text.voids",
        "title": "voids > voids > voids",
        "section": "voids > voids",
        "text": "property Text.voids\n\nlist of Primitive: List of void        primitive objects inside the primitive.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.USER_LAYER",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.USER_LAYER.html#user_layer",
        "title": "USER_LAYER",
        "section": "USER_LAYER",
        "text": "USER_LAYER"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.USER_LAYER",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.USER_LAYER.html#ansys.edb.core.layer.layer_collection.LayerType.USER_LAYER",
        "title": "USER_LAYER > USER_LAYER > USER_LAYER",
        "section": "USER_LAYER > USER_LAYER",
        "text": "LayerType.USER_LAYER = 14\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.AdaptType.MULTI_FREQUENCIES",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.AdaptType.MULTI_FREQUENCIES.html#multi_frequencies",
        "title": "MULTI_FREQUENCIES",
        "section": "MULTI_FREQUENCIES",
        "text": "MULTI_FREQUENCIES"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.AdaptType.MULTI_FREQUENCIES",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.AdaptType.MULTI_FREQUENCIES.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.AdaptType.MULTI_FREQUENCIES",
        "title": "MULTI_FREQUENCIES > MULTI_FREQUENCIES > MULTI_FREQUENCIES",
        "section": "MULTI_FREQUENCIES > MULTI_FREQUENCIES",
        "text": "AdaptType.MULTI_FREQUENCIES = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.convex_hull",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.convex_hull.html#convex_hull",
        "title": "convex_hull",
        "section": "convex_hull",
        "text": "Compute the convex hull of the union of a list of polygons.\nList of polygons.\nconvex_hull\npython:list\nPolygonData\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.convex_hull",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.convex_hull.html#ansys.edb.core.geometry.polygon_data.PolygonData.convex_hull",
        "title": "convex_hull > convex_hull > convex_hull",
        "section": "convex_hull > convex_hull",
        "text": "classmethod PolygonData.convex_hull(polygons)\n\nCompute the convex hull of the union of a list of polygons.\n\nParameters\n\nothers\n\npython:list[PolygonData]\n\nList of polygons.\n\nReturns\n\nPolygonData\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge.create",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a primitive edge.\ncreate\nPrimitive\nPrimitiveEdge"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge.create",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge.create.html#ansys.edb.core.terminal.terminals.PrimitiveEdge.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod PrimitiveEdge.create(prim, point)\n\nCreate a primitive edge.\n\nParameters\n\nprim\n\nPrimitive\n\n\n\npoint\n\nPoint2DLike\n\n\n\nReturns\n\nPrimitiveEdge\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge.id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge.id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge.id.html#ansys.edb.core.terminal.terminals.PrimitiveEdge.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property PrimitiveEdge.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.synchronize_bend_manager",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.synchronize_bend_manager.html#synchronize_bend_manager",
        "title": "synchronize_bend_manager",
        "section": "synchronize_bend_manager",
        "text": "Synchronize the bend manager.\nsynchronize_bend_manager"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.synchronize_bend_manager",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.synchronize_bend_manager.html#ansys.edb.core.layout.layout.Layout.synchronize_bend_manager",
        "title": "synchronize_bend_manager > synchronize_bend_manager > synchronize_bend_manager",
        "section": "synchronize_bend_manager > synchronize_bend_manager",
        "text": "Layout.synchronize_bend_manager()\n\nSynchronize the bend manager.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Edge.msg",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Edge.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Edge.msg",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Edge.msg.html#ansys.edb.core.terminal.terminals.Edge.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property Edge.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadType.THERMAL_PAD",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadType.THERMAL_PAD.html#thermal_pad",
        "title": "THERMAL_PAD",
        "section": "THERMAL_PAD",
        "text": "THERMAL_PAD"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadType.THERMAL_PAD",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadType.THERMAL_PAD.html#ansys.edb.core.definition.padstack_def_data.PadType.THERMAL_PAD",
        "title": "THERMAL_PAD > THERMAL_PAD > THERMAL_PAD",
        "section": "THERMAL_PAD > THERMAL_PAD",
        "text": "PadType.THERMAL_PAD = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalType.EDGE",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalType.EDGE.html#edge",
        "title": "EDGE",
        "section": "EDGE",
        "text": "EDGE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalType.EDGE",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalType.EDGE.html#ansys.edb.core.terminal.terminals.TerminalType.EDGE",
        "title": "EDGE > EDGE > EDGE",
        "section": "EDGE > EDGE",
        "text": "TerminalType.EDGE = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.voids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.voids.html#voids",
        "title": "voids",
        "section": "voids",
        "text": "list of Primitive: List of void        primitive objects inside the primitive.\nThis property is read-only.\nvoids\nlist\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.voids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.voids.html#ansys.edb.core.primitive.primitive.Bondwire.voids",
        "title": "voids > voids > voids",
        "section": "voids > voids",
        "text": "property Bondwire.voids\n\nlist of Primitive: List of void        primitive objects inside the primitive.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDs given a product ID for the layout object.\nID representing a product that supports the EDB.\nAll user-defined attribute IDs for properties stored in the object\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.get_product_property_ids.html#ansys.edb.core.hierarchy.pin_group.PinGroup.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "PinGroup.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nReturns\n\npython:list[python:int]\n\nAll user-defined attribute IDs for properties stored in the object\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.net_classes",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.net_classes.html#net_classes",
        "title": "net_classes",
        "section": "net_classes",
        "text": "list of NetClass: List of all         net classes in the layout.\nThis property is read-only.\nnet_classes\nlist\nNetClass"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.net_classes",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.net_classes.html#ansys.edb.core.layout.layout.Layout.net_classes",
        "title": "net_classes > net_classes > net_classes",
        "section": "net_classes > net_classes",
        "text": "property Layout.net_classes\n\nlist of NetClass: List of all         net classes in the layout.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PathCornerType.MITER",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PathCornerType.MITER.html#miter",
        "title": "MITER",
        "section": "MITER",
        "text": "MITER"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PathCornerType.MITER",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PathCornerType.MITER.html#ansys.edb.core.primitive.primitive.PathCornerType.MITER",
        "title": "MITER > MITER > MITER",
        "section": "MITER > MITER",
        "text": "PathCornerType.MITER = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.port_post_processing_prop",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.port_post_processing_prop.html#port_post_processing_prop",
        "title": "port_post_processing_prop",
        "section": "port_post_processing_prop",
        "text": "PortPostProcessingProp: Port postprocessing properties.\nport_post_processing_prop\nPortPostProcessingProp"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.port_post_processing_prop",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.port_post_processing_prop.html#ansys.edb.core.terminal.terminals.BundleTerminal.port_post_processing_prop",
        "title": "port_post_processing_prop > port_post_processing_prop > port_post_processing_prop",
        "section": "port_post_processing_prop > port_post_processing_prop",
        "text": "property BundleTerminal.port_post_processing_prop\n\nPortPostProcessingProp: Port postprocessing properties.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.rlc_boundary_parameters",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.rlc_boundary_parameters.html#rlc_boundary_parameters",
        "title": "rlc_boundary_parameters",
        "section": "rlc_boundary_parameters",
        "text": "Rlc: RLC boundary parameters.\nrlc_boundary_parameters\nRlc"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.rlc_boundary_parameters",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.rlc_boundary_parameters.html#ansys.edb.core.terminal.terminals.EdgeTerminal.rlc_boundary_parameters",
        "title": "rlc_boundary_parameters > rlc_boundary_parameters > rlc_boundary_parameters",
        "section": "rlc_boundary_parameters > rlc_boundary_parameters",
        "text": "property EdgeTerminal.rlc_boundary_parameters\n\nRlc: RLC boundary parameters.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.advanced_meshing",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.advanced_meshing.html#advanced_meshing",
        "title": "advanced_meshing",
        "section": "advanced_meshing",
        "text": "HFSSAdvancedMeshingSettings: Advanced meshing settings for HFSS simulations.\nadvanced_meshing\nHFSSAdvancedMeshingSettings"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.advanced_meshing",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.advanced_meshing.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.advanced_meshing",
        "title": "advanced_meshing > advanced_meshing > advanced_meshing",
        "section": "advanced_meshing > advanced_meshing",
        "text": "property HFSSSimulationSettings.advanced_meshing\n\nHFSSAdvancedMeshingSettings: Advanced meshing settings for HFSS simulations.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.msg.html#ansys.edb.core.definition.debye_model.DebyeModel.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property DebyeModel.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ViaStyle.MESH",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ViaStyle.MESH.html#mesh",
        "title": "MESH",
        "section": "MESH",
        "text": "MESH"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ViaStyle.MESH",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ViaStyle.MESH.html#ansys.edb.core.simulation_setup.simulation_settings.ViaStyle.MESH",
        "title": "MESH > MESH > MESH",
        "section": "MESH > MESH",
        "text": "ViaStyle.MESH = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.html#rectangle",
        "title": "Rectangle",
        "section": "Rectangle",
        "text": "Represents a rectangle object.\nRectangle.add_void(hole)\nAdd a void to the primitive.\nRectangle.cast()\nCast the primitive object to the correct concrete type.\nRectangle.create(layout, layer, net, ...)\nCreate a rectangle.\nRectangle.create_3d_comp()\nCreate a 3D composite model from an MCAD file.\nRectangle.create_hfss()\nCreate an HFSS model from an MCAD file.\nRectangle.create_stride()\nCreate a Stride model from an MCAD file.\nRectangle.delete()\nDelete the layout object.\nRectangle.find_by_id(layout, uid)\nFind a Connectable object by database ID in a given layout.\nRectangle.get_hfss_prop()\nGet HFSS properties.\nRectangle.get_parameters()\nGet coordinate parameters.\nRectangle.get_product_property(prod_id, attr_id)\nGet the product property of the layout object for a given product ID and attribute ID.\nRectangle.get_product_property_ids(prod_id)\nGet a list of attribute IDs given a product ID for the layout object.\nRectangle.make_zone_primitive(zone_id)\nMake the primitive a zone primitive with a zone specified by the provided ID.\nRectangle.remove_hfss_prop()\nRemove HFSS properties.\nRectangle.render(rep_type, ...[, is_hole])\nGet the polygon data of a rectangle.\nRectangle.set_hfss_prop(material, solve_inside)\nSet HFSS properties.\nRectangle.set_parameters(rep_type, param1, ...)\nSet coordinate parameters.\nRectangle.set_product_property(prod_id, ...)\nSet the product property of the layout object for a given product ID and attribute ID.\nRectangle.can_be_zone_primitive\nbool: Flag indicating if the rectangle can be a zone.\nRectangle.component\nComponentGroup:         Component of the Connectable object.\nRectangle.edb_uid\nint: Unique, persistent ID for the Connectable object.\nRectangle.group\nGroup object.\nRectangle.has_voids\nbool: Flag indicating if a primitive has voids inside.\nRectangle.id\nint: Unique ID of the EDB object.\nRectangle.is_mcad\nbool: Flag indicating if this is an MCAD model.\nRectangle.is_mcad_3d_comp\nbool: Flag indicating if this is a 3D composite MCAD model.\nRectangle.is_mcad_hfss\nbool: Flag indicating if this is an HFSS MCAD model.\nRectangle.is_mcad_stride\nbool: Flag indicating if this is a Stride MCAD model.\nRectangle.is_negative\nbool: Flag indicating if the primitive is negative.\nRectangle.is_null\nbool: Flag indicating if the object exists in the database.\nRectangle.is_parameterized\nbool: Whether the primitive is parametrized.\nRectangle.is_void\nbool: Flag indicating if a primitive is a void.\nRectangle.is_zone_primitive\nbool: Flag indicating if the primitive object is a zone.\nRectangle.layer\nLayer: Layer that the primitive object is on.\nRectangle.layout\nLayout: Layout owning the object.\nRectangle.layout_obj_type\n\nRectangle.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nRectangle.net\nNet: Net of the Connectable object.\nRectangle.obj_type\nLayoutObjType: Layout object type.\nRectangle.owner\nPrimitive: Owner of the primitive object.\nRectangle.polygon_data\nPolygonData:         Polygon data object of the rectangle.\nRectangle.primitive_type\nPrimitiveType: Primitive type of the primitive.\nRectangle.voids\nlist of Primitive: List of void        primitive objects inside the primitive.\nRectangle\nRectangle.add_void\nRectangle.cast\nRectangle.create\nRectangle.create_3d_comp\nRectangle.create_hfss\nRectangle.create_stride\nRectangle.delete\nRectangle.find_by_id\nRectangle.get_hfss_prop\nRectangle.get_parameters\nRectangle.get_product_property\nRectangle.get_product_property_ids\nRectangle.make_zone_primitive\nRectangle.remove_hfss_prop\nRectangle.render\nRectangle.set_hfss_prop\nRectangle.set_parameters\nRectangle.set_product_property\nRectangle.can_be_zone_primitive\nbool\nRectangle.component\nComponentGroup\nRectangle.edb_uid\nint\nRectangle.group\nGroup\nRectangle.has_voids\nbool\nRectangle.id\nint\nRectangle.is_mcad\nbool\nRectangle.is_mcad_3d_comp\nbool\nRectangle.is_mcad_hfss\nbool\nRectangle.is_mcad_stride\nbool\nRectangle.is_negative\nbool\nRectangle.is_null\nbool\nRectangle.is_parameterized\nbool\nRectangle.is_void\nbool\nRectangle.is_zone_primitive\nbool\nRectangle.layer\nLayer\nRectangle.layout\nLayout\nRectangle.layout_obj_type\nRectangle.msg\nEDBObjMessage\nRectangle.net\nNet\nRectangle.obj_type\nLayoutObjType\nRectangle.owner\nPrimitive\nRectangle.polygon_data\nPolygonData\nRectangle.primitive_type\nPrimitiveType\nRectangle.voids\nlist\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.html#ansys.edb.core.primitive.primitive.Rectangle",
        "title": "Rectangle > Rectangle > Rectangle",
        "section": "Rectangle > Rectangle",
        "text": "class ansys.edb.core.primitive.primitive.Rectangle(msg)\n\nRepresents a rectangle object.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nRectangle.add_void(hole)\n\nAdd a void to the primitive.\n\nRectangle.cast()\n\nCast the primitive object to the correct concrete type.\n\nRectangle.create(layout, layer, net, ...)\n\nCreate a rectangle.\n\nRectangle.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nRectangle.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nRectangle.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nRectangle.delete()\n\nDelete the layout object.\n\nRectangle.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nRectangle.get_hfss_prop()\n\nGet HFSS properties.\n\nRectangle.get_parameters()\n\nGet coordinate parameters.\n\nRectangle.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nRectangle.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nRectangle.make_zone_primitive(zone_id)\n\nMake the primitive a zone primitive with a zone specified by the provided ID.\n\nRectangle.remove_hfss_prop()\n\nRemove HFSS properties.\n\nRectangle.render(rep_type, ...[, is_hole])\n\nGet the polygon data of a rectangle.\n\nRectangle.set_hfss_prop(material, solve_inside)\n\nSet HFSS properties.\n\nRectangle.set_parameters(rep_type, param1, ...)\n\nSet coordinate parameters.\n\nRectangle.set_product_property(prod_id, ...)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\n\n\nAttributes\n\n\n\n\n\n\n\nRectangle.can_be_zone_primitive\n\nbool: Flag indicating if the rectangle can be a zone.\n\nRectangle.component\n\nComponentGroup:         Component of the Connectable object.\n\nRectangle.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nRectangle.group\n\nGroup object.\n\nRectangle.has_voids\n\nbool: Flag indicating if a primitive has voids inside.\n\nRectangle.id\n\nint: Unique ID of the EDB object.\n\nRectangle.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nRectangle.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nRectangle.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nRectangle.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nRectangle.is_negative\n\nbool: Flag indicating if the primitive is negative.\n\nRectangle.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nRectangle.is_parameterized\n\nbool: Whether the primitive is parametrized.\n\nRectangle.is_void\n\nbool: Flag indicating if a primitive is a void.\n\nRectangle.is_zone_primitive\n\nbool: Flag indicating if the primitive object is a zone.\n\nRectangle.layer\n\nLayer: Layer that the primitive object is on.\n\nRectangle.layout\n\nLayout: Layout owning the object.\n\nRectangle.layout_obj_type\n\n\n\nRectangle.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nRectangle.net\n\nNet: Net of the Connectable object.\n\nRectangle.obj_type\n\nLayoutObjType: Layout object type.\n\nRectangle.owner\n\nPrimitive: Owner of the primitive object.\n\nRectangle.polygon_data\n\nPolygonData:         Polygon data object of the rectangle.\n\nRectangle.primitive_type\n\nPrimitiveType: Primitive type of the primitive.\n\nRectangle.voids\n\nlist of Primitive: List of void        primitive objects inside the primitive.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.product_solver_option",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.product_solver_option.html#product_solver_option",
        "title": "product_solver_option",
        "section": "product_solver_option",
        "text": "Get the name of the product solver option.\nID of the product.\nName of the solver.\nName of the product solver option.\nproduct_solver_option\nProductIdType\nstr\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.product_solver_option",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.product_solver_option.html#ansys.edb.core.terminal.terminals.EdgeTerminal.product_solver_option",
        "title": "product_solver_option > product_solver_option > product_solver_option",
        "section": "product_solver_option > product_solver_option",
        "text": "EdgeTerminal.product_solver_option(product_id, solver_name)\n\nGet the name of the product solver option.\n\nParameters\n\nproduct_id\n\nProductIdType\n\nID of the product.\n\nsolver_name\n\nstr\n\nName of the solver.\n\nReturns\n\nstr\n\nName of the product solver option.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.is_null",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.is_null",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.is_null.html#ansys.edb.core.layer.stackup_layer.StackupLayer.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property StackupLayer.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDs given a product ID for the layout object.\nID representing a product that supports the EDB.\nAll user-defined attribute IDs for properties stored in the object\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.get_product_property_ids.html#ansys.edb.core.hierarchy.via_group.ViaGroup.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "ViaGroup.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nReturns\n\npython:list[python:int]\n\nAll user-defined attribute IDs for properties stored in the object\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.deembed_length",
        "href": "api/_autosummary/ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.deembed_length.html#deembed_length",
        "title": "deembed_length",
        "section": "deembed_length",
        "text": "Deembed length.\nThis property is only applied if do_deembed=True.\ndeembed_length\ndo_deembed=True"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.deembed_length",
        "href": "api/_autosummary/ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.deembed_length.html#ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.deembed_length",
        "title": "deembed_length > deembed_length > deembed_length",
        "section": "deembed_length > deembed_length",
        "text": "property PortPostProcessingProp.deembed_length\n\nDeembed length.\n\nThis property is only applied if do_deembed=True.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.set_roughness_model",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.set_roughness_model.html#set_roughness_model",
        "title": "set_roughness_model",
        "section": "set_roughness_model",
        "text": "Set the roughness model used by the layer.\nset_roughness_model\nRoughnessRegion"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.set_roughness_model",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.set_roughness_model.html#ansys.edb.core.layer.stackup_layer.StackupLayer.set_roughness_model",
        "title": "set_roughness_model > set_roughness_model > set_roughness_model",
        "section": "set_roughness_model > set_roughness_model",
        "text": "StackupLayer.set_roughness_model(roughness_model, region)\n\nSet the roughness model used by the layer.\n\nParameters\n\nroughness_model\n\nRoughnessModel\n\n\n\nregion\n\nRoughnessRegion\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.bundle_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.bundle_terminal.html#bundle_terminal",
        "title": "bundle_terminal",
        "section": "bundle_terminal",
        "text": "BundleTerminal: Bundle terminal that the terminal belongs to, if any.\nbundle_terminal\nBundleTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.bundle_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.bundle_terminal.html#ansys.edb.core.terminal.terminals.PointTerminal.bundle_terminal",
        "title": "bundle_terminal > bundle_terminal > bundle_terminal",
        "section": "bundle_terminal > bundle_terminal",
        "text": "property PointTerminal.bundle_terminal\n\nBundleTerminal: Bundle terminal that the terminal belongs to, if any.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin.create",
        "href": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a component pin in a given component definition.\nComponent definition to create the component pin in.\nName of the component pin.\nComponent pin created.\ncreate\nComponentDef\npython:str\nComponentPin"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin.create",
        "href": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin.create.html#ansys.edb.core.definition.component_pin.ComponentPin.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod ComponentPin.create(comp_def, name)\n\nCreate a component pin in a given component definition.\n\nParameters\n\ncomp_def\n\nComponentDef\n\nComponent definition to create the component pin in.\n\nname\n\npython:str\n\nName of the component pin.\n\nReturns\n\nComponentPin\n\nComponent pin created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "contribute",
        "href": "contribute.html#contribute",
        "title": "Contribute",
        "section": "Contribute",
        "text": "Overall guidance on contributing to a PyAnsys library appears in the\nContributing topic in the PyAnsys developer’s guide.\nEnsure that you are thoroughly familiar with this guide before attempting to contribute\nto PyEDB-Core.\nThe following contribution information is specific to PyEDB-Core.\nContribute"
    },
    {
        "objectID": "contribute",
        "href": "contribute.html#developer-installation",
        "title": "Contribute > Developer installation",
        "section": "Developer installation",
        "text": "Installing the ansys-edb package in developer mode allows you to modify the source and\nenhance it.\nThis package supports Python 3.9 through 3.12 on Windows, Linux, and MacOS.\nClone the repository:\nCreate a fresh-clean Python virtual environment and activate it:\nMake sure you have the latest required build system and documentation, testing, and CI tools:\nVerify your development installation:\nDeveloper installation\nansys-edb"
    },
    {
        "objectID": "contribute",
        "href": "contribute.html#testing",
        "title": "Contribute > Testing",
        "section": "Testing",
        "text": "This project takes advantage of tox. Similar to Makefile, this tool allows you to automate\ncommon tasks, but it is oriented towards Python development.\nTesting"
    },
    {
        "objectID": "contribute",
        "href": "contribute.html#using-tox",
        "title": "Contribute > Using tox",
        "section": "Using tox",
        "text": "While Makefile has rules, tox has environments. In fact, the tool creates its\nown virtual environment so anything being tested is isolated from the project\nto guarantee the project’s integrity. The following environments commands are provided:\ntox -e style: Checks for coding style quality.\ntox -e test: Checks for unit tests. Pass pytest flags after the\n-- portion of the command. For example, use this pytest command to show the\nstandard output, replacing X with the minor version of your Python environment:\ntox -e py3X -- -s.\ntox -e coverage: Checks for code coverage.\ntox -e doc: Checks for documentation building.\nUsing tox\ntox\n--\npytest\nX\ntox -e py3X -- -s"
    },
    {
        "objectID": "contribute",
        "href": "contribute.html#raw-testing",
        "title": "Contribute > Raw testing",
        "section": "Raw testing",
        "text": "If required, you can always call code style tools, such as black, isort,\nand flake8, or unit testing tools, such as pytest from the command line.\nHowever, using these tools do not guarantee that your project is being tested in an isolated\nenvironment, which is the reason why a tool like tox exists.\nRaw testing"
    },
    {
        "objectID": "contribute",
        "href": "contribute.html#adhere-to-code-style",
        "title": "Contribute > Adhere to code style",
        "section": "Adhere to code style",
        "text": "PyEDB-Core follows the PEP8 standard as indicated in PEP 8\nin the PyAnsys developer’s guide. It also implements style checking using pre-commit.\nTo ensure your code meets minimum code styling standards, run these commands:\nYou can also install this as a pre-commit hook by running this command:\nThis way, it’s not possible for you to push code that fails the code style checks:\nAdhere to code style"
    },
    {
        "objectID": "contribute",
        "href": "contribute.html#documentation",
        "title": "Contribute > Documentation",
        "section": "Documentation",
        "text": "To install the required dependencies for the documentation, run this command:\nTo build the documentation, run the usual rules provided in the Sphinx\nMakefile for your operating system.\nOn Windows:\nOn Linux and MacOS:\nHowever, the recommended way of checking documentation integrity is to use tox:\nDocumentation\ntox"
    },
    {
        "objectID": "contribute",
        "href": "contribute.html#distributing",
        "title": "Contribute > Distributing",
        "section": "Distributing",
        "text": "If you would like to create either source or wheel files, run these commands:\nDistributing"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.is_null",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.is_null",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.is_null.html#ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property LayoutInstanceContext.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.placement_3d",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.placement_3d.html#placement_3d",
        "title": "placement_3d",
        "section": "placement_3d",
        "text": "bool: Flag indicating if the cell instance is 3D placed in the owning layout.\nIf True, transformation can be set using the transform3d object.\nplacement_3d\nbool\nTrue\ntransform3d"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.placement_3d",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.placement_3d.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.placement_3d",
        "title": "placement_3d > placement_3d > placement_3d",
        "section": "placement_3d > placement_3d",
        "text": "property CellInstance.placement_3d\n\nbool: Flag indicating if the cell instance is 3D placed in the owning layout.\n\nIf True, transformation can be set using the transform3d object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.import_material_from_control_file",
        "href": "api/_autosummary/ansys.edb.core.database.Database.import_material_from_control_file.html#import_material_from_control_file",
        "title": "import_material_from_control_file",
        "section": "import_material_from_control_file",
        "text": "Import materials from a control file.\nFull path to the control file.\nPath to the schema directory.\nWhether to keep existing materials in the database. If False, the\nexisting materials in the database are removed.\nimport_material_from_control_file\npython:str\npython:str\npython:True\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.import_material_from_control_file",
        "href": "api/_autosummary/ansys.edb.core.database.Database.import_material_from_control_file.html#ansys.edb.core.database.Database.import_material_from_control_file",
        "title": "import_material_from_control_file > import_material_from_control_file > import_material_from_control_file",
        "section": "import_material_from_control_file > import_material_from_control_file",
        "text": "Database.import_material_from_control_file(control_file, schema_dir=None, append=True)\n\nImport materials from a control file.\n\nParameters\n\ncontrol_file\n\npython:str\n\nFull path to the control file.\n\nschema_dir\n\npython:str\n\nPath to the schema directory.\n\nappend\n\nbool, default: python:True\n\nWhether to keep existing materials in the database. If False, the\nexisting materials in the database are removed.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.find",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.find.html#find",
        "title": "find",
        "section": "find",
        "text": "Find a pin group by name in a given layout.\nLayout to search for the pin group.\nName of the pin group.\nPin group found, None otherwise.\nfind\nLayout\npython:str\nPinGroup\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.find",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.find.html#ansys.edb.core.hierarchy.pin_group.PinGroup.find",
        "title": "find > find > find",
        "section": "find > find",
        "text": "classmethod PinGroup.find(layout, name)\n\nFind a pin group by name in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the pin group.\n\nname\n\npython:str\n\nName of the pin group.\n\nReturns\n\nPinGroup\n\nPin group found, None otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.id.html#ansys.edb.core.primitive.primitive.PadstackInstance.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property PadstackInstance.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.boundary_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.boundary_type.html#boundary_type",
        "title": "boundary_type",
        "section": "boundary_type",
        "text": "BoundaryType: Boundary type of the terminal.\nboundary_type\nBoundaryType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.boundary_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.boundary_type.html#ansys.edb.core.terminal.terminals.BundleTerminal.boundary_type",
        "title": "boundary_type > boundary_type > boundary_type",
        "section": "boundary_type > boundary_type",
        "text": "property BundleTerminal.boundary_type\n\nBoundaryType: Boundary type of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.bbox_of_polygons",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.bbox_of_polygons.html#bbox_of_polygons",
        "title": "bbox_of_polygons",
        "section": "bbox_of_polygons",
        "text": "Compute the bounding box of a list of polygons.\nList of polygons.\nbbox_of_polygons\npython:tuple\nPointData\nPointData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.bbox_of_polygons",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.bbox_of_polygons.html#ansys.edb.core.geometry.polygon_data.PolygonData.bbox_of_polygons",
        "title": "bbox_of_polygons > bbox_of_polygons > bbox_of_polygons",
        "section": "bbox_of_polygons > bbox_of_polygons",
        "text": "classmethod PolygonData.bbox_of_polygons(polygons)\n\nCompute the bounding box of a list of polygons.\n\nParameters\n\npolygons: list[PolygonData]\n\nList of polygons.\n\nReturns\n\npython:tuple[PointData, PointData]\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.group",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.group.html#group",
        "title": "group",
        "section": "group",
        "text": "Group object.\ngroup\nGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.group",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.group.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.group",
        "title": "group > group > group",
        "section": "group > group",
        "text": "property PinGroupTerminal.group\n\nGroup object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.is_equal",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.is_equal.html#is_equal",
        "title": "is_equal",
        "section": "is_equal",
        "text": "Equality check for two #D transformations.\nResult of equality check.\nis_equal\nbool\nfloat\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.is_equal",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.is_equal.html#ansys.edb.core.utility.transform3d.Transform3D.is_equal",
        "title": "is_equal > is_equal > is_equal",
        "section": "is_equal > is_equal",
        "text": "Transform3D.is_equal(other_transform, rotation, eps)\n\nEquality check for two #D transformations.\n\nParameters\n\nother_transform\n\n\n\nrotation\n\nbool\n\n\n\neps\n\nfloat\n\n\n\nReturns\n\nbool\n\nResult of equality check.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.obj_type",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.obj_type.html#obj_type",
        "title": "obj_type",
        "section": "obj_type",
        "text": "LayoutObjType: Layout object type.\nThis property is read-only.\nobj_type\nLayoutObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.obj_type",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.obj_type.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.obj_type",
        "title": "obj_type > obj_type > obj_type",
        "section": "obj_type > obj_type",
        "text": "property ComponentGroup.obj_type\n\nLayoutObjType: Layout object type.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSParameterSettings.use_state_space",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSParameterSettings.use_state_space.html#use_state_space",
        "title": "use_state_space",
        "section": "use_state_space",
        "text": "bool: Flag indicating if state space is used. If False, a custom model is used.\nuse_state_space\nbool\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSParameterSettings.use_state_space",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSParameterSettings.use_state_space.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSParameterSettings.use_state_space",
        "title": "use_state_space > use_state_space > use_state_space",
        "section": "use_state_space > use_state_space",
        "text": "property SIWaveSParameterSettings.use_state_space\n\nbool: Flag indicating if state space is used. If False, a custom model is used.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSParameterSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSParameterSettings.html#siwavesparametersettings",
        "title": "SIWaveSParameterSettings",
        "section": "SIWaveSParameterSettings",
        "text": "Represents s parameter settings for SIWave simulations.\nSIWaveSParameterSettings.dc_behavior\nSParamDCBehavior: DC behavior type.\nSIWaveSParameterSettings.extrapolation\nSParamExtrapolation: Extrapolation type.\nSIWaveSParameterSettings.interpolation\nSParamInterpolation: Interpolation type.\nSIWaveSParameterSettings.msg\nEDBObjMessage: Protobuf message that represents this object's ID.\nSIWaveSParameterSettings.use_state_space\nbool: Flag indicating if state space is used.\nSIWaveSParameterSettings\nSIWaveSParameterSettings.dc_behavior\nSParamDCBehavior\nSIWaveSParameterSettings.extrapolation\nSParamExtrapolation\nSIWaveSParameterSettings.interpolation\nSParamInterpolation\nSIWaveSParameterSettings.msg\nEDBObjMessage\nSIWaveSParameterSettings.use_state_space\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSParameterSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSParameterSettings.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSParameterSettings",
        "title": "SIWaveSParameterSettings > SIWaveSParameterSettings > SIWaveSParameterSettings",
        "section": "SIWaveSParameterSettings > SIWaveSParameterSettings",
        "text": "class ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSParameterSettings(sim_setup)\n\nRepresents s parameter settings for SIWave simulations.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nSIWaveSParameterSettings.dc_behavior\n\nSParamDCBehavior: DC behavior type.\n\nSIWaveSParameterSettings.extrapolation\n\nSParamExtrapolation: Extrapolation type.\n\nSIWaveSParameterSettings.interpolation\n\nSParamInterpolation: Interpolation type.\n\nSIWaveSParameterSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object's ID.\n\nSIWaveSParameterSettings.use_state_space\n\nbool: Flag indicating if state space is used.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.layout",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.layout.html#layout",
        "title": "layout",
        "section": "layout",
        "text": "Layout: Layout owning the object.\nThis property is read-only.\nlayout\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.layout",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.layout.html#ansys.edb.core.primitive.primitive.Text.layout",
        "title": "layout > layout > layout",
        "section": "layout > layout",
        "text": "property Text.layout\n\nLayout: Layout owning the object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.net",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.net.html#net",
        "title": "net",
        "section": "net",
        "text": "Net: Net of the Connectable object.\nThis property can be set with a Net instance, a string, or None.\nnet\nNet\nNet\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.net",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.net.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.net",
        "title": "net > net > net",
        "section": "net > net",
        "text": "property PadstackInstanceTerminal.net\n\nNet: Net of the Connectable object.\n\nThis property can be set with a Net instance, a string, or None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the product property.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.get_product_property.html#ansys.edb.core.hierarchy.inst_array.InstArray.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "InstArray.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nReturns\n\npython:str\n\nString stored in the product property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerTypeSet.NON_STACKUP_LAYER_SET",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerTypeSet.NON_STACKUP_LAYER_SET.html#non_stackup_layer_set",
        "title": "NON_STACKUP_LAYER_SET",
        "section": "NON_STACKUP_LAYER_SET",
        "text": "NON_STACKUP_LAYER_SET"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerTypeSet.NON_STACKUP_LAYER_SET",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerTypeSet.NON_STACKUP_LAYER_SET.html#ansys.edb.core.layer.layer_collection.LayerTypeSet.NON_STACKUP_LAYER_SET",
        "title": "NON_STACKUP_LAYER_SET > NON_STACKUP_LAYER_SET > NON_STACKUP_LAYER_SET",
        "section": "NON_STACKUP_LAYER_SET > NON_STACKUP_LAYER_SET",
        "text": "LayerTypeSet.NON_STACKUP_LAYER_SET = 3\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.import_thermal_data",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.import_thermal_data.html#import_thermal_data",
        "title": "import_thermal_data",
        "section": "import_thermal_data",
        "text": "bool: Flag indicating if thermal data is imported.\nimport_thermal_data\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.import_thermal_data",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.import_thermal_data.html#ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.import_thermal_data",
        "title": "import_thermal_data > import_thermal_data > import_thermal_data",
        "section": "import_thermal_data > import_thermal_data",
        "text": "property SIWaveDCIRSimulationSettings.import_thermal_data\n\nbool: Flag indicating if thermal data is imported.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.is_null.html#ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property DjordjecvicSarkarModel.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty",
        "href": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.html#portproperty",
        "title": "PortProperty",
        "section": "PortProperty",
        "text": "Represents a port property.\nPortProperty.clone()\nClone a port property.\nPortProperty.create()\nCreate a port property.\nPortProperty.get_reference_size()\nGet the X and Y reference sizes for the port property.\nPortProperty.set_reference_size(ref_x, ref_y)\nSet the X and Y reference sizes for the port property.\nPortProperty.id\nint: Unique ID of the EDB object.\nPortProperty.is_null\nbool: Flag indicating if the object exists in the database.\nPortProperty.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nPortProperty.reference_height\nValue: Reference height of the port property.\nPortProperty.reference_size_auto\nbool: Flag indicating if the reference size is automatic.\nPortProperty\nPortProperty.clone\nPortProperty.create\nPortProperty.get_reference_size\nPortProperty.set_reference_size\nPortProperty.id\nint\nPortProperty.is_null\nbool\nPortProperty.msg\nEDBObjMessage\nPortProperty.reference_height\nValue\nPortProperty.reference_size_auto\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty",
        "href": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.html#ansys.edb.core.definition.port_property.PortProperty",
        "title": "PortProperty > PortProperty > PortProperty",
        "section": "PortProperty > PortProperty",
        "text": "class ansys.edb.core.definition.port_property.PortProperty(msg)\n\nRepresents a port property.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nPortProperty.clone()\n\nClone a port property.\n\nPortProperty.create()\n\nCreate a port property.\n\nPortProperty.get_reference_size()\n\nGet the X and Y reference sizes for the port property.\n\nPortProperty.set_reference_size(ref_x, ref_y)\n\nSet the X and Y reference sizes for the port property.\n\n\n\nAttributes\n\n\n\n\n\n\n\nPortProperty.id\n\nint: Unique ID of the EDB object.\n\nPortProperty.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nPortProperty.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nPortProperty.reference_height\n\nValue: Reference height of the port property.\n\nPortProperty.reference_size_auto\n\nbool: Flag indicating if the reference size is automatic.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.expand",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.expand.html#expand",
        "title": "expand",
        "section": "expand",
        "text": "Expand the polygon by an offset.\nExpansion offset. Specify a negative value to shrink the polygon.\nWhether the corners are rounded corners. If False, the corners\nare straight edges.\nMaximum corner extension to clip the corner at.\nTolerance.\nexpand\npython:float\nFalse\npython:float\npython:float\npython:list\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.expand",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.expand.html#ansys.edb.core.geometry.polygon_data.PolygonData.expand",
        "title": "expand > expand > expand",
        "section": "expand > expand",
        "text": "PolygonData.expand(offset, round_corner, max_corner_ext, tol=1e-09)\n\nExpand the polygon by an offset.\n\nParameters\n\noffset\n\npython:float\n\nExpansion offset. Specify a negative value to shrink the polygon.\n\nround_corner\n\nbool\n\nWhether the corners are rounded corners. If False, the corners\nare straight edges.\n\nmax_corner_ext\n\npython:float\n\nMaximum corner extension to clip the corner at.\n\ntol\n\npython:float, default: 1e-9\n\nTolerance.\n\nReturns\n\npython:list[PolygonData]\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_null",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_null",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_null.html#ansys.edb.core.primitive.primitive.BoardBendDef.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property BoardBendDef.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.delete",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the layout object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.delete",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.delete.html#ansys.edb.core.primitive.primitive.Rectangle.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "Rectangle.delete()\n\nDelete the layout object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.name",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the hierarchy object.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.name",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.name.html#ansys.edb.core.hierarchy.group.Group.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property Group.name\n\nstr: Name of the hierarchy object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.FreqSweepType.DISCRETE_SWEEP",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.FreqSweepType.DISCRETE_SWEEP.html#discrete_sweep",
        "title": "DISCRETE_SWEEP",
        "section": "DISCRETE_SWEEP",
        "text": "DISCRETE_SWEEP"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.FreqSweepType.DISCRETE_SWEEP",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.FreqSweepType.DISCRETE_SWEEP.html#ansys.edb.core.simulation_setup.simulation_setup.FreqSweepType.DISCRETE_SWEEP",
        "title": "DISCRETE_SWEEP > DISCRETE_SWEEP > DISCRETE_SWEEP",
        "section": "DISCRETE_SWEEP > DISCRETE_SWEEP",
        "text": "FreqSweepType.DISCRETE_SWEEP = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.find",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.find.html#find",
        "title": "find",
        "section": "find",
        "text": "Find a terminal by name in a given layout.\nLayout to search for the terminal.\nName of the terminal.\nfind\nLayout\nstr\nTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.find",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.find.html#ansys.edb.core.terminal.terminals.PointTerminal.find",
        "title": "find > find > find",
        "section": "find > find",
        "text": "classmethod PointTerminal.find(layout, name)\n\nFind a terminal by name in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the terminal.\n\nname\n\nstr\n\nName of the terminal.\n\nReturns\n\nTerminal\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.create",
        "href": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create an IO component property.\nIO component property created.\ncreate\nIOComponentProperty"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.create",
        "href": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.create.html#ansys.edb.core.definition.io_component_property.IOComponentProperty.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod IOComponentProperty.create()\n\nCreate an IO component property.\n\nReturns\n\nIOComponentProperty\n\nIO component property created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDs given a product ID for the layout object.\nID representing a product that supports the EDB.\nAll user-defined attribute IDs for properties stored in the object\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.get_product_property_ids.html#ansys.edb.core.hierarchy.group.Group.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "Group.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nReturns\n\npython:list[python:int]\n\nAll user-defined attribute IDs for properties stored in the object\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.create_3d_comp.html#create_3d_comp",
        "title": "create_3d_comp",
        "section": "create_3d_comp",
        "text": "Create a 3D composite model from an MCAD file.\n3D composite model created.\ncreate_3d_comp\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.create_3d_comp.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.create_3d_comp",
        "title": "create_3d_comp > create_3d_comp > create_3d_comp",
        "section": "create_3d_comp > create_3d_comp",
        "text": "TerminalInstanceTerminal.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nReturns\n\nMcadModel\n\n3D composite model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballShape",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballShape.html#solderballshape",
        "title": "SolderballShape",
        "section": "SolderballShape",
        "text": "Provides an enum representing solder ball shapes.\nSolderballShape.NO_SOLDERBALL\n\nSolderballShape.SOLDERBALL_CYLINDER\n\nSolderballShape.SOLDERBALL_SPHEROID\n\nSolderballShape.UNKNOWN_SOLDERBALL_SHAPE\n\nSolderballShape\nSolderballShape.NO_SOLDERBALL\nSolderballShape.SOLDERBALL_CYLINDER\nSolderballShape.SOLDERBALL_SPHEROID\nSolderballShape.UNKNOWN_SOLDERBALL_SHAPE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballShape",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballShape.html#ansys.edb.core.definition.padstack_def_data.SolderballShape",
        "title": "SolderballShape > SolderballShape > SolderballShape",
        "section": "SolderballShape > SolderballShape",
        "text": "class ansys.edb.core.definition.padstack_def_data.SolderballShape(value)\n\nProvides an enum representing solder ball shapes.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nSolderballShape.NO_SOLDERBALL\n\n\n\nSolderballShape.SOLDERBALL_CYLINDER\n\n\n\nSolderballShape.SOLDERBALL_SPHEROID\n\n\n\nSolderballShape.UNKNOWN_SOLDERBALL_SHAPE\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.primitive_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.primitive_type.html#primitive_type",
        "title": "primitive_type",
        "section": "primitive_type",
        "text": "PrimitiveType: Primitive type of the primitive.\nThis property is read-only.\nprimitive_type\nPrimitiveType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.primitive_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.primitive_type.html#ansys.edb.core.primitive.primitive.Text.primitive_type",
        "title": "primitive_type > primitive_type > primitive_type",
        "section": "primitive_type > primitive_type",
        "text": "property Text.primitive_type\n\nPrimitiveType: Primitive type of the primitive.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.PERMEABILITY",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.PERMEABILITY.html#permeability",
        "title": "PERMEABILITY",
        "section": "PERMEABILITY",
        "text": "PERMEABILITY"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.PERMEABILITY",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.PERMEABILITY.html#ansys.edb.core.definition.material_def.MaterialProperty.PERMEABILITY",
        "title": "PERMEABILITY > PERMEABILITY > PERMEABILITY",
        "section": "PERMEABILITY > PERMEABILITY",
        "text": "MaterialProperty.PERMEABILITY = 4\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.matrix",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.matrix.html#matrix",
        "title": "matrix",
        "section": "matrix",
        "text": "list of list of floats : Transformation matrix as a 2D 4x4 array.\nmatrix\nlist\nlist\nfloats"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.matrix",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.matrix.html#ansys.edb.core.utility.transform3d.Transform3D.matrix",
        "title": "matrix > matrix > matrix",
        "section": "matrix > matrix",
        "text": "property Transform3D.matrix\n\nlist of list of floats : Transformation matrix as a 2D 4x4 array.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.mesh_region",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.mesh_region.html#mesh_region",
        "title": "mesh_region",
        "section": "mesh_region",
        "text": "str: Name of the mesh region.\nmesh_region\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.mesh_region",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.mesh_region.html#ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.mesh_region",
        "title": "mesh_region > mesh_region > mesh_region",
        "section": "mesh_region > mesh_region",
        "text": "property LengthMeshOperation.mesh_region\n\nstr: Name of the mesh region.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.is_null",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.is_null",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.is_null.html#ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property SIWaveSimulationSetup.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.html#edgeterminal",
        "title": "EdgeTerminal",
        "section": "EdgeTerminal",
        "text": "Represents an edge terminal.\nEdgeTerminal.cast([term_type])\nCast the terminal object to the correct concrete type, fetching the type if necessary.\nEdgeTerminal.create(layout, name, edges[, ...])\nCreate an edge terminal.\nEdgeTerminal.create_3d_comp()\nCreate a 3D composite model from an MCAD file.\nEdgeTerminal.create_hfss()\nCreate an HFSS model from an MCAD file.\nEdgeTerminal.create_stride()\nCreate a Stride model from an MCAD file.\nEdgeTerminal.delete()\nDelete the layout object.\nEdgeTerminal.find(layout, name)\nFind a terminal by name in a given layout.\nEdgeTerminal.find_by_id(layout, uid)\nFind a Connectable object by database ID in a given layout.\nEdgeTerminal.get_product_property(prod_id, ...)\nGet the product property of the layout object for a given product ID and attribute ID.\nEdgeTerminal.get_product_property_ids(prod_id)\nGet a list of attribute IDs given a product ID for the layout object.\nEdgeTerminal.product_solver_names(product_id)\nGet the list of solver names.\nEdgeTerminal.product_solver_option(...)\nGet the name of the product solver option.\nEdgeTerminal.set_product_property(prod_id, ...)\nSet the product property of the layout object for a given product ID and attribute ID.\nEdgeTerminal.set_product_solver_option(...)\nSet the product solver option.\nEdgeTerminal.boundary_type\nBoundaryType: Boundary type of the terminal.\nEdgeTerminal.bundle_terminal\nBundleTerminal: Bundle terminal that the terminal belongs to, if any.\nEdgeTerminal.component\nComponentGroup:         Component of the Connectable object.\nEdgeTerminal.edb_uid\nint: Unique, persistent ID for the Connectable object.\nEdgeTerminal.edges\nlist of Edge: All edges on the terminal.\nEdgeTerminal.group\nGroup object.\nEdgeTerminal.hfss_pi_type\nHfssPIType: HFSS PI type.\nEdgeTerminal.id\nint: Unique ID of the EDB object.\nEdgeTerminal.impedance\nValue: Impedance of the terminal.\nEdgeTerminal.is_auto_port\nbool: Flag indicating if the terminal is an auto port.\nEdgeTerminal.is_circuit_port\nbool: Flag indicating if the terminal is a circuit port.\nEdgeTerminal.is_interface_terminal\nbool: Flag indicating if the terminal is an interface.\nEdgeTerminal.is_mcad\nbool: Flag indicating if this is an MCAD model.\nEdgeTerminal.is_mcad_3d_comp\nbool: Flag indicating if this is a 3D composite MCAD model.\nEdgeTerminal.is_mcad_hfss\nbool: Flag indicating if this is an HFSS MCAD model.\nEdgeTerminal.is_mcad_stride\nbool: Flag indicating if this is a Stride MCAD model.\nEdgeTerminal.is_null\nbool: Flag indicating if the object exists in the database.\nEdgeTerminal.is_reference_terminal\nbool: Flag indicating if the terminal is a reference terminal.\nEdgeTerminal.layout\nLayout: Layout owning the object.\nEdgeTerminal.layout_obj_type\n\nEdgeTerminal.model\nstr: S-parameter model.\nEdgeTerminal.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nEdgeTerminal.name\nstr: Name of the terminal.\nEdgeTerminal.net\nNet: Net of the Connectable object.\nEdgeTerminal.obj_type\nLayoutObjType: Layout object type.\nEdgeTerminal.port_post_processing_prop\nPortPostProcessingProp: Port postprocessing properties.\nEdgeTerminal.reference_layer\nLayer: Layer that the terminal references, if any, by either layer object or name.\nEdgeTerminal.reference_terminal\nTerminal: Terminal that the terminal references, if any.\nEdgeTerminal.rlc_boundary_parameters\nRlc: RLC boundary parameters.\nEdgeTerminal.source_amplitude\nValue: Source amplitude of the terminal.\nEdgeTerminal.source_phase\nValue: Source phase of the terminal.\nEdgeTerminal.term_to_ground\nSourceTermToGroundType: Source terminal-to-ground type.\nEdgeTerminal.type\n\nEdgeTerminal.use_reference_from_hierarchy\nbool: Flag indicating if the terminal can use references from the hierarchy.\nEdgeTerminal\nEdgeTerminal.cast\nEdgeTerminal.create\nEdgeTerminal.create_3d_comp\nEdgeTerminal.create_hfss\nEdgeTerminal.create_stride\nEdgeTerminal.delete\nEdgeTerminal.find\nEdgeTerminal.find_by_id\nEdgeTerminal.get_product_property\nEdgeTerminal.get_product_property_ids\nEdgeTerminal.product_solver_names\nEdgeTerminal.product_solver_option\nEdgeTerminal.set_product_property\nEdgeTerminal.set_product_solver_option\nEdgeTerminal.boundary_type\nBoundaryType\nEdgeTerminal.bundle_terminal\nBundleTerminal\nEdgeTerminal.component\nComponentGroup\nEdgeTerminal.edb_uid\nint\nEdgeTerminal.edges\nlist\nEdge\nEdgeTerminal.group\nGroup\nEdgeTerminal.hfss_pi_type\nHfssPIType\nEdgeTerminal.id\nint\nEdgeTerminal.impedance\nValue\nEdgeTerminal.is_auto_port\nbool\nEdgeTerminal.is_circuit_port\nbool\nEdgeTerminal.is_interface_terminal\nbool\nEdgeTerminal.is_mcad\nbool\nEdgeTerminal.is_mcad_3d_comp\nbool\nEdgeTerminal.is_mcad_hfss\nbool\nEdgeTerminal.is_mcad_stride\nbool\nEdgeTerminal.is_null\nbool\nEdgeTerminal.is_reference_terminal\nbool\nEdgeTerminal.layout\nLayout\nEdgeTerminal.layout_obj_type\nEdgeTerminal.model\nstr\nEdgeTerminal.msg\nEDBObjMessage\nEdgeTerminal.name\nstr\nEdgeTerminal.net\nNet\nEdgeTerminal.obj_type\nLayoutObjType\nEdgeTerminal.port_post_processing_prop\nPortPostProcessingProp\nEdgeTerminal.reference_layer\nLayer\nEdgeTerminal.reference_terminal\nTerminal\nEdgeTerminal.rlc_boundary_parameters\nRlc\nEdgeTerminal.source_amplitude\nValue\nEdgeTerminal.source_phase\nValue\nEdgeTerminal.term_to_ground\nSourceTermToGroundType\nEdgeTerminal.type\nEdgeTerminal.use_reference_from_hierarchy\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.html#ansys.edb.core.terminal.terminals.EdgeTerminal",
        "title": "EdgeTerminal > EdgeTerminal > EdgeTerminal",
        "section": "EdgeTerminal > EdgeTerminal",
        "text": "class ansys.edb.core.terminal.terminals.EdgeTerminal(msg)\n\nRepresents an edge terminal.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nEdgeTerminal.cast([term_type])\n\nCast the terminal object to the correct concrete type, fetching the type if necessary.\n\nEdgeTerminal.create(layout, name, edges[, ...])\n\nCreate an edge terminal.\n\nEdgeTerminal.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nEdgeTerminal.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nEdgeTerminal.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nEdgeTerminal.delete()\n\nDelete the layout object.\n\nEdgeTerminal.find(layout, name)\n\nFind a terminal by name in a given layout.\n\nEdgeTerminal.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nEdgeTerminal.get_product_property(prod_id, ...)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nEdgeTerminal.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nEdgeTerminal.product_solver_names(product_id)\n\nGet the list of solver names.\n\nEdgeTerminal.product_solver_option(...)\n\nGet the name of the product solver option.\n\nEdgeTerminal.set_product_property(prod_id, ...)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nEdgeTerminal.set_product_solver_option(...)\n\nSet the product solver option.\n\n\n\nAttributes\n\n\n\n\n\n\n\nEdgeTerminal.boundary_type\n\nBoundaryType: Boundary type of the terminal.\n\nEdgeTerminal.bundle_terminal\n\nBundleTerminal: Bundle terminal that the terminal belongs to, if any.\n\nEdgeTerminal.component\n\nComponentGroup:         Component of the Connectable object.\n\nEdgeTerminal.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nEdgeTerminal.edges\n\nlist of Edge: All edges on the terminal.\n\nEdgeTerminal.group\n\nGroup object.\n\nEdgeTerminal.hfss_pi_type\n\nHfssPIType: HFSS PI type.\n\nEdgeTerminal.id\n\nint: Unique ID of the EDB object.\n\nEdgeTerminal.impedance\n\nValue: Impedance of the terminal.\n\nEdgeTerminal.is_auto_port\n\nbool: Flag indicating if the terminal is an auto port.\n\nEdgeTerminal.is_circuit_port\n\nbool: Flag indicating if the terminal is a circuit port.\n\nEdgeTerminal.is_interface_terminal\n\nbool: Flag indicating if the terminal is an interface.\n\nEdgeTerminal.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nEdgeTerminal.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nEdgeTerminal.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nEdgeTerminal.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nEdgeTerminal.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nEdgeTerminal.is_reference_terminal\n\nbool: Flag indicating if the terminal is a reference terminal.\n\nEdgeTerminal.layout\n\nLayout: Layout owning the object.\n\nEdgeTerminal.layout_obj_type\n\n\n\nEdgeTerminal.model\n\nstr: S-parameter model.\n\nEdgeTerminal.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nEdgeTerminal.name\n\nstr: Name of the terminal.\n\nEdgeTerminal.net\n\nNet: Net of the Connectable object.\n\nEdgeTerminal.obj_type\n\nLayoutObjType: Layout object type.\n\nEdgeTerminal.port_post_processing_prop\n\nPortPostProcessingProp: Port postprocessing properties.\n\nEdgeTerminal.reference_layer\n\nLayer: Layer that the terminal references, if any, by either layer object or name.\n\nEdgeTerminal.reference_terminal\n\nTerminal: Terminal that the terminal references, if any.\n\nEdgeTerminal.rlc_boundary_parameters\n\nRlc: RLC boundary parameters.\n\nEdgeTerminal.source_amplitude\n\nValue: Source amplitude of the terminal.\n\nEdgeTerminal.source_phase\n\nValue: Source phase of the terminal.\n\nEdgeTerminal.term_to_ground\n\nSourceTermToGroundType: Source terminal-to-ground type.\n\nEdgeTerminal.type\n\n\n\nEdgeTerminal.use_reference_from_hierarchy\n\nbool: Flag indicating if the terminal can use references from the hierarchy.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.mesh_bws",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.mesh_bws.html#mesh_bws",
        "title": "mesh_bws",
        "section": "mesh_bws",
        "text": "bool: Flag indicating if bondwires are meshed.\nmesh_bws\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.mesh_bws",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.mesh_bws.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.mesh_bws",
        "title": "mesh_bws > mesh_bws > mesh_bws",
        "section": "mesh_bws > mesh_bws",
        "text": "property SIWaveDCAdvancedSettings.mesh_bws\n\nbool: Flag indicating if bondwires are meshed.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.msg",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.msg",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.msg.html#ansys.edb.core.primitive.primitive.BoardBendDef.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property BoardBendDef.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.SingleFrequencyAdaptiveSolution.adaptive_frequency",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.SingleFrequencyAdaptiveSolution.adaptive_frequency.html#adaptive_frequency",
        "title": "adaptive_frequency",
        "section": "adaptive_frequency",
        "text": "str: Adaptive frequency.\nadaptive_frequency\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.SingleFrequencyAdaptiveSolution.adaptive_frequency",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.SingleFrequencyAdaptiveSolution.adaptive_frequency.html#ansys.edb.core.simulation_setup.adaptive_solutions.SingleFrequencyAdaptiveSolution.adaptive_frequency",
        "title": "adaptive_frequency > adaptive_frequency > adaptive_frequency",
        "section": "adaptive_frequency > adaptive_frequency",
        "text": "property SingleFrequencyAdaptiveSolution.adaptive_frequency\n\nstr: Adaptive frequency.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.layout_obj_type.html#layout_obj_type",
        "title": "layout_obj_type",
        "section": "layout_obj_type",
        "text": "layout_obj_type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.layout_obj_type.html#ansys.edb.core.hierarchy.structure3d.Structure3D.layout_obj_type",
        "title": "layout_obj_type > layout_obj_type > layout_obj_type",
        "section": "layout_obj_type > layout_obj_type",
        "text": "Structure3D.layout_obj_type = 8\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.set_variable_desc",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.set_variable_desc.html#set_variable_desc",
        "title": "set_variable_desc",
        "section": "set_variable_desc",
        "text": "Set a variable to have a new description.\nVariable name.\nNew variable description.\nset_variable_desc\npython:str\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.set_variable_desc",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.set_variable_desc.html#ansys.edb.core.layout.cell.Cell.set_variable_desc",
        "title": "set_variable_desc > set_variable_desc > set_variable_desc",
        "section": "set_variable_desc > set_variable_desc",
        "text": "Cell.set_variable_desc(name, desc)\n\nSet a variable to have a new description.\n\nParameters\n\nname\n\npython:str\n\nVariable name.\n\ndesc\n\npython:str\n\nNew variable description.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Edge.type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Edge.type.html#type",
        "title": "type",
        "section": "type",
        "text": "type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Edge.type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Edge.type.html#ansys.edb.core.terminal.terminals.Edge.type",
        "title": "type > type > type",
        "section": "type > type",
        "text": "Edge.type = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.transform",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.transform.html#transform",
        "title": "transform",
        "section": "transform",
        "text": "Transform:         Transformation information of the hierarchy object.\ntransform\nTransform"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.transform",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.transform.html#ansys.edb.core.hierarchy.structure3d.Structure3D.transform",
        "title": "transform > transform > transform",
        "section": "transform > transform",
        "text": "property Structure3D.transform\n\nTransform:         Transformation information of the hierarchy object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.create",
        "href": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a solder ball property.\nSolder ball property created.\ncreate\nSolderBallProperty"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.create",
        "href": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.create.html#ansys.edb.core.definition.solder_ball_property.SolderBallProperty.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod SolderBallProperty.create()\n\nCreate a solder ball property.\n\nReturns\n\nSolderBallProperty\n\nSolder ball property created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.AdaptiveFrequency.output_variables",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.AdaptiveFrequency.output_variables.html#output_variables",
        "title": "output_variables",
        "section": "output_variables",
        "text": "dict { str : str }: Map of output variable names to maximum delta S.\noutput_variables\ndict\nstr\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.AdaptiveFrequency.output_variables",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.AdaptiveFrequency.output_variables.html#ansys.edb.core.simulation_setup.adaptive_solutions.AdaptiveFrequency.output_variables",
        "title": "output_variables > output_variables > output_variables",
        "section": "output_variables > output_variables",
        "text": "property AdaptiveFrequency.output_variables\n\ndict { str : str }: Map of output variable names to maximum delta S.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.MeshClosure.UNDEFINED_CLOSURE",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.MeshClosure.UNDEFINED_CLOSURE.html#undefined_closure",
        "title": "UNDEFINED_CLOSURE",
        "section": "UNDEFINED_CLOSURE",
        "text": "UNDEFINED_CLOSURE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.MeshClosure.UNDEFINED_CLOSURE",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.MeshClosure.UNDEFINED_CLOSURE.html#ansys.edb.core.hierarchy.structure3d.MeshClosure.UNDEFINED_CLOSURE",
        "title": "UNDEFINED_CLOSURE > UNDEFINED_CLOSURE > UNDEFINED_CLOSURE",
        "section": "UNDEFINED_CLOSURE > UNDEFINED_CLOSURE",
        "text": "MeshClosure.UNDEFINED_CLOSURE = -1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDefType.APD_BONDWIRE_DEF",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDefType.APD_BONDWIRE_DEF.html#apd_bondwire_def",
        "title": "APD_BONDWIRE_DEF",
        "section": "APD_BONDWIRE_DEF",
        "text": "APD_BONDWIRE_DEF"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDefType.APD_BONDWIRE_DEF",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDefType.APD_BONDWIRE_DEF.html#ansys.edb.core.definition.bondwire_def.BondwireDefType.APD_BONDWIRE_DEF",
        "title": "APD_BONDWIRE_DEF > APD_BONDWIRE_DEF > APD_BONDWIRE_DEF",
        "section": "APD_BONDWIRE_DEF > APD_BONDWIRE_DEF",
        "text": "BondwireDefType.APD_BONDWIRE_DEF = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.DIELECTRIC_LAYER",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.DIELECTRIC_LAYER.html#dielectric_layer",
        "title": "DIELECTRIC_LAYER",
        "section": "DIELECTRIC_LAYER",
        "text": "DIELECTRIC_LAYER"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.DIELECTRIC_LAYER",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.DIELECTRIC_LAYER.html#ansys.edb.core.layer.layer_collection.LayerType.DIELECTRIC_LAYER",
        "title": "DIELECTRIC_LAYER > DIELECTRIC_LAYER > DIELECTRIC_LAYER",
        "section": "DIELECTRIC_LAYER > DIELECTRIC_LAYER",
        "text": "LayerType.DIELECTRIC_LAYER = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_mcad.html#is_mcad",
        "title": "is_mcad",
        "section": "is_mcad",
        "text": "bool: Flag indicating if this is an MCAD model.\nThis property is read-only.\nis_mcad\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_mcad.html#ansys.edb.core.terminal.terminals.EdgeTerminal.is_mcad",
        "title": "is_mcad > is_mcad > is_mcad",
        "section": "is_mcad > is_mcad",
        "text": "property EdgeTerminal.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.net",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.net.html#net",
        "title": "net",
        "section": "net",
        "text": "Net: Net of the Connectable object.\nThis property can be set with a Net instance, a string, or None.\nnet\nNet\nNet\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.net",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.net.html#ansys.edb.core.primitive.primitive.Primitive.net",
        "title": "net > net > net",
        "section": "net > net",
        "text": "property Primitive.net\n\nNet: Net of the Connectable object.\n\nThis property can be set with a Net instance, a string, or None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.x",
        "href": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.x.html#x",
        "title": "x",
        "section": "x",
        "text": "Value: X coordinate.\nx\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.x",
        "href": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.x.html#ansys.edb.core.geometry.point_data.PointData.x",
        "title": "x > x > x",
        "section": "x > x",
        "text": "property PointData.x\n\nValue: X coordinate.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.set_pad_parameters",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.set_pad_parameters.html#set_pad_parameters",
        "title": "set_pad_parameters",
        "section": "set_pad_parameters",
        "text": "Set pad parameters by layer name and pad type in their original values in the database.\nLayer name.\nPad type.\nX offset.\nY offset.\nRotation.\nPad geometry type. The default is None if setting polygonal pad parameters.\nList of pad sizes. The default is None if setting polygonal pad parameters.\nPolygon geometry. The default is None if not setting polygonal pad parameters.\nset_pad_parameters\nUnion\npython:str\npython:int\npython:None\nPadType\nValue\nValue\nValue\nPadGeometryType\npython:None\nNone\nList\nValue\npython:None\nNone\nPolygonData\npython:None\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.set_pad_parameters",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.set_pad_parameters.html#ansys.edb.core.definition.padstack_def_data.PadstackDefData.set_pad_parameters",
        "title": "set_pad_parameters > set_pad_parameters > set_pad_parameters",
        "section": "set_pad_parameters > set_pad_parameters",
        "text": "PadstackDefData.set_pad_parameters(layer, pad_type, offset_x, offset_y, rotation, type_geom=None, sizes=None, fp=None)\n\nSet pad parameters by layer name and pad type in their original values in the database.\n\nParameters\n\nlayer\n\nUnion[python:str, python:int, python:None]\n\nLayer name.\n\npad_type\n\nPadType\n\nPad type.\n\noffset_x\n\nValue\n\nX offset.\n\noffset_y\n\nValue\n\nY offset.\n\nrotation\n\nValue\n\nRotation.\n\ntype_geom\n\nPadGeometryType, default: python:None\n\nPad geometry type. The default is None if setting polygonal pad parameters.\n\nsizes\n\nList[Value], default: python:None\n\nList of pad sizes. The default is None if setting polygonal pad parameters.\n\nfp\n\nPolygonData, default: python:None\n\nPolygon geometry. The default is None if not setting polygonal pad parameters.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.layer",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.layer.html#layer",
        "title": "layer",
        "section": "layer",
        "text": "Layer: Layer that the point terminal is placed on.\nlayer\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.layer",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.layer.html#ansys.edb.core.terminal.terminals.PointTerminal.layer",
        "title": "layer > layer > layer",
        "section": "layer > layer",
        "text": "property PointTerminal.layer\n\nLayer: Layer that the point terminal is placed on.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the product property.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.get_product_property.html#ansys.edb.core.net.differential_pair.DifferentialPair.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "DifferentialPair.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nReturns\n\npython:str\n\nString stored in the product property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_null",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_null",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_null.html#ansys.edb.core.primitive.primitive.Rectangle.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property Rectangle.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.is_mcad.html#is_mcad",
        "title": "is_mcad",
        "section": "is_mcad",
        "text": "bool: Flag indicating if this is an MCAD model.\nThis property is read-only.\nis_mcad\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.is_mcad.html#ansys.edb.core.hierarchy.pin_group.PinGroup.is_mcad",
        "title": "is_mcad > is_mcad > is_mcad",
        "section": "is_mcad > is_mcad",
        "text": "property PinGroup.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.extended_nets",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.extended_nets.html#extended_nets",
        "title": "extended_nets",
        "section": "extended_nets",
        "text": "list of ExtendedNet:         List of all extended nets in the layout.\nThis property is read-only.\nextended_nets\nlist\nExtendedNet"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.extended_nets",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.extended_nets.html#ansys.edb.core.layout.layout.Layout.extended_nets",
        "title": "extended_nets > extended_nets > extended_nets",
        "section": "extended_nets > extended_nets",
        "text": "property Layout.extended_nets\n\nlist of ExtendedNet:         List of all extended nets in the layout.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.id",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.id",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.id.html#ansys.edb.core.net.extended_net.ExtendedNet.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property ExtendedNet.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.width",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.width.html#width",
        "title": "width",
        "section": "width",
        "text": "Value: Path width.\nwidth\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.width",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.width.html#ansys.edb.core.primitive.primitive.Path.width",
        "title": "width > width > width",
        "section": "width > width",
        "text": "property Path.width\n\nValue: Path width.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.get_pad_parameters",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.get_pad_parameters.html#get_pad_parameters",
        "title": "get_pad_parameters",
        "section": "get_pad_parameters",
        "text": "Get pad parameters by layer name and pad type in their original values in the database.\nLayer name.\nPad type.\nThe tuple is in this format for other than polygons: (pad_type, sizes, offset_x, offset_y, rotation).\nFor polygons, the tuple is in this format: (fp, offset_x, offset_y, rotation).\npad_type: Pad type\nsizes: Pad parameters\noffset_x: X offset\noffset_y: Y offset\nrotation: Rotation\nfp: Polygon geometry\nget_pad_parameters\nUnion\npython:str\npython:int\npython:None\nPadType\npython:tuple\nPadGeometryType\npython:list\nof\nValue\nValue\nValue\nValue\nor\npython:tuple\nPolygonData\nValue\nValue\nValue\n(pad_type, sizes, offset_x, offset_y, rotation)\n(fp, offset_x, offset_y, rotation)\npad_type\nsizes\noffset_x\noffset_y\nrotation\nfp"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.get_pad_parameters",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.get_pad_parameters.html#ansys.edb.core.definition.padstack_def_data.PadstackDefData.get_pad_parameters",
        "title": "get_pad_parameters > get_pad_parameters > get_pad_parameters",
        "section": "get_pad_parameters > get_pad_parameters",
        "text": "PadstackDefData.get_pad_parameters(layer, pad_type)\n\nGet pad parameters by layer name and pad type in their original values in the database.\n\nParameters\n\nlayer\n\nUnion[python:str, python:int, python:None]\n\nLayer name.\n\npad_type\n\nPadType\n\nPad type.\n\nReturns\n\npython:tuple[PadGeometryType, python:list of Value,         Value, Value,\n\n\n\nValue]\n\n\n\nor\n\n\n\npython:tuple[PolygonData,         Value,         Value, Value]\n\nThe tuple is in this format for other than polygons: (pad_type, sizes, offset_x, offset_y, rotation).\n\nFor polygons, the tuple is in this format: (fp, offset_x, offset_y, rotation).\n\npad_type: Pad type\n\nsizes: Pad parameters\n\noffset_x: X offset\n\noffset_y: Y offset\n\nrotation: Rotation\n\nfp: Polygon geometry\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.create_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.create_stride.html#create_stride",
        "title": "create_stride",
        "section": "create_stride",
        "text": "Create a Stride model from an MCAD file.\nStride model created.\ncreate_stride\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.create_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.create_stride.html#ansys.edb.core.primitive.primitive.Circle.create_stride",
        "title": "create_stride > create_stride > create_stride",
        "section": "create_stride > create_stride",
        "text": "Circle.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nReturns\n\nMcadModel\n\nStride model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.id",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.id",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.id.html#ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property LayoutInstanceContext.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.get_material",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.get_material.html#get_material",
        "title": "get_material",
        "section": "get_material",
        "text": "Get the name of the material of the layer.\nWhether to evaluate the material if it is parameterized.\nMaterial name.\nget_material\npython:True\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.get_material",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.get_material.html#ansys.edb.core.layer.stackup_layer.StackupLayer.get_material",
        "title": "get_material > get_material > get_material",
        "section": "get_material > get_material",
        "text": "StackupLayer.get_material(evaluated=True)\n\nGet the name of the material of the layer.\n\nParameters\n\nevaluated\n\nbool, default: python:True\n\nWhether to evaluate the material if it is parameterized.\n\nReturns\n\npython:str\n\nMaterial name.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.layout_obj_type.html#layout_obj_type",
        "title": "layout_obj_type",
        "section": "layout_obj_type",
        "text": "layout_obj_type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.layout_obj_type.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.layout_obj_type",
        "title": "layout_obj_type > layout_obj_type > layout_obj_type",
        "section": "layout_obj_type > layout_obj_type",
        "text": "TerminalInstanceTerminal.layout_obj_type = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_null",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_null",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_null.html#ansys.edb.core.primitive.primitive.Primitive.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property Primitive.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.has_voids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.has_voids.html#has_voids",
        "title": "has_voids",
        "section": "has_voids",
        "text": "bool: Flag indicating if a primitive has voids inside.\nThis property is read-only.\nhas_voids\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.has_voids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.has_voids.html#ansys.edb.core.primitive.primitive.Rectangle.has_voids",
        "title": "has_voids > has_voids > has_voids",
        "section": "has_voids > has_voids",
        "text": "property Rectangle.has_voids\n\nbool: Flag indicating if a primitive has voids inside.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.MAGNETIC_LOSS_TANGENT",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.MAGNETIC_LOSS_TANGENT.html#magnetic_loss_tangent",
        "title": "MAGNETIC_LOSS_TANGENT",
        "section": "MAGNETIC_LOSS_TANGENT",
        "text": "MAGNETIC_LOSS_TANGENT"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.MAGNETIC_LOSS_TANGENT",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.MAGNETIC_LOSS_TANGENT.html#ansys.edb.core.definition.material_def.MaterialProperty.MAGNETIC_LOSS_TANGENT",
        "title": "MAGNETIC_LOSS_TANGENT > MAGNETIC_LOSS_TANGENT > MAGNETIC_LOSS_TANGENT",
        "section": "MAGNETIC_LOSS_TANGENT > MAGNETIC_LOSS_TANGENT",
        "text": "MaterialProperty.MAGNETIC_LOSS_TANGENT = 7\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.id",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.id",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.id.html#ansys.edb.core.layout.cell.Cell.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property Cell.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.layout_obj_type.html#layout_obj_type",
        "title": "layout_obj_type",
        "section": "layout_obj_type",
        "text": "layout_obj_type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.layout_obj_type.html#ansys.edb.core.layout.cell.Cell.layout_obj_type",
        "title": "layout_obj_type > layout_obj_type > layout_obj_type",
        "section": "layout_obj_type > layout_obj_type",
        "text": "Cell.layout_obj_type = 10\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.edb_uid.html#edb_uid",
        "title": "edb_uid",
        "section": "edb_uid",
        "text": "int: Unique, persistent ID for the Connectable object.\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\nThis property is read-only.\nedb_uid\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.edb_uid.html#ansys.edb.core.terminal.terminals.EdgeTerminal.edb_uid",
        "title": "edb_uid > edb_uid > edb_uid",
        "section": "edb_uid > edb_uid",
        "text": "property EdgeTerminal.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.set_parameter_override",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.set_parameter_override.html#set_parameter_override",
        "title": "set_parameter_override",
        "section": "set_parameter_override",
        "text": "Set an override value for a given cell instance parameter.\nName of the cell instance parameter.\nValue to override with.\nset_parameter_override\npython:str\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.set_parameter_override",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.set_parameter_override.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.set_parameter_override",
        "title": "set_parameter_override > set_parameter_override > set_parameter_override",
        "section": "set_parameter_override > set_parameter_override",
        "text": "CellInstance.set_parameter_override(param_name, param_value)\n\nSet an override value for a given cell instance parameter.\n\nParameters\n\nparam_name\n\npython:str\n\nName of the cell instance parameter.\n\nparam_value\n\nValue\n\nValue to override with.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.create",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a circle.\nLayout to create this circle in.\nLayer to place the circle on.\nNet of the circle.\nX value of the center point.\nY value of the center point.\nRadius value of the circle.\nCircle created.\ncreate\nLayout\npython:str\nLayer\npython:str\nNet\npython:None\nValue\nValue\nValue\nCircle"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.create",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.create.html#ansys.edb.core.primitive.primitive.Circle.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod Circle.create(layout, layer, net, center_x, center_y, radius)\n\nCreate a circle.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to create this circle in.\n\nlayer\n\npython:str or Layer\n\nLayer to place the circle on.\n\nnet\n\npython:str or Net or python:None\n\nNet of the circle.\n\ncenter_x\n\nValue\n\nX value of the center point.\n\ncenter_y\n\nValue\n\nY value of the center point.\n\nradius\n\nValue\n\nRadius value of the circle.\n\nReturns\n\nCircle\n\nCircle created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.html#group",
        "title": "Group",
        "section": "Group",
        "text": "Represents a group object.\nGroup.add_member(member)\nAdd an object to the group.\nGroup.cast()\nCast the group object to the correct concrete type.\nGroup.create(layout, name)\nCreate a group.\nGroup.create_3d_comp()\nCreate a 3D composite model from an MCAD file.\nGroup.create_hfss()\nCreate an HFSS model from an MCAD file.\nGroup.create_stride()\nCreate a Stride model from an MCAD file.\nGroup.delete()\nDelete the layout object.\nGroup.find(layout, name)\nFind a group by name.\nGroup.find_by_id(layout, uid)\nFind a Connectable object by database ID in a given layout.\nGroup.get_product_property(prod_id, attr_id)\nGet the product property of the layout object for a given product ID and attribute ID.\nGroup.get_product_property_ids(prod_id)\nGet a list of attribute IDs given a product ID for the layout object.\nGroup.remove_member(member)\nRemove an object from the group.\nGroup.set_product_property(prod_id, attr_id, ...)\nSet the product property of the layout object for a given product ID and attribute ID.\nGroup.ungroup(recursive)\nDissolve the group.\nGroup.component\nComponentGroup:         Component of the Connectable object.\nGroup.component_def\nComponentDef: Component definition for the         hierarchy object if it exists, None otherwise.\nGroup.edb_uid\nint: Unique, persistent ID for the Connectable object.\nGroup.group\nGroup object.\nGroup.id\nint: Unique ID of the EDB object.\nGroup.is_mcad\nbool: Flag indicating if this is an MCAD model.\nGroup.is_mcad_3d_comp\nbool: Flag indicating if this is a 3D composite MCAD model.\nGroup.is_mcad_hfss\nbool: Flag indicating if this is an HFSS MCAD model.\nGroup.is_mcad_stride\nbool: Flag indicating if this is a Stride MCAD model.\nGroup.is_null\nbool: Flag indicating if the object exists in the database.\nGroup.layout\nLayout: Layout owning the object.\nGroup.layout_obj_type\n\nGroup.location\ntuple (Value,         Value):         Location [x, y] of the hierarchy object on the placement_layer object.\nGroup.members\nlist of Connectables: All group members.\nGroup.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nGroup.name\nstr: Name of the hierarchy object.\nGroup.net\nNet: Net of the Connectable object.\nGroup.obj_type\nLayoutObjType: Layout object type.\nGroup.placement_layer\nLayer: Placement layer for the hierarchy object.\nGroup.solve_independent_preference\nbool: Flag indicating if the object is assigned to solve independent of its parent context.\nGroup.transform\nTransform:         Transformation information of the hierarchy object.\nGroup\nGroup.add_member\nGroup.cast\nGroup.create\nGroup.create_3d_comp\nGroup.create_hfss\nGroup.create_stride\nGroup.delete\nGroup.find\nGroup.find_by_id\nGroup.get_product_property\nGroup.get_product_property_ids\nGroup.remove_member\nGroup.set_product_property\nGroup.ungroup\nGroup.component\nComponentGroup\nGroup.component_def\nComponentDef\nNone\nGroup.edb_uid\nint\nGroup.group\nGroup\nGroup.id\nint\nGroup.is_mcad\nbool\nGroup.is_mcad_3d_comp\nbool\nGroup.is_mcad_hfss\nbool\nGroup.is_mcad_stride\nbool\nGroup.is_null\nbool\nGroup.layout\nLayout\nGroup.layout_obj_type\nGroup.location\ntuple\nValue\nValue\nplacement_layer\nGroup.members\nlist\nGroup.msg\nEDBObjMessage\nGroup.name\nstr\nGroup.net\nNet\nGroup.obj_type\nLayoutObjType\nGroup.placement_layer\nLayer\nGroup.solve_independent_preference\nbool\nGroup.transform\nTransform"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.html#ansys.edb.core.hierarchy.group.Group",
        "title": "Group > Group > Group",
        "section": "Group > Group",
        "text": "class ansys.edb.core.hierarchy.group.Group(msg)\n\nRepresents a group object.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nGroup.add_member(member)\n\nAdd an object to the group.\n\nGroup.cast()\n\nCast the group object to the correct concrete type.\n\nGroup.create(layout, name)\n\nCreate a group.\n\nGroup.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nGroup.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nGroup.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nGroup.delete()\n\nDelete the layout object.\n\nGroup.find(layout, name)\n\nFind a group by name.\n\nGroup.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nGroup.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nGroup.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nGroup.remove_member(member)\n\nRemove an object from the group.\n\nGroup.set_product_property(prod_id, attr_id, ...)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nGroup.ungroup(recursive)\n\nDissolve the group.\n\n\n\nAttributes\n\n\n\n\n\n\n\nGroup.component\n\nComponentGroup:         Component of the Connectable object.\n\nGroup.component_def\n\nComponentDef: Component definition for the         hierarchy object if it exists, None otherwise.\n\nGroup.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nGroup.group\n\nGroup object.\n\nGroup.id\n\nint: Unique ID of the EDB object.\n\nGroup.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nGroup.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nGroup.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nGroup.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nGroup.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nGroup.layout\n\nLayout: Layout owning the object.\n\nGroup.layout_obj_type\n\n\n\nGroup.location\n\ntuple (Value,         Value):         Location [x, y] of the hierarchy object on the placement_layer object.\n\nGroup.members\n\nlist of Connectables: All group members.\n\nGroup.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nGroup.name\n\nstr: Name of the hierarchy object.\n\nGroup.net\n\nNet: Net of the Connectable object.\n\nGroup.obj_type\n\nLayoutObjType: Layout object type.\n\nGroup.placement_layer\n\nLayer: Placement layer for the hierarchy object.\n\nGroup.solve_independent_preference\n\nbool: Flag indicating if the object is assigned to solve independent of its parent context.\n\nGroup.transform\n\nTransform:         Transformation information of the hierarchy object.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.delete",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the layout object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.delete",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.delete.html#ansys.edb.core.hierarchy.structure3d.Structure3D.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "Structure3D.delete()\n\nDelete the layout object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.is_box",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.is_box.html#is_box",
        "title": "is_box",
        "section": "is_box",
        "text": "Determine whether the outer contour of the polygon is a box.\nTrue when the outer corner of the polygon is a box, False otherwise.\nis_box\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.is_box",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.is_box.html#ansys.edb.core.geometry.polygon_data.PolygonData.is_box",
        "title": "is_box > is_box > is_box",
        "section": "is_box > is_box",
        "text": "PolygonData.is_box()\n\nDetermine whether the outer contour of the polygon is a box.\n\nReturns\n\nbool\n\nTrue when the outer corner of the polygon is a box, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.obj_type",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.obj_type.html#obj_type",
        "title": "obj_type",
        "section": "obj_type",
        "text": "LayoutObjType: Layout object type.\nThis property is read-only.\nobj_type\nLayoutObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.obj_type",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.obj_type.html#ansys.edb.core.hierarchy.inst_array.InstArray.obj_type",
        "title": "obj_type > obj_type > obj_type",
        "section": "obj_type > obj_type",
        "text": "property InstArray.obj_type\n\nLayoutObjType: Layout object type.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the property.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.set_product_property.html#ansys.edb.core.terminal.terminals.BundleTerminal.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "BundleTerminal.set_product_property(prod_id, attr_id, prop_value)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nprop_value\n\npython:str\n\nString stored in the property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings.arc_step_size",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings.arc_step_size.html#arc_step_size",
        "title": "arc_step_size",
        "section": "arc_step_size",
        "text": "str: Arc step size used when approximating arcs.\narc_step_size\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings.arc_step_size",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings.arc_step_size.html#ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings.arc_step_size",
        "title": "arc_step_size > arc_step_size > arc_step_size",
        "section": "arc_step_size > arc_step_size",
        "text": "property AdvancedMeshingSettings.arc_step_size\n\nstr: Arc step size used when approximating arcs.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.ERRORS_LAYER",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.ERRORS_LAYER.html#errors_layer",
        "title": "ERRORS_LAYER",
        "section": "ERRORS_LAYER",
        "text": "ERRORS_LAYER"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.ERRORS_LAYER",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.ERRORS_LAYER.html#ansys.edb.core.layer.layer_collection.LayerType.ERRORS_LAYER",
        "title": "ERRORS_LAYER > ERRORS_LAYER > ERRORS_LAYER",
        "section": "ERRORS_LAYER > ERRORS_LAYER",
        "text": "LayerType.ERRORS_LAYER = 4\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.dc_relative_permitivity",
        "href": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.dc_relative_permitivity.html#dc_relative_permitivity",
        "title": "dc_relative_permitivity",
        "section": "dc_relative_permitivity",
        "text": "float: DC relative permitivity.\ndc_relative_permitivity\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.dc_relative_permitivity",
        "href": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.dc_relative_permitivity.html#ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.dc_relative_permitivity",
        "title": "dc_relative_permitivity > dc_relative_permitivity > dc_relative_permitivity",
        "section": "dc_relative_permitivity > dc_relative_permitivity",
        "text": "property DjordjecvicSarkarModel.dc_relative_permitivity\n\nfloat: DC relative permitivity.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.id",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.id",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.id.html#ansys.edb.core.layer.layer.Layer.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property Layer.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.is_stackup_layer",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.is_stackup_layer.html#is_stackup_layer",
        "title": "is_stackup_layer",
        "section": "is_stackup_layer",
        "text": "bool: Flag indicating if the layer is a StackupLayer instance.\nThis property is read-only.\nis_stackup_layer\nbool\nStackupLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.is_stackup_layer",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.is_stackup_layer.html#ansys.edb.core.layer.stackup_layer.StackupLayer.is_stackup_layer",
        "title": "is_stackup_layer > is_stackup_layer > is_stackup_layer",
        "section": "is_stackup_layer > is_stackup_layer",
        "text": "property StackupLayer.is_stackup_layer\n\nbool: Flag indicating if the layer is a StackupLayer instance.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.hfss_pi_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.hfss_pi_type.html#hfss_pi_type",
        "title": "hfss_pi_type",
        "section": "hfss_pi_type",
        "text": "HfssPIType: HFSS PI type.\nhfss_pi_type\nHfssPIType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.hfss_pi_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.hfss_pi_type.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.hfss_pi_type",
        "title": "hfss_pi_type > hfss_pi_type > hfss_pi_type",
        "section": "hfss_pi_type > hfss_pi_type",
        "text": "property TerminalInstanceTerminal.hfss_pi_type\n\nHfssPIType: HFSS PI type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDef.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDef.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDef.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDef.msg.html#ansys.edb.core.definition.bondwire_def.BondwireDef.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property BondwireDef.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.source_amplitude",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.source_amplitude.html#source_amplitude",
        "title": "source_amplitude",
        "section": "source_amplitude",
        "text": "Value: Source amplitude of the terminal.\nsource_amplitude\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.source_amplitude",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.source_amplitude.html#ansys.edb.core.terminal.terminals.BundleTerminal.source_amplitude",
        "title": "source_amplitude > source_amplitude > source_amplitude",
        "section": "source_amplitude > source_amplitude",
        "text": "property BundleTerminal.source_amplitude\n\nValue: Source amplitude of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.PowerModule.neg_output_terminal",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.PowerModule.neg_output_terminal.html#neg_output_terminal",
        "title": "neg_output_terminal",
        "section": "neg_output_terminal",
        "text": "str: Negative output terminal name for the power module.\nneg_output_terminal\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.PowerModule.neg_output_terminal",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.PowerModule.neg_output_terminal.html#ansys.edb.core.layout.voltage_regulator.PowerModule.neg_output_terminal",
        "title": "neg_output_terminal > neg_output_terminal > neg_output_terminal",
        "section": "neg_output_terminal > neg_output_terminal",
        "text": "property PowerModule.neg_output_terminal\n\nstr: Negative output terminal name for the power module.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.padstack_instance",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.padstack_instance.html#padstack_instance",
        "title": "padstack_instance",
        "section": "padstack_instance",
        "text": "PadstackInstance: Padstack instance of the terminal.\npadstack_instance\nPadstackInstance"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.padstack_instance",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.padstack_instance.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.padstack_instance",
        "title": "padstack_instance > padstack_instance > padstack_instance",
        "section": "padstack_instance > padstack_instance",
        "text": "property PadstackInstanceTerminal.padstack_instance\n\nPadstackInstance: Padstack instance of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.obj_type",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.obj_type.html#obj_type",
        "title": "obj_type",
        "section": "obj_type",
        "text": "LayoutObjType: Layout object type.\nThis property is read-only.\nobj_type\nLayoutObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.obj_type",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.obj_type.html#ansys.edb.core.hierarchy.structure3d.Structure3D.obj_type",
        "title": "obj_type > obj_type > obj_type",
        "section": "obj_type > obj_type",
        "text": "property Structure3D.obj_type\n\nLayoutObjType: Layout object type.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.html#hfsssolversettings",
        "title": "HFSSSolverSettings",
        "section": "HFSSSolverSettings",
        "text": "Representis solver settings for HFSS simulations.\nHFSSSolverSettings.enable_intra_plane_coupling\nbool: Flag indicating if intra-plane coupling of power/ground nets is enabled to enhance accuracy.\nHFSSSolverSettings.max_delta_z0\nfloat: Maximum percent change in characteristic impedance of ports between adaptive passes.\nHFSSSolverSettings.max_triangles_for_wave_port\nint: Maximum number of triangles to use for meshing waveports.\nHFSSSolverSettings.min_triangles_for_wave_port\nint: Minimum number of triangles to use for meshing waveports.\nHFSSSolverSettings.msg\nEDBObjMessage: Protobuf message that represents this object's ID.\nHFSSSolverSettings.set_triangles_for_wave_port\nbool: Flag indicating ifthe minimum and maximum triangle values for waveports are used.\nHFSSSolverSettings.thin_dielectric_layer_threshold\nstr: Value below which dielectric layers are merged with adjacent dielectric layers.\nHFSSSolverSettings.thin_signal_layer_threshold\nstr: Value below which signal layers are considered to have zero thickness.\nHFSSSolverSettings\nHFSSSolverSettings.enable_intra_plane_coupling\nbool\nHFSSSolverSettings.max_delta_z0\nfloat\nHFSSSolverSettings.max_triangles_for_wave_port\nint\nHFSSSolverSettings.min_triangles_for_wave_port\nint\nHFSSSolverSettings.msg\nEDBObjMessage\nHFSSSolverSettings.set_triangles_for_wave_port\nbool\nHFSSSolverSettings.thin_dielectric_layer_threshold\nstr\nHFSSSolverSettings.thin_signal_layer_threshold\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings",
        "title": "HFSSSolverSettings > HFSSSolverSettings > HFSSSolverSettings",
        "section": "HFSSSolverSettings > HFSSSolverSettings",
        "text": "class ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings(sim_setup)\n\nRepresentis solver settings for HFSS simulations.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nHFSSSolverSettings.enable_intra_plane_coupling\n\nbool: Flag indicating if intra-plane coupling of power/ground nets is enabled to enhance accuracy.\n\nHFSSSolverSettings.max_delta_z0\n\nfloat: Maximum percent change in characteristic impedance of ports between adaptive passes.\n\nHFSSSolverSettings.max_triangles_for_wave_port\n\nint: Maximum number of triangles to use for meshing waveports.\n\nHFSSSolverSettings.min_triangles_for_wave_port\n\nint: Minimum number of triangles to use for meshing waveports.\n\nHFSSSolverSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object's ID.\n\nHFSSSolverSettings.set_triangles_for_wave_port\n\nbool: Flag indicating ifthe minimum and maximum triangle values for waveports are used.\n\nHFSSSolverSettings.thin_dielectric_layer_threshold\n\nstr: Value below which dielectric layers are merged with adjacent dielectric layers.\n\nHFSSSolverSettings.thin_signal_layer_threshold\n\nstr: Value below which signal layers are considered to have zero thickness.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.get_thermal_modifier",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.get_thermal_modifier.html#get_thermal_modifier",
        "title": "get_thermal_modifier",
        "section": "get_thermal_modifier",
        "text": "Get the thermal modifier of a given material definition.\nProperty ID.\nThermal modifier of the material definition.\nget_thermal_modifier\nMaterialProperty\nThermalModifier"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.get_thermal_modifier",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.get_thermal_modifier.html#ansys.edb.core.definition.material_def.MaterialDef.get_thermal_modifier",
        "title": "get_thermal_modifier > get_thermal_modifier > get_thermal_modifier",
        "section": "get_thermal_modifier > get_thermal_modifier",
        "text": "MaterialDef.get_thermal_modifier(material_property_id)\n\nGet the thermal modifier of a given material definition.\n\nParameters\n\nmaterial_property_id\n\nMaterialProperty\n\nProperty ID.\n\nReturns\n\nThermalModifier\n\nThermal modifier of the material definition.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents this object’s ID.\nThis property is read-only.\nmsg\nEDBObjMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.msg.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property SIWaveAdvancedSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object’s ID.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.cast",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.cast.html#cast",
        "title": "cast",
        "section": "cast",
        "text": "Cast the primitive object to the correct concrete type.\ncast\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.cast",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.cast.html#ansys.edb.core.primitive.primitive.Path.cast",
        "title": "cast > cast > cast",
        "section": "cast > cast",
        "text": "Path.cast()\n\nCast the primitive object to the correct concrete type.\n\nReturns\n\nPrimitive\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.primitive_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.primitive_type.html#primitive_type",
        "title": "primitive_type",
        "section": "primitive_type",
        "text": "PrimitiveType: Primitive type of the primitive.\nThis property is read-only.\nprimitive_type\nPrimitiveType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.primitive_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.primitive_type.html#ansys.edb.core.primitive.primitive.Primitive.primitive_type",
        "title": "primitive_type > primitive_type > primitive_type",
        "section": "primitive_type > primitive_type",
        "text": "property Primitive.primitive_type\n\nPrimitiveType: Primitive type of the primitive.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.min_passes",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.min_passes.html#min_passes",
        "title": "min_passes",
        "section": "min_passes",
        "text": "int: Minimum number of adaptive passes.\nmin_passes\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.min_passes",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.min_passes.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.min_passes",
        "title": "min_passes > min_passes > min_passes",
        "section": "min_passes > min_passes",
        "text": "property HFSSSettingsOptions.min_passes\n\nint: Minimum number of adaptive passes.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_mcad_hfss.html#is_mcad_hfss",
        "title": "is_mcad_hfss",
        "section": "is_mcad_hfss",
        "text": "bool: Flag indicating if this is an HFSS MCAD model.\nThis property is read-only.\nis_mcad_hfss\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_mcad_hfss.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.is_mcad_hfss",
        "title": "is_mcad_hfss > is_mcad_hfss > is_mcad_hfss",
        "section": "is_mcad_hfss > is_mcad_hfss",
        "text": "property PinGroupTerminal.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.broadband_adaptive_solution",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.broadband_adaptive_solution.html#broadband_adaptive_solution",
        "title": "broadband_adaptive_solution",
        "section": "broadband_adaptive_solution",
        "text": "BroadbandAdaptiveSolution: Settings for a broadband adaptive solution.\nbroadband_adaptive_solution\nBroadbandAdaptiveSolution"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.broadband_adaptive_solution",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.broadband_adaptive_solution.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.broadband_adaptive_solution",
        "title": "broadband_adaptive_solution > broadband_adaptive_solution > broadband_adaptive_solution",
        "section": "broadband_adaptive_solution > broadband_adaptive_solution",
        "text": "property HFSSGeneralSettings.broadband_adaptive_solution\n\nBroadbandAdaptiveSolution: Settings for a broadband adaptive solution.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.owner",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.owner.html#owner",
        "title": "owner",
        "section": "owner",
        "text": "Primitive: Owner of the primitive object.\nThis property is read-only.\nowner\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.owner",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.owner.html#ansys.edb.core.primitive.primitive.Rectangle.owner",
        "title": "owner > owner > owner",
        "section": "owner > owner",
        "text": "property Rectangle.owner\n\nPrimitive: Owner of the primitive object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_ROUND45",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_ROUND45.html#padgeomtype_round45",
        "title": "PADGEOMTYPE_ROUND45",
        "section": "PADGEOMTYPE_ROUND45",
        "text": "PADGEOMTYPE_ROUND45"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_ROUND45",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_ROUND45.html#ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_ROUND45",
        "title": "PADGEOMTYPE_ROUND45 > PADGEOMTYPE_ROUND45 > PADGEOMTYPE_ROUND45",
        "section": "PADGEOMTYPE_ROUND45 > PADGEOMTYPE_ROUND45",
        "text": "PadGeometryType.PADGEOMTYPE_ROUND45 = 8\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.create_value",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.create_value.html#create_value",
        "title": "create_value",
        "section": "create_value",
        "text": "Create a value instance.\nThis value instance can reference variables on the variable server.\nValue, which can be any type that can be converted to a Value\ninstance.\nCreating a value from a Database instance can reference variables\nin the Database instance.\nCreating a value from a Cell instance can reference variables in\nboth the Database instance and the\nCell instance\nCreating a value from a ComponentDef\ninstance can reference variables in both the Database instance and\nthe ComponentDef instance.\ncreate_value\npython:str\npython:int\npython:float\ncomplex\nValue\nValue\nDatabase\nDatabase\nCell\nDatabase\nCell\nComponentDef\nDatabase\nComponentDef"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.create_value",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.create_value.html#ansys.edb.core.layout.cell.Cell.create_value",
        "title": "create_value > create_value > create_value",
        "section": "create_value > create_value",
        "text": "Cell.create_value(val)\n\nCreate a value instance.\n\nThis value instance can reference variables on the variable server.\n\nParameters\n\nval\n\npython:str, python:int, python:float, complex\n\nValue, which can be any type that can be converted to a Value\ninstance.\n\nReturns\n\nValue\n\n\n\nNotes\n\nCreating a value from a Database instance can reference variables\nin the Database instance.\n\nCreating a value from a Cell instance can reference variables in\nboth the Database instance and the\nCell instance\n\nCreating a value from a ComponentDef\ninstance can reference variables in both the Database instance and\nthe ComponentDef instance.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.LayerVisibility.PAD_VISIBLE",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.LayerVisibility.PAD_VISIBLE.html#pad_visible",
        "title": "PAD_VISIBLE",
        "section": "PAD_VISIBLE",
        "text": "PAD_VISIBLE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.LayerVisibility.PAD_VISIBLE",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.LayerVisibility.PAD_VISIBLE.html#ansys.edb.core.layer.layer.LayerVisibility.PAD_VISIBLE",
        "title": "PAD_VISIBLE > PAD_VISIBLE > PAD_VISIBLE",
        "section": "PAD_VISIBLE > PAD_VISIBLE",
        "text": "LayerVisibility.PAD_VISIBLE = 4\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings.html#hfssdcrsettings",
        "title": "HFSSDCRSettings",
        "section": "HFSSDCRSettings",
        "text": "Represents DCR settings for HFSS simulations.\nHFSSDCRSettings.max_passes\nint: Maximum number of conduction adaptive passes.\nHFSSDCRSettings.min_converged_passes\nint: Minimum number of converged conduction adaptive passes.\nHFSSDCRSettings.min_passes\nint: Minimum number of conduction adaptive passes.\nHFSSDCRSettings.msg\nEDBObjMessage: Protobuf message that represents this object's ID.\nHFSSDCRSettings.percent_error\nfloat: Percent error during conduction adaptive passes.\nHFSSDCRSettings.percent_refinement_per_pass\nfloat: Mesh refinement percentage per conduction adaptive pass.\nHFSSDCRSettings\nHFSSDCRSettings.max_passes\nint\nHFSSDCRSettings.min_converged_passes\nint\nHFSSDCRSettings.min_passes\nint\nHFSSDCRSettings.msg\nEDBObjMessage\nHFSSDCRSettings.percent_error\nfloat\nHFSSDCRSettings.percent_refinement_per_pass\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings",
        "title": "HFSSDCRSettings > HFSSDCRSettings > HFSSDCRSettings",
        "section": "HFSSDCRSettings > HFSSDCRSettings",
        "text": "class ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings(sim_setup)\n\nRepresents DCR settings for HFSS simulations.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nHFSSDCRSettings.max_passes\n\nint: Maximum number of conduction adaptive passes.\n\nHFSSDCRSettings.min_converged_passes\n\nint: Minimum number of converged conduction adaptive passes.\n\nHFSSDCRSettings.min_passes\n\nint: Minimum number of conduction adaptive passes.\n\nHFSSDCRSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object's ID.\n\nHFSSDCRSettings.percent_error\n\nfloat: Percent error during conduction adaptive passes.\n\nHFSSDCRSettings.percent_refinement_per_pass\n\nfloat: Mesh refinement percentage per conduction adaptive pass.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.Distribution.LINC",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.Distribution.LINC.html#linc",
        "title": "LINC",
        "section": "LINC",
        "text": "LINC"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.Distribution.LINC",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.Distribution.LINC.html#ansys.edb.core.simulation_setup.simulation_setup.Distribution.LINC",
        "title": "LINC > LINC > LINC",
        "section": "LINC > LINC",
        "text": "Distribution.LINC = 'LINC'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.type.html#type",
        "title": "type",
        "section": "type",
        "text": "type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.type.html#ansys.edb.core.terminal.terminals.EdgeTerminal.type",
        "title": "type > type > type",
        "section": "type > type",
        "text": "EdgeTerminal.type = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_null",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_null",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_null.html#ansys.edb.core.primitive.primitive.Text.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property Text.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_position_and_rotation",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_position_and_rotation.html#get_position_and_rotation",
        "title": "get_position_and_rotation",
        "section": "get_position_and_rotation",
        "text": "Get the position and rotation of the padstack instance.\nValue,\nValue,\nValue\nReturns a tuple in this format:\n(x, y, rotation)\nx : X coordinate.\ny : Y coordinate.\nrotation : Rotation in radians.\nget_position_and_rotation\npython:tuple\nValue\nValue\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_position_and_rotation",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_position_and_rotation.html#ansys.edb.core.primitive.primitive.PadstackInstance.get_position_and_rotation",
        "title": "get_position_and_rotation > get_position_and_rotation > get_position_and_rotation",
        "section": "get_position_and_rotation > get_position_and_rotation",
        "text": "PadstackInstance.get_position_and_rotation()\n\nGet the position and rotation of the padstack instance.\n\nReturns\n\npython:tuple[\n\nValue,\nValue,\nValue\n\n]\n\nReturns a tuple in this format:\n\n(x, y, rotation)\n\nx : X coordinate.\n\ny : Y coordinate.\n\nrotation : Rotation in radians.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.all_constant",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.all_constant.html#all_constant",
        "title": "all_constant",
        "section": "all_constant",
        "text": "bool: Flag indicating if all matrix entries are the same.\nThis property is read-only.\nall_constant\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.all_constant",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.all_constant.html#ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.all_constant",
        "title": "all_constant > all_constant > all_constant",
        "section": "all_constant > all_constant",
        "text": "property MatrixConvergenceData.all_constant\n\nbool: Flag indicating if all matrix entries are the same.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDs for a given product ID for the layer.\nProduct ID.\nList of attribute IDs.\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.get_product_property_ids.html#ansys.edb.core.layer.via_layer.ViaLayer.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "ViaLayer.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs for a given product ID for the layer.\n\nParameters\n\nprod_id\n\nProductIdType\n\nProduct ID.\n\nReturns\n\npython:list[python:int]\n\nList of attribute IDs.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.move",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.move.html#move",
        "title": "move",
        "section": "move",
        "text": "Move the polygon by a vector.\nVector in the form: (x, y).\nmove\nansys.edb.core.typing.PointLikeT\n(x, y)\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.move",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.move.html#ansys.edb.core.geometry.polygon_data.PolygonData.move",
        "title": "move > move > move",
        "section": "move > move",
        "text": "PolygonData.move(vector)\n\nMove the polygon by a vector.\n\nParameters\n\nvector\n\nansys.edb.core.typing.PointLikeT\n\nVector in the form: (x, y).\n\nReturns\n\nPolygonData\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_enable_etch_transform",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_enable_etch_transform.html#use_enable_etch_transform",
        "title": "use_enable_etch_transform",
        "section": "use_enable_etch_transform",
        "text": "bool: Flag indicating if layout is “pre-distorted” based on foundry rules.\nuse_enable_etch_transform\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_enable_etch_transform",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_enable_etch_transform.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_enable_etch_transform",
        "title": "use_enable_etch_transform > use_enable_etch_transform > use_enable_etch_transform",
        "section": "use_enable_etch_transform > use_enable_etch_transform",
        "text": "property RaptorXAdvancedSettings.use_enable_etch_transform\n\nbool: Flag indicating if layout is “pre-distorted” based on foundry rules.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.layout",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.layout.html#layout",
        "title": "layout",
        "section": "layout",
        "text": "Layout: Layout owning the object.\nThis property is read-only.\nlayout\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.layout",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.layout.html#ansys.edb.core.terminal.terminals.BundleTerminal.layout",
        "title": "layout > layout > layout",
        "section": "layout > layout",
        "text": "property BundleTerminal.layout\n\nLayout: Layout owning the object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_enable_substrate_network_extraction",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_enable_substrate_network_extraction.html#use_enable_substrate_network_extraction",
        "title": "use_enable_substrate_network_extraction",
        "section": "use_enable_substrate_network_extraction",
        "text": "bool: Flag indicating if modeling of substrate coupling effects         is enabled using equivalent distributed RC networks.\nuse_enable_substrate_network_extraction\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_enable_substrate_network_extraction",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_enable_substrate_network_extraction.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_enable_substrate_network_extraction",
        "title": "use_enable_substrate_network_extraction > use_enable_substrate_network_extraction > use_enable_substrate_network_extraction",
        "section": "use_enable_substrate_network_extraction > use_enable_substrate_network_extraction",
        "text": "property RaptorXAdvancedSettings.use_enable_substrate_network_extraction\n\nbool: Flag indicating if modeling of substrate coupling effects         is enabled using equivalent distributed RC networks.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.make_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.make_zone_primitive.html#make_zone_primitive",
        "title": "make_zone_primitive",
        "section": "make_zone_primitive",
        "text": "Make the primitive a zone primitive with a zone specified by the provided ID.\nID of the zone primitive to use.\nmake_zone_primitive\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.make_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.make_zone_primitive.html#ansys.edb.core.primitive.primitive.Circle.make_zone_primitive",
        "title": "make_zone_primitive > make_zone_primitive > make_zone_primitive",
        "section": "make_zone_primitive > make_zone_primitive",
        "text": "Circle.make_zone_primitive(zone_id)\n\nMake the primitive a zone primitive with a zone specified by the provided ID.\n\nParameters\n\nzone_id\n\npython:int\n\nID of the zone primitive to use.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge.primitive",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge.primitive.html#primitive",
        "title": "primitive",
        "section": "primitive",
        "text": "Primitive: Primitive of the terminal.\nprimitive\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge.primitive",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge.primitive.html#ansys.edb.core.terminal.terminals.PrimitiveEdge.primitive",
        "title": "primitive > primitive > primitive",
        "section": "primitive > primitive",
        "text": "property PrimitiveEdge.primitive\n\nPrimitive: Primitive of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.is_mcad_3d_comp.html#is_mcad_3d_comp",
        "title": "is_mcad_3d_comp",
        "section": "is_mcad_3d_comp",
        "text": "bool: Flag indicating if this is a 3D composite MCAD model.\nThis property is read-only.\nis_mcad_3d_comp\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.is_mcad_3d_comp.html#ansys.edb.core.primitive.primitive.PadstackInstance.is_mcad_3d_comp",
        "title": "is_mcad_3d_comp > is_mcad_3d_comp > is_mcad_3d_comp",
        "section": "is_mcad_3d_comp > is_mcad_3d_comp",
        "text": "property PadstackInstance.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.use_reference_from_hierarchy",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.use_reference_from_hierarchy.html#use_reference_from_hierarchy",
        "title": "use_reference_from_hierarchy",
        "section": "use_reference_from_hierarchy",
        "text": "bool: Flag indicating if the terminal can use references from the hierarchy.\nuse_reference_from_hierarchy\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.use_reference_from_hierarchy",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.use_reference_from_hierarchy.html#ansys.edb.core.terminal.terminals.BundleTerminal.use_reference_from_hierarchy",
        "title": "use_reference_from_hierarchy > use_reference_from_hierarchy > use_reference_from_hierarchy",
        "section": "use_reference_from_hierarchy > use_reference_from_hierarchy",
        "text": "property BundleTerminal.use_reference_from_hierarchy\n\nbool: Flag indicating if the terminal can use references from the hierarchy.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.PowerModule.needs_sync",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.PowerModule.needs_sync.html#needs_sync",
        "title": "needs_sync",
        "section": "needs_sync",
        "text": "bool: Flag indicating if the power module needs to be synchronized.\nThis property is read-only.\nneeds_sync\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.PowerModule.needs_sync",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.PowerModule.needs_sync.html#ansys.edb.core.layout.voltage_regulator.PowerModule.needs_sync",
        "title": "needs_sync > needs_sync > needs_sync",
        "section": "needs_sync > needs_sync",
        "text": "property PowerModule.needs_sync\n\nbool: Flag indicating if the power module needs to be synchronized.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_from_offset",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_from_offset.html#create_from_offset",
        "title": "create_from_offset",
        "section": "create_from_offset",
        "text": "Create a 3D transformation with an offset.\nVector offset.\ncreate_from_offset"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_from_offset",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_from_offset.html#ansys.edb.core.utility.transform3d.Transform3D.create_from_offset",
        "title": "create_from_offset > create_from_offset > create_from_offset",
        "section": "create_from_offset > create_from_offset",
        "text": "classmethod Transform3D.create_from_offset(offset)\n\nCreate a 3D transformation with an offset.\n\nParameters\n\noffset\n\nPoint3DLike\n\nVector offset.\n\nReturns\n\n\n\n——-\n\n\n\nTransform3D\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.general",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.general.html#general",
        "title": "general",
        "section": "general",
        "text": "HFSSGeneralSettings: General settings for HFSS simulations.\ngeneral\nHFSSGeneralSettings"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.general",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.general.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.general",
        "title": "general > general > general",
        "section": "general > general",
        "text": "property HFSSSimulationSettings.general\n\nHFSSGeneralSettings: General settings for HFSS simulations.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.layer_snap_tol",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.layer_snap_tol.html#layer_snap_tol",
        "title": "layer_snap_tol",
        "section": "layer_snap_tol",
        "text": "str: Snapping tolerance for hierarchical layer alignment.\nUnitless values represent a fraction of the total stackup height.\nlayer_snap_tol\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.layer_snap_tol",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.layer_snap_tol.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.layer_snap_tol",
        "title": "layer_snap_tol > layer_snap_tol > layer_snap_tol",
        "section": "layer_snap_tol > layer_snap_tol",
        "text": "property HFSSAdvancedMeshingSettings.layer_snap_tol\n\nstr: Snapping tolerance for hierarchical layer alignment.\n\nUnitless values represent a fraction of the total stackup height.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceDataEntry.phase_limit",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceDataEntry.phase_limit.html#phase_limit",
        "title": "phase_limit",
        "section": "phase_limit",
        "text": "float: Phase limit.\nphase_limit\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceDataEntry.phase_limit",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceDataEntry.phase_limit.html#ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceDataEntry.phase_limit",
        "title": "phase_limit > phase_limit > phase_limit",
        "section": "phase_limit > phase_limit",
        "text": "property MatrixConvergenceDataEntry.phase_limit\n\nfloat: Phase limit.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance.LayoutInstance.id",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance.LayoutInstance.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance.LayoutInstance.id",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance.LayoutInstance.id.html#ansys.edb.core.layout_instance.layout_instance.LayoutInstance.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property LayoutInstance.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_reference_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_reference_terminal.html#is_reference_terminal",
        "title": "is_reference_terminal",
        "section": "is_reference_terminal",
        "text": "bool: Flag indicating if the terminal is a reference terminal.\nis_reference_terminal\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_reference_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_reference_terminal.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_reference_terminal",
        "title": "is_reference_terminal > is_reference_terminal > is_reference_terminal",
        "section": "is_reference_terminal > is_reference_terminal",
        "text": "property TerminalInstanceTerminal.is_reference_terminal\n\nbool: Flag indicating if the terminal is a reference terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.type",
        "href": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.type.html#type",
        "title": "type",
        "section": "type",
        "text": "DielectricMaterialModelType: Type of the dielectric material model.\ntype\nDielectricMaterialModelType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.type",
        "href": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.type.html#ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.type",
        "title": "type > type > type",
        "section": "type > type",
        "text": "property DjordjecvicSarkarModel.type\n\nDielectricMaterialModelType: Type of the dielectric material model.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.solder_ball_material",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.solder_ball_material.html#solder_ball_material",
        "title": "solder_ball_material",
        "section": "solder_ball_material",
        "text": "str: Name of the solder ball material.\nsolder_ball_material\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.solder_ball_material",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.solder_ball_material.html#ansys.edb.core.definition.padstack_def_data.PadstackDefData.solder_ball_material",
        "title": "solder_ball_material > solder_ball_material > solder_ball_material",
        "section": "solder_ball_material > solder_ball_material",
        "text": "property PadstackDefData.solder_ball_material\n\nstr: Name of the solder ball material.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.MeshOperation.refine_inside",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.MeshOperation.refine_inside.html#refine_inside",
        "title": "refine_inside",
        "section": "refine_inside",
        "text": "bool: Flag indicating if refining inside is enabled.\nrefine_inside\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.MeshOperation.refine_inside",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.MeshOperation.refine_inside.html#ansys.edb.core.simulation_setup.mesh_operation.MeshOperation.refine_inside",
        "title": "refine_inside > refine_inside > refine_inside",
        "section": "refine_inside > refine_inside",
        "text": "property MeshOperation.refine_inside\n\nbool: Flag indicating if refining inside is enabled.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_co_plane_coupling",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_co_plane_coupling.html#include_co_plane_coupling",
        "title": "include_co_plane_coupling",
        "section": "include_co_plane_coupling",
        "text": "bool: Flag indicating if the co-plane coupling is included.\ninclude_co_plane_coupling\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_co_plane_coupling",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_co_plane_coupling.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_co_plane_coupling",
        "title": "include_co_plane_coupling > include_co_plane_coupling > include_co_plane_coupling",
        "section": "include_co_plane_coupling > include_co_plane_coupling",
        "text": "property SIWaveAdvancedSettings.include_co_plane_coupling\n\nbool: Flag indicating if the co-plane coupling is included.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_auto_port",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_auto_port.html#is_auto_port",
        "title": "is_auto_port",
        "section": "is_auto_port",
        "text": "bool: Flag indicating if the terminal is an auto port.\nis_auto_port\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_auto_port",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_auto_port.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.is_auto_port",
        "title": "is_auto_port > is_auto_port > is_auto_port",
        "section": "is_auto_port > is_auto_port",
        "text": "property PinGroupTerminal.is_auto_port\n\nbool: Flag indicating if the terminal is an auto port.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.obj_type",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.obj_type.html#obj_type",
        "title": "obj_type",
        "section": "obj_type",
        "text": "LayoutObjType: Layout object type.\nThis property is read-only.\nobj_type\nLayoutObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.obj_type",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.obj_type.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.obj_type",
        "title": "obj_type > obj_type > obj_type",
        "section": "obj_type > obj_type",
        "text": "property CellInstance.obj_type\n\nLayoutObjType: Layout object type.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.reference_layer",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.reference_layer.html#reference_layer",
        "title": "reference_layer",
        "section": "reference_layer",
        "text": "Layer: Layer that the terminal references, if any, by either layer object or name.\nreference_layer\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.reference_layer",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.reference_layer.html#ansys.edb.core.terminal.terminals.Terminal.reference_layer",
        "title": "reference_layer > reference_layer > reference_layer",
        "section": "reference_layer > reference_layer",
        "text": "property Terminal.reference_layer\n\nLayer: Layer that the terminal references, if any, by either layer object or name.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.differential_pair",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.differential_pair.html#differential_pair",
        "title": "differential_pair",
        "section": "differential_pair",
        "text": "tuple(Net, Net): Nets (positive, negative) in the differential pair.\ndifferential_pair\ntuple\nNet\nNet"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.differential_pair",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.differential_pair.html#ansys.edb.core.net.differential_pair.DifferentialPair.differential_pair",
        "title": "differential_pair > differential_pair > differential_pair",
        "section": "differential_pair > differential_pair",
        "text": "property DifferentialPair.differential_pair\n\ntuple(Net, Net): Nets (positive, negative) in the differential pair.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_mcad.html#is_mcad",
        "title": "is_mcad",
        "section": "is_mcad",
        "text": "bool: Flag indicating if this is an MCAD model.\nThis property is read-only.\nis_mcad\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_mcad.html#ansys.edb.core.primitive.primitive.Path.is_mcad",
        "title": "is_mcad > is_mcad > is_mcad",
        "section": "is_mcad > is_mcad",
        "text": "property Path.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_negative",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_negative.html#is_negative",
        "title": "is_negative",
        "section": "is_negative",
        "text": "bool: Flag indicating if the primitive is negative.\nis_negative\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_negative",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_negative.html#ansys.edb.core.primitive.primitive.Path.is_negative",
        "title": "is_negative > is_negative > is_negative",
        "section": "is_negative > is_negative",
        "text": "property Path.is_negative\n\nbool: Flag indicating if the primitive is negative.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.closest_points",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.closest_points.html#closest_points",
        "title": "closest_points",
        "section": "closest_points",
        "text": "Compute points on this and another polygon that are closest to the other polygon.\nclosest_points\nPolygonData\npython:tuple\nPointData\nPointData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.closest_points",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.closest_points.html#ansys.edb.core.geometry.polygon_data.PolygonData.closest_points",
        "title": "closest_points > closest_points > closest_points",
        "section": "closest_points > closest_points",
        "text": "PolygonData.closest_points(polygon)\n\nCompute points on this and another polygon that are closest to the other polygon.\n\nParameters\n\npolygon\n\nPolygonData\n\n\n\nReturns\n\npython:tuple[PointData, PointData]\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.is_null",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.is_null",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.is_null.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property VoltageRegulator.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamInterpolation.POINT_IN",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamInterpolation.POINT_IN.html#point_in",
        "title": "POINT_IN",
        "section": "POINT_IN",
        "text": "POINT_IN"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamInterpolation.POINT_IN",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamInterpolation.POINT_IN.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamInterpolation.POINT_IN",
        "title": "POINT_IN > POINT_IN > POINT_IN",
        "section": "POINT_IN > POINT_IN",
        "text": "SParamInterpolation.POINT_IN = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.has_arcs",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.has_arcs.html#has_arcs",
        "title": "has_arcs",
        "section": "has_arcs",
        "text": "Determine whether the polygon contains any arcs.\nTrue when the polygon contains arcs, False otherwise.\nhas_arcs\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.has_arcs",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.has_arcs.html#ansys.edb.core.geometry.polygon_data.PolygonData.has_arcs",
        "title": "has_arcs > has_arcs > has_arcs",
        "section": "has_arcs > has_arcs",
        "text": "PolygonData.has_arcs()\n\nDetermine whether the polygon contains any arcs.\n\nReturns\n\nbool\n\nTrue when the polygon contains arcs, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.delete",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the package definition.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.delete",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.delete.html#ansys.edb.core.definition.package_def.PackageDef.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "PackageDef.delete()\n\nDelete the package definition.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.SPECIFIC_HEAT",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.SPECIFIC_HEAT.html#specific_heat",
        "title": "SPECIFIC_HEAT",
        "section": "SPECIFIC_HEAT",
        "text": "SPECIFIC_HEAT"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.SPECIFIC_HEAT",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.SPECIFIC_HEAT.html#ansys.edb.core.definition.material_def.MaterialProperty.SPECIFIC_HEAT",
        "title": "SPECIFIC_HEAT > SPECIFIC_HEAT > SPECIFIC_HEAT",
        "section": "SPECIFIC_HEAT > SPECIFIC_HEAT",
        "text": "MaterialProperty.SPECIFIC_HEAT = 38\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.max_num_arc_points",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.max_num_arc_points.html#max_num_arc_points",
        "title": "max_num_arc_points",
        "section": "max_num_arc_points",
        "text": "str: Maximum number of points used to approximate arcs.\nmax_num_arc_points\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.max_num_arc_points",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.max_num_arc_points.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.max_num_arc_points",
        "title": "max_num_arc_points > max_num_arc_points > max_num_arc_points",
        "section": "max_num_arc_points > max_num_arc_points",
        "text": "property HFSSAdvancedMeshingSettings.max_num_arc_points\n\nstr: Maximum number of points used to approximate arcs.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_mcad_stride.html#is_mcad_stride",
        "title": "is_mcad_stride",
        "section": "is_mcad_stride",
        "text": "bool: Flag indicating if this is a Stride MCAD model.\nThis property is read-only.\nis_mcad_stride\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_mcad_stride.html#ansys.edb.core.primitive.primitive.Text.is_mcad_stride",
        "title": "is_mcad_stride > is_mcad_stride > is_mcad_stride",
        "section": "is_mcad_stride > is_mcad_stride",
        "text": "property Text.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.create",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a via layer.\nName of the via layer.\nVia layer created.\ncreate\npython:str\npython:str\npython:str\npython:str\nViaLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.create",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.create.html#ansys.edb.core.layer.via_layer.ViaLayer.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "static ViaLayer.create(name, lr_layer, ur_layer, material)\n\nCreate a via layer.\n\nParameters\n\nname\n\npython:str\n\nName of the via layer.\n\nlr_layer\n\npython:str\n\n\n\nur_layer\n\npython:str\n\n\n\nmaterial\n\npython:str\n\n\n\nReturns\n\nViaLayer\n\nVia layer created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.create",
        "href": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a Debye dielectric material model.\ncreate\nDebyeModelService"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.create",
        "href": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.create.html#ansys.edb.core.definition.debye_model.DebyeModel.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod DebyeModel.create()\n\nCreate a Debye dielectric material model.\n\nReturns\n\nDebyeModelService\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDs given a product ID for the layout object.\nID representing a product that supports the EDB.\nAll user-defined attribute IDs for properties stored in the object\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.get_product_property_ids.html#ansys.edb.core.primitive.primitive.Text.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "Text.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nReturns\n\npython:list[python:int]\n\nAll user-defined attribute IDs for properties stored in the object\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.params",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.params.html#params",
        "title": "params",
        "section": "params",
        "text": "list of PadstackInstance and Layer: Padstack instance and layer.\nparams\nlist\nPadstackInstance\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.params",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.params.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.params",
        "title": "params > params > params",
        "section": "params > params",
        "text": "property PadstackInstanceTerminal.params\n\nlist of PadstackInstance and Layer: Padstack instance and layer.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.save_rfm",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.save_rfm.html#save_rfm",
        "title": "save_rfm",
        "section": "save_rfm",
        "text": "bool: Flag indicating if an RFM file is exported.\nsave_rfm\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.save_rfm",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.save_rfm.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.save_rfm",
        "title": "save_rfm > save_rfm > save_rfm",
        "section": "save_rfm > save_rfm",
        "text": "property RaptorXGeneralSettings.save_rfm\n\nbool: Flag indicating if an RFM file is exported.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.delete",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the RTree from a given RTree object.\nR-tree data object with index in this form: (polygon, id pair).\ndelete\nRTreeObj\n(polygon, id pair)"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.delete",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.delete.html#ansys.edb.core.geometry.r_tree.RTree.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "RTree.delete(rtree_obj)\n\nDelete the RTree from a given RTree object.\n\nParameters\n\nrtree_obj\n\nRTreeObj\n\nR-tree data object with index in this form: (polygon, id pair).\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.add_void",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.add_void.html#add_void",
        "title": "add_void",
        "section": "add_void",
        "text": "Add a void to the primitive.\nVoid to add.\nadd_void\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.add_void",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.add_void.html#ansys.edb.core.primitive.primitive.Circle.add_void",
        "title": "add_void > add_void > add_void",
        "section": "add_void > add_void",
        "text": "Circle.add_void(hole)\n\nAdd a void to the primitive.\n\nParameters\n\nhole\n\nPrimitive\n\nVoid to add.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.delete",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the bondwire definition.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.delete",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.delete.html#ansys.edb.core.definition.bondwire_def.ApdBondwireDef.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "ApdBondwireDef.delete()\n\nDelete the bondwire definition.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.uses_solderball",
        "href": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.uses_solderball.html#uses_solderball",
        "title": "uses_solderball",
        "section": "uses_solderball",
        "text": "bool: Flag indicating if the solder ball is used.\nThis property is read-only.\nuses_solderball\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.uses_solderball",
        "href": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.uses_solderball.html#ansys.edb.core.definition.solder_ball_property.SolderBallProperty.uses_solderball",
        "title": "uses_solderball > uses_solderball > uses_solderball",
        "section": "uses_solderball > uses_solderball",
        "text": "property SolderBallProperty.uses_solderball\n\nbool: Flag indicating if the solder ball is used.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.get_polygon_data",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.get_polygon_data.html#get_polygon_data",
        "title": "get_polygon_data",
        "section": "get_polygon_data",
        "text": "Get the underlying polygon data of the geometry.\nget_polygon_data\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.get_polygon_data",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.get_polygon_data.html#ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.get_polygon_data",
        "title": "get_polygon_data > get_polygon_data > get_polygon_data",
        "section": "get_polygon_data > get_polygon_data",
        "text": "LayoutObjInstance2DGeometry.get_polygon_data(apply_negatives=False)\n\nGet the underlying polygon data of the geometry.\n\nReturns\n\nPolygonData\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.set_parameters",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.set_parameters.html#set_parameters",
        "title": "set_parameters",
        "section": "set_parameters",
        "text": "Set parameters of the circle.\nX value of the center point.\nY value of the center point.\nRadius value of the circle.\nset_parameters\nValue\nValue\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.set_parameters",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.set_parameters.html#ansys.edb.core.primitive.primitive.Circle.set_parameters",
        "title": "set_parameters > set_parameters > set_parameters",
        "section": "set_parameters > set_parameters",
        "text": "Circle.set_parameters(center_x, center_y, radius)\n\nSet parameters of the circle.\n\nParameters\n\ncenter_x\n\nValue\n\nX value of the center point.\n\ncenter_y\n\nValue\n\nY value of the center point.\n\nradius\n\nValue\n\nRadius value of the circle.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.product_solver_option",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.product_solver_option.html#product_solver_option",
        "title": "product_solver_option",
        "section": "product_solver_option",
        "text": "Get the name of the product solver option.\nID of the product.\nName of the solver.\nName of the product solver option.\nproduct_solver_option\nProductIdType\nstr\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.product_solver_option",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.product_solver_option.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.product_solver_option",
        "title": "product_solver_option > product_solver_option > product_solver_option",
        "section": "product_solver_option > product_solver_option",
        "text": "PadstackInstanceTerminal.product_solver_option(product_id, solver_name)\n\nGet the name of the product solver option.\n\nParameters\n\nproduct_id\n\nProductIdType\n\nID of the product.\n\nsolver_name\n\nstr\n\nName of the solver.\n\nReturns\n\nstr\n\nName of the product solver option.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.model_type",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.model_type.html#model_type",
        "title": "model_type",
        "section": "model_type",
        "text": "ModelType: model type.\nmodel_type\nModelType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.model_type",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.model_type.html#ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.model_type",
        "title": "model_type > model_type > model_type",
        "section": "model_type > model_type",
        "text": "property AdvancedSettings.model_type\n\nModelType: model type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.create_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.create_stride.html#create_stride",
        "title": "create_stride",
        "section": "create_stride",
        "text": "Create a Stride model from an MCAD file.\nStride model created.\ncreate_stride\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.create_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.create_stride.html#ansys.edb.core.primitive.primitive.PadstackInstance.create_stride",
        "title": "create_stride > create_stride > create_stride",
        "section": "create_stride > create_stride",
        "text": "PadstackInstance.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nReturns\n\nMcadModel\n\nStride model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.layout",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.layout.html#layout",
        "title": "layout",
        "section": "layout",
        "text": "Layout: Layout owning the object.\nThis property is read-only.\nlayout\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.layout",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.layout.html#ansys.edb.core.primitive.primitive.Primitive.layout",
        "title": "layout > layout > layout",
        "section": "layout > layout",
        "text": "property Primitive.layout\n\nLayout: Layout owning the object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry.id",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry.id",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry.id.html#ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property LayoutObjInstance3DGeometry.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_parameterized",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_parameterized.html#is_parameterized",
        "title": "is_parameterized",
        "section": "is_parameterized",
        "text": "bool: Whether the primitive is parametrized.\nThis property is read-only.\nis_parameterized\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_parameterized",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_parameterized.html#ansys.edb.core.primitive.primitive.Rectangle.is_parameterized",
        "title": "is_parameterized > is_parameterized > is_parameterized",
        "section": "is_parameterized > is_parameterized",
        "text": "property Rectangle.is_parameterized\n\nbool: Whether the primitive is parametrized.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty",
        "href": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.html#rlccomponentproperty",
        "title": "RLCComponentProperty",
        "section": "RLCComponentProperty",
        "text": "Represents an RLC component property.\nRLCComponentProperty.clone()\nClone the component property.\nRLCComponentProperty.create()\nCreate an RLC component property.\nRLCComponentProperty.enabled\nbool: Flag indicating if the RLC component property is enabled.\nRLCComponentProperty.id\nint: Unique ID of the EDB object.\nRLCComponentProperty.is_null\nbool: Flag indicating if the object exists in the database.\nRLCComponentProperty.model\nModel: Model object.\nRLCComponentProperty.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nRLCComponentProperty.package_def\nPackageDef: Package definition object.\nRLCComponentProperty.package_mounting_offset\nValue: Mounting offset of the package definition object.\nRLCComponentProperty\nRLCComponentProperty.clone\nRLCComponentProperty.create\nRLCComponentProperty.enabled\nbool\nRLCComponentProperty.id\nint\nRLCComponentProperty.is_null\nbool\nRLCComponentProperty.model\nModel\nRLCComponentProperty.msg\nEDBObjMessage\nRLCComponentProperty.package_def\nPackageDef\nRLCComponentProperty.package_mounting_offset\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty",
        "href": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.html#ansys.edb.core.definition.rlc_component_property.RLCComponentProperty",
        "title": "RLCComponentProperty > RLCComponentProperty > RLCComponentProperty",
        "section": "RLCComponentProperty > RLCComponentProperty",
        "text": "class ansys.edb.core.definition.rlc_component_property.RLCComponentProperty(msg)\n\nRepresents an RLC component property.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nRLCComponentProperty.clone()\n\nClone the component property.\n\nRLCComponentProperty.create()\n\nCreate an RLC component property.\n\n\n\nAttributes\n\n\n\n\n\n\n\nRLCComponentProperty.enabled\n\nbool: Flag indicating if the RLC component property is enabled.\n\nRLCComponentProperty.id\n\nint: Unique ID of the EDB object.\n\nRLCComponentProperty.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nRLCComponentProperty.model\n\nModel: Model object.\n\nRLCComponentProperty.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nRLCComponentProperty.package_def\n\nPackageDef: Package definition object.\n\nRLCComponentProperty.package_mounting_offset\n\nValue: Mounting offset of the package definition object.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.create_hfss.html#create_hfss",
        "title": "create_hfss",
        "section": "create_hfss",
        "text": "Create an HFSS model from an MCAD file.\nHFSS model created.\ncreate_hfss\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.create_hfss.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.create_hfss",
        "title": "create_hfss > create_hfss > create_hfss",
        "section": "create_hfss > create_hfss",
        "text": "CellInstance.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nReturns\n\nMcadModel\n\nHFSS model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.TEXT",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.TEXT.html#text",
        "title": "TEXT",
        "section": "TEXT",
        "text": "TEXT"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.TEXT",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.TEXT.html#ansys.edb.core.primitive.primitive.PrimitiveType.TEXT",
        "title": "TEXT > TEXT > TEXT",
        "section": "TEXT > TEXT",
        "text": "PrimitiveType.TEXT = 6\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.set_all_off_diag_constant",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.set_all_off_diag_constant.html#set_all_off_diag_constant",
        "title": "set_all_off_diag_constant",
        "section": "set_all_off_diag_constant",
        "text": "Set all diagonal entries in the matrix to have the given magnitude and phase values.\nMagnitude limit.\nPhase limit.\nList of port names.\nWhether to clear entries.\nset_all_off_diag_constant\npython:float\npython:float\npython:list\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.set_all_off_diag_constant",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.set_all_off_diag_constant.html#ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.set_all_off_diag_constant",
        "title": "set_all_off_diag_constant > set_all_off_diag_constant > set_all_off_diag_constant",
        "section": "set_all_off_diag_constant > set_all_off_diag_constant",
        "text": "MatrixConvergenceData.set_all_off_diag_constant(mag_limit, phase_limit, port_names, clear_entries)\n\nSet all diagonal entries in the matrix to have the given magnitude and phase values.\n\nParameters\n\nmag_limit\n\npython:float\n\nMagnitude limit.\n\nphase_limit\n\npython:float\n\nPhase limit.\n\nport_names\n\npython:list[str]\n\nList of port names.\n\nclear_entries\n\nbool\n\nWhether to clear entries.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.delete",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the layout object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.delete",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.delete.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "PinGroupTerminal.delete()\n\nDelete the layout object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDs given a product ID for the layout object.\nID representing a product that supports the EDB.\nAll user-defined attribute IDs for properties stored in the object\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.get_product_property_ids.html#ansys.edb.core.primitive.primitive.Polygon.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "Polygon.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nReturns\n\npython:list[python:int]\n\nAll user-defined attribute IDs for properties stored in the object\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.get_is_3d_placement",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.get_is_3d_placement.html#get_is_3d_placement",
        "title": "get_is_3d_placement",
        "section": "get_is_3d_placement",
        "text": "Determine if the context has 3D placement enabled.\nWhether 3D placement is enabled only in the local context.\nIf False, a check is run to see if 3D placement is enabled anywhere higher in the\nhierarchy.\nTrue if 3D placement is enabled in the local context.\nget_is_3d_placement\ncontext\nFalse\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.get_is_3d_placement",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.get_is_3d_placement.html#ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.get_is_3d_placement",
        "title": "get_is_3d_placement > get_is_3d_placement > get_is_3d_placement",
        "section": "get_is_3d_placement > get_is_3d_placement",
        "text": "LayoutInstanceContext.get_is_3d_placement(local)\n\nDetermine if the context has 3D placement enabled.\n\nParameters\n\nlocal\n\nbool\n\nWhether 3D placement is enabled only in the local context.\nIf False, a check is run to see if 3D placement is enabled anywhere higher in the\nhierarchy.\n\nReturns\n\nbool\n\nTrue if 3D placement is enabled in the local context.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.id",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.id",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.id.html#ansys.edb.core.layer.stackup_layer.StackupLayer.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property StackupLayer.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.layer_map",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.layer_map.html#layer_map",
        "title": "layer_map",
        "section": "layer_map",
        "text": "LayerMap: Layer map of the padstack instance.\nlayer_map\nLayerMap"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.layer_map",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.layer_map.html#ansys.edb.core.primitive.primitive.PadstackInstance.layer_map",
        "title": "layer_map > layer_map > layer_map",
        "section": "layer_map > layer_map",
        "text": "property PadstackInstance.layer_map\n\nLayerMap: Layer map of the padstack instance.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_accelerate_via_extraction",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_accelerate_via_extraction.html#use_accelerate_via_extraction",
        "title": "use_accelerate_via_extraction",
        "section": "use_accelerate_via_extraction",
        "text": "bool: Flag indicating if neighboring vias are simplified/merged.\nuse_accelerate_via_extraction\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_accelerate_via_extraction",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_accelerate_via_extraction.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_accelerate_via_extraction",
        "title": "use_accelerate_via_extraction > use_accelerate_via_extraction > use_accelerate_via_extraction",
        "section": "use_accelerate_via_extraction > use_accelerate_via_extraction",
        "text": "property RaptorXAdvancedSettings.use_accelerate_via_extraction\n\nbool: Flag indicating if neighboring vias are simplified/merged.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.layout_obj_type.html#layout_obj_type",
        "title": "layout_obj_type",
        "section": "layout_obj_type",
        "text": "layout_obj_type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.layout_obj_type.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.layout_obj_type",
        "title": "layout_obj_type > layout_obj_type > layout_obj_type",
        "section": "layout_obj_type > layout_obj_type",
        "text": "VoltageRegulator.layout_obj_type = 13\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.impedance",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.impedance.html#impedance",
        "title": "impedance",
        "section": "impedance",
        "text": "Value: Impedance of the terminal.\nimpedance\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.impedance",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.impedance.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.impedance",
        "title": "impedance > impedance > impedance",
        "section": "impedance > impedance",
        "text": "property TerminalInstanceTerminal.impedance\n\nValue: Impedance of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.find_by_name",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.find_by_name.html#find_by_name",
        "title": "find_by_name",
        "section": "find_by_name",
        "text": "Find a layer in the layer collection.\nLayer name.\nfind_by_name\npython:str\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.find_by_name",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.find_by_name.html#ansys.edb.core.layer.layer_collection.LayerCollection.find_by_name",
        "title": "find_by_name > find_by_name > find_by_name",
        "section": "find_by_name > find_by_name",
        "text": "LayerCollection.find_by_name(layer_name)\n\nFind a layer in the layer collection.\n\nParameters\n\nlayer_name\n\npython:str\n\nLayer name.\n\nReturns\n\nLayer\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.delete_variable",
        "href": "api/_autosummary/ansys.edb.core.database.Database.delete_variable.html#delete_variable",
        "title": "delete_variable",
        "section": "delete_variable",
        "text": "Delete a variable.\nVariable name.\ndelete_variable\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.delete_variable",
        "href": "api/_autosummary/ansys.edb.core.database.Database.delete_variable.html#ansys.edb.core.database.Database.delete_variable",
        "title": "delete_variable > delete_variable > delete_variable",
        "section": "delete_variable > delete_variable",
        "text": "Database.delete_variable(name)\n\nDelete a variable.\n\nParameters\n\nname\n\npython:str\n\nVariable name.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.BasisFunctionOrder.MIXED_ORDER",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.BasisFunctionOrder.MIXED_ORDER.html#mixed_order",
        "title": "MIXED_ORDER",
        "section": "MIXED_ORDER",
        "text": "MIXED_ORDER"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.BasisFunctionOrder.MIXED_ORDER",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.BasisFunctionOrder.MIXED_ORDER.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.BasisFunctionOrder.MIXED_ORDER",
        "title": "MIXED_ORDER > MIXED_ORDER > MIXED_ORDER",
        "section": "MIXED_ORDER > MIXED_ORDER",
        "text": "BasisFunctionOrder.MIXED_ORDER = 3\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ModelType",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ModelType.html#modeltype",
        "title": "ModelType",
        "section": "ModelType",
        "text": "Enum representing defeature model types.\nModelType.GENERAL_MODEL\n\nModelType.IC_MODEL\n\nModelType\nModelType.GENERAL_MODEL\nModelType.IC_MODEL"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ModelType",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ModelType.html#ansys.edb.core.simulation_setup.simulation_settings.ModelType",
        "title": "ModelType > ModelType > ModelType",
        "section": "ModelType > ModelType",
        "text": "class ansys.edb.core.simulation_setup.simulation_settings.ModelType(value)\n\nEnum representing defeature model types.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nModelType.GENERAL_MODEL\n\n\n\nModelType.IC_MODEL\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty.create",
        "href": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a die property.\nDie property created.\ncreate\nDieProperty"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty.create",
        "href": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty.create.html#ansys.edb.core.definition.die_property.DieProperty.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod DieProperty.create()\n\nCreate a die property.\n\nReturns\n\nDieProperty\n\nDie property created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BackDrillType.LAYER_DRILL",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BackDrillType.LAYER_DRILL.html#layer_drill",
        "title": "LAYER_DRILL",
        "section": "LAYER_DRILL",
        "text": "LAYER_DRILL"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BackDrillType.LAYER_DRILL",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BackDrillType.LAYER_DRILL.html#ansys.edb.core.primitive.primitive.BackDrillType.LAYER_DRILL",
        "title": "LAYER_DRILL > LAYER_DRILL > LAYER_DRILL",
        "section": "LAYER_DRILL > LAYER_DRILL",
        "text": "BackDrillType.LAYER_DRILL = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.primitive_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.primitive_type.html#primitive_type",
        "title": "primitive_type",
        "section": "primitive_type",
        "text": "PrimitiveType: Primitive type of the primitive.\nThis property is read-only.\nprimitive_type\nPrimitiveType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.primitive_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.primitive_type.html#ansys.edb.core.primitive.primitive.Polygon.primitive_type",
        "title": "primitive_type > primitive_type > primitive_type",
        "section": "primitive_type > primitive_type",
        "text": "property Polygon.primitive_type\n\nPrimitiveType: Primitive type of the primitive.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_mcad.html#is_mcad",
        "title": "is_mcad",
        "section": "is_mcad",
        "text": "bool: Flag indicating if this is an MCAD model.\nThis property is read-only.\nis_mcad\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_mcad.html#ansys.edb.core.terminal.terminals.Terminal.is_mcad",
        "title": "is_mcad > is_mcad > is_mcad",
        "section": "is_mcad > is_mcad",
        "text": "property Terminal.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.obj_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.obj_type.html#obj_type",
        "title": "obj_type",
        "section": "obj_type",
        "text": "LayoutObjType: Layout object type.\nThis property is read-only.\nobj_type\nLayoutObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.obj_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.obj_type.html#ansys.edb.core.terminal.terminals.TerminalInstance.obj_type",
        "title": "obj_type > obj_type > obj_type",
        "section": "obj_type > obj_type",
        "text": "property TerminalInstance.obj_type\n\nLayoutObjType: Layout object type.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.create",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create an RTree.\nTolerance of the R-tree in meters.\nRTree created.\ncreate\npython:float\nRTree"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.create",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.create.html#ansys.edb.core.geometry.r_tree.RTree.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod RTree.create(tolerance=1e-09)\n\nCreate an RTree.\n\nParameters\n\ntolerance\n\npython:float, default: 1e-9\n\nTolerance of the R-tree in meters.\n\nReturns\n\nRTree\n\nRTree created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.negative",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.negative.html#negative",
        "title": "negative",
        "section": "negative",
        "text": "bool: Flag indicating if the layer is a negative layer.\nnegative\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.negative",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.negative.html#ansys.edb.core.layer.stackup_layer.StackupLayer.negative",
        "title": "negative > negative > negative",
        "section": "negative > negative",
        "text": "property StackupLayer.negative\n\nbool: Flag indicating if the layer is a negative layer.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.is_null",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.is_null",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.is_null.html#ansys.edb.core.hierarchy.group.Group.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property Group.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.transform",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.transform.html#transform",
        "title": "transform",
        "section": "transform",
        "text": "Transform:         Transformation information of the hierarchy object.\ntransform\nTransform"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.transform",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.transform.html#ansys.edb.core.hierarchy.group.Group.transform",
        "title": "transform > transform > transform",
        "section": "transform > transform",
        "text": "property Group.transform\n\nTransform:         Transformation information of the hierarchy object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.zone",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.zone.html#zone",
        "title": "zone",
        "section": "zone",
        "text": "int: Zone index associated with the owning layer collection.\nIf the owner is invalid, the index is 0. If the owner is multizone,\nthe index is -1.\nThis property is read-only.\nzone\nint\n0\n-1"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.zone",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.zone.html#ansys.edb.core.layer.via_layer.ViaLayer.zone",
        "title": "zone > zone > zone",
        "section": "zone > zone",
        "text": "property ViaLayer.zone\n\nint: Zone index associated with the owning layer collection.\n\nIf the owner is invalid, the index is 0. If the owner is multizone,\nthe index is -1.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.sparameter_model.SParameterModel.is_null",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.sparameter_model.SParameterModel.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.sparameter_model.SParameterModel.is_null",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.sparameter_model.SParameterModel.is_null.html#ansys.edb.core.hierarchy.sparameter_model.SParameterModel.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property SParameterModel.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.msg",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.msg",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.msg.html#ansys.edb.core.layer.stackup_layer.StackupLayer.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property StackupLayer.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.msg",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.msg",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.msg.html#ansys.edb.core.primitive.primitive.Circle.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property Circle.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents this object’s ID.\nThis property is read-only.\nmsg\nEDBObjMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.msg.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property HFSSGeneralSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object’s ID.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.database.Database.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDs for a given product property ID.\nProduct ID.\nAttribute IDs associated with the product property.\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.database.Database.get_product_property_ids.html#ansys.edb.core.database.Database.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "Database.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs for a given product property ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nProduct ID.\n\nReturns\n\npython:list[python:int]\n\nAttribute IDs associated with the product property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamExtrapolation.SAME_EX",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamExtrapolation.SAME_EX.html#same_ex",
        "title": "SAME_EX",
        "section": "SAME_EX",
        "text": "SAME_EX"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamExtrapolation.SAME_EX",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamExtrapolation.SAME_EX.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamExtrapolation.SAME_EX",
        "title": "SAME_EX > SAME_EX > SAME_EX",
        "section": "SAME_EX > SAME_EX",
        "text": "SParamExtrapolation.SAME_EX = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.is_mcad_3d_comp.html#is_mcad_3d_comp",
        "title": "is_mcad_3d_comp",
        "section": "is_mcad_3d_comp",
        "text": "bool: Flag indicating if this is a 3D composite MCAD model.\nThis property is read-only.\nis_mcad_3d_comp\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.is_mcad_3d_comp.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.is_mcad_3d_comp",
        "title": "is_mcad_3d_comp > is_mcad_3d_comp > is_mcad_3d_comp",
        "section": "is_mcad_3d_comp > is_mcad_3d_comp",
        "text": "property ComponentGroup.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_trace_plane_coupling",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_trace_plane_coupling.html#include_trace_plane_coupling",
        "title": "include_trace_plane_coupling",
        "section": "include_trace_plane_coupling",
        "text": "bool: Flag indicating if the trace-plane coupling is included.\ninclude_trace_plane_coupling\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_trace_plane_coupling",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_trace_plane_coupling.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_trace_plane_coupling",
        "title": "include_trace_plane_coupling > include_trace_plane_coupling > include_trace_plane_coupling",
        "section": "include_trace_plane_coupling > include_trace_plane_coupling",
        "text": "property SIWaveAdvancedSettings.include_trace_plane_coupling\n\nbool: Flag indicating if the trace-plane coupling is included.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.nearest_neighbor",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.nearest_neighbor.html#nearest_neighbor",
        "title": "nearest_neighbor",
        "section": "nearest_neighbor",
        "text": "Find the nearest neighbor of a given RTree object.\nR-tree object with index in this form: (polygon, id pair).\nand the nearest neighbor.\nnearest_neighbor\nRTreeObj\n(polygon, id pair)\ntuple\nof\nRTreeObj\npython:tuple\nPointData\nPointData\nRTreeObj\nin\nthe\nRTree\nto\nthe\nprovided\nobject\nor\nnull\nif\nnothing\nis\ntuple[PointData, PointData]\nLine\nsegment\nspanning\nthe\nclosest\npoints\nbetween\nthe\nobject"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.nearest_neighbor",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.nearest_neighbor.html#ansys.edb.core.geometry.r_tree.RTree.nearest_neighbor",
        "title": "nearest_neighbor > nearest_neighbor > nearest_neighbor",
        "section": "nearest_neighbor > nearest_neighbor",
        "text": "RTree.nearest_neighbor(rtree_obj)\n\nFind the nearest neighbor of a given RTree object.\n\nParameters\n\nrtree_obj\n\nRTreeObj\n\nR-tree object with index in this form: (polygon, id pair).\n\nReturns\n\ntuple of RTreeObj, python:tuple[PointData, PointData]\n\n\n\nRTreeObj: Nearest-neighbor in the RTree to the provided object, or null if nothing is found.\n\n\n\ntuple[PointData, PointData]: Line segment spanning the closest points between the object\n\nand the nearest neighbor.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.fixed_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.fixed_zone_primitive.html#fixed_zone_primitive",
        "title": "fixed_zone_primitive",
        "section": "fixed_zone_primitive",
        "text": "Primitive: Fixed zones primitive.\nfixed_zone_primitive\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.fixed_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.fixed_zone_primitive.html#ansys.edb.core.layout.layout.Layout.fixed_zone_primitive",
        "title": "fixed_zone_primitive > fixed_zone_primitive > fixed_zone_primitive",
        "section": "fixed_zone_primitive > fixed_zone_primitive",
        "text": "property Layout.fixed_zone_primitive\n\nPrimitive: Fixed zones primitive.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.SourceTermToGroundType",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.SourceTermToGroundType.html#sourcetermtogroundtype",
        "title": "SourceTermToGroundType",
        "section": "SourceTermToGroundType",
        "text": "Provides an enum representing source terminal-to-ground types.\nSourceTermToGroundType.NO_GROUND\n\nSourceTermToGroundType.NEGATIVE\n\nSourceTermToGroundType.POSITIVE\n\nSourceTermToGroundType\nSourceTermToGroundType.NO_GROUND\nSourceTermToGroundType.NEGATIVE\nSourceTermToGroundType.POSITIVE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.SourceTermToGroundType",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.SourceTermToGroundType.html#ansys.edb.core.terminal.terminals.SourceTermToGroundType",
        "title": "SourceTermToGroundType > SourceTermToGroundType > SourceTermToGroundType",
        "section": "SourceTermToGroundType > SourceTermToGroundType",
        "text": "class ansys.edb.core.terminal.terminals.SourceTermToGroundType(value)\n\nProvides an enum representing source terminal-to-ground types.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nSourceTermToGroundType.NO_GROUND\n\n\n\nSourceTermToGroundType.NEGATIVE\n\n\n\nSourceTermToGroundType.POSITIVE\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.AdaptiveFrequency.adaptive_frequency",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.AdaptiveFrequency.adaptive_frequency.html#adaptive_frequency",
        "title": "adaptive_frequency",
        "section": "adaptive_frequency",
        "text": "str: Adaptive frequency.\nadaptive_frequency\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.AdaptiveFrequency.adaptive_frequency",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.AdaptiveFrequency.adaptive_frequency.html#ansys.edb.core.simulation_setup.adaptive_solutions.AdaptiveFrequency.adaptive_frequency",
        "title": "adaptive_frequency > adaptive_frequency > adaptive_frequency",
        "section": "adaptive_frequency > adaptive_frequency",
        "text": "property AdaptiveFrequency.adaptive_frequency\n\nstr: Adaptive frequency.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.msg",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.msg",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.msg.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property PinGroupTerminal.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.location",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.location.html#location",
        "title": "location",
        "section": "location",
        "text": "tuple (Value,         Value):         Location [x, y] of the hierarchy object on the placement_layer object.\nlocation\ntuple\nValue\nValue\nplacement_layer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.location",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.location.html#ansys.edb.core.hierarchy.inst_array.InstArray.location",
        "title": "location > location > location",
        "section": "location > location",
        "text": "property InstArray.location\n\ntuple (Value,         Value):         Location [x, y] of the hierarchy object on the placement_layer object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.layout_component.LayoutComponent.id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.layout_component.LayoutComponent.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.layout_component.LayoutComponent.id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.layout_component.LayoutComponent.id.html#ansys.edb.core.hierarchy.layout_component.LayoutComponent.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property LayoutComponent.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/simulation_setup",
        "href": "api/simulation_setup.html#simulation-setup",
        "title": "Simulation setup",
        "section": "Simulation setup",
        "text": "Simulation setup"
    },
    {
        "objectID": "api/simulation_setup",
        "href": "api/simulation_setup.html#classes",
        "title": "Simulation setup > Classes",
        "section": "Classes",
        "text": "hfss_simulation_settings.HFSSSimulationSettings(...)\nRepresents HFSS simulation settings.\nhfss_simulation_setup.HfssSimulationSetup(msg)\nRepresents HFSS simulation setup data.\nhfss_simulation_settings.HFSSGeneralSettings(...)\nRepresents general settings for HFSS simulations.\nhfss_simulation_settings.HFSSSettingsOptions(...)\nRepresents options for HFSS simulation settings.\nhfss_simulation_settings.HFSSSolverSettings(...)\nRepresentis solver settings for HFSS simulations.\nhfss_simulation_settings.HFSSAdvancedSettings(...)\nRepresents advanced settings for HFSS simulations.\nhfss_simulation_settings.HFSSAdvancedMeshingSettings(...)\nRepresents advanced meshing settings for HFSS simulations.\nhfss_simulation_settings.HFSSDCRSettings(...)\nRepresents DCR settings for HFSS simulations.\nadaptive_solutions.AdaptiveFrequency(...[, ...])\nRepresents an adaptive frequency.\nadaptive_solutions.BroadbandAdaptiveSolution([...])\nRepresents a broadband adaptive solution.\nadaptive_solutions.MatrixConvergenceData([...])\nRepresents matrix convergence data for an adaptive frequency solution.\nadaptive_solutions.MatrixConvergenceDataEntry(...)\nClass representing a matrix convergence data entry.\nadaptive_solutions.MultiFrequencyAdaptiveSolution([...])\nRepresents a multi-frequency adaptive solution.\nadaptive_solutions.SingleFrequencyAdaptiveSolution([...])\nRepresents a single frequency adaptive solution.\nmesh_operation.LengthMeshOperation([name, ...])\nRepresents a length mesh operation.\nmesh_operation.MeshOperation([name, ...])\nRepresents mesh operations.\nmesh_operation.SkinDepthMeshOperation([...])\nRepresents a skin depth mesh operation.\nsimulation_settings.AdvancedMeshingSettings(...)\nClass representing base advanced meshing simulation settings.\nsimulation_settings.AdvancedSettings(sim_setup)\nClass representing base advanced simulation settings.\nsimulation_settings.SettingsOptions(sim_setup)\nClass representing options for base simulation settings.\nsimulation_settings.SimulationSettings(sim_setup)\nClass representing base simulation settings.\nsimulation_settings.SolverSettings(sim_setup)\nClass representing base solver simulation settings.\nsimulation_setup.SimulationSetup(msg)\nClass representing base simulation setup data.\nsimulation_setup.SweepData(name, frequency_data)\nClass representing a sweep data setting.\nsimulation_setup.FreqSweepType(value)\nEnum representing frequency sweep types.\nsimulation_setup.HFSSRegionComputeResource(...)\nClass representing HFSS region computation resources.\nsimulation_setup.InterpolatingSweepData()\nClass representing interpolating frequency sweep data.\nsimulation_setup.FrequencyData(distribution, ...)\nClass representing a frequency setting.\nraptor_x_simulation_settings.RaptorXSimulationSettings(...)\nRepresents SIWave simulation settings.\nraptor_x_simulation_settings.RaptorXGeneralSettings(...)\nRepresents general settings for RaptorX simulations.\nraptor_x_simulation_settings.RaptorXAdvancedSettings(...)\nRepresents advanced settings for RaptorX simulations.\nraptor_x_simulation_setup.RaptorXSimulationSetup(msg)\nRepresents RaptorX simulation setup data.\nsiwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings(...)\nRepresents SIWave DCIR simulation settings.\nsiwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup(msg)\nRepresents SIWave DCIR simulation setup data.\nsiwave_simulation_settings.SIWaveSimulationSettings(...)\nRepresents SIWave simulation settings.\nsiwave_simulation_settings.SIWaveGeneralSettings(...)\nRepresents general settings for SIWave simulations.\nsiwave_simulation_settings.SIWaveAdvancedSettings(...)\nRepresents advanced settings for SIWave simulations.\nsiwave_simulation_settings.SIWaveDCSettings(...)\nRepresents DC settings for SIWave simulations.\nsiwave_simulation_settings.SIWaveDCAdvancedSettings(...)\nRepresents advanced DC settings for SIWave simulations.\nsiwave_simulation_settings.SIWaveSParameterSettings(...)\nRepresents s parameter settings for SIWave simulations.\nsiwave_simulation_setup.SIWaveSimulationSetup(msg)\nRepresents SIWave simulation setup data.\nClasses\nhfss_simulation_settings.HFSSSimulationSettings\nhfss_simulation_setup.HfssSimulationSetup\nhfss_simulation_settings.HFSSGeneralSettings\nhfss_simulation_settings.HFSSSettingsOptions\nhfss_simulation_settings.HFSSSolverSettings\nhfss_simulation_settings.HFSSAdvancedSettings\nhfss_simulation_settings.HFSSAdvancedMeshingSettings\nhfss_simulation_settings.HFSSDCRSettings\nadaptive_solutions.AdaptiveFrequency\nadaptive_solutions.BroadbandAdaptiveSolution\nadaptive_solutions.MatrixConvergenceData\nadaptive_solutions.MatrixConvergenceDataEntry\nadaptive_solutions.MultiFrequencyAdaptiveSolution\nadaptive_solutions.SingleFrequencyAdaptiveSolution\nmesh_operation.LengthMeshOperation\nmesh_operation.MeshOperation\nmesh_operation.SkinDepthMeshOperation\nsimulation_settings.AdvancedMeshingSettings\nsimulation_settings.AdvancedSettings\nsimulation_settings.SettingsOptions\nsimulation_settings.SimulationSettings\nsimulation_settings.SolverSettings\nsimulation_setup.SimulationSetup\nsimulation_setup.SweepData\nsimulation_setup.FreqSweepType\nsimulation_setup.HFSSRegionComputeResource\nsimulation_setup.InterpolatingSweepData\nsimulation_setup.FrequencyData\nraptor_x_simulation_settings.RaptorXSimulationSettings\nraptor_x_simulation_settings.RaptorXGeneralSettings\nraptor_x_simulation_settings.RaptorXAdvancedSettings\nraptor_x_simulation_setup.RaptorXSimulationSetup\nsiwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings\nsiwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup\nsiwave_simulation_settings.SIWaveSimulationSettings\nsiwave_simulation_settings.SIWaveGeneralSettings\nsiwave_simulation_settings.SIWaveAdvancedSettings\nsiwave_simulation_settings.SIWaveDCSettings\nsiwave_simulation_settings.SIWaveDCAdvancedSettings\nsiwave_simulation_settings.SIWaveSParameterSettings\nsiwave_simulation_setup.SIWaveSimulationSetup"
    },
    {
        "objectID": "api/simulation_setup",
        "href": "api/simulation_setup.html#enums",
        "title": "Simulation setup > Enums",
        "section": "Enums",
        "text": "simulation_setup.SimulationSetupType(value)\nEnum representing available simulation setup types.\nsimulation_setup.Distribution(value)\nEnum representing frequency distribution types.\nhfss_simulation_settings.AdaptType(value)\nProvides an enum representing HFSS adaptive solution types.\nhfss_simulation_settings.BasisFunctionOrder(value)\nProvides an enum representing basis function order types.\nhfss_simulation_settings.SolverType(value)\nProvides an enum representing HFSS solver types.\nsimulation_settings.ViaStyle(value)\nEnum representing via modeling styles.\nsimulation_settings.ModelType(value)\nEnum representing defeature model types.\nsiwave_simulation_settings.SParamInterpolation(value)\nProvides an enum representing s parameter interpolation types.\nsiwave_simulation_settings.SParamExtrapolation(value)\nProvides an enum representing s parameter extrapolation types.\nsiwave_simulation_settings.SParamDCBehavior(value)\nProvides an enum representing s parameter DC behavior types.\nEnums\nsimulation_setup.SimulationSetupType\nsimulation_setup.Distribution\nhfss_simulation_settings.AdaptType\nhfss_simulation_settings.BasisFunctionOrder\nhfss_simulation_settings.SolverType\nsimulation_settings.ViaStyle\nsimulation_settings.ModelType\nsiwave_simulation_settings.SParamInterpolation\nsiwave_simulation_settings.SParamExtrapolation\nsiwave_simulation_settings.SParamDCBehavior"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.is_mcad_3d_comp.html#is_mcad_3d_comp",
        "title": "is_mcad_3d_comp",
        "section": "is_mcad_3d_comp",
        "text": "bool: Flag indicating if this is a 3D composite MCAD model.\nThis property is read-only.\nis_mcad_3d_comp\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.is_mcad_3d_comp.html#ansys.edb.core.hierarchy.structure3d.Structure3D.is_mcad_3d_comp",
        "title": "is_mcad_3d_comp > is_mcad_3d_comp > is_mcad_3d_comp",
        "section": "is_mcad_3d_comp > is_mcad_3d_comp",
        "text": "property Structure3D.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.persistent",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.persistent.html#persistent",
        "title": "persistent",
        "section": "persistent",
        "text": "bool: Flag indicating if the primitives in the via group are persistent.\nThis property is read-only.\npersistent\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.persistent",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.persistent.html#ansys.edb.core.hierarchy.via_group.ViaGroup.persistent",
        "title": "persistent > persistent > persistent",
        "section": "persistent > persistent",
        "text": "property ViaGroup.persistent\n\nbool: Flag indicating if the primitives in the via group are persistent.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.html#siwavesimulationsettings",
        "title": "SIWaveSimulationSettings",
        "section": "SIWaveSimulationSettings",
        "text": "Represents SIWave simulation settings.\nSIWaveSimulationSettings.advanced\nSIWaveAdvancedSettings: Advanced settings for SIWave simulations.\nSIWaveSimulationSettings.dc\nSIWaveDCSettings: DC settings for SIWave simulations.\nSIWaveSimulationSettings.dc_advanced\nSIWaveDCAdvancedSettings: Advanced DC settings for SIWave simulations.\nSIWaveSimulationSettings.enabled\nbool: Flag indicating if the simulation setup is enabled.\nSIWaveSimulationSettings.general\nSIWaveGeneralSettings: General settings for SIWave simulations.\nSIWaveSimulationSettings.msg\nEDBObjMessage: Protobuf message that represents this object's ID.\nSIWaveSimulationSettings.s_parameter\nSIWaveSParameterSettings: S parameter settings for SIWave simulations.\nSIWaveSimulationSettings\nSIWaveSimulationSettings.advanced\nSIWaveAdvancedSettings\nSIWaveSimulationSettings.dc\nSIWaveDCSettings\nSIWaveSimulationSettings.dc_advanced\nSIWaveDCAdvancedSettings\nSIWaveSimulationSettings.enabled\nbool\nSIWaveSimulationSettings.general\nSIWaveGeneralSettings\nSIWaveSimulationSettings.msg\nEDBObjMessage\nSIWaveSimulationSettings.s_parameter\nSIWaveSParameterSettings"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings",
        "title": "SIWaveSimulationSettings > SIWaveSimulationSettings > SIWaveSimulationSettings",
        "section": "SIWaveSimulationSettings > SIWaveSimulationSettings",
        "text": "class ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings(sim_setup)\n\nRepresents SIWave simulation settings.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nSIWaveSimulationSettings.advanced\n\nSIWaveAdvancedSettings: Advanced settings for SIWave simulations.\n\nSIWaveSimulationSettings.dc\n\nSIWaveDCSettings: DC settings for SIWave simulations.\n\nSIWaveSimulationSettings.dc_advanced\n\nSIWaveDCAdvancedSettings: Advanced DC settings for SIWave simulations.\n\nSIWaveSimulationSettings.enabled\n\nbool: Flag indicating if the simulation setup is enabled.\n\nSIWaveSimulationSettings.general\n\nSIWaveGeneralSettings: General settings for SIWave simulations.\n\nSIWaveSimulationSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object's ID.\n\nSIWaveSimulationSettings.s_parameter\n\nSIWaveSParameterSettings: S parameter settings for SIWave simulations.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.min_num_passes",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.min_num_passes.html#min_num_passes",
        "title": "min_num_passes",
        "section": "min_num_passes",
        "text": "int: Minimum number of adaptive mesh refinement passes.\nmin_num_passes\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.min_num_passes",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.min_num_passes.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.min_num_passes",
        "title": "min_num_passes > min_num_passes > min_num_passes",
        "section": "min_num_passes > min_num_passes",
        "text": "property SIWaveDCAdvancedSettings.min_num_passes\n\nint: Minimum number of adaptive mesh refinement passes.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.set_hole_parameters",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.set_hole_parameters.html#set_hole_parameters",
        "title": "set_hole_parameters",
        "section": "set_hole_parameters",
        "text": "Set hole parameters.\nX offset.\nY offset.\nRotation.\nPad geometry type.\nList of pad sizes.\nset_hole_parameters\nValue\nValue\nValue\nPadGeometryType\nList\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.set_hole_parameters",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.set_hole_parameters.html#ansys.edb.core.definition.padstack_def_data.PadstackDefData.set_hole_parameters",
        "title": "set_hole_parameters > set_hole_parameters > set_hole_parameters",
        "section": "set_hole_parameters > set_hole_parameters",
        "text": "PadstackDefData.set_hole_parameters(offset_x, offset_y, rotation, type_geom, sizes)\n\nSet hole parameters.\n\nParameters\n\noffset_x\n\nValue\n\nX offset.\n\noffset_y\n\nValue\n\nY offset.\n\nrotation\n\nValue\n\nRotation.\n\ntype_geom\n\nPadGeometryType\n\nPad geometry type.\n\nsizes\n\nList[Value]\n\nList of pad sizes.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.alpha_shape",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.alpha_shape.html#alpha_shape",
        "title": "alpha_shape",
        "section": "alpha_shape",
        "text": "Compute the outline of a 2D point cloud using alpha shapes.\nList of points.\nalpha_shape\npython:list\nansys.edb.core.typing.PointLikeT\npython:float\npython:list\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.alpha_shape",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.alpha_shape.html#ansys.edb.core.geometry.polygon_data.PolygonData.alpha_shape",
        "title": "alpha_shape > alpha_shape > alpha_shape",
        "section": "alpha_shape > alpha_shape",
        "text": "classmethod PolygonData.alpha_shape(points, alpha)\n\nCompute the outline of a 2D point cloud using alpha shapes.\n\nParameters\n\npoints\n\npython:list[ansys.edb.core.typing.PointLikeT]\n\nList of points.\n\nalpha\n\npython:float\n\n\n\nReturns\n\npython:list[PolygonData]\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.create",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a net.\nLayout to create the net in.\nName of the net.\nNet created.\ncreate\nLayout\npython:str\nNet"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.create",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.create.html#ansys.edb.core.net.net.Net.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod Net.create(layout, name)\n\nCreate a net.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to create the net in.\n\nname\n\npython:str\n\nName of the net.\n\nReturns\n\nNet\n\nNet created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SolverSettings.thin_dielectric_layer_threshold",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SolverSettings.thin_dielectric_layer_threshold.html#thin_dielectric_layer_threshold",
        "title": "thin_dielectric_layer_threshold",
        "section": "thin_dielectric_layer_threshold",
        "text": "str: Value below which dielectric layers are merged with adjacent dielectric layers.\nthin_dielectric_layer_threshold\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SolverSettings.thin_dielectric_layer_threshold",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SolverSettings.thin_dielectric_layer_threshold.html#ansys.edb.core.simulation_setup.simulation_settings.SolverSettings.thin_dielectric_layer_threshold",
        "title": "thin_dielectric_layer_threshold > thin_dielectric_layer_threshold > thin_dielectric_layer_threshold",
        "section": "thin_dielectric_layer_threshold > thin_dielectric_layer_threshold",
        "text": "property SolverSettings.thin_dielectric_layer_threshold\n\nstr: Value below which dielectric layers are merged with adjacent dielectric layers.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the property.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.set_product_property.html#ansys.edb.core.hierarchy.inst_array.InstArray.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "InstArray.set_product_property(prod_id, attr_id, prop_value)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nprop_value\n\npython:str\n\nString stored in the property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_property.ComponentProperty.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.component_property.ComponentProperty.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_property.ComponentProperty.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.component_property.ComponentProperty.is_null.html#ansys.edb.core.definition.component_property.ComponentProperty.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property ComponentProperty.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.find_by_name",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.find_by_name.html#find_by_name",
        "title": "find_by_name",
        "section": "find_by_name",
        "text": "Find a material definition by name in a given database.\nDatabase to search for the material definition.\nName of the material definition.\nNaterial definition found.\nfind_by_name\nDatabase\npython:str\nMaterialDef"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.find_by_name",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.find_by_name.html#ansys.edb.core.definition.material_def.MaterialDef.find_by_name",
        "title": "find_by_name > find_by_name > find_by_name",
        "section": "find_by_name > find_by_name",
        "text": "classmethod MaterialDef.find_by_name(database, name)\n\nFind a material definition by name in a given database.\n\nParameters\n\ndatabase\n\nDatabase\n\nDatabase to search for the material definition.\n\nname\n\npython:str\n\nName of the material definition.\n\nReturns\n\nMaterialDef\n\nNaterial definition found.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.is_null.html#ansys.edb.core.definition.padstack_def.PadstackDef.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property PadstackDef.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.ASSEMBLY_LAYER",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.ASSEMBLY_LAYER.html#assembly_layer",
        "title": "ASSEMBLY_LAYER",
        "section": "ASSEMBLY_LAYER",
        "text": "ASSEMBLY_LAYER"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.ASSEMBLY_LAYER",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.ASSEMBLY_LAYER.html#ansys.edb.core.layer.layer_collection.LayerType.ASSEMBLY_LAYER",
        "title": "ASSEMBLY_LAYER > ASSEMBLY_LAYER > ASSEMBLY_LAYER",
        "section": "ASSEMBLY_LAYER > ASSEMBLY_LAYER",
        "text": "LayerType.ASSEMBLY_LAYER = 8\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.SolverType.AUTO_SOLVER",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.SolverType.AUTO_SOLVER.html#auto_solver",
        "title": "AUTO_SOLVER",
        "section": "AUTO_SOLVER",
        "text": "AUTO_SOLVER"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.SolverType.AUTO_SOLVER",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.SolverType.AUTO_SOLVER.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.SolverType.AUTO_SOLVER",
        "title": "AUTO_SOLVER > AUTO_SOLVER > AUTO_SOLVER",
        "section": "AUTO_SOLVER > AUTO_SOLVER",
        "text": "SolverType.AUTO_SOLVER = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.general",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.general.html#general",
        "title": "general",
        "section": "general",
        "text": "SIWaveGeneralSettings: General settings for SIWave simulations.\ngeneral\nSIWaveGeneralSettings"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.general",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.general.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.general",
        "title": "general > general > general",
        "section": "general > general",
        "text": "property SIWaveSimulationSettings.general\n\nSIWaveGeneralSettings: General settings for SIWave simulations.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.component_def",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.component_def.html#component_def",
        "title": "component_def",
        "section": "component_def",
        "text": "ComponentDef: Component definition for the         hierarchy object if it exists, None otherwise.\nThis property is read-only.\ncomponent_def\nComponentDef\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.component_def",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.component_def.html#ansys.edb.core.hierarchy.via_group.ViaGroup.component_def",
        "title": "component_def > component_def > component_def",
        "section": "component_def > component_def",
        "text": "property ViaGroup.component_def\n\nComponentDef: Component definition for the         hierarchy object if it exists, None otherwise.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.is_stackup_layer",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.is_stackup_layer.html#is_stackup_layer",
        "title": "is_stackup_layer",
        "section": "is_stackup_layer",
        "text": "bool: Flag indicating if the layer is a StackupLayer instance.\nThis property is read-only.\nis_stackup_layer\nbool\nStackupLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.is_stackup_layer",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.is_stackup_layer.html#ansys.edb.core.layer.layer.Layer.is_stackup_layer",
        "title": "is_stackup_layer > is_stackup_layer > is_stackup_layer",
        "section": "is_stackup_layer > is_stackup_layer",
        "text": "property Layer.is_stackup_layer\n\nbool: Flag indicating if the layer is a StackupLayer instance.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.id",
        "href": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.id",
        "href": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.id.html#ansys.edb.core.definition.ic_component_property.ICComponentProperty.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property ICComponentProperty.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDef.name",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDef.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the bondwire definition.\nThis property is read-only.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDef.name",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDef.name.html#ansys.edb.core.definition.bondwire_def.BondwireDef.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property BondwireDef.name\n\nstr: Name of the bondwire definition.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.DCThicknessType.EFFECTIVE",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.DCThicknessType.EFFECTIVE.html#effective",
        "title": "EFFECTIVE",
        "section": "EFFECTIVE",
        "text": "EFFECTIVE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.DCThicknessType.EFFECTIVE",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.DCThicknessType.EFFECTIVE.html#ansys.edb.core.layer.stackup_layer.DCThicknessType.EFFECTIVE",
        "title": "EFFECTIVE > EFFECTIVE > EFFECTIVE",
        "section": "EFFECTIVE > EFFECTIVE",
        "text": "DCThicknessType.EFFECTIVE = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.msg.html#ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property Jedec5BondwireDef.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.create",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create an instance array with a layout.\nLayout to create the instance array in.\nName of the instance array.\nLayout that the instance array refers to.\nPoint data that represents the origin of the instance array.\nPoint data that represents the x axis of the instance array.\nPoint data that represents the y axis of the instance array.\nValue for the x count of the instance array.\nValue for the y count of the instance array.\nInstance array created.\ncreate\nLayout\npython:str\nLayout\nPointData\nPointData\nPointData\nValue\nValue\nInstArray"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.create",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.create.html#ansys.edb.core.hierarchy.inst_array.InstArray.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod InstArray.create(layout, name, ref, orig, xaxis, yaxis, xcount, ycount)\n\nCreate an instance array with a layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to create the instance array in.\n\nname\n\npython:str\n\nName of the instance array.\n\nref\n\nLayout\n\nLayout that the instance array refers to.\n\norig\n\nPointData\n\nPoint data that represents the origin of the instance array.\n\nxaxis\n\nPointData\n\nPoint data that represents the x axis of the instance array.\n\nyaxis\n\nPointData\n\nPoint data that represents the y axis of the instance array.\n\nxcount\n\nValue\n\nValue for the x count of the instance array.\n\nycount\n\nValue\n\nValue for the y count of the instance array.\n\nReturns\n\nInstArray\n\nInstance array created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.edb_uid.html#edb_uid",
        "title": "edb_uid",
        "section": "edb_uid",
        "text": "int: Unique, persistent ID for the Connectable object.\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\nThis property is read-only.\nedb_uid\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.edb_uid.html#ansys.edb.core.primitive.primitive.Bondwire.edb_uid",
        "title": "edb_uid > edb_uid > edb_uid",
        "section": "edb_uid > edb_uid",
        "text": "property Bondwire.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SweepData.frequency_string",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SweepData.frequency_string.html#frequency_string",
        "title": "frequency_string",
        "section": "frequency_string",
        "text": "str: String representing the frequency sweep data.\nThis property is read-only.\nfrequency_string\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SweepData.frequency_string",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SweepData.frequency_string.html#ansys.edb.core.simulation_setup.simulation_setup.SweepData.frequency_string",
        "title": "frequency_string > frequency_string > frequency_string",
        "section": "frequency_string > frequency_string",
        "text": "property SweepData.frequency_string\n\nstr: String representing the frequency sweep data.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.MeshOperation.solve_inside",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.MeshOperation.solve_inside.html#solve_inside",
        "title": "solve_inside",
        "section": "solve_inside",
        "text": "bool: Flag indicating if solve inside is enabled.\nsolve_inside\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.MeshOperation.solve_inside",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.MeshOperation.solve_inside.html#ansys.edb.core.simulation_setup.mesh_operation.MeshOperation.solve_inside",
        "title": "solve_inside > solve_inside > solve_inside",
        "section": "solve_inside > solve_inside",
        "text": "property MeshOperation.solve_inside\n\nbool: Flag indicating if solve inside is enabled.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.sparameter_model.SParameterModel.clone",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.sparameter_model.SParameterModel.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Clone a model.\nclone\nModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.sparameter_model.SParameterModel.clone",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.sparameter_model.SParameterModel.clone.html#ansys.edb.core.hierarchy.sparameter_model.SParameterModel.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "SParameterModel.clone()\n\nClone a model.\n\nReturns\n\nModel cloned.\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.create",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a path.\nLayout to create the path in.\nLayer to place the path on.\nNet of the path.\nPath width.\nEnd cap style for the start of the path.\nEnd cap style for the end of the path.\nCorner style.\nCenterline polygon data to set.\nPath created.\ncreate\nLayout\npython:str\nLayer\npython:str\nNet\npython:None\nValue\nPathCornerType\nPolygonData\nPath"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.create",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.create.html#ansys.edb.core.primitive.primitive.Path.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod Path.create(layout, layer, net, width, end_cap1, end_cap2, corner_style, points)\n\nCreate a path.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to create the path in.\n\nlayer\n\npython:str or Layer\n\nLayer to place the path on.\n\nnet\n\npython:str or Net or python:None\n\nNet of the path.\n\nwidth\n\nValue\n\nPath width.\n\nend_cap1: :class:`.PathEndCapType`\n\nEnd cap style for the start of the path.\n\nend_cap2: :class:`.PathEndCapType`\n\nEnd cap style for the end of the path.\n\ncorner_style\n\nPathCornerType\n\nCorner style.\n\npoints\n\nPolygonData\n\nCenterline polygon data to set.\n\nReturns\n\nPath\n\nPath created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.set_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.set_hfss_prop.html#set_hfss_prop",
        "title": "set_hfss_prop",
        "section": "set_hfss_prop",
        "text": "Set HFSS properties.\nMaterial property name to set.\nWhether to solve inside.\nset_hfss_prop\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.set_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.set_hfss_prop.html#ansys.edb.core.primitive.primitive.Path.set_hfss_prop",
        "title": "set_hfss_prop > set_hfss_prop > set_hfss_prop",
        "section": "set_hfss_prop > set_hfss_prop",
        "text": "Path.set_hfss_prop(material, solve_inside)\n\nSet HFSS properties.\n\nParameters\n\nmaterial\n\npython:str\n\nMaterial property name to set.\n\nsolve_inside\n\nbool\n\nWhether to solve inside.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.set_product_solver_option",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.set_product_solver_option.html#set_product_solver_option",
        "title": "set_product_solver_option",
        "section": "set_product_solver_option",
        "text": "Set the product solver option.\nID of the product.\nName of the solver.\nName of the product solver option.\nset_product_solver_option\nProductIdType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.set_product_solver_option",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.set_product_solver_option.html#ansys.edb.core.terminal.terminals.Terminal.set_product_solver_option",
        "title": "set_product_solver_option > set_product_solver_option > set_product_solver_option",
        "section": "set_product_solver_option > set_product_solver_option",
        "text": "Terminal.set_product_solver_option(product_id, solver_name, option)\n\nSet the product solver option.\n\nParameters\n\nproduct_id\n\nProductIdType\n\nID of the product.\n\nsolver_name\n\nobj:str\n\nName of the solver.\n\noption\n\nobj:str\n\nName of the product solver option.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.can_be_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.can_be_zone_primitive.html#can_be_zone_primitive",
        "title": "can_be_zone_primitive",
        "section": "can_be_zone_primitive",
        "text": "bool: Flag indicating if the rectangle can be a zone.\nThis property is read-only.\ncan_be_zone_primitive\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.can_be_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.can_be_zone_primitive.html#ansys.edb.core.primitive.primitive.Rectangle.can_be_zone_primitive",
        "title": "can_be_zone_primitive > can_be_zone_primitive > can_be_zone_primitive",
        "section": "can_be_zone_primitive > can_be_zone_primitive",
        "text": "property Rectangle.can_be_zone_primitive\n\nbool: Flag indicating if the rectangle can be a zone.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.create_hfss.html#create_hfss",
        "title": "create_hfss",
        "section": "create_hfss",
        "text": "Create an HFSS model from an MCAD file.\nHFSS model created.\ncreate_hfss\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.create_hfss.html#ansys.edb.core.terminal.terminals.BundleTerminal.create_hfss",
        "title": "create_hfss > create_hfss > create_hfss",
        "section": "create_hfss > create_hfss",
        "text": "BundleTerminal.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nReturns\n\nMcadModel\n\nHFSS model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.obj_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.obj_type.html#obj_type",
        "title": "obj_type",
        "section": "obj_type",
        "text": "LayoutObjType: Layout object type.\nThis property is read-only.\nobj_type\nLayoutObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.obj_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.obj_type.html#ansys.edb.core.terminal.terminals.PointTerminal.obj_type",
        "title": "obj_type > obj_type > obj_type",
        "section": "obj_type > obj_type",
        "text": "property PointTerminal.obj_type\n\nLayoutObjType: Layout object type.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.export_dc_thermal_data",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.export_dc_thermal_data.html#export_dc_thermal_data",
        "title": "export_dc_thermal_data",
        "section": "export_dc_thermal_data",
        "text": "bool: Flag indicating if DC thermal data is exported.\nexport_dc_thermal_data\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.export_dc_thermal_data",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.export_dc_thermal_data.html#ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.export_dc_thermal_data",
        "title": "export_dc_thermal_data > export_dc_thermal_data > export_dc_thermal_data",
        "section": "export_dc_thermal_data > export_dc_thermal_data",
        "text": "property SIWaveDCIRSimulationSettings.export_dc_thermal_data\n\nbool: Flag indicating if DC thermal data is exported.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.anti_pads_option",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.anti_pads_option.html#anti_pads_option",
        "title": "anti_pads_option",
        "section": "anti_pads_option",
        "text": "int: Mode for activating antipads.\n0 for center-point intersection\n1 for always on\n2 for pad intersection\nanti_pads_option\nint\n0\n1\n2"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.anti_pads_option",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.anti_pads_option.html#ansys.edb.core.layout.cell.Cell.anti_pads_option",
        "title": "anti_pads_option > anti_pads_option > anti_pads_option",
        "section": "anti_pads_option > anti_pads_option",
        "text": "property Cell.anti_pads_option\n\nint: Mode for activating antipads.\n\n0 for center-point intersection\n\n1 for always on\n\n2 for pad intersection\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.SYMBOL_LAYER",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.SYMBOL_LAYER.html#symbol_layer",
        "title": "SYMBOL_LAYER",
        "section": "SYMBOL_LAYER",
        "text": "SYMBOL_LAYER"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.SYMBOL_LAYER",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.SYMBOL_LAYER.html#ansys.edb.core.layer.layer_collection.LayerType.SYMBOL_LAYER",
        "title": "SYMBOL_LAYER > SYMBOL_LAYER > SYMBOL_LAYER",
        "section": "SYMBOL_LAYER > SYMBOL_LAYER",
        "text": "LayerType.SYMBOL_LAYER = 5\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_copy",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_copy.html#create_copy",
        "title": "create_copy",
        "section": "create_copy",
        "text": "Create a 3D transformation by copying another 3D transformation.\ncreate_copy\nTransform3D"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_copy",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_copy.html#ansys.edb.core.utility.transform3d.Transform3D.create_copy",
        "title": "create_copy > create_copy > create_copy",
        "section": "create_copy > create_copy",
        "text": "classmethod Transform3D.create_copy(transform3d)\n\nCreate a 3D transformation by copying another 3D transformation.\n\nReturns\n\nTransform3D\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.group",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.group.html#group",
        "title": "group",
        "section": "group",
        "text": "Group object.\ngroup\nGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.group",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.group.html#ansys.edb.core.primitive.primitive.Path.group",
        "title": "group > group > group",
        "section": "group > group",
        "text": "property Path.group\n\nGroup object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.max_num_passes",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.max_num_passes.html#max_num_passes",
        "title": "max_num_passes",
        "section": "max_num_passes",
        "text": "int: Maximum number of adaptive mesh refinement passes.\nmax_num_passes\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.max_num_passes",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.max_num_passes.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.max_num_passes",
        "title": "max_num_passes > max_num_passes > max_num_passes",
        "section": "max_num_passes > max_num_passes",
        "text": "property SIWaveDCAdvancedSettings.max_num_passes\n\nint: Maximum number of adaptive mesh refinement passes.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.add_entry",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.add_entry.html#add_entry",
        "title": "add_entry",
        "section": "add_entry",
        "text": "Add a matrix entry.\nName of the first port.\nName of the second port.\nMagnitude limit.\nPhase limit.\nadd_entry\npython:str\npython:str\npython:float\npython:float"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.add_entry",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.add_entry.html#ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.add_entry",
        "title": "add_entry > add_entry > add_entry",
        "section": "add_entry > add_entry",
        "text": "MatrixConvergenceData.add_entry(port_name_1, port_name_2, mag_limit, phase_limit)\n\nAdd a matrix entry.\n\nParameters\n\nport_name_1\n\npython:str\n\nName of the first port.\n\nport_name_2\n\npython:str\n\nName of the second port.\n\nmag_limit\n\npython:float\n\nMagnitude limit.\n\nphase_limit\n\npython:float\n\nPhase limit.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.set_layer_range",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.set_layer_range.html#set_layer_range",
        "title": "set_layer_range",
        "section": "set_layer_range",
        "text": "Set the top and bottom layers of the padstack instance.\nTop layer of the padstack instance.\nBottom layer of the padstack instance.\nset_layer_range\nLayer\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.set_layer_range",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.set_layer_range.html#ansys.edb.core.primitive.primitive.PadstackInstance.set_layer_range",
        "title": "set_layer_range > set_layer_range > set_layer_range",
        "section": "set_layer_range > set_layer_range",
        "text": "PadstackInstance.set_layer_range(top_layer, bottom_layer)\n\nSet the top and bottom layers of the padstack instance.\n\nParameters\n\ntop_layer\n\nLayer\n\nTop layer of the padstack instance.\n\nbottom_layer\n\nLayer\n\nBottom layer of the padstack instance.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.definition_type",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.definition_type.html#definition_type",
        "title": "definition_type",
        "section": "definition_type",
        "text": "DefinitionObjType: Type of the material definition.\ndefinition_type\nDefinitionObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.definition_type",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.definition_type.html#ansys.edb.core.definition.material_def.MaterialDef.definition_type",
        "title": "definition_type > definition_type > definition_type",
        "section": "definition_type > definition_type",
        "text": "property MaterialDef.definition_type\n\nDefinitionObjType: Type of the material definition.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModel.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModel.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModel.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModel.is_null.html#ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModel.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property DielectricMaterialModel.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.layout_component.LayoutComponent.export_layout_component",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.layout_component.LayoutComponent.export_layout_component.html#export_layout_component",
        "title": "export_layout_component",
        "section": "export_layout_component",
        "text": "Export a layout component of the provided cell to the specified output file path.\nLayout to be exported.\nFile path to export the .aedbcomp file to.\nTrue if layout component is successfully exported, False otherwise.\nexport_layout_component\nLayout\npython:str\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.layout_component.LayoutComponent.export_layout_component",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.layout_component.LayoutComponent.export_layout_component.html#ansys.edb.core.hierarchy.layout_component.LayoutComponent.export_layout_component",
        "title": "export_layout_component > export_layout_component > export_layout_component",
        "section": "export_layout_component > export_layout_component",
        "text": "classmethod LayoutComponent.export_layout_component(layout, output_aedb_comp_path)\n\nExport a layout component of the provided cell to the specified output file path.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to be exported.\n\noutput_aedb_comp_path\n\npython:str\n\nFile path to export the .aedbcomp file to.\n\nReturns\n\nbool\n\nTrue if layout component is successfully exported, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.ComponentModel.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.ComponentModel.find_by_id.html#find_by_id",
        "title": "find_by_id",
        "section": "find_by_id",
        "text": "Find a component model by ID in a given component def.\nComponent def to search for the component model.\nID of the component model.\nComponent model that is found, None otherwise.\nfind_by_id\nComponentDef\npython:int\nComponentModel\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.ComponentModel.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.ComponentModel.find_by_id.html#ansys.edb.core.definition.component_model.ComponentModel.find_by_id",
        "title": "find_by_id > find_by_id > find_by_id",
        "section": "find_by_id > find_by_id",
        "text": "classmethod ComponentModel.find_by_id(comp_def, value)\n\nFind a component model by ID in a given component def.\n\nParameters\n\ncomp_def\n\nComponentDef\n\nComponent def to search for the component model.\n\nvalue\n\npython:int\n\nID of the component model.\n\nReturns\n\nComponentModel\n\nComponent model that is found, None otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.id",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.id",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.id.html#ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property SIWaveSimulationSetup.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.msg",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.msg",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.msg.html#ansys.edb.core.primitive.primitive.Bondwire.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property Bondwire.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the product property.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.get_product_property.html#ansys.edb.core.net.extended_net.ExtendedNet.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "ExtendedNet.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nReturns\n\npython:str\n\nString stored in the product property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance.LayoutInstance.refresh",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance.LayoutInstance.refresh.html#refresh",
        "title": "refresh",
        "section": "refresh",
        "text": "Refresh the layout instance so it contains an up-to-date geometry.\nrefresh"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance.LayoutInstance.refresh",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance.LayoutInstance.refresh.html#ansys.edb.core.layout_instance.layout_instance.LayoutInstance.refresh",
        "title": "refresh > refresh > refresh",
        "section": "refresh > refresh",
        "text": "LayoutInstance.refresh()\n\nRefresh the layout instance so it contains an up-to-date geometry.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.NEXXIM_GROUND",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.NEXXIM_GROUND.html#nexxim_ground",
        "title": "NEXXIM_GROUND",
        "section": "NEXXIM_GROUND",
        "text": "NEXXIM_GROUND"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.NEXXIM_GROUND",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.NEXXIM_GROUND.html#ansys.edb.core.terminal.terminals.BoundaryType.NEXXIM_GROUND",
        "title": "NEXXIM_GROUND > NEXXIM_GROUND > NEXXIM_GROUND",
        "section": "NEXXIM_GROUND > NEXXIM_GROUND",
        "text": "BoundaryType.NEXXIM_GROUND = 5\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.etch_factor",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.etch_factor.html#etch_factor",
        "title": "etch_factor",
        "section": "etch_factor",
        "text": "Value: Etch factor of the layer.\nThe setter accepts a ValueLike term.\netch_factor\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.etch_factor",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.etch_factor.html#ansys.edb.core.layer.stackup_layer.StackupLayer.etch_factor",
        "title": "etch_factor > etch_factor > etch_factor",
        "section": "etch_factor > etch_factor",
        "text": "property StackupLayer.etch_factor\n\nValue: Etch factor of the layer.\n\nThe setter accepts a ValueLike term.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.get_variable_value",
        "href": "api/_autosummary/ansys.edb.core.database.Database.get_variable_value.html#get_variable_value",
        "title": "get_variable_value",
        "section": "get_variable_value",
        "text": "Get the value for a given variable.\nVariable name.\nVariable value.\nget_variable_value\npython:str\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.get_variable_value",
        "href": "api/_autosummary/ansys.edb.core.database.Database.get_variable_value.html#ansys.edb.core.database.Database.get_variable_value",
        "title": "get_variable_value > get_variable_value > get_variable_value",
        "section": "get_variable_value > get_variable_value",
        "text": "Database.get_variable_value(name)\n\nGet the value for a given variable.\n\nParameters\n\nname\n\npython:str\n\nVariable name.\n\nReturns\n\nValue\n\nVariable value.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.axis",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.axis.html#axis",
        "title": "axis",
        "section": "axis",
        "text": "list of Point3DLike: Axis.\naxis\nlist"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.axis",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.axis.html#ansys.edb.core.utility.transform3d.Transform3D.axis",
        "title": "axis > axis > axis",
        "section": "axis > axis",
        "text": "property Transform3D.axis\n\nlist of Point3DLike: Axis.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.is_layout_pin",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.is_layout_pin.html#is_layout_pin",
        "title": "is_layout_pin",
        "section": "is_layout_pin",
        "text": "bool: Flag indicating if the padstack instance is a layout pin.\nis_layout_pin\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.is_layout_pin",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.is_layout_pin.html#ansys.edb.core.primitive.primitive.PadstackInstance.is_layout_pin",
        "title": "is_layout_pin > is_layout_pin > is_layout_pin",
        "section": "is_layout_pin > is_layout_pin",
        "text": "property PadstackInstance.is_layout_pin\n\nbool: Flag indicating if the padstack instance is a layout pin.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.upper_elevation",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.upper_elevation.html#upper_elevation",
        "title": "upper_elevation",
        "section": "upper_elevation",
        "text": "Value: Upper elevation value of the layer.\nThis property is read-only.\nupper_elevation\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.upper_elevation",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.upper_elevation.html#ansys.edb.core.layer.stackup_layer.StackupLayer.upper_elevation",
        "title": "upper_elevation > upper_elevation > upper_elevation",
        "section": "upper_elevation > upper_elevation",
        "text": "property StackupLayer.upper_elevation\n\nValue: Upper elevation value of the layer.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/definition",
        "href": "api/definition.html#definition",
        "title": "Definition",
        "section": "Definition",
        "text": "Definition"
    },
    {
        "objectID": "api/definition",
        "href": "api/definition.html#classes",
        "title": "Definition > Classes",
        "section": "Classes",
        "text": "definition.bondwire_def.ApdBondwireDef(msg)\nRepresents an APD bondwire definition.\ndefinition.bondwire_def.BondwireDef(msg)\nRepresents a bondwire definition.\ndefinition.component_def.ComponentDef(msg)\nRepresents a component definition.\ndefinition.component_model.ComponentModel(msg)\nRepresents a component model.\ndefinition.component_pin.ComponentPin(msg)\nRepresents a component pin.\ndefinition.dataset_def.DatasetDef(msg)\nRepresents a dataset definition.\ndefinition.debye_model.DebyeModel(msg)\nRepresenta a Debye dielectric material model object.\ndefinition.die_property.DieProperty(msg)\nRepresents a die property.\ndefinition.dielectric_material_model.DielectricMaterialModel(msg)\nRepresents a dielectric material model.\ndefinition.djordjecvic_sarkar_model.DjordjecvicSarkarModel(msg)\nRepresents a Djordjecvic-Sarkar dielectric material model object.\ndefinition.component_model.DynamicLinkComponentModel(msg)\nRepresents a dynamic link component model.\ndefinition.bondwire_def.Jedec4BondwireDef(msg)\nRepresents a JEDEC4 bondwire definition.\ndefinition.bondwire_def.Jedec5BondwireDef(msg)\nRepresents a JEDEC5 bondwire definition.\ndefinition.material_def.MaterialDef(msg)\nRepresents a material definition.\ndefinition.material_property_thermal_modifier.MaterialPropertyThermalModifier(msg)\nRepresenting material property thermal modifiers.\ndefinition.multipole_debye_model.MultipoleDebyeModel(msg)\nRepresents a dielectric material model.\ndefinition.component_model.NPortComponentModel(msg)\nRepresents an NPort component model.\ndefinition.package_def.PackageDef(msg)\nRepresents a package definition.\ndefinition.padstack_def.PadstackDef(msg)\nRepresents a padstack definition.\ndefinition.padstack_def_data.PadstackDefData(msg)\nRepresents a padstack data definition.\ndefinition.material_def.ThermalModifier(msg)\nRepresents a thermal modifier model.\ndefinition.solder_ball_property.SolderBallProperty(msg)\nRepresents a solder ball property.\ndefinition.component_property.ComponentProperty(msg)\nRepresents a component property.\ndefinition.ic_component_property.ICComponentProperty(msg)\nRepresents an IC component property.\ndefinition.io_component_property.IOComponentProperty(msg)\nRepresents an I0 component property.\ndefinition.rlc_component_property.RLCComponentProperty(msg)\nRepresents an RLC component property.\ndefinition.port_property.PortProperty(msg)\nRepresents a port property.\nClasses\ndefinition.bondwire_def.ApdBondwireDef\ndefinition.bondwire_def.BondwireDef\ndefinition.component_def.ComponentDef\ndefinition.component_model.ComponentModel\ndefinition.component_pin.ComponentPin\ndefinition.dataset_def.DatasetDef\ndefinition.debye_model.DebyeModel\ndefinition.die_property.DieProperty\ndefinition.dielectric_material_model.DielectricMaterialModel\ndefinition.djordjecvic_sarkar_model.DjordjecvicSarkarModel\ndefinition.component_model.DynamicLinkComponentModel\ndefinition.bondwire_def.Jedec4BondwireDef\ndefinition.bondwire_def.Jedec5BondwireDef\ndefinition.material_def.MaterialDef\ndefinition.material_property_thermal_modifier.MaterialPropertyThermalModifier\ndefinition.multipole_debye_model.MultipoleDebyeModel\ndefinition.component_model.NPortComponentModel\ndefinition.package_def.PackageDef\ndefinition.padstack_def.PadstackDef\ndefinition.padstack_def_data.PadstackDefData\ndefinition.material_def.ThermalModifier\ndefinition.solder_ball_property.SolderBallProperty\ndefinition.component_property.ComponentProperty\ndefinition.ic_component_property.ICComponentProperty\ndefinition.io_component_property.IOComponentProperty\ndefinition.rlc_component_property.RLCComponentProperty\ndefinition.port_property.PortProperty"
    },
    {
        "objectID": "api/definition",
        "href": "api/definition.html#enums",
        "title": "Definition > Enums",
        "section": "Enums",
        "text": "edb_defs.DefinitionObjType(value)\nProvides an enum representing definition object types.\ndefinition.bondwire_def.BondwireDefType(value)\nEnum representing different types of bondwires.\ndefinition.material_def.MaterialProperty(value)\nProvides an enum representing material property types.\ndefinition.padstack_def_data.PadType(value)\nProvides an enum representing pad types.\ndefinition.padstack_def_data.PadGeometryType(value)\nProvides an enum representing pad geometry types.\ndefinition.padstack_def_data.PadstackHoleRange(value)\nProvides an enum representing pad hole ranges.\ndefinition.padstack_def_data.SolderballShape(value)\nProvides an enum representing solder ball shapes.\ndefinition.padstack_def_data.SolderballPlacement(value)\nProvides an enum representing solder ball placement.\ndefinition.die_property.DieType(value)\nProvides an enum representing die types.\ndefinition.die_property.DieOrientation(value)\nProvides an enum representing die orientations.\ndefinition.dielectric_material_model.DielectricMaterialModelType(value)\nProvides an eum representing dielectric material model types.\nEnums\nedb_defs.DefinitionObjType\ndefinition.bondwire_def.BondwireDefType\ndefinition.material_def.MaterialProperty\ndefinition.padstack_def_data.PadType\ndefinition.padstack_def_data.PadGeometryType\ndefinition.padstack_def_data.PadstackHoleRange\ndefinition.padstack_def_data.SolderballShape\ndefinition.padstack_def_data.SolderballPlacement\ndefinition.die_property.DieType\ndefinition.die_property.DieOrientation\ndefinition.dielectric_material_model.DielectricMaterialModelType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.group",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.group.html#group",
        "title": "group",
        "section": "group",
        "text": "Group object.\ngroup\nGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.group",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.group.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.group",
        "title": "group > group > group",
        "section": "group > group",
        "text": "property CellInstance.group\n\nGroup object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SimulationSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SimulationSettings.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents this object’s ID.\nThis property is read-only.\nmsg\nEDBObjMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SimulationSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SimulationSettings.msg.html#ansys.edb.core.simulation_setup.simulation_settings.SimulationSettings.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property SimulationSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object’s ID.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.NPortComponentModel.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.NPortComponentModel.find_by_id.html#find_by_id",
        "title": "find_by_id",
        "section": "find_by_id",
        "text": "Find a component model by ID in a given component def.\nComponent def to search for the component model.\nID of the component model.\nComponent model that is found, None otherwise.\nfind_by_id\nComponentDef\npython:int\nComponentModel\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.NPortComponentModel.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.NPortComponentModel.find_by_id.html#ansys.edb.core.definition.component_model.NPortComponentModel.find_by_id",
        "title": "find_by_id > find_by_id > find_by_id",
        "section": "find_by_id > find_by_id",
        "text": "classmethod NPortComponentModel.find_by_id(comp_def, value)\n\nFind a component model by ID in a given component def.\n\nParameters\n\ncomp_def\n\nComponentDef\n\nComponent def to search for the component model.\n\nvalue\n\npython:int\n\nID of the component model.\n\nReturns\n\nComponentModel\n\nComponent model that is found, None otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.group_vias",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.group_vias.html#group_vias",
        "title": "group_vias",
        "section": "group_vias",
        "text": "Create via groups from the primitives on the specified layer.\nLayer containing the primitives to be grouped.\nMaximum distance between vias in a via group .\nWhether to preserve primitives during via group creation. If False\nprimitives are deleted during via group creation.\nIf True, vias are grouped by proximity (relative position to each other).\nIf False, vias are grouped by range (any vias within the specified maximum\ngrouping distance of each other are grouped)\nIf True, the connectivity of via groups is checked and enforced to prevent\nshort circuits in geometry connecting to the via group. If false, vias are\ngrouped regardless of the connectivity of touching geometry.\ngroup_vias\npython:str\nLayer\nFalse\nTrue\nFalse\nboo\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.group_vias",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.group_vias.html#ansys.edb.core.layout.layout.Layout.group_vias",
        "title": "group_vias > group_vias > group_vias",
        "section": "group_vias > group_vias",
        "text": "Layout.group_vias(layer, max_grouping_distance='100um', persistent_vias=False, group_by_proximity=True, check_containment=True)\n\nCreate via groups from the primitives on the specified layer.\n\nParameters\n\nlayer\n\npython:str or Layer\n\nLayer containing the primitives to be grouped.\n\nmax_grouping_distance\n\nValueLike\n\nMaximum distance between vias in a via group .\n\npersistent_vias\n\nbool\n\nWhether to preserve primitives during via group creation. If False\nprimitives are deleted during via group creation.\n\ngroup_by_proximity\n\nbool\n\nIf True, vias are grouped by proximity (relative position to each other).\nIf False, vias are grouped by range (any vias within the specified maximum\ngrouping distance of each other are grouped)\n\ncheck_containment\n\nboo\n\nIf True, the connectivity of via groups is checked and enforced to prevent\nshort circuits in geometry connecting to the via group. If false, vias are\ngrouped regardless of the connectivity of touching geometry.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.max_delta_z0",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.max_delta_z0.html#max_delta_z0",
        "title": "max_delta_z0",
        "section": "max_delta_z0",
        "text": "float: Maximum percent change in characteristic impedance of ports between adaptive passes.\nmax_delta_z0\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.max_delta_z0",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.max_delta_z0.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.max_delta_z0",
        "title": "max_delta_z0 > max_delta_z0 > max_delta_z0",
        "section": "max_delta_z0 > max_delta_z0",
        "text": "property HFSSSolverSettings.max_delta_z0\n\nfloat: Maximum percent change in characteristic impedance of ports between adaptive passes.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.set_position_and_rotation",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.set_position_and_rotation.html#set_position_and_rotation",
        "title": "set_position_and_rotation",
        "section": "set_position_and_rotation",
        "text": "Set the position and rotation of the padstack instance.\nx : X coordinate.\ny : Y coordinate.\nRotation in radians.\nset_position_and_rotation\nValue\nValue\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.set_position_and_rotation",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.set_position_and_rotation.html#ansys.edb.core.primitive.primitive.PadstackInstance.set_position_and_rotation",
        "title": "set_position_and_rotation > set_position_and_rotation > set_position_and_rotation",
        "section": "set_position_and_rotation > set_position_and_rotation",
        "text": "PadstackInstance.set_position_and_rotation(x, y, rotation)\n\nSet the position and rotation of the padstack instance.\n\nParameters\n\nx\n\nValue\n\nx : X coordinate.\n\ny\n\nValue\n\ny : Y coordinate.\n\nrotation\n\nValue\n\nRotation in radians.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.clone",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Clone a model.\nclone\nModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.clone",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.clone.html#ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "PinPairModel.clone()\n\nClone a model.\n\nReturns\n\nModel cloned.\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.hfss_pi_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.hfss_pi_type.html#hfss_pi_type",
        "title": "hfss_pi_type",
        "section": "hfss_pi_type",
        "text": "HfssPIType: HFSS PI type.\nhfss_pi_type\nHfssPIType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.hfss_pi_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.hfss_pi_type.html#ansys.edb.core.terminal.terminals.EdgeTerminal.hfss_pi_type",
        "title": "hfss_pi_type > hfss_pi_type > hfss_pi_type",
        "section": "hfss_pi_type > hfss_pi_type",
        "text": "property EdgeTerminal.hfss_pi_type\n\nHfssPIType: HFSS PI type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.is_relative_permitivity_enabled_at_optical_frequency",
        "href": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.is_relative_permitivity_enabled_at_optical_frequency.html#is_relative_permitivity_enabled_at_optical_frequency",
        "title": "is_relative_permitivity_enabled_at_optical_frequency",
        "section": "is_relative_permitivity_enabled_at_optical_frequency",
        "text": "bool: Flag indicating if the relative permitivity at optical frequency is enabled.\nis_relative_permitivity_enabled_at_optical_frequency\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.is_relative_permitivity_enabled_at_optical_frequency",
        "href": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.is_relative_permitivity_enabled_at_optical_frequency.html#ansys.edb.core.definition.debye_model.DebyeModel.is_relative_permitivity_enabled_at_optical_frequency",
        "title": "is_relative_permitivity_enabled_at_optical_frequency > is_relative_permitivity_enabled_at_optical_frequency > is_relative_permitivity_enabled_at_optical_frequency",
        "section": "is_relative_permitivity_enabled_at_optical_frequency > is_relative_permitivity_enabled_at_optical_frequency",
        "text": "property DebyeModel.is_relative_permitivity_enabled_at_optical_frequency\n\nbool: Flag indicating if the relative permitivity at optical frequency is enabled.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDs given a product ID for the layout object.\nID representing a product that supports the EDB.\nAll user-defined attribute IDs for properties stored in the object\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.get_product_property_ids.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "ComponentGroup.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nReturns\n\npython:list[python:int]\n\nAll user-defined attribute IDs for properties stored in the object\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.netlist_model.NetlistModel.netlist",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.netlist_model.NetlistModel.netlist.html#netlist",
        "title": "netlist",
        "section": "netlist",
        "text": "str: Netlist name.\nnetlist\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.netlist_model.NetlistModel.netlist",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.netlist_model.NetlistModel.netlist.html#ansys.edb.core.hierarchy.netlist_model.NetlistModel.netlist",
        "title": "netlist > netlist > netlist",
        "section": "netlist > netlist",
        "text": "property NetlistModel.netlist\n\nstr: Netlist name.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.layer",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.layer.html#layer",
        "title": "layer",
        "section": "layer",
        "text": "Layer: Layer that the primitive object is on.\nlayer\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.layer",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.layer.html#ansys.edb.core.primitive.primitive.Rectangle.layer",
        "title": "layer > layer > layer",
        "section": "layer > layer",
        "text": "property Rectangle.layer\n\nLayer: Layer that the primitive object is on.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.intersection_type",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.intersection_type.html#intersection_type",
        "title": "intersection_type",
        "section": "intersection_type",
        "text": "Get the intersection type with another polygon.\nOther polygon.\nTolerance.\nTrue when successful, False when failed.\nintersection_type\nPolygonData\npython:float\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.intersection_type",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.intersection_type.html#ansys.edb.core.geometry.polygon_data.PolygonData.intersection_type",
        "title": "intersection_type > intersection_type > intersection_type",
        "section": "intersection_type > intersection_type",
        "text": "PolygonData.intersection_type(other, tol=1e-09)\n\nGet the intersection type with another polygon.\n\nParameters\n\nother\n\nPolygonData\n\nOther polygon.\n\ntol\n\npython:float, default: 1e-9\n\nTolerance.\n\nReturns\n\nbool\n\nTrue when successful, False when failed.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the product property.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.get_product_property.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "PadstackInstanceTerminal.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nReturns\n\npython:str\n\nString stored in the product property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.ungroup",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.ungroup.html#ungroup",
        "title": "ungroup",
        "section": "ungroup",
        "text": "Dissolve the group.\nWhether all containing groups should also be resolved.\nungroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.ungroup",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.ungroup.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.ungroup",
        "title": "ungroup > ungroup > ungroup",
        "section": "ungroup > ungroup",
        "text": "ComponentGroup.ungroup(recursive)\n\nDissolve the group.\n\nParameters\n\nrecursive\n\nbool\n\nWhether all containing groups should also be resolved.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.create_hfss.html#create_hfss",
        "title": "create_hfss",
        "section": "create_hfss",
        "text": "Create an HFSS model from an MCAD file.\nHFSS model created.\ncreate_hfss\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.create_hfss.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.create_hfss",
        "title": "create_hfss > create_hfss > create_hfss",
        "section": "create_hfss > create_hfss",
        "text": "TerminalInstanceTerminal.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nReturns\n\nMcadModel\n\nHFSS model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.is_mcad.html#is_mcad",
        "title": "is_mcad",
        "section": "is_mcad",
        "text": "Determine if a connectable object is an MCAD model.\nThis method makes a call directly on a Connectable.\nis_mcad"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.is_mcad.html#ansys.edb.core.layout.mcad_model.McadModel.is_mcad",
        "title": "is_mcad > is_mcad > is_mcad",
        "section": "is_mcad > is_mcad",
        "text": "classmethod McadModel.is_mcad(connectable)\n\nDetermine if a connectable object is an MCAD model.\n\nThis method makes a call directly on a Connectable.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.add_via_layer",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.add_via_layer.html#add_via_layer",
        "title": "add_via_layer",
        "section": "add_via_layer",
        "text": "Add a via layer to the layer collection.\nadd_via_layer\nViaLayer\nViaLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.add_via_layer",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.add_via_layer.html#ansys.edb.core.layer.layer_collection.LayerCollection.add_via_layer",
        "title": "add_via_layer > add_via_layer > add_via_layer",
        "section": "add_via_layer > add_via_layer",
        "text": "LayerCollection.add_via_layer(via_layer_to_add)\n\nAdd a via layer to the layer collection.\n\nParameters\n\nvia_layer_to_add\n\nViaLayer\n\n\n\nReturns\n\nViaLayer\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireType.INVALID",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireType.INVALID.html#invalid",
        "title": "INVALID",
        "section": "INVALID",
        "text": "INVALID"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireType.INVALID",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireType.INVALID.html#ansys.edb.core.primitive.primitive.BondwireType.INVALID",
        "title": "INVALID > INVALID > INVALID",
        "section": "INVALID > INVALID",
        "text": "BondwireType.INVALID = -1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_SQUARE",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_SQUARE.html#padgeomtype_square",
        "title": "PADGEOMTYPE_SQUARE",
        "section": "PADGEOMTYPE_SQUARE",
        "text": "PADGEOMTYPE_SQUARE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_SQUARE",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_SQUARE.html#ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_SQUARE",
        "title": "PADGEOMTYPE_SQUARE > PADGEOMTYPE_SQUARE > PADGEOMTYPE_SQUARE",
        "section": "PADGEOMTYPE_SQUARE > PADGEOMTYPE_SQUARE",
        "text": "PadGeometryType.PADGEOMTYPE_SQUARE = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.hfss_solver_properties",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.hfss_solver_properties.html#hfss_solver_properties",
        "title": "hfss_solver_properties",
        "section": "hfss_solver_properties",
        "text": "HFSSSolverProperties: HFSS solver properties of the layer.\nhfss_solver_properties"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.hfss_solver_properties",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.hfss_solver_properties.html#ansys.edb.core.layer.stackup_layer.StackupLayer.hfss_solver_properties",
        "title": "hfss_solver_properties > hfss_solver_properties > hfss_solver_properties",
        "section": "hfss_solver_properties > hfss_solver_properties",
        "text": "property StackupLayer.hfss_solver_properties\n\nHFSSSolverProperties: HFSS solver properties of the layer.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.msg",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.msg",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.msg.html#ansys.edb.core.layer.via_layer.ViaLayer.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property ViaLayer.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXSimulationSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXSimulationSettings.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents this object’s ID.\nThis property is read-only.\nmsg\nEDBObjMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXSimulationSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXSimulationSettings.msg.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXSimulationSettings.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property RaptorXSimulationSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object’s ID.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.location",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.location.html#location",
        "title": "location",
        "section": "location",
        "text": "tuple (Value,         Value):         Location [x, y] of the hierarchy object on the placement_layer object.\nlocation\ntuple\nValue\nValue\nplacement_layer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.location",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.location.html#ansys.edb.core.hierarchy.via_group.ViaGroup.location",
        "title": "location > location > location",
        "section": "location > location",
        "text": "property ViaGroup.location\n\ntuple (Value,         Value):         Location [x, y] of the hierarchy object on the placement_layer object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.find_by_id.html#find_by_id",
        "title": "find_by_id",
        "section": "find_by_id",
        "text": "Find a Connectable object by database ID in a given layout.\nLayout to search for the Connectable object.\nDatabase ID.\nConnectable object with the given database ID.\nfind_by_id\nLayout\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.find_by_id.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.find_by_id",
        "title": "find_by_id > find_by_id > find_by_id",
        "section": "find_by_id > find_by_id",
        "text": "classmethod PadstackInstanceTerminal.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the Connectable object.\n\nuid\n\npython:int\n\nDatabase ID.\n\nReturns\n\nConnectable\n\nConnectable object with the given database ID.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.cast",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.cast.html#cast",
        "title": "cast",
        "section": "cast",
        "text": "Cast the group object to the correct concrete type.\ncast\nGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.cast",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.cast.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.cast",
        "title": "cast > cast > cast",
        "section": "cast > cast",
        "text": "ComponentGroup.cast()\n\nCast the group object to the correct concrete type.\n\nReturns\n\nGroup\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.layout_obj_type.html#layout_obj_type",
        "title": "layout_obj_type",
        "section": "layout_obj_type",
        "text": "layout_obj_type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.layout_obj_type.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.layout_obj_type",
        "title": "layout_obj_type > layout_obj_type > layout_obj_type",
        "section": "layout_obj_type > layout_obj_type",
        "text": "PinGroupTerminal.layout_obj_type = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.reference_layer",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.reference_layer.html#reference_layer",
        "title": "reference_layer",
        "section": "reference_layer",
        "text": "Layer: Layer that the terminal references, if any, by either layer object or name.\nreference_layer\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.reference_layer",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.reference_layer.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.reference_layer",
        "title": "reference_layer > reference_layer > reference_layer",
        "section": "reference_layer > reference_layer",
        "text": "property TerminalInstanceTerminal.reference_layer\n\nLayer: Layer that the terminal references, if any, by either layer object or name.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.bbox",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.bbox.html#bbox",
        "title": "bbox",
        "section": "bbox",
        "text": "Compute the bounding box.\nbbox\npython:tuple\nPointData\nPointData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.bbox",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.bbox.html#ansys.edb.core.geometry.polygon_data.PolygonData.bbox",
        "title": "bbox > bbox > bbox",
        "section": "bbox > bbox",
        "text": "PolygonData.bbox()\n\nCompute the bounding box.\n\nReturns\n\npython:tuple[PointData, PointData]\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.delete",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the material definition.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.delete",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.delete.html#ansys.edb.core.definition.material_def.MaterialDef.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "MaterialDef.delete()\n\nDelete the material definition.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.dc",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.dc.html#dc",
        "title": "dc",
        "section": "dc",
        "text": "SIWaveDCSettings: DC settings for SIWave simulations.\ndc\nSIWaveDCSettings"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.dc",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.dc.html#ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.dc",
        "title": "dc > dc > dc",
        "section": "dc > dc",
        "text": "property SIWaveDCIRSimulationSettings.dc\n\nSIWaveDCSettings: DC settings for SIWave simulations.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.create",
        "href": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create an RLC component property.\nRLC component property created.\ncreate\nRLCComponentProperty"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.create",
        "href": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.create.html#ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod RLCComponentProperty.create()\n\nCreate an RLC component property.\n\nReturns\n\nRLCComponentProperty\n\nRLC component property created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.use_defeature_absolute_length",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.use_defeature_absolute_length.html#use_defeature_absolute_length",
        "title": "use_defeature_absolute_length",
        "section": "use_defeature_absolute_length",
        "text": "bool: Flag indicating if absolute length or extent ratio is used when defeaturing polygons.\nuse_defeature_absolute_length\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.use_defeature_absolute_length",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.use_defeature_absolute_length.html#ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.use_defeature_absolute_length",
        "title": "use_defeature_absolute_length > use_defeature_absolute_length > use_defeature_absolute_length",
        "section": "use_defeature_absolute_length > use_defeature_absolute_length",
        "text": "property AdvancedSettings.use_defeature_absolute_length\n\nbool: Flag indicating if absolute length or extent ratio is used when defeaturing polygons.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_mcad_3d_comp.html#is_mcad_3d_comp",
        "title": "is_mcad_3d_comp",
        "section": "is_mcad_3d_comp",
        "text": "bool: Flag indicating if this is a 3D composite MCAD model.\nThis property is read-only.\nis_mcad_3d_comp\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_mcad_3d_comp.html#ansys.edb.core.terminal.terminals.BundleTerminal.is_mcad_3d_comp",
        "title": "is_mcad_3d_comp > is_mcad_3d_comp > is_mcad_3d_comp",
        "section": "is_mcad_3d_comp > is_mcad_3d_comp",
        "text": "property BundleTerminal.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_interface_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_interface_terminal.html#is_interface_terminal",
        "title": "is_interface_terminal",
        "section": "is_interface_terminal",
        "text": "bool: Flag indicating if the terminal is an interface.\nis_interface_terminal\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_interface_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_interface_terminal.html#ansys.edb.core.terminal.terminals.PointTerminal.is_interface_terminal",
        "title": "is_interface_terminal > is_interface_terminal > is_interface_terminal",
        "section": "is_interface_terminal > is_interface_terminal",
        "text": "property PointTerminal.is_interface_terminal\n\nbool: Flag indicating if the terminal is an interface.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_reference_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_reference_terminal.html#is_reference_terminal",
        "title": "is_reference_terminal",
        "section": "is_reference_terminal",
        "text": "bool: Flag indicating if the terminal is a reference terminal.\nis_reference_terminal\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_reference_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_reference_terminal.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.is_reference_terminal",
        "title": "is_reference_terminal > is_reference_terminal > is_reference_terminal",
        "section": "is_reference_terminal > is_reference_terminal",
        "text": "property PinGroupTerminal.is_reference_terminal\n\nbool: Flag indicating if the terminal is a reference terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_mcad.html#is_mcad",
        "title": "is_mcad",
        "section": "is_mcad",
        "text": "bool: Flag indicating if this is an MCAD model.\nThis property is read-only.\nis_mcad\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_mcad.html#ansys.edb.core.primitive.primitive.Polygon.is_mcad",
        "title": "is_mcad > is_mcad > is_mcad",
        "section": "is_mcad > is_mcad",
        "text": "property Polygon.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.source_version",
        "href": "api/_autosummary/ansys.edb.core.database.Database.source_version.html#source_version",
        "title": "source_version",
        "section": "source_version",
        "text": "str: Source version for the database.\nsource_version\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.source_version",
        "href": "api/_autosummary/ansys.edb.core.database.Database.source_version.html#ansys.edb.core.database.Database.source_version",
        "title": "source_version > source_version > source_version",
        "section": "source_version > source_version",
        "text": "property Database.source_version\n\nstr: Source version for the database.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.is_null.html#ansys.edb.core.definition.dataset_def.DatasetDef.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property DatasetDef.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.find_by_id.html#find_by_id",
        "title": "find_by_id",
        "section": "find_by_id",
        "text": "Find a Connectable object by database ID in a given layout.\nLayout to search for the Connectable object.\nDatabase ID.\nConnectable object with the given database ID.\nfind_by_id\nLayout\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.find_by_id.html#ansys.edb.core.primitive.primitive.Rectangle.find_by_id",
        "title": "find_by_id > find_by_id > find_by_id",
        "section": "find_by_id > find_by_id",
        "text": "classmethod Rectangle.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the Connectable object.\n\nuid\n\npython:int\n\nDatabase ID.\n\nReturns\n\nConnectable\n\nConnectable object with the given database ID.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.get_material",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.get_material.html#get_material",
        "title": "get_material",
        "section": "get_material",
        "text": "Get the material for the 3D structure.\nWhether to resolve any references in the material name.\nget_material\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.get_material",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.get_material.html#ansys.edb.core.hierarchy.structure3d.Structure3D.get_material",
        "title": "get_material > get_material > get_material",
        "section": "get_material > get_material",
        "text": "Structure3D.get_material(evaluate)\n\nGet the material for the 3D structure.\n\nParameters\n\nevaluate\n\nbool\n\nWhether to resolve any references in the material name.\n\nReturns\n\npython:str\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.obj_type",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.obj_type.html#obj_type",
        "title": "obj_type",
        "section": "obj_type",
        "text": "LayoutObjType: Layout object type.\nThis property is read-only.\nobj_type\nLayoutObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.obj_type",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.obj_type.html#ansys.edb.core.hierarchy.via_group.ViaGroup.obj_type",
        "title": "obj_type > obj_type > obj_type",
        "section": "obj_type > obj_type",
        "text": "property ViaGroup.obj_type\n\nLayoutObjType: Layout object type.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.is_mcad_stride.html#is_mcad_stride",
        "title": "is_mcad_stride",
        "section": "is_mcad_stride",
        "text": "Determine if a connectable object is a Stride model.\nThis method makes a call directly on a Connectable.\nis_mcad_stride"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.is_mcad_stride.html#ansys.edb.core.layout.mcad_model.McadModel.is_mcad_stride",
        "title": "is_mcad_stride > is_mcad_stride > is_mcad_stride",
        "section": "is_mcad_stride > is_mcad_stride",
        "text": "classmethod McadModel.is_mcad_stride(connectable)\n\nDetermine if a connectable object is a Stride model.\n\nThis method makes a call directly on a Connectable.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.product_solver_names",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.product_solver_names.html#product_solver_names",
        "title": "product_solver_names",
        "section": "product_solver_names",
        "text": "Get the list of solver names.\nID of the product.\nproduct_solver_names\nProductIdType\npython:list\nof\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.product_solver_names",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.product_solver_names.html#ansys.edb.core.terminal.terminals.PointTerminal.product_solver_names",
        "title": "product_solver_names > product_solver_names > product_solver_names",
        "section": "product_solver_names > product_solver_names",
        "text": "PointTerminal.product_solver_names(product_id)\n\nGet the list of solver names.\n\nParameters\n\nproduct_id\n\nProductIdType\n\nID of the product.\n\nReturns\n\npython:list of python:str\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_mcad_stride.html#is_mcad_stride",
        "title": "is_mcad_stride",
        "section": "is_mcad_stride",
        "text": "bool: Flag indicating if this is a Stride MCAD model.\nThis property is read-only.\nis_mcad_stride\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_mcad_stride.html#ansys.edb.core.primitive.primitive.Circle.is_mcad_stride",
        "title": "is_mcad_stride > is_mcad_stride > is_mcad_stride",
        "section": "is_mcad_stride > is_mcad_stride",
        "text": "property Circle.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.layout",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.layout.html#layout",
        "title": "layout",
        "section": "layout",
        "text": "Layout: Layout owning the object.\nThis property is read-only.\nlayout\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.layout",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.layout.html#ansys.edb.core.terminal.terminals.Terminal.layout",
        "title": "layout > layout > layout",
        "section": "layout > layout",
        "text": "property Terminal.layout\n\nLayout: Layout owning the object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.do_deembed_gap_l",
        "href": "api/_autosummary/ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.do_deembed_gap_l.html#do_deembed_gap_l",
        "title": "do_deembed_gap_l",
        "section": "do_deembed_gap_l",
        "text": "Enable port impedance renormalization.\nTrue when successful, False when failed.\ndo_deembed_gap_l\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.do_deembed_gap_l",
        "href": "api/_autosummary/ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.do_deembed_gap_l.html#ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.do_deembed_gap_l",
        "title": "do_deembed_gap_l > do_deembed_gap_l > do_deembed_gap_l",
        "section": "do_deembed_gap_l > do_deembed_gap_l",
        "text": "PortPostProcessingProp.do_deembed_gap_l\n\nEnable port impedance renormalization.\n\nReturns\n\nbool\n\nTrue when successful, False when failed.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.create_stride",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.create_stride.html#create_stride",
        "title": "create_stride",
        "section": "create_stride",
        "text": "Create a Stride model from an MCAD file.\nStride model created.\ncreate_stride\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.create_stride",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.create_stride.html#ansys.edb.core.terminal.terminals.BundleTerminal.create_stride",
        "title": "create_stride > create_stride > create_stride",
        "section": "create_stride > create_stride",
        "text": "BundleTerminal.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nReturns\n\nMcadModel\n\nStride model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.create",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a 3D structure.\nLayout to create the 3D structure in.\nName of the 3D structure.\n3D structure created.\ncreate\nLayout\npython:str\nStructure3D"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.create",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.create.html#ansys.edb.core.hierarchy.structure3d.Structure3D.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod Structure3D.create(layout, name)\n\nCreate a 3D structure.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to create the 3D structure in.\n\nname\n\npython:str\n\nName of the 3D structure.\n\nReturns\n\nStructure3D\n\n3D structure created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.html#polygon",
        "title": "Polygon",
        "section": "Polygon",
        "text": "Represents a polygon object.\nPolygon.add_void(hole)\nAdd a void to the primitive.\nPolygon.cast()\nCast the primitive object to the correct concrete type.\nPolygon.create(layout, layer, net, polygon_data)\nCreate a polygon.\nPolygon.create_3d_comp()\nCreate a 3D composite model from an MCAD file.\nPolygon.create_hfss()\nCreate an HFSS model from an MCAD file.\nPolygon.create_stride()\nCreate a Stride model from an MCAD file.\nPolygon.delete()\nDelete the layout object.\nPolygon.find_by_id(layout, uid)\nFind a Connectable object by database ID in a given layout.\nPolygon.get_hfss_prop()\nGet HFSS properties.\nPolygon.get_product_property(prod_id, attr_id)\nGet the product property of the layout object for a given product ID and attribute ID.\nPolygon.get_product_property_ids(prod_id)\nGet a list of attribute IDs given a product ID for the layout object.\nPolygon.make_zone_primitive(zone_id)\nMake the primitive a zone primitive with a zone specified by the provided ID.\nPolygon.remove_hfss_prop()\nRemove HFSS properties.\nPolygon.set_hfss_prop(material, solve_inside)\nSet HFSS properties.\nPolygon.set_product_property(prod_id, ...)\nSet the product property of the layout object for a given product ID and attribute ID.\nPolygon.can_be_zone_primitive\nbool: Flag indicating if a polygon can be a zone.\nPolygon.component\nComponentGroup:         Component of the Connectable object.\nPolygon.edb_uid\nint: Unique, persistent ID for the Connectable object.\nPolygon.group\nGroup object.\nPolygon.has_voids\nbool: Flag indicating if a primitive has voids inside.\nPolygon.id\nint: Unique ID of the EDB object.\nPolygon.is_mcad\nbool: Flag indicating if this is an MCAD model.\nPolygon.is_mcad_3d_comp\nbool: Flag indicating if this is a 3D composite MCAD model.\nPolygon.is_mcad_hfss\nbool: Flag indicating if this is an HFSS MCAD model.\nPolygon.is_mcad_stride\nbool: Flag indicating if this is a Stride MCAD model.\nPolygon.is_negative\nbool: Flag indicating if the primitive is negative.\nPolygon.is_null\nbool: Flag indicating if the object exists in the database.\nPolygon.is_parameterized\nbool: Whether the primitive is parametrized.\nPolygon.is_void\nbool: Flag indicating if a primitive is a void.\nPolygon.is_zone_primitive\nbool: Flag indicating if the primitive object is a zone.\nPolygon.layer\nLayer: Layer that the primitive object is on.\nPolygon.layout\nLayout: Layout owning the object.\nPolygon.layout_obj_type\n\nPolygon.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nPolygon.net\nNet: Net of the Connectable object.\nPolygon.obj_type\nLayoutObjType: Layout object type.\nPolygon.owner\nPrimitive: Owner of the primitive object.\nPolygon.polygon_data\nPolygonData: Outer contour of the polygon.\nPolygon.primitive_type\nPrimitiveType: Primitive type of the primitive.\nPolygon.voids\nlist of Primitive: List of void        primitive objects inside the primitive.\nPolygon\nPolygon.add_void\nPolygon.cast\nPolygon.create\nPolygon.create_3d_comp\nPolygon.create_hfss\nPolygon.create_stride\nPolygon.delete\nPolygon.find_by_id\nPolygon.get_hfss_prop\nPolygon.get_product_property\nPolygon.get_product_property_ids\nPolygon.make_zone_primitive\nPolygon.remove_hfss_prop\nPolygon.set_hfss_prop\nPolygon.set_product_property\nPolygon.can_be_zone_primitive\nbool\nPolygon.component\nComponentGroup\nPolygon.edb_uid\nint\nPolygon.group\nGroup\nPolygon.has_voids\nbool\nPolygon.id\nint\nPolygon.is_mcad\nbool\nPolygon.is_mcad_3d_comp\nbool\nPolygon.is_mcad_hfss\nbool\nPolygon.is_mcad_stride\nbool\nPolygon.is_negative\nbool\nPolygon.is_null\nbool\nPolygon.is_parameterized\nbool\nPolygon.is_void\nbool\nPolygon.is_zone_primitive\nbool\nPolygon.layer\nLayer\nPolygon.layout\nLayout\nPolygon.layout_obj_type\nPolygon.msg\nEDBObjMessage\nPolygon.net\nNet\nPolygon.obj_type\nLayoutObjType\nPolygon.owner\nPrimitive\nPolygon.polygon_data\nPolygonData\nPolygon.primitive_type\nPrimitiveType\nPolygon.voids\nlist\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.html#ansys.edb.core.primitive.primitive.Polygon",
        "title": "Polygon > Polygon > Polygon",
        "section": "Polygon > Polygon",
        "text": "class ansys.edb.core.primitive.primitive.Polygon(msg)\n\nRepresents a polygon object.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nPolygon.add_void(hole)\n\nAdd a void to the primitive.\n\nPolygon.cast()\n\nCast the primitive object to the correct concrete type.\n\nPolygon.create(layout, layer, net, polygon_data)\n\nCreate a polygon.\n\nPolygon.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nPolygon.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nPolygon.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nPolygon.delete()\n\nDelete the layout object.\n\nPolygon.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nPolygon.get_hfss_prop()\n\nGet HFSS properties.\n\nPolygon.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nPolygon.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nPolygon.make_zone_primitive(zone_id)\n\nMake the primitive a zone primitive with a zone specified by the provided ID.\n\nPolygon.remove_hfss_prop()\n\nRemove HFSS properties.\n\nPolygon.set_hfss_prop(material, solve_inside)\n\nSet HFSS properties.\n\nPolygon.set_product_property(prod_id, ...)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\n\n\nAttributes\n\n\n\n\n\n\n\nPolygon.can_be_zone_primitive\n\nbool: Flag indicating if a polygon can be a zone.\n\nPolygon.component\n\nComponentGroup:         Component of the Connectable object.\n\nPolygon.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nPolygon.group\n\nGroup object.\n\nPolygon.has_voids\n\nbool: Flag indicating if a primitive has voids inside.\n\nPolygon.id\n\nint: Unique ID of the EDB object.\n\nPolygon.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nPolygon.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nPolygon.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nPolygon.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nPolygon.is_negative\n\nbool: Flag indicating if the primitive is negative.\n\nPolygon.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nPolygon.is_parameterized\n\nbool: Whether the primitive is parametrized.\n\nPolygon.is_void\n\nbool: Flag indicating if a primitive is a void.\n\nPolygon.is_zone_primitive\n\nbool: Flag indicating if the primitive object is a zone.\n\nPolygon.layer\n\nLayer: Layer that the primitive object is on.\n\nPolygon.layout\n\nLayout: Layout owning the object.\n\nPolygon.layout_obj_type\n\n\n\nPolygon.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nPolygon.net\n\nNet: Net of the Connectable object.\n\nPolygon.obj_type\n\nLayoutObjType: Layout object type.\n\nPolygon.owner\n\nPrimitive: Owner of the primitive object.\n\nPolygon.polygon_data\n\nPolygonData: Outer contour of the polygon.\n\nPolygon.primitive_type\n\nPrimitiveType: Primitive type of the primitive.\n\nPolygon.voids\n\nlist of Primitive: List of void        primitive objects inside the primitive.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.name",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the net class.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.name",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.name.html#ansys.edb.core.net.net_class.NetClass.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property NetClass.name\n\nstr: Name of the net class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.delete",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the layout object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.delete",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.delete.html#ansys.edb.core.terminal.terminals.BundleTerminal.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "BundleTerminal.delete()\n\nDelete the layout object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.model_path",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.model_path.html#model_path",
        "title": "model_path",
        "section": "model_path",
        "text": "str: Path to the SPICE model file.\nmodel_path\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.model_path",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.model_path.html#ansys.edb.core.hierarchy.spice_model.SPICEModel.model_path",
        "title": "model_path > model_path > model_path",
        "section": "model_path > model_path",
        "text": "property SPICEModel.model_path\n\nstr: Path to the SPICE model file.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.reference_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.reference_terminal.html#reference_terminal",
        "title": "reference_terminal",
        "section": "reference_terminal",
        "text": "Terminal: Terminal that the terminal references, if any.\nreference_terminal\nTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.reference_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.reference_terminal.html#ansys.edb.core.terminal.terminals.Terminal.reference_terminal",
        "title": "reference_terminal > reference_terminal > reference_terminal",
        "section": "reference_terminal > reference_terminal",
        "text": "property Terminal.reference_terminal\n\nTerminal: Terminal that the terminal references, if any.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.get_clip_info",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.get_clip_info.html#get_clip_info",
        "title": "get_clip_info",
        "section": "get_clip_info",
        "text": "Get the data used to clip the path.\nReturns a tuple in this format:\n(clipping_poly, keep_inside)\nclipping_poly : PolygonData used to clip the path.\nkeep_inside : Indicates whether the part of the path inside the polygon is preserved.\nget_clip_info\npython:tuple\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.get_clip_info",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.get_clip_info.html#ansys.edb.core.primitive.primitive.Path.get_clip_info",
        "title": "get_clip_info > get_clip_info > get_clip_info",
        "section": "get_clip_info > get_clip_info",
        "text": "Path.get_clip_info()\n\nGet the data used to clip the path.\n\nReturns\n\npython:tuple[PolygonData, bool]\n\nReturns a tuple in this format:\n\n(clipping_poly, keep_inside)\n\nclipping_poly : PolygonData used to clip the path.\n\nkeep_inside : Indicates whether the part of the path inside the polygon is preserved.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.touching_geometry",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.touching_geometry.html#touching_geometry",
        "title": "touching_geometry",
        "section": "touching_geometry",
        "text": "Find all geometries touching an RTree object.\nThe provided RTree object is not returned in the touching list.\nR-tree data object with index in this form: (polygon, id pair).\nWhether to increment the visit counter for items returned in the list\nof connected geometries.\nAll touching RTree objects.\ntouching_geometry\nRTreeObj\n(polygon, id pair)\nlist\nof\nRTreeObj"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.touching_geometry",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.touching_geometry.html#ansys.edb.core.geometry.r_tree.RTree.touching_geometry",
        "title": "touching_geometry > touching_geometry > touching_geometry",
        "section": "touching_geometry > touching_geometry",
        "text": "RTree.touching_geometry(rtree_obj, increment_visit)\n\nFind all geometries touching an RTree object.\n\nThe provided RTree object is not returned in the touching list.\n\nParameters\n\nrtree_obj\n\nRTreeObj\n\nR-tree data object with index in this form: (polygon, id pair).\n\nincrement_visit: bool\n\nWhether to increment the visit counter for items returned in the list\nof connected geometries.\n\nReturns\n\nlist of RTreeObj\n\nAll touching RTree objects.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.term_to_ground",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.term_to_ground.html#term_to_ground",
        "title": "term_to_ground",
        "section": "term_to_ground",
        "text": "SourceTermToGroundType: Source terminal-to-ground type.\nterm_to_ground\nSourceTermToGroundType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.term_to_ground",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.term_to_ground.html#ansys.edb.core.terminal.terminals.PointTerminal.term_to_ground",
        "title": "term_to_ground > term_to_ground > term_to_ground",
        "section": "term_to_ground > term_to_ground",
        "text": "property PointTerminal.term_to_ground\n\nSourceTermToGroundType: Source terminal-to-ground type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.cast",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.cast.html#cast",
        "title": "cast",
        "section": "cast",
        "text": "Cast the terminal object to the correct concrete type, fetching the type if necessary.\ncast\nTerminalType\nTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.cast",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.cast.html#ansys.edb.core.terminal.terminals.Terminal.cast",
        "title": "cast > cast > cast",
        "section": "cast > cast",
        "text": "Terminal.cast(term_type=None)\n\nCast the terminal object to the correct concrete type, fetching the type if necessary.\n\nParameters\n\nterm_type\n\nTerminalType\n\n\n\nReturns\n\nTerminal\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.html#packagedef",
        "title": "PackageDef",
        "section": "PackageDef",
        "text": "Represents a package definition.\nPackageDef.create(db, name)\nCreate a package definition in a given database.\nPackageDef.delete()\nDelete the package definition.\nPackageDef.find_by_id(db, uid)\nFind a package definition object by ID in a given database.\nPackageDef.find_by_name(db, name)\nFind a package definition object by name in a given database.\nPackageDef.get_product_property(prod_id, attr_it)\nGet the product property for a given product ID and attribute ID.\nPackageDef.get_product_property_ids(prod_id)\nGet the list of property IDs for a given property ID.\nPackageDef.set_product_property(prod_id, ...)\nSet the product property for the given product ID and attribute ID.\nPackageDef.definition_type\nDefinitionObjType: Definition type.\nPackageDef.exterior_boundary\nPolygonData:         Exterior boundary of the package definition.\nPackageDef.heat_sink\nHeatSink: Heat sink model assigned to the package.\nPackageDef.height\nValue: Height of the package.\nPackageDef.id\nint: Unique ID of the EDB object.\nPackageDef.is_null\nbool: Flag indicating if the object exists in the database.\nPackageDef.maximum_power\nValue: Maximum power of the package.\nPackageDef.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nPackageDef.name\nstr: Name of the package definition.\nPackageDef.operating_power\nValue: Operating power of the package.\nPackageDef.thermal_conductivity\nValue: Thermal conductivity of the package.\nPackageDef.theta_jb\nValue: Theta JB (junction to board) of the package.\nPackageDef.theta_jc\nValue: Theta JC (junction to case) of the package.\nPackageDef\nPackageDef.create\nPackageDef.delete\nPackageDef.find_by_id\nPackageDef.find_by_name\nPackageDef.get_product_property\nPackageDef.get_product_property_ids\nPackageDef.set_product_property\nPackageDef.definition_type\nDefinitionObjType\nPackageDef.exterior_boundary\nPolygonData\nPackageDef.heat_sink\nHeatSink\nPackageDef.height\nValue\nPackageDef.id\nint\nPackageDef.is_null\nbool\nPackageDef.maximum_power\nValue\nPackageDef.msg\nEDBObjMessage\nPackageDef.name\nstr\nPackageDef.operating_power\nValue\nPackageDef.thermal_conductivity\nValue\nPackageDef.theta_jb\nValue\nPackageDef.theta_jc\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.html#ansys.edb.core.definition.package_def.PackageDef",
        "title": "PackageDef > PackageDef > PackageDef",
        "section": "PackageDef > PackageDef",
        "text": "class ansys.edb.core.definition.package_def.PackageDef(msg)\n\nRepresents a package definition.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nPackageDef.create(db, name)\n\nCreate a package definition in a given database.\n\nPackageDef.delete()\n\nDelete the package definition.\n\nPackageDef.find_by_id(db, uid)\n\nFind a package definition object by ID in a given database.\n\nPackageDef.find_by_name(db, name)\n\nFind a package definition object by name in a given database.\n\nPackageDef.get_product_property(prod_id, attr_it)\n\nGet the product property for a given product ID and attribute ID.\n\nPackageDef.get_product_property_ids(prod_id)\n\nGet the list of property IDs for a given property ID.\n\nPackageDef.set_product_property(prod_id, ...)\n\nSet the product property for the given product ID and attribute ID.\n\n\n\nAttributes\n\n\n\n\n\n\n\nPackageDef.definition_type\n\nDefinitionObjType: Definition type.\n\nPackageDef.exterior_boundary\n\nPolygonData:         Exterior boundary of the package definition.\n\nPackageDef.heat_sink\n\nHeatSink: Heat sink model assigned to the package.\n\nPackageDef.height\n\nValue: Height of the package.\n\nPackageDef.id\n\nint: Unique ID of the EDB object.\n\nPackageDef.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nPackageDef.maximum_power\n\nValue: Maximum power of the package.\n\nPackageDef.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nPackageDef.name\n\nstr: Name of the package definition.\n\nPackageDef.operating_power\n\nValue: Operating power of the package.\n\nPackageDef.thermal_conductivity\n\nValue: Thermal conductivity of the package.\n\nPackageDef.theta_jb\n\nValue: Theta JB (junction to board) of the package.\n\nPackageDef.theta_jc\n\nValue: Theta JC (junction to case) of the package.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.die_property",
        "href": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.die_property.html#die_property",
        "title": "die_property",
        "section": "die_property",
        "text": "DieProperty: Die property.\nA copy is returned. Use the setter for any modifications to be reflected.\ndie_property\nDieProperty"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.die_property",
        "href": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.die_property.html#ansys.edb.core.definition.ic_component_property.ICComponentProperty.die_property",
        "title": "die_property > die_property > die_property",
        "section": "die_property > die_property",
        "text": "property ICComponentProperty.die_property\n\nDieProperty: Die property.\n\nA copy is returned. Use the setter for any modifications to be reflected.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.set_back_drill_by_depth",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.set_back_drill_by_depth.html#set_back_drill_by_depth",
        "title": "set_back_drill_by_depth",
        "section": "set_back_drill_by_depth",
        "text": "Set the back drill type by depth.\nDrilling depth, which may not align with the layer.\nDrilling diameter.\nWhether to set the back drill type from the bottom.\nset_back_drill_by_depth\nValue\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.set_back_drill_by_depth",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.set_back_drill_by_depth.html#ansys.edb.core.primitive.primitive.PadstackInstance.set_back_drill_by_depth",
        "title": "set_back_drill_by_depth > set_back_drill_by_depth > set_back_drill_by_depth",
        "section": "set_back_drill_by_depth > set_back_drill_by_depth",
        "text": "PadstackInstance.set_back_drill_by_depth(drill_depth, diameter, from_bottom)\n\nSet the back drill type by depth.\n\nParameters\n\ndrill_depth\n\nValue\n\nDrilling depth, which may not align with the layer.\n\ndiameter\n\nValue\n\nDrilling diameter.\n\nfrom_bottom\n\nbool\n\nWhether to set the back drill type from the bottom.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.id.html#ansys.edb.core.primitive.primitive.Primitive.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property Primitive.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the product property.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.get_product_property.html#ansys.edb.core.net.net_class.NetClass.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "NetClass.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nReturns\n\npython:str\n\nString stored in the product property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_from_matrix",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_from_matrix.html#create_from_matrix",
        "title": "create_from_matrix",
        "section": "create_from_matrix",
        "text": "Create a 3D transformation from general matrix data.\nArray (4x4) to copy from.\ncreate_from_matrix\nlist\nof\nlist\nof\nfloats\nTransform3D"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_from_matrix",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_from_matrix.html#ansys.edb.core.utility.transform3d.Transform3D.create_from_matrix",
        "title": "create_from_matrix > create_from_matrix > create_from_matrix",
        "section": "create_from_matrix > create_from_matrix",
        "text": "classmethod Transform3D.create_from_matrix(matrix)\n\nCreate a 3D transformation from general matrix data.\n\nParameters\n\nmatrix\n\nlist of list of floats\n\nArray (4x4) to copy from.\n\nReturns\n\nTransform3D\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.html#transform3d",
        "title": "Transform3D",
        "section": "Transform3D",
        "text": "Represents a 3D transformation.\nRotation angle, specified counter-clockwise in radians, from the rot_axis_from parameter\ntowards the rot_axis_to parameter.\nMirror against the YZ plane.\nTransform3D.create_copy(transform3d)\nCreate a 3D transformation by copying another 3D transformation.\nTransform3D.create_from_angle(zyx_decomposition)\nCreate a 3D transformation from ZYX decomposition.\nTransform3D.create_from_axis(x, y, z)\nCreate a 3D transformation with a rotation matrix from three axes.\nTransform3D.create_from_axis_and_angle(axis, ...)\nCreate a 3D transformation with the given axis and angle.\nTransform3D.create_from_center_scale(center, ...)\nCreate a 3D transformation for scaling about a point.\nTransform3D.create_from_matrix(matrix)\nCreate a 3D transformation from general matrix data.\nTransform3D.create_from_offset(offset)\nCreate a 3D transformation with an offset.\nTransform3D.create_from_one_axis_to_another(...)\nCreate a 3D transformformation with rotation from an axis to an axis.\nTransform3D.create_from_transform_2d(...)\nCreate a 3D transformation with transform data.\nTransform3D.create_identity()\nCreate an identity transformation 3D matrix.\nTransform3D.invert()\nInvert the 3D transformation.\nTransform3D.is_equal(other_transform, ...)\nEquality check for two #D transformations.\nTransform3D.is_identity(eps, rotation)\nGet identity of the 3D transformation.\nTransform3D.transform_point(point)\nGet the transform point of the 3D transformation.\nTransform3D.transpose()\nTranspose the 3D transformation.\nTransform3D.axis\nlist of Point3DLike: Axis.\nTransform3D.id\nint: Unique ID of the EDB object.\nTransform3D.is_null\nbool: Flag indicating if the object exists in the database.\nTransform3D.matrix\nlist of list of floats : Transformation matrix as a 2D 4x4 array.\nTransform3D.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nTransform3D.scaling\nPoint3DLike: Scaling.\nTransform3D.shift\nPoint3DLike: Shift.\nTransform3D.z_y_x_rotation\nPoint3DLike: ZYX rotation.\nTransform3D\npython:str\npython:int\npython:float\ncomplex\nValue\nrot_axis_from\nrot_axis_to\nTransform3D.create_copy\nTransform3D.create_from_angle\nTransform3D.create_from_axis\nTransform3D.create_from_axis_and_angle\nTransform3D.create_from_center_scale\nTransform3D.create_from_matrix\nTransform3D.create_from_offset\nTransform3D.create_from_one_axis_to_another\nTransform3D.create_from_transform_2d\nTransform3D.create_identity\nTransform3D.invert\nTransform3D.is_equal\nTransform3D.is_identity\nTransform3D.transform_point\nTransform3D.transpose\nTransform3D.axis\nlist\nTransform3D.id\nint\nTransform3D.is_null\nbool\nTransform3D.matrix\nlist\nlist\nfloats\nTransform3D.msg\nEDBObjMessage\nTransform3D.scaling\nTransform3D.shift\nTransform3D.z_y_x_rotation"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.html#ansys.edb.core.utility.transform3d.Transform3D",
        "title": "Transform3D > Transform3D > Transform3D",
        "section": "Transform3D > Transform3D",
        "text": "class ansys.edb.core.utility.transform3d.Transform3D(msg)\n\nRepresents a 3D transformation.\n\nParameters\n\nanchor\n\nPoint3DLike\n\n\n\nrot_axis_from\n\nPoint3DLike\n\n\n\nrot_axis_to\n\nPoint3DLike\n\n\n\nrot_angle\n\npython:str, python:int, python:float, complex, Value\n\nRotation angle, specified counter-clockwise in radians, from the rot_axis_from parameter\ntowards the rot_axis_to parameter.\n\noffset\n\nPoint3DLike\n\n\n\nmirror\n\nbool\n\nMirror against the YZ plane.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nTransform3D.create_copy(transform3d)\n\nCreate a 3D transformation by copying another 3D transformation.\n\nTransform3D.create_from_angle(zyx_decomposition)\n\nCreate a 3D transformation from ZYX decomposition.\n\nTransform3D.create_from_axis(x, y, z)\n\nCreate a 3D transformation with a rotation matrix from three axes.\n\nTransform3D.create_from_axis_and_angle(axis, ...)\n\nCreate a 3D transformation with the given axis and angle.\n\nTransform3D.create_from_center_scale(center, ...)\n\nCreate a 3D transformation for scaling about a point.\n\nTransform3D.create_from_matrix(matrix)\n\nCreate a 3D transformation from general matrix data.\n\nTransform3D.create_from_offset(offset)\n\nCreate a 3D transformation with an offset.\n\nTransform3D.create_from_one_axis_to_another(...)\n\nCreate a 3D transformformation with rotation from an axis to an axis.\n\nTransform3D.create_from_transform_2d(...)\n\nCreate a 3D transformation with transform data.\n\nTransform3D.create_identity()\n\nCreate an identity transformation 3D matrix.\n\nTransform3D.invert()\n\nInvert the 3D transformation.\n\nTransform3D.is_equal(other_transform, ...)\n\nEquality check for two #D transformations.\n\nTransform3D.is_identity(eps, rotation)\n\nGet identity of the 3D transformation.\n\nTransform3D.transform_point(point)\n\nGet the transform point of the 3D transformation.\n\nTransform3D.transpose()\n\nTranspose the 3D transformation.\n\n\n\nAttributes\n\n\n\n\n\n\n\nTransform3D.axis\n\nlist of Point3DLike: Axis.\n\nTransform3D.id\n\nint: Unique ID of the EDB object.\n\nTransform3D.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nTransform3D.matrix\n\nlist of list of floats : Transformation matrix as a 2D 4x4 array.\n\nTransform3D.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nTransform3D.scaling\n\nPoint3DLike: Scaling.\n\nTransform3D.shift\n\nPoint3DLike: Shift.\n\nTransform3D.z_y_x_rotation\n\nPoint3DLike: ZYX rotation.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.render",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.render.html#render",
        "title": "render",
        "section": "render",
        "text": "Render a circle.\nX value of the center point.\nY value of the center point.\nRadius value of the circle.\nWhether the circle object is a hole.\nCircle created.\nrender\nValue\nValue\nValue\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.render",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.render.html#ansys.edb.core.primitive.primitive.Circle.render",
        "title": "render > render > render",
        "section": "render > render",
        "text": "classmethod Circle.render(center_x, center_y, radius, is_hole)\n\nRender a circle.\n\nParameters\n\ncenter_x\n\nValue\n\nX value of the center point.\n\ncenter_y\n\nValue\n\nY value of the center point.\n\nradius\n\nValue\n\nRadius value of the circle.\n\nis_hole: bool\n\nWhether the circle object is a hole.\n\nReturns\n\nPolygonData\n\nCircle created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamExtrapolation.ZERO_EX",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamExtrapolation.ZERO_EX.html#zero_ex",
        "title": "ZERO_EX",
        "section": "ZERO_EX",
        "text": "ZERO_EX"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamExtrapolation.ZERO_EX",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamExtrapolation.ZERO_EX.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamExtrapolation.ZERO_EX",
        "title": "ZERO_EX > ZERO_EX > ZERO_EX",
        "section": "ZERO_EX > ZERO_EX",
        "text": "SParamExtrapolation.ZERO_EX = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.dataset_defs",
        "href": "api/_autosummary/ansys.edb.core.database.Database.dataset_defs.html#dataset_defs",
        "title": "dataset_defs",
        "section": "dataset_defs",
        "text": "list of DatasetDef: All dataset definitions in the database.\ndataset_defs\nlist\nDatasetDef"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.dataset_defs",
        "href": "api/_autosummary/ansys.edb.core.database.Database.dataset_defs.html#ansys.edb.core.database.Database.dataset_defs",
        "title": "dataset_defs > dataset_defs > dataset_defs",
        "section": "dataset_defs > dataset_defs",
        "text": "property Database.dataset_defs\n\nlist of DatasetDef: All dataset definitions in the database.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.jedec4_bondwire_defs",
        "href": "api/_autosummary/ansys.edb.core.database.Database.jedec4_bondwire_defs.html#jedec4_bondwire_defs",
        "title": "jedec4_bondwire_defs",
        "section": "jedec4_bondwire_defs",
        "text": "list of Jedec4BondwireDef: All JEDEC4 bondwire definitions in the database.\njedec4_bondwire_defs\nlist\nJedec4BondwireDef"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.jedec4_bondwire_defs",
        "href": "api/_autosummary/ansys.edb.core.database.Database.jedec4_bondwire_defs.html#ansys.edb.core.database.Database.jedec4_bondwire_defs",
        "title": "jedec4_bondwire_defs > jedec4_bondwire_defs > jedec4_bondwire_defs",
        "section": "jedec4_bondwire_defs > jedec4_bondwire_defs",
        "text": "property Database.jedec4_bondwire_defs\n\nlist of Jedec4BondwireDef: All JEDEC4 bondwire definitions in the database.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ModelType.GENERAL_MODEL",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ModelType.GENERAL_MODEL.html#general_model",
        "title": "GENERAL_MODEL",
        "section": "GENERAL_MODEL",
        "text": "GENERAL_MODEL"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ModelType.GENERAL_MODEL",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ModelType.GENERAL_MODEL.html#ansys.edb.core.simulation_setup.simulation_settings.ModelType.GENERAL_MODEL",
        "title": "GENERAL_MODEL > GENERAL_MODEL > GENERAL_MODEL",
        "section": "GENERAL_MODEL > GENERAL_MODEL",
        "text": "ModelType.GENERAL_MODEL = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_mcad.html#is_mcad",
        "title": "is_mcad",
        "section": "is_mcad",
        "text": "bool: Flag indicating if this is an MCAD model.\nThis property is read-only.\nis_mcad\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_mcad.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_mcad",
        "title": "is_mcad > is_mcad > is_mcad",
        "section": "is_mcad > is_mcad",
        "text": "property PadstackInstanceTerminal.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.material_property_thermal_modifier_params.AdvancedQuadraticParams",
        "href": "api/_autosummary/ansys.edb.core.utility.material_property_thermal_modifier_params.AdvancedQuadraticParams.html#advancedquadraticparams",
        "title": "AdvancedQuadraticParams",
        "section": "AdvancedQuadraticParams",
        "text": "Represents advanced quadratic parameters.\nLower temperature limit where the quadratic model is valid.\nUpper temperature limit where the quadratic model is valid.\nFlag indicating if the values for the lower and upper constant thermal modifieries\nare to be automatically calculated.\nConstant thermal modifier value for temperatures less than the lower constant\nthermal modifier value.\nConstant thermal modifier value for temperatures greater than the upper\nconstant thermal modifier value.\nAdvancedQuadraticParams\npython:str\npython:int\npython:float\ncomplex\nValue\npython:str\npython:int\npython:float\ncomplex\nValue\npython:str\npython:int\npython:float\ncomplex\nValue\npython:str\npython:int\npython:float\ncomplex\nValue\npython:str\npython:int\npython:float\ncomplex\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.material_property_thermal_modifier_params.AdvancedQuadraticParams",
        "href": "api/_autosummary/ansys.edb.core.utility.material_property_thermal_modifier_params.AdvancedQuadraticParams.html#ansys.edb.core.utility.material_property_thermal_modifier_params.AdvancedQuadraticParams",
        "title": "AdvancedQuadraticParams > AdvancedQuadraticParams > AdvancedQuadraticParams",
        "section": "AdvancedQuadraticParams > AdvancedQuadraticParams",
        "text": "class ansys.edb.core.utility.material_property_thermal_modifier_params.AdvancedQuadraticParams(temp_lower_limit_val='-273.15cel', temp_upper_limit_val='1000cel', auto_calc_constant_thermal_modifier_vals=True, lower_constant_thermal_modifier_val=1, upper_constant_thermal_modifier_val=1)\n\nRepresents advanced quadratic parameters.\n\nAttributes\n\ntemp_lower_limit_val\n\npython:str, python:int, python:float, complex, Value\n\nLower temperature limit where the quadratic model is valid.\n\ntemp_upper_limit_val\n\npython:str, python:int, python:float, complex, Value\n\nUpper temperature limit where the quadratic model is valid.\n\nauto_calc_constant_thermal_modifier_vals\n\npython:str, python:int, python:float, complex, Value\n\nFlag indicating if the values for the lower and upper constant thermal modifieries\nare to be automatically calculated.\n\nlower_constant_thermal_modifier_val\n\npython:str, python:int, python:float, complex, Value\n\nConstant thermal modifier value for temperatures less than the lower constant\nthermal modifier value.\n\nupper_constant_thermal_modifier_val\n\npython:str, python:int, python:float, complex, Value\n\nConstant thermal modifier value for temperatures greater than the upper\nconstant thermal modifier value.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.model",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.model.html#model",
        "title": "model",
        "section": "model",
        "text": "str: S-parameter model.\nmodel\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.model",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.model.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.model",
        "title": "model > model > model",
        "section": "model > model",
        "text": "property PinGroupTerminal.model\n\nstr: S-parameter model.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_reference_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_reference_terminal.html#is_reference_terminal",
        "title": "is_reference_terminal",
        "section": "is_reference_terminal",
        "text": "bool: Flag indicating if the terminal is a reference terminal.\nis_reference_terminal\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_reference_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_reference_terminal.html#ansys.edb.core.terminal.terminals.PointTerminal.is_reference_terminal",
        "title": "is_reference_terminal > is_reference_terminal > is_reference_terminal",
        "section": "is_reference_terminal > is_reference_terminal",
        "text": "property PointTerminal.is_reference_terminal\n\nbool: Flag indicating if the terminal is a reference terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData.equals",
        "href": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData.equals.html#equals",
        "title": "equals",
        "section": "equals",
        "text": "Compare the equality of two 3D points within a given tolerance.\nTolerance.\nTrue if the 3D points are equal, False otherwise.\nequals\nPoint3DData\npython:float\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData.equals",
        "href": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData.equals.html#ansys.edb.core.geometry.point3d_data.Point3DData.equals",
        "title": "equals > equals > equals",
        "section": "equals > equals",
        "text": "Point3DData.equals(other, tolerance=1e-09)\n\nCompare the equality of two 3D points within a given tolerance.\n\nParameters\n\nother\n\nPoint3DData\n\n\n\ntolerance\n\npython:float, default: 1e-9\n\nTolerance.\n\nReturns\n\nbool\n\nTrue if the 3D points are equal, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.get_all_variable_names",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.get_all_variable_names.html#get_all_variable_names",
        "title": "get_all_variable_names",
        "section": "get_all_variable_names",
        "text": "Get all variable names.\nNames of all variables.\nget_all_variable_names\npython:list\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.get_all_variable_names",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.get_all_variable_names.html#ansys.edb.core.layout.cell.Cell.get_all_variable_names",
        "title": "get_all_variable_names > get_all_variable_names > get_all_variable_names",
        "section": "get_all_variable_names > get_all_variable_names",
        "text": "Cell.get_all_variable_names()\n\nGet all variable names.\n\nReturns\n\npython:list[python:str]\n\nNames of all variables.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.cast",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.cast.html#cast",
        "title": "cast",
        "section": "cast",
        "text": "Cast the base SimulationSetup object to correct subclass, if possible.\ncast\nSimulationSetup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.cast",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.cast.html#ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.cast",
        "title": "cast > cast > cast",
        "section": "cast > cast",
        "text": "RaptorXSimulationSetup.cast()\n\nCast the base SimulationSetup object to correct subclass, if possible.\n\nReturns\n\nSimulationSetup\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.find_by_name",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.find_by_name.html#find_by_name",
        "title": "find_by_name",
        "section": "find_by_name",
        "text": "Find an extended net by name in a given layout.\nLayout to search for the extended net.\nName of the extended net.\nExtended net that was found. Check the is_null\nproperty of the extended net to see if it exists.\nfind_by_name\nLayout\npython:str\nExtendedNet\nis_null"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.find_by_name",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.find_by_name.html#ansys.edb.core.net.extended_net.ExtendedNet.find_by_name",
        "title": "find_by_name > find_by_name > find_by_name",
        "section": "find_by_name > find_by_name",
        "text": "classmethod ExtendedNet.find_by_name(layout, name)\n\nFind an extended net by name in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the extended net.\n\nname\n\npython:str\n\nName of the extended net.\n\nReturns\n\nExtendedNet\n\nExtended net that was found. Check the is_null\nproperty of the extended net to see if it exists.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.is_null.html#ansys.edb.core.definition.material_def.MaterialDef.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property MaterialDef.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.get_variable_value",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.get_variable_value.html#get_variable_value",
        "title": "get_variable_value",
        "section": "get_variable_value",
        "text": "Get the value for a given variable.\nVariable name.\nVariable value.\nget_variable_value\npython:str\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.get_variable_value",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.get_variable_value.html#ansys.edb.core.layout.layout.Layout.get_variable_value",
        "title": "get_variable_value > get_variable_value > get_variable_value",
        "section": "get_variable_value > get_variable_value",
        "text": "Layout.get_variable_value(name)\n\nGet the value for a given variable.\n\nParameters\n\nname\n\npython:str\n\nVariable name.\n\nReturns\n\nValue\n\nVariable value.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_vi_sources",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_vi_sources.html#include_vi_sources",
        "title": "include_vi_sources",
        "section": "include_vi_sources",
        "text": "bool: Flag indicating if voltage/current source connections/parasitics are included.\ninclude_vi_sources\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_vi_sources",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_vi_sources.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_vi_sources",
        "title": "include_vi_sources > include_vi_sources > include_vi_sources",
        "section": "include_vi_sources > include_vi_sources",
        "text": "property SIWaveAdvancedSettings.include_vi_sources\n\nbool: Flag indicating if voltage/current source connections/parasitics are included.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.id",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.id",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.id.html#ansys.edb.core.layout.mcad_model.McadModel.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property McadModel.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_mcad_hfss.html#is_mcad_hfss",
        "title": "is_mcad_hfss",
        "section": "is_mcad_hfss",
        "text": "bool: Flag indicating if this is an HFSS MCAD model.\nThis property is read-only.\nis_mcad_hfss\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_mcad_hfss.html#ansys.edb.core.terminal.terminals.Terminal.is_mcad_hfss",
        "title": "is_mcad_hfss > is_mcad_hfss > is_mcad_hfss",
        "section": "is_mcad_hfss > is_mcad_hfss",
        "text": "property Terminal.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.padstack_instances",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.padstack_instances.html#padstack_instances",
        "title": "padstack_instances",
        "section": "padstack_instances",
        "text": "list of PadstackInstance: All padstack instances on the net         object instance.\npadstack_instances\nlist\nPadstackInstance"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.padstack_instances",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.padstack_instances.html#ansys.edb.core.net.net.Net.padstack_instances",
        "title": "padstack_instances > padstack_instances > padstack_instances",
        "section": "padstack_instances > padstack_instances",
        "text": "property Net.padstack_instances\n\nlist of PadstackInstance: All padstack instances on the net         object instance.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.num_via_sides",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.num_via_sides.html#num_via_sides",
        "title": "num_via_sides",
        "section": "num_via_sides",
        "text": "int: Number of sides to use to approximate cylindrical vias.\nnum_via_sides\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.num_via_sides",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.num_via_sides.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.num_via_sides",
        "title": "num_via_sides > num_via_sides > num_via_sides",
        "section": "num_via_sides > num_via_sides",
        "text": "property SIWaveDCAdvancedSettings.num_via_sides\n\nint: Number of sides to use to approximate cylindrical vias.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.create_hfss.html#create_hfss",
        "title": "create_hfss",
        "section": "create_hfss",
        "text": "Create an HFSS model from an MCAD file.\nHFSS model created.\ncreate_hfss\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.create_hfss.html#ansys.edb.core.terminal.terminals.TerminalInstance.create_hfss",
        "title": "create_hfss > create_hfss > create_hfss",
        "section": "create_hfss > create_hfss",
        "text": "TerminalInstance.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nReturns\n\nMcadModel\n\nHFSS model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_plane_projection_factor",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_plane_projection_factor.html#use_plane_projection_factor",
        "title": "use_plane_projection_factor",
        "section": "use_plane_projection_factor",
        "text": "bool: Flag indicating if the plane projection factor is used.\nuse_plane_projection_factor\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_plane_projection_factor",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_plane_projection_factor.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_plane_projection_factor",
        "title": "use_plane_projection_factor > use_plane_projection_factor > use_plane_projection_factor",
        "section": "use_plane_projection_factor > use_plane_projection_factor",
        "text": "property RaptorXAdvancedSettings.use_plane_projection_factor\n\nbool: Flag indicating if the plane projection factor is used.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.is_in_zone",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.is_in_zone.html#is_in_zone",
        "title": "is_in_zone",
        "section": "is_in_zone",
        "text": "Determine if the layer exists in the given zone.\nTrue when the layer exists in the given zone, False otherwise.\nis_in_zone\npython:int\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.is_in_zone",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.is_in_zone.html#ansys.edb.core.layer.via_layer.ViaLayer.is_in_zone",
        "title": "is_in_zone > is_in_zone > is_in_zone",
        "section": "is_in_zone > is_in_zone",
        "text": "ViaLayer.is_in_zone(zone)\n\nDetermine if the layer exists in the given zone.\n\nParameters\n\nzone\n\npython:int\n\n\n\nReturns\n\nbool\n\nTrue when the layer exists in the given zone, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.group",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.group.html#group",
        "title": "group",
        "section": "group",
        "text": "Group object.\ngroup\nGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.group",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.group.html#ansys.edb.core.hierarchy.group.Group.group",
        "title": "group > group > group",
        "section": "group > group",
        "text": "property Group.group\n\nGroup object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.set_material",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.set_material.html#set_material",
        "title": "set_material",
        "section": "set_material",
        "text": "Set material for the 3D structure.\nMaterial name.\nset_material\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.set_material",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.set_material.html#ansys.edb.core.hierarchy.structure3d.Structure3D.set_material",
        "title": "set_material > set_material > set_material",
        "section": "set_material > set_material",
        "text": "Structure3D.set_material(mat_name)\n\nSet material for the 3D structure.\n\nParameters\n\nmat_name\n\npython:str\n\nMaterial name.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.intersect",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.intersect.html#intersect",
        "title": "intersect",
        "section": "intersect",
        "text": "Compute the intersection of one or more lists of polygons.\nFirst list of polygons.\nSecond optional list of polygons.\nintersect\npython:list\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.intersect",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.intersect.html#ansys.edb.core.geometry.polygon_data.PolygonData.intersect",
        "title": "intersect > intersect > intersect",
        "section": "intersect > intersect",
        "text": "classmethod PolygonData.intersect(polygons1, polygons2)\n\nCompute the intersection of one or more lists of polygons.\n\nParameters\n\npolygons1: `list` of :class:`.PolygonData` or :class:`.PolygonData`\n\nFirst list of polygons.\n\npolygons2: `list` of :class:`.PolygonData` or :class:`.PolygonData`\n\nSecond optional list of polygons.\n\nReturns\n\npython:list[PolygonData]\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.create_3d_comp.html#create_3d_comp",
        "title": "create_3d_comp",
        "section": "create_3d_comp",
        "text": "Create a 3D composite model from an MCAD file.\n3D composite model created.\ncreate_3d_comp\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.create_3d_comp.html#ansys.edb.core.hierarchy.via_group.ViaGroup.create_3d_comp",
        "title": "create_3d_comp > create_3d_comp > create_3d_comp",
        "section": "create_3d_comp > create_3d_comp",
        "text": "ViaGroup.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nReturns\n\nMcadModel\n\n3D composite model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.find_by_name",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.find_by_name.html#find_by_name",
        "title": "find_by_name",
        "section": "find_by_name",
        "text": "Find a net by name in a given layout.\nLayout to search for the net.\nName of net.\nNet found. Check the is_null property\nof the returned net to see if it exists.\nfind_by_name\nLayout\npython:str\nNet\nis_null"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.find_by_name",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.find_by_name.html#ansys.edb.core.net.net.Net.find_by_name",
        "title": "find_by_name > find_by_name > find_by_name",
        "section": "find_by_name > find_by_name",
        "text": "classmethod Net.find_by_name(layout, name)\n\nFind a net by name in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the net.\n\nname\n\npython:str\n\nName of net.\n\nReturns\n\nNet\n\nNet found. Check the is_null property\nof the returned net to see if it exists.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.html#rtree",
        "title": "RTree",
        "section": "RTree",
        "text": "Provides the base RTree class.\nRTree.connected_geometry(rtree_obj, ...)\nFind the connected geometries.\nRTree.create([tolerance])\nCreate an RTree.\nRTree.delete(rtree_obj)\nDelete the RTree from a given RTree object.\nRTree.empty()\nDetermine if the RTree is emppty (contains no geometry).\nRTree.increment_visit()\nIncrement the visit count, effectively marking all items in the tree as unvisited.\nRTree.insert(rtree_obj)\nInsert an RTree object from a given RTree object.\nRTree.is_visited(rtree_obj)\nDetermine whether an RTree object has been visited.\nRTree.nearest_neighbor(rtree_obj)\nFind the nearest neighbor of a given RTree object.\nRTree.search(box, bb_search)\nSearch all objects intersecting a given box.\nRTree.touching_geometry(rtree_obj, ...)\nFind all geometries touching an RTree object.\nRTree.visit(rtree_obj)\nIncrement the count of a given RTree object.\nRTree.connected_geometry_sets\nlist of list of RTreeObj: Connected geometry sets of an RTree          in this form: (ids, sizes).\nRTree.extent\ntuple of [:class:.PointData, :class:.PointData]: Bounding box         for the contents of the RTree.\nRTree.get_visit\nint: Visit count for the R-tree.\nRTree.id\nint: Unique ID of the EDB object.\nRTree.is_null\nbool: Flag indicating if the object exists in the database.\nRTree.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nRTree\nRTree.connected_geometry\nRTree.create\nRTree.delete\nRTree.empty\nRTree.increment_visit\nRTree.insert\nRTree.is_visited\nRTree.nearest_neighbor\nRTree.search\nRTree.touching_geometry\nRTree.visit\nRTree.connected_geometry_sets\nlist\nlist\nRTreeObj\n(ids, sizes)\nRTree.extent\ntuple\nRTree.get_visit\nint\nRTree.id\nint\nRTree.is_null\nbool\nRTree.msg\nEDBObjMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.html#ansys.edb.core.geometry.r_tree.RTree",
        "title": "RTree > RTree > RTree",
        "section": "RTree > RTree",
        "text": "class ansys.edb.core.geometry.r_tree.RTree(msg)\n\nProvides the base RTree class.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nRTree.connected_geometry(rtree_obj, ...)\n\nFind the connected geometries.\n\nRTree.create([tolerance])\n\nCreate an RTree.\n\nRTree.delete(rtree_obj)\n\nDelete the RTree from a given RTree object.\n\nRTree.empty()\n\nDetermine if the RTree is emppty (contains no geometry).\n\nRTree.increment_visit()\n\nIncrement the visit count, effectively marking all items in the tree as unvisited.\n\nRTree.insert(rtree_obj)\n\nInsert an RTree object from a given RTree object.\n\nRTree.is_visited(rtree_obj)\n\nDetermine whether an RTree object has been visited.\n\nRTree.nearest_neighbor(rtree_obj)\n\nFind the nearest neighbor of a given RTree object.\n\nRTree.search(box, bb_search)\n\nSearch all objects intersecting a given box.\n\nRTree.touching_geometry(rtree_obj, ...)\n\nFind all geometries touching an RTree object.\n\nRTree.visit(rtree_obj)\n\nIncrement the count of a given RTree object.\n\n\n\nAttributes\n\n\n\n\n\n\n\nRTree.connected_geometry_sets\n\nlist of list of RTreeObj: Connected geometry sets of an RTree          in this form: (ids, sizes).\n\nRTree.extent\n\ntuple of [:class:.PointData, :class:.PointData]: Bounding box         for the contents of the RTree.\n\nRTree.get_visit\n\nint: Visit count for the R-tree.\n\nRTree.id\n\nint: Unique ID of the EDB object.\n\nRTree.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nRTree.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_mcad_3d_comp.html#is_mcad_3d_comp",
        "title": "is_mcad_3d_comp",
        "section": "is_mcad_3d_comp",
        "text": "bool: Flag indicating if this is a 3D composite MCAD model.\nThis property is read-only.\nis_mcad_3d_comp\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_mcad_3d_comp.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_mcad_3d_comp",
        "title": "is_mcad_3d_comp > is_mcad_3d_comp > is_mcad_3d_comp",
        "section": "is_mcad_3d_comp > is_mcad_3d_comp",
        "text": "property TerminalInstanceTerminal.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.set_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.set_hfss_prop.html#set_hfss_prop",
        "title": "set_hfss_prop",
        "section": "set_hfss_prop",
        "text": "Set HFSS properties.\nMaterial property name to set.\nWhether to solve inside.\nset_hfss_prop\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.set_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.set_hfss_prop.html#ansys.edb.core.primitive.primitive.Rectangle.set_hfss_prop",
        "title": "set_hfss_prop > set_hfss_prop > set_hfss_prop",
        "section": "set_hfss_prop > set_hfss_prop",
        "text": "Rectangle.set_hfss_prop(material, solve_inside)\n\nSet HFSS properties.\n\nParameters\n\nmaterial\n\npython:str\n\nMaterial property name to set.\n\nsolve_inside\n\nbool\n\nWhether to solve inside.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.get_power_module",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.get_power_module.html#get_power_module",
        "title": "get_power_module",
        "section": "get_power_module",
        "text": "Get the power module for a given component group name.\nComponent group name of the power module.\nget_power_module\npython:str\nPowerModule"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.get_power_module",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.get_power_module.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.get_power_module",
        "title": "get_power_module > get_power_module > get_power_module",
        "section": "get_power_module > get_power_module",
        "text": "VoltageRegulator.get_power_module(comp_group_name)\n\nGet the power module for a given component group name.\n\nParameters\n\ncomp_group_name\n\npython:str\n\nComponent group name of the power module.\n\nReturns\n\nPowerModule\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.layout",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.layout.html#layout",
        "title": "layout",
        "section": "layout",
        "text": "Layout: Layout owning the object.\nThis property is read-only.\nlayout\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.layout",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.layout.html#ansys.edb.core.primitive.primitive.Rectangle.layout",
        "title": "layout > layout > layout",
        "section": "layout > layout",
        "text": "property Rectangle.layout\n\nLayout: Layout owning the object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.msg",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.msg",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.msg.html#ansys.edb.core.hierarchy.inst_array.InstArray.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property InstArray.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.html#terminalinstance",
        "title": "TerminalInstance",
        "section": "TerminalInstance",
        "text": "Represents a terminal instance.\nTerminalInstance.create(layout, ...)\nCreate a terminal instance.\nTerminalInstance.create_3d_comp()\nCreate a 3D composite model from an MCAD file.\nTerminalInstance.create_hfss()\nCreate an HFSS model from an MCAD file.\nTerminalInstance.create_stride()\nCreate a Stride model from an MCAD file.\nTerminalInstance.delete()\nDelete the layout object.\nTerminalInstance.find_by_id(layout, uid)\nFind a Connectable object by database ID in a given layout.\nTerminalInstance.get_product_property(...)\nGet the product property of the layout object for a given product ID and attribute ID.\nTerminalInstance.get_product_property_ids(prod_id)\nGet a list of attribute IDs given a product ID for the layout object.\nTerminalInstance.set_product_property(...)\nSet the product property of the layout object for a given product ID and attribute ID.\nTerminalInstance.component\nComponentGroup:         Component of the Connectable object.\nTerminalInstance.definition_terminal\nTerminal: Definition terminal, if any.\nTerminalInstance.definition_terminal_name\nstr: Name of the definition terminal.\nTerminalInstance.edb_uid\nint: Unique, persistent ID for the Connectable object.\nTerminalInstance.group\nGroup object.\nTerminalInstance.id\nint: Unique ID of the EDB object.\nTerminalInstance.is_mcad\nbool: Flag indicating if this is an MCAD model.\nTerminalInstance.is_mcad_3d_comp\nbool: Flag indicating if this is a 3D composite MCAD model.\nTerminalInstance.is_mcad_hfss\nbool: Flag indicating if this is an HFSS MCAD model.\nTerminalInstance.is_mcad_stride\nbool: Flag indicating if this is a Stride MCAD model.\nTerminalInstance.is_null\nbool: Flag indicating if the object exists in the database.\nTerminalInstance.layout\nLayout: Layout owning the object.\nTerminalInstance.layout_obj_type\n\nTerminalInstance.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nTerminalInstance.net\nNet: Net of the Connectable object.\nTerminalInstance.obj_type\nLayoutObjType: Layout object type.\nTerminalInstance.owning_cell_instance\nCellInstance: Cell instance that owns the terminal.\nTerminalInstance\nTerminalInstance.create\nTerminalInstance.create_3d_comp\nTerminalInstance.create_hfss\nTerminalInstance.create_stride\nTerminalInstance.delete\nTerminalInstance.find_by_id\nTerminalInstance.get_product_property\nTerminalInstance.get_product_property_ids\nTerminalInstance.set_product_property\nTerminalInstance.component\nComponentGroup\nTerminalInstance.definition_terminal\nTerminal\nTerminalInstance.definition_terminal_name\nstr\nTerminalInstance.edb_uid\nint\nTerminalInstance.group\nGroup\nTerminalInstance.id\nint\nTerminalInstance.is_mcad\nbool\nTerminalInstance.is_mcad_3d_comp\nbool\nTerminalInstance.is_mcad_hfss\nbool\nTerminalInstance.is_mcad_stride\nbool\nTerminalInstance.is_null\nbool\nTerminalInstance.layout\nLayout\nTerminalInstance.layout_obj_type\nTerminalInstance.msg\nEDBObjMessage\nTerminalInstance.net\nNet\nTerminalInstance.obj_type\nLayoutObjType\nTerminalInstance.owning_cell_instance\nCellInstance"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.html#ansys.edb.core.terminal.terminals.TerminalInstance",
        "title": "TerminalInstance > TerminalInstance > TerminalInstance",
        "section": "TerminalInstance > TerminalInstance",
        "text": "class ansys.edb.core.terminal.terminals.TerminalInstance(msg)\n\nRepresents a terminal instance.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nTerminalInstance.create(layout, ...)\n\nCreate a terminal instance.\n\nTerminalInstance.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nTerminalInstance.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nTerminalInstance.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nTerminalInstance.delete()\n\nDelete the layout object.\n\nTerminalInstance.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nTerminalInstance.get_product_property(...)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nTerminalInstance.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nTerminalInstance.set_product_property(...)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\n\n\nAttributes\n\n\n\n\n\n\n\nTerminalInstance.component\n\nComponentGroup:         Component of the Connectable object.\n\nTerminalInstance.definition_terminal\n\nTerminal: Definition terminal, if any.\n\nTerminalInstance.definition_terminal_name\n\nstr: Name of the definition terminal.\n\nTerminalInstance.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nTerminalInstance.group\n\nGroup object.\n\nTerminalInstance.id\n\nint: Unique ID of the EDB object.\n\nTerminalInstance.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nTerminalInstance.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nTerminalInstance.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nTerminalInstance.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nTerminalInstance.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nTerminalInstance.layout\n\nLayout: Layout owning the object.\n\nTerminalInstance.layout_obj_type\n\n\n\nTerminalInstance.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nTerminalInstance.net\n\nNet: Net of the Connectable object.\n\nTerminalInstance.obj_type\n\nLayoutObjType: Layout object type.\n\nTerminalInstance.owning_cell_instance\n\nCellInstance: Cell instance that owns the terminal.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_property.ComponentProperty.id",
        "href": "api/_autosummary/ansys.edb.core.definition.component_property.ComponentProperty.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_property.ComponentProperty.id",
        "href": "api/_autosummary/ansys.edb.core.definition.component_property.ComponentProperty.id.html#ansys.edb.core.definition.component_property.ComponentProperty.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property ComponentProperty.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.VOLTAGE_PROBE",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.VOLTAGE_PROBE.html#voltage_probe",
        "title": "VOLTAGE_PROBE",
        "section": "VOLTAGE_PROBE",
        "text": "VOLTAGE_PROBE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.VOLTAGE_PROBE",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.VOLTAGE_PROBE.html#ansys.edb.core.terminal.terminals.BoundaryType.VOLTAGE_PROBE",
        "title": "VOLTAGE_PROBE > VOLTAGE_PROBE > VOLTAGE_PROBE",
        "section": "VOLTAGE_PROBE > VOLTAGE_PROBE",
        "text": "BoundaryType.VOLTAGE_PROBE = 8\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.is_null",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.is_null",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.is_null.html#ansys.edb.core.simulation_setup.hfss_simulation_setup.HfssSimulationSetup.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property HfssSimulationSetup.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.type",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.type.html#type",
        "title": "type",
        "section": "type",
        "text": "SimulationSetupType: Type of the simulation setup.\ntype\nSimulationSetupType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.type",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.type.html#ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.type",
        "title": "type > type > type",
        "section": "type > type",
        "text": "property SIWaveSimulationSetup.type\n\nSimulationSetupType: Type of the simulation setup.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonSenseType",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonSenseType.html#polygonsensetype",
        "title": "PolygonSenseType",
        "section": "PolygonSenseType",
        "text": "Provides an enum representing the direction of polygon sense.\nPolygonSenseType.SENSE_UNKNOWN\n\nPolygonSenseType.SENSE_CW\n\nPolygonSenseType.SENSE_CCW\n\nPolygonSenseType\nPolygonSenseType.SENSE_UNKNOWN\nPolygonSenseType.SENSE_CW\nPolygonSenseType.SENSE_CCW"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonSenseType",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonSenseType.html#ansys.edb.core.geometry.polygon_data.PolygonSenseType",
        "title": "PolygonSenseType > PolygonSenseType > PolygonSenseType",
        "section": "PolygonSenseType > PolygonSenseType",
        "text": "class ansys.edb.core.geometry.polygon_data.PolygonSenseType(value)\n\nProvides an enum representing the direction of polygon sense.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nPolygonSenseType.SENSE_UNKNOWN\n\n\n\nPolygonSenseType.SENSE_CW\n\n\n\nPolygonSenseType.SENSE_CCW\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.cast",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.cast.html#cast",
        "title": "cast",
        "section": "cast",
        "text": "Cast the base edge object to the correct subclass, if possible.\ncast\nEdge"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.cast",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.cast.html#ansys.edb.core.terminal.terminals.PadEdge.cast",
        "title": "cast > cast > cast",
        "section": "cast > cast",
        "text": "PadEdge.cast()\n\nCast the base edge object to the correct subclass, if possible.\n\nReturns\n\nEdge\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_mcad_3d_comp.html#is_mcad_3d_comp",
        "title": "is_mcad_3d_comp",
        "section": "is_mcad_3d_comp",
        "text": "bool: Flag indicating if this is a 3D composite MCAD model.\nThis property is read-only.\nis_mcad_3d_comp\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_mcad_3d_comp.html#ansys.edb.core.primitive.primitive.Bondwire.is_mcad_3d_comp",
        "title": "is_mcad_3d_comp > is_mcad_3d_comp > is_mcad_3d_comp",
        "section": "is_mcad_3d_comp > is_mcad_3d_comp",
        "text": "property Bondwire.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/index",
        "href": "examples/index.html#examples",
        "title": "Examples",
        "section": "Examples",
        "text": "Examples in the form of Jupyter notebooks demonstrate API usage.\nTo run these notebooks, perform these steps:\nCreate and activate a Python virtual environment:\nEnsure that you have the latest version of pip:\nBuild and install the ansys-edb and ansys-api packages:\nInstall Jupyter notebook requirements:\nInstall the IPython kernel:\nLaunch Juptyer notebook:\nNavigate to desired notebook example, change the kernel to the virtual environment, and execute the notebook\nwith the desired settings.\nExamples\nansys-edb\nansys-api"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_mcad_stride.html#is_mcad_stride",
        "title": "is_mcad_stride",
        "section": "is_mcad_stride",
        "text": "bool: Flag indicating if this is a Stride MCAD model.\nThis property is read-only.\nis_mcad_stride\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_mcad_stride.html#ansys.edb.core.primitive.primitive.Path.is_mcad_stride",
        "title": "is_mcad_stride > is_mcad_stride > is_mcad_stride",
        "section": "is_mcad_stride > is_mcad_stride",
        "text": "property Path.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.loss_tangent_at_frequency",
        "href": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.loss_tangent_at_frequency.html#loss_tangent_at_frequency",
        "title": "loss_tangent_at_frequency",
        "section": "loss_tangent_at_frequency",
        "text": "float: Loss tangent at frequency.\nloss_tangent_at_frequency\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.loss_tangent_at_frequency",
        "href": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.loss_tangent_at_frequency.html#ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.loss_tangent_at_frequency",
        "title": "loss_tangent_at_frequency > loss_tangent_at_frequency > loss_tangent_at_frequency",
        "section": "loss_tangent_at_frequency > loss_tangent_at_frequency",
        "text": "property DjordjecvicSarkarModel.loss_tangent_at_frequency\n\nfloat: Loss tangent at frequency.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.layout",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.layout.html#layout",
        "title": "layout",
        "section": "layout",
        "text": "Layout: Layout owning the object.\nThis property is read-only.\nlayout\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.layout",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.layout.html#ansys.edb.core.net.differential_pair.DifferentialPair.layout",
        "title": "layout > layout > layout",
        "section": "layout > layout",
        "text": "property DifferentialPair.layout\n\nLayout: Layout owning the object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveGeneralSettings.si_slider_pos",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveGeneralSettings.si_slider_pos.html#si_slider_pos",
        "title": "si_slider_pos",
        "section": "si_slider_pos",
        "text": "int: SI slider position value.\nsi_slider_pos\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveGeneralSettings.si_slider_pos",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveGeneralSettings.si_slider_pos.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveGeneralSettings.si_slider_pos",
        "title": "si_slider_pos > si_slider_pos > si_slider_pos",
        "section": "si_slider_pos > si_slider_pos",
        "text": "property SIWaveGeneralSettings.si_slider_pos\n\nint: SI slider position value.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.product_solver_names",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.product_solver_names.html#product_solver_names",
        "title": "product_solver_names",
        "section": "product_solver_names",
        "text": "Get the list of solver names.\nID of the product.\nproduct_solver_names\nProductIdType\npython:list\nof\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.product_solver_names",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.product_solver_names.html#ansys.edb.core.terminal.terminals.BundleTerminal.product_solver_names",
        "title": "product_solver_names > product_solver_names > product_solver_names",
        "section": "product_solver_names > product_solver_names",
        "text": "BundleTerminal.product_solver_names(product_id)\n\nGet the list of solver names.\n\nParameters\n\nproduct_id\n\nProductIdType\n\nID of the product.\n\nReturns\n\npython:list of python:str\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.add_member",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.add_member.html#add_member",
        "title": "add_member",
        "section": "add_member",
        "text": "Add an object to the group.\nObject to add to the group.\nadd_member"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.add_member",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.add_member.html#ansys.edb.core.hierarchy.structure3d.Structure3D.add_member",
        "title": "add_member > add_member > add_member",
        "section": "add_member > add_member",
        "text": "Structure3D.add_member(member)\n\nAdd an object to the group.\n\nParameters\n\nmember\n\nConnectable\n\nObject to add to the group.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the property.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.set_product_property.html#ansys.edb.core.terminal.terminals.TerminalInstance.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "TerminalInstance.set_product_property(prod_id, attr_id, prop_value)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nprop_value\n\npython:str\n\nString stored in the property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel.id",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel.id",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel.id.html#ansys.edb.core.definition.component_model.DynamicLinkComponentModel.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property DynamicLinkComponentModel.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.global_temperature",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.global_temperature.html#global_temperature",
        "title": "global_temperature",
        "section": "global_temperature",
        "text": "float: Simulation temperature in degrees Celsius.\nglobal_temperature\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.global_temperature",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.global_temperature.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.global_temperature",
        "title": "global_temperature > global_temperature > global_temperature",
        "section": "global_temperature > global_temperature",
        "text": "property RaptorXGeneralSettings.global_temperature\n\nfloat: Simulation temperature in degrees Celsius.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.save_fields",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.save_fields.html#save_fields",
        "title": "save_fields",
        "section": "save_fields",
        "text": "bool: Flag indicating if field data is to be saved during the simulation.\nsave_fields\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.save_fields",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.save_fields.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.save_fields",
        "title": "save_fields > save_fields > save_fields",
        "section": "save_fields > save_fields",
        "text": "property HFSSGeneralSettings.save_fields\n\nbool: Flag indicating if field data is to be saved during the simulation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.center_line",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.center_line.html#center_line",
        "title": "center_line",
        "section": "center_line",
        "text": "PolygonData: Center line for the path.\ncenter_line\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.center_line",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.center_line.html#ansys.edb.core.primitive.primitive.Path.center_line",
        "title": "center_line > center_line > center_line",
        "section": "center_line > center_line",
        "text": "property Path.center_line\n\nPolygonData: Center line for the path.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_zone_primitive.html#is_zone_primitive",
        "title": "is_zone_primitive",
        "section": "is_zone_primitive",
        "text": "bool: Flag indicating if the primitive object is a zone.\nThis property is read-only.\nis_zone_primitive\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_zone_primitive.html#ansys.edb.core.primitive.primitive.Path.is_zone_primitive",
        "title": "is_zone_primitive > is_zone_primitive > is_zone_primitive",
        "section": "is_zone_primitive > is_zone_primitive",
        "text": "property Path.is_zone_primitive\n\nbool: Flag indicating if the primitive object is a zone.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.position",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.position.html#position",
        "title": "position",
        "section": "position",
        "text": "int: Position of the simulation in the setup order.\nposition\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.position",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.position.html#ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.position",
        "title": "position > position > position",
        "section": "position > position",
        "text": "property RaptorXSimulationSetup.position\n\nint: Position of the simulation in the setup order.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.normalized",
        "href": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.normalized.html#normalized",
        "title": "normalized",
        "section": "normalized",
        "text": "Normalize the point vector.\nnormalized\nPointData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.normalized",
        "href": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.normalized.html#ansys.edb.core.geometry.point_data.PointData.normalized",
        "title": "normalized > normalized > normalized",
        "section": "normalized > normalized",
        "text": "PointData.normalized()\n\nNormalize the point vector.\n\nReturns\n\nPointData\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.holes",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.holes.html#holes",
        "title": "holes",
        "section": "holes",
        "text": "list of PolygonData: List of holes.\nholes\nlist\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.holes",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.holes.html#ansys.edb.core.geometry.polygon_data.PolygonData.holes",
        "title": "holes > holes > holes",
        "section": "holes > holes",
        "text": "property PolygonData.holes\n\nlist of PolygonData: List of holes.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.etch_factor_enabled",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.etch_factor_enabled.html#etch_factor_enabled",
        "title": "etch_factor_enabled",
        "section": "etch_factor_enabled",
        "text": "bool: Flag indicating if an etch factor is used by the layer.\netch_factor_enabled\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.etch_factor_enabled",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.etch_factor_enabled.html#ansys.edb.core.layer.stackup_layer.StackupLayer.etch_factor_enabled",
        "title": "etch_factor_enabled > etch_factor_enabled > etch_factor_enabled",
        "section": "etch_factor_enabled > etch_factor_enabled",
        "text": "property StackupLayer.etch_factor_enabled\n\nbool: Flag indicating if an etch factor is used by the layer.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.InterpolatingSweepData",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.InterpolatingSweepData.html#interpolatingsweepdata",
        "title": "InterpolatingSweepData",
        "section": "InterpolatingSweepData",
        "text": "Class representing interpolating frequency sweep data.\nS-parameter error tolerance.\nEnforce causality.\nEnforce passivity.\nTolerance for passivity enforcement.\nMax solutions.\nUse S matrix.\nUse port impedance.\nUse propagation constants.\nUse full basis.\nUse fast sweep.\nUse adaptive sampling.\nMatrix convergence data for frequency sweep.\nMinimum number of subranges.\nMinimum number of solutions.\nInterpolatingSweepData\npython:float\npython:float\npython:int\npython:list\nMatrixConvergenceDataEntry\npython:int\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.InterpolatingSweepData",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.InterpolatingSweepData.html#ansys.edb.core.simulation_setup.simulation_setup.InterpolatingSweepData",
        "title": "InterpolatingSweepData > InterpolatingSweepData > InterpolatingSweepData",
        "section": "InterpolatingSweepData > InterpolatingSweepData",
        "text": "class ansys.edb.core.simulation_setup.simulation_setup.InterpolatingSweepData\n\nClass representing interpolating frequency sweep data.\n\nAttributes\n\nrelative_s_error\n\npython:float\n\nS-parameter error tolerance.\n\nenforce_causality\n\nbool\n\nEnforce causality.\n\nenforce_passivity\n\nbool\n\nEnforce passivity.\n\npassivity_tolerance\n\npython:float\n\nTolerance for passivity enforcement.\n\nmax_solutions\n\npython:int\n\nMax solutions.\n\nuse_s_matrix\n\nbool\n\nUse S matrix.\n\nuse_port_impedance\n\nbool\n\nUse port impedance.\n\nuse_prop_const\n\nbool\n\nUse propagation constants.\n\nuse_full_basis\n\nbool\n\nUse full basis.\n\nfast_sweep\n\nbool\n\nUse fast sweep.\n\nadaptive_sampling\n\nbool\n\nUse adaptive sampling.\n\nmatrix_conv_entry_list\n\npython:list[MatrixConvergenceDataEntry]\n\nMatrix convergence data for frequency sweep.\n\nmin_subranges\n\npython:int\n\nMinimum number of subranges.\n\nmin_solutions\n\npython:int\n\nMinimum number of solutions.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.rotate",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.rotate.html#rotate",
        "title": "rotate",
        "section": "rotate",
        "text": "Rotate the polygon at a center by an angle.\nAngle in radians.\nCenter.\nrotate\npython:float\nansys.edb.core.typing.PoinyLikeT\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.rotate",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.rotate.html#ansys.edb.core.geometry.polygon_data.PolygonData.rotate",
        "title": "rotate > rotate > rotate",
        "section": "rotate > rotate",
        "text": "PolygonData.rotate(angle, center)\n\nRotate the polygon at a center by an angle.\n\nParameters\n\nangle\n\npython:float\n\nAngle in radians.\n\ncenter\n\nansys.edb.core.typing.PoinyLikeT\n\nCenter.\n\nReturns\n\nPolygonData\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.create_3d_comp.html#create_3d_comp",
        "title": "create_3d_comp",
        "section": "create_3d_comp",
        "text": "Create a 3D composite model from an MCAD file.\n3D composite model created.\ncreate_3d_comp\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.create_3d_comp.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.create_3d_comp",
        "title": "create_3d_comp > create_3d_comp > create_3d_comp",
        "section": "create_3d_comp > create_3d_comp",
        "text": "PinGroupTerminal.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nReturns\n\nMcadModel\n\n3D composite model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.find_by_id.html#find_by_id",
        "title": "find_by_id",
        "section": "find_by_id",
        "text": "Find a Connectable object by database ID in a given layout.\nLayout to search for the Connectable object.\nDatabase ID.\nConnectable object with the given database ID.\nfind_by_id\nLayout\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.find_by_id.html#ansys.edb.core.terminal.terminals.EdgeTerminal.find_by_id",
        "title": "find_by_id > find_by_id > find_by_id",
        "section": "find_by_id > find_by_id",
        "text": "classmethod EdgeTerminal.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the Connectable object.\n\nuid\n\npython:int\n\nDatabase ID.\n\nReturns\n\nConnectable\n\nConnectable object with the given database ID.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType.DEFINITION_TYPE_COUNT",
        "href": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType.DEFINITION_TYPE_COUNT.html#definition_type_count",
        "title": "DEFINITION_TYPE_COUNT",
        "section": "DEFINITION_TYPE_COUNT",
        "text": "DEFINITION_TYPE_COUNT"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType.DEFINITION_TYPE_COUNT",
        "href": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType.DEFINITION_TYPE_COUNT.html#ansys.edb.core.edb_defs.DefinitionObjType.DEFINITION_TYPE_COUNT",
        "title": "DEFINITION_TYPE_COUNT > DEFINITION_TYPE_COUNT > DEFINITION_TYPE_COUNT",
        "section": "DEFINITION_TYPE_COUNT > DEFINITION_TYPE_COUNT",
        "text": "DefinitionObjType.DEFINITION_TYPE_COUNT = 6\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.is_mcad_hfss.html#is_mcad_hfss",
        "title": "is_mcad_hfss",
        "section": "is_mcad_hfss",
        "text": "bool: Flag indicating if this is an HFSS MCAD model.\nThis property is read-only.\nis_mcad_hfss\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.is_mcad_hfss.html#ansys.edb.core.hierarchy.via_group.ViaGroup.is_mcad_hfss",
        "title": "is_mcad_hfss > is_mcad_hfss > is_mcad_hfss",
        "section": "is_mcad_hfss > is_mcad_hfss",
        "text": "property ViaGroup.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry.material",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry.material.html#material",
        "title": "material",
        "section": "material",
        "text": "str: Material of the geometry.\nThis property is read-only.\nmaterial\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry.material",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry.material.html#ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry.material",
        "title": "material > material > material",
        "section": "material > material",
        "text": "property LayoutObjInstance3DGeometry.material\n\nstr: Material of the geometry.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_interface_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_interface_terminal.html#is_interface_terminal",
        "title": "is_interface_terminal",
        "section": "is_interface_terminal",
        "text": "bool: Flag indicating if the terminal is an interface.\nis_interface_terminal\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_interface_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_interface_terminal.html#ansys.edb.core.terminal.terminals.EdgeTerminal.is_interface_terminal",
        "title": "is_interface_terminal > is_interface_terminal > is_interface_terminal",
        "section": "is_interface_terminal > is_interface_terminal",
        "text": "property EdgeTerminal.is_interface_terminal\n\nbool: Flag indicating if the terminal is an interface.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.group",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.group.html#group",
        "title": "group",
        "section": "group",
        "text": "Group object.\ngroup\nGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.group",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.group.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.group",
        "title": "group > group > group",
        "section": "group > group",
        "text": "property PadstackInstanceTerminal.group\n\nGroup object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.msg.html#ansys.edb.core.definition.ic_component_property.ICComponentProperty.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property ICComponentProperty.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.create",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a material definition in a given database.\nDatabase to create the material definition in.\nName of the material definition.\nDictionary to convert to a MaterialDefPropertiesMessage object.\nThe dictionary key is the material property name. The dictionary value is the\nmaterial property value. The expected keys for the kwargs are:\npermittivity\npermeability\nconductivity\ndielectric_loss_tangent\nmagnetic_loss_tangent\nthermal_conductivity\nmass_density\nspecific_heat\nyoungs_modulus\npoissons_ratio\nthermal_expansion_coefficient\nMaterial definition object created.\ncreate\nDatabase\npython:str\npython:dict\npython:str\nValue\nMaterialDefPropertiesMessage\npermittivity\npermeability\nconductivity\ndielectric_loss_tangent\nmagnetic_loss_tangent\nthermal_conductivity\nmass_density\nspecific_heat\nyoungs_modulus\npoissons_ratio\nthermal_expansion_coefficient\nMaterialDef"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.create",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.create.html#ansys.edb.core.definition.material_def.MaterialDef.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod MaterialDef.create(database, name, **kwargs)\n\nCreate a material definition in a given database.\n\nParameters\n\ndatabase\n\nDatabase\n\nDatabase to create the material definition in.\n\nname\n\npython:str\n\nName of the material definition.\n\nkwargs\n\npython:dict{ python:str\n\nValue }\n\nDictionary to convert to a MaterialDefPropertiesMessage object.\nThe dictionary key is the material property name. The dictionary value is the\nmaterial property value. The expected keys for the kwargs are:\n\npermittivity\n\npermeability\n\nconductivity\n\ndielectric_loss_tangent\n\nmagnetic_loss_tangent\n\nthermal_conductivity\n\nmass_density\n\nspecific_heat\n\nyoungs_modulus\n\npoissons_ratio\n\nthermal_expansion_coefficient\n\nReturns\n\nMaterialDef\n\nMaterial definition object created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SettingsOptions.do_lambda_refine",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SettingsOptions.do_lambda_refine.html#do_lambda_refine",
        "title": "do_lambda_refine",
        "section": "do_lambda_refine",
        "text": "bool: Flag indicating if lambda refinement is used during meshing.\ndo_lambda_refine\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SettingsOptions.do_lambda_refine",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SettingsOptions.do_lambda_refine.html#ansys.edb.core.simulation_setup.simulation_settings.SettingsOptions.do_lambda_refine",
        "title": "do_lambda_refine > do_lambda_refine > do_lambda_refine",
        "section": "do_lambda_refine > do_lambda_refine",
        "text": "property SettingsOptions.do_lambda_refine\n\nbool: Flag indicating if lambda refinement is used during meshing.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_mcad_stride.html#is_mcad_stride",
        "title": "is_mcad_stride",
        "section": "is_mcad_stride",
        "text": "bool: Flag indicating if this is a Stride MCAD model.\nThis property is read-only.\nis_mcad_stride\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_mcad_stride.html#ansys.edb.core.primitive.primitive.Primitive.is_mcad_stride",
        "title": "is_mcad_stride > is_mcad_stride > is_mcad_stride",
        "section": "is_mcad_stride > is_mcad_stride",
        "text": "property Primitive.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.is_null",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.is_null",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.is_null.html#ansys.edb.core.terminal.terminals.TerminalInstance.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property TerminalInstance.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_enable_advanced_cap_effects",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_enable_advanced_cap_effects.html#use_enable_advanced_cap_effects",
        "title": "use_enable_advanced_cap_effects",
        "section": "use_enable_advanced_cap_effects",
        "text": "bool: Flag indicating if capacitance-related effects such as conformal dielectrics are applied.\nuse_enable_advanced_cap_effects\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_enable_advanced_cap_effects",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_enable_advanced_cap_effects.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_enable_advanced_cap_effects",
        "title": "use_enable_advanced_cap_effects > use_enable_advanced_cap_effects > use_enable_advanced_cap_effects",
        "section": "use_enable_advanced_cap_effects > use_enable_advanced_cap_effects",
        "text": "property RaptorXAdvancedSettings.use_enable_advanced_cap_effects\n\nbool: Flag indicating if capacitance-related effects such as conformal dielectrics are applied.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_reference_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_reference_terminal.html#is_reference_terminal",
        "title": "is_reference_terminal",
        "section": "is_reference_terminal",
        "text": "bool: Flag indicating if the terminal is a reference terminal.\nis_reference_terminal\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_reference_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_reference_terminal.html#ansys.edb.core.terminal.terminals.Terminal.is_reference_terminal",
        "title": "is_reference_terminal > is_reference_terminal > is_reference_terminal",
        "section": "is_reference_terminal > is_reference_terminal",
        "text": "property Terminal.is_reference_terminal\n\nbool: Flag indicating if the terminal is a reference terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.cast",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.cast.html#cast",
        "title": "cast",
        "section": "cast",
        "text": "Cast the terminal object to the correct concrete type, fetching the type if necessary.\ncast\nTerminalType\nTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.cast",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.cast.html#ansys.edb.core.terminal.terminals.EdgeTerminal.cast",
        "title": "cast > cast > cast",
        "section": "cast > cast",
        "text": "EdgeTerminal.cast(term_type=None)\n\nCast the terminal object to the correct concrete type, fetching the type if necessary.\n\nParameters\n\nterm_type\n\nTerminalType\n\n\n\nReturns\n\nTerminal\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.BroadbandAdaptiveSolution.max_delta",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.BroadbandAdaptiveSolution.max_delta.html#max_delta",
        "title": "max_delta",
        "section": "max_delta",
        "text": "str: Maximum delta S between adaptive passes.\nmax_delta\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.BroadbandAdaptiveSolution.max_delta",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.BroadbandAdaptiveSolution.max_delta.html#ansys.edb.core.simulation_setup.adaptive_solutions.BroadbandAdaptiveSolution.max_delta",
        "title": "max_delta > max_delta > max_delta",
        "section": "max_delta > max_delta",
        "text": "property BroadbandAdaptiveSolution.max_delta\n\nstr: Maximum delta S between adaptive passes.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveGeneralSettings.pi_slider_pos",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveGeneralSettings.pi_slider_pos.html#pi_slider_pos",
        "title": "pi_slider_pos",
        "section": "pi_slider_pos",
        "text": "int: PI slider position value.\npi_slider_pos\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveGeneralSettings.pi_slider_pos",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveGeneralSettings.pi_slider_pos.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveGeneralSettings.pi_slider_pos",
        "title": "pi_slider_pos > pi_slider_pos > pi_slider_pos",
        "section": "pi_slider_pos > pi_slider_pos",
        "text": "property SIWaveGeneralSettings.pi_slider_pos\n\nint: PI slider position value.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.add_pins",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.add_pins.html#add_pins",
        "title": "add_pins",
        "section": "add_pins",
        "text": "Add a list of padstack instances to the group.\nList of padstick instances.\nadd_pins\npython:list\nPadstackInstance"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.add_pins",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.add_pins.html#ansys.edb.core.hierarchy.pin_group.PinGroup.add_pins",
        "title": "add_pins > add_pins > add_pins",
        "section": "add_pins > add_pins",
        "text": "PinGroup.add_pins(pins)\n\nAdd a list of padstack instances to the group.\n\nParameters\n\npins\n\npython:list[PadstackInstance]\n\nList of padstick instances.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.is_symbolic_footprint",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.is_symbolic_footprint.html#is_symbolic_footprint",
        "title": "is_symbolic_footprint",
        "section": "is_symbolic_footprint",
        "text": "bool: Flag indicating if the cell is a symbolic footprint.\nThis property is read-only.\nis_symbolic_footprint\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.is_symbolic_footprint",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.is_symbolic_footprint.html#ansys.edb.core.layout.cell.Cell.is_symbolic_footprint",
        "title": "is_symbolic_footprint > is_symbolic_footprint > is_symbolic_footprint",
        "section": "is_symbolic_footprint > is_symbolic_footprint",
        "text": "property Cell.is_symbolic_footprint\n\nbool: Flag indicating if the cell is a symbolic footprint.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_negative",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_negative.html#is_negative",
        "title": "is_negative",
        "section": "is_negative",
        "text": "bool: Flag indicating if the primitive is negative.\nis_negative\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_negative",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_negative.html#ansys.edb.core.primitive.primitive.Circle.is_negative",
        "title": "is_negative > is_negative > is_negative",
        "section": "is_negative > is_negative",
        "text": "property Circle.is_negative\n\nbool: Flag indicating if the primitive is negative.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModel.id",
        "href": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModel.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModel.id",
        "href": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModel.id.html#ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModel.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property DielectricMaterialModel.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform.Transform.transform_polygon",
        "href": "api/_autosummary/ansys.edb.core.utility.transform.Transform.transform_polygon.html#transform_polygon",
        "title": "transform_polygon",
        "section": "transform_polygon",
        "text": "Transform a polygon.\nPolygon to transform.\nTransformed polygon.\ntransform_polygon\nPolygonData\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform.Transform.transform_polygon",
        "href": "api/_autosummary/ansys.edb.core.utility.transform.Transform.transform_polygon.html#ansys.edb.core.utility.transform.Transform.transform_polygon",
        "title": "transform_polygon > transform_polygon > transform_polygon",
        "section": "transform_polygon > transform_polygon",
        "text": "Transform.transform_polygon(polygon)\n\nTransform a polygon.\n\nParameters\n\npolygon\n\nPolygonData\n\nPolygon to transform.\n\nReturns\n\nPolygonData\n\nTransformed polygon.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the property.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.set_product_property.html#ansys.edb.core.primitive.primitive.Rectangle.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "Rectangle.set_product_property(prod_id, attr_id, prop_value)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nprop_value\n\npython:str\n\nString stored in the property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.cast",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.cast.html#cast",
        "title": "cast",
        "section": "cast",
        "text": "Cast the terminal object to the correct concrete type, fetching the type if necessary.\ncast\nTerminalType\nTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.cast",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.cast.html#ansys.edb.core.terminal.terminals.BundleTerminal.cast",
        "title": "cast > cast > cast",
        "section": "cast > cast",
        "text": "BundleTerminal.cast(term_type=None)\n\nCast the terminal object to the correct concrete type, fetching the type if necessary.\n\nParameters\n\nterm_type\n\nTerminalType\n\n\n\nReturns\n\nTerminal\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.zone",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.zone.html#zone",
        "title": "zone",
        "section": "zone",
        "text": "int: Zone index associated with the owning layer collection.\nIf the owner is invalid, the index is 0. If the owner is multizone,\nthe index is -1.\nThis property is read-only.\nzone\nint\n0\n-1"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.zone",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.zone.html#ansys.edb.core.layer.stackup_layer.StackupLayer.zone",
        "title": "zone > zone > zone",
        "section": "zone > zone",
        "text": "property StackupLayer.zone\n\nint: Zone index associated with the owning layer collection.\n\nIf the owner is invalid, the index is 0. If the owner is multizone,\nthe index is -1.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PathEndCapType.FLAT",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PathEndCapType.FLAT.html#flat",
        "title": "FLAT",
        "section": "FLAT",
        "text": "FLAT"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PathEndCapType.FLAT",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PathEndCapType.FLAT.html#ansys.edb.core.primitive.primitive.PathEndCapType.FLAT",
        "title": "FLAT > FLAT > FLAT",
        "section": "FLAT > FLAT",
        "text": "PathEndCapType.FLAT = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.create_stride",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.create_stride.html#create_stride",
        "title": "create_stride",
        "section": "create_stride",
        "text": "Create a Stride model from an MCAD file.\nStride model created.\ncreate_stride\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.create_stride",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.create_stride.html#ansys.edb.core.terminal.terminals.Terminal.create_stride",
        "title": "create_stride > create_stride > create_stride",
        "section": "create_stride > create_stride",
        "text": "Terminal.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nReturns\n\nMcadModel\n\nStride model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.layout_obj_type.html#layout_obj_type",
        "title": "layout_obj_type",
        "section": "layout_obj_type",
        "text": "layout_obj_type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.layout_obj_type.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.layout_obj_type",
        "title": "layout_obj_type > layout_obj_type > layout_obj_type",
        "section": "layout_obj_type > layout_obj_type",
        "text": "ComponentGroup.layout_obj_type = 8\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.id.html#ansys.edb.core.primitive.primitive.Text.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property Text.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_mcad.html#is_mcad",
        "title": "is_mcad",
        "section": "is_mcad",
        "text": "bool: Flag indicating if this is an MCAD model.\nThis property is read-only.\nis_mcad\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_mcad.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.is_mcad",
        "title": "is_mcad > is_mcad > is_mcad",
        "section": "is_mcad > is_mcad",
        "text": "property PinGroupTerminal.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.clone",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Clone a model.\nclone\nModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.clone",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.clone.html#ansys.edb.core.hierarchy.spice_model.SPICEModel.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "SPICEModel.clone()\n\nClone a model.\n\nReturns\n\nModel cloned.\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_auto_port",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_auto_port.html#is_auto_port",
        "title": "is_auto_port",
        "section": "is_auto_port",
        "text": "bool: Flag indicating if the terminal is an auto port.\nis_auto_port\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_auto_port",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.is_auto_port.html#ansys.edb.core.terminal.terminals.BundleTerminal.is_auto_port",
        "title": "is_auto_port > is_auto_port > is_auto_port",
        "section": "is_auto_port > is_auto_port",
        "text": "property BundleTerminal.is_auto_port\n\nbool: Flag indicating if the terminal is an auto port.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.use_defeature",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.use_defeature.html#use_defeature",
        "title": "use_defeature",
        "section": "use_defeature",
        "text": "bool: Flag indicating if polygon defeaturing is performed.\nuse_defeature\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.use_defeature",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.use_defeature.html#ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.use_defeature",
        "title": "use_defeature > use_defeature > use_defeature",
        "section": "use_defeature > use_defeature",
        "text": "property AdvancedSettings.use_defeature\n\nbool: Flag indicating if polygon defeaturing is performed.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.layer",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.layer.html#layer",
        "title": "layer",
        "section": "layer",
        "text": "Layer: Layer that the edge is on.\nlayer\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.layer",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.layer.html#ansys.edb.core.terminal.terminals.PadEdge.layer",
        "title": "layer > layer > layer",
        "section": "layer > layer",
        "text": "property PadEdge.layer\n\nLayer: Layer that the edge is on.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.database.Database.edb_uid.html#edb_uid",
        "title": "edb_uid",
        "section": "edb_uid",
        "text": "int: Unique EDB ID of the database.\nedb_uid\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.database.Database.edb_uid.html#ansys.edb.core.database.Database.edb_uid",
        "title": "edb_uid > edb_uid > edb_uid",
        "section": "edb_uid > edb_uid",
        "text": "property Database.edb_uid\n\nint: Unique EDB ID of the database.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product property for a given product ID and attribute ID.\nProduct ID.\nAttribute ID.\nProduct property for the given product ID and attribute ID.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.get_product_property.html#ansys.edb.core.definition.package_def.PackageDef.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "PackageDef.get_product_property(prod_id, attr_it)\n\nGet the product property for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nProduct ID.\n\nattr_it\n\npython:int\n\nAttribute ID.\n\nReturns\n\npython:str\n\nProduct property for the given product ID and attribute ID.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.snap_primitives",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.snap_primitives.html#snap_primitives",
        "title": "snap_primitives",
        "section": "snap_primitives",
        "text": "Snap primitives on the specified layer to touching geometry.\nLayer containing the primitives to be snapped.\nTolerance for snapping primitives.\nIf True, the connectivity of primitives is checked and enforced to prevent\nshort circuits in geometry connecting to the primitives. If false, primitives are\ngrouped regardless of the connectivity of touching geometry.\nsnap_primitives\npython:str\nLayer\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.snap_primitives",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.snap_primitives.html#ansys.edb.core.layout.layout.Layout.snap_primitives",
        "title": "snap_primitives > snap_primitives > snap_primitives",
        "section": "snap_primitives > snap_primitives",
        "text": "Layout.snap_primitives(layer, tol='0.05um', check_connectivity=True)\n\nSnap primitives on the specified layer to touching geometry.\n\nParameters\n\nlayer\n\npython:str or Layer\n\nLayer containing the primitives to be snapped.\n\ntol\n\nValueLike\n\nTolerance for snapping primitives.\n\ncheck_connectivity\n\nbool\n\nIf True, the connectivity of primitives is checked and enforced to prevent\nshort circuits in geometry connecting to the primitives. If false, primitives are\ngrouped regardless of the connectivity of touching geometry.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.html#siwavedcadvancedsettings",
        "title": "SIWaveDCAdvancedSettings",
        "section": "SIWaveDCAdvancedSettings",
        "text": "Represents advanced DC settings for SIWave simulations.\nSIWaveDCAdvancedSettings.dc_min_plane_area_to_mesh\nstr: Geometry with an area smaller than this value is ignored.\nSIWaveDCAdvancedSettings.dc_min_void_area_to_mesh\nstr: Voids with an area smaller than this value are ignored.\nSIWaveDCAdvancedSettings.energy_error\nfloat: Percent of energy error used for adaptive mesh refinement.\nSIWaveDCAdvancedSettings.max_init_mesh_edge_length\nstr: Initial maximum edge length.\nSIWaveDCAdvancedSettings.max_num_passes\nint: Maximum number of adaptive mesh refinement passes.\nSIWaveDCAdvancedSettings.mesh_bws\nbool: Flag indicating if bondwires are meshed.\nSIWaveDCAdvancedSettings.mesh_vias\nbool: Flag indicating if vias are meshed.\nSIWaveDCAdvancedSettings.min_num_passes\nint: Minimum number of adaptive mesh refinement passes.\nSIWaveDCAdvancedSettings.msg\nEDBObjMessage: Protobuf message that represents this object's ID.\nSIWaveDCAdvancedSettings.num_bw_sides\nint: Number of sides to use to approximate cylindrical bondwires.\nSIWaveDCAdvancedSettings.num_via_sides\nint: Number of sides to use to approximate cylindrical vias.\nSIWaveDCAdvancedSettings.percent_local_refinement\nint: Percent of local refinement used for adaptive mesh refinement.\nSIWaveDCAdvancedSettings.perform_adaptive_refinement\nbool: Flag indicating if adaptive refinement is performed.\nSIWaveDCAdvancedSettings.refine_bws\nbool: Flag indicating if the mesh along bondwires is refined.\nSIWaveDCAdvancedSettings.refine_vias\nbool: Flag indicating if the mesh along vias is refined.\nSIWaveDCAdvancedSettings\nSIWaveDCAdvancedSettings.dc_min_plane_area_to_mesh\nstr\nSIWaveDCAdvancedSettings.dc_min_void_area_to_mesh\nstr\nSIWaveDCAdvancedSettings.energy_error\nfloat\nSIWaveDCAdvancedSettings.max_init_mesh_edge_length\nstr\nSIWaveDCAdvancedSettings.max_num_passes\nint\nSIWaveDCAdvancedSettings.mesh_bws\nbool\nSIWaveDCAdvancedSettings.mesh_vias\nbool\nSIWaveDCAdvancedSettings.min_num_passes\nint\nSIWaveDCAdvancedSettings.msg\nEDBObjMessage\nSIWaveDCAdvancedSettings.num_bw_sides\nint\nSIWaveDCAdvancedSettings.num_via_sides\nint\nSIWaveDCAdvancedSettings.percent_local_refinement\nint\nSIWaveDCAdvancedSettings.perform_adaptive_refinement\nbool\nSIWaveDCAdvancedSettings.refine_bws\nbool\nSIWaveDCAdvancedSettings.refine_vias\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings",
        "title": "SIWaveDCAdvancedSettings > SIWaveDCAdvancedSettings > SIWaveDCAdvancedSettings",
        "section": "SIWaveDCAdvancedSettings > SIWaveDCAdvancedSettings",
        "text": "class ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings(sim_setup)\n\nRepresents advanced DC settings for SIWave simulations.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nSIWaveDCAdvancedSettings.dc_min_plane_area_to_mesh\n\nstr: Geometry with an area smaller than this value is ignored.\n\nSIWaveDCAdvancedSettings.dc_min_void_area_to_mesh\n\nstr: Voids with an area smaller than this value are ignored.\n\nSIWaveDCAdvancedSettings.energy_error\n\nfloat: Percent of energy error used for adaptive mesh refinement.\n\nSIWaveDCAdvancedSettings.max_init_mesh_edge_length\n\nstr: Initial maximum edge length.\n\nSIWaveDCAdvancedSettings.max_num_passes\n\nint: Maximum number of adaptive mesh refinement passes.\n\nSIWaveDCAdvancedSettings.mesh_bws\n\nbool: Flag indicating if bondwires are meshed.\n\nSIWaveDCAdvancedSettings.mesh_vias\n\nbool: Flag indicating if vias are meshed.\n\nSIWaveDCAdvancedSettings.min_num_passes\n\nint: Minimum number of adaptive mesh refinement passes.\n\nSIWaveDCAdvancedSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object's ID.\n\nSIWaveDCAdvancedSettings.num_bw_sides\n\nint: Number of sides to use to approximate cylindrical bondwires.\n\nSIWaveDCAdvancedSettings.num_via_sides\n\nint: Number of sides to use to approximate cylindrical vias.\n\nSIWaveDCAdvancedSettings.percent_local_refinement\n\nint: Percent of local refinement used for adaptive mesh refinement.\n\nSIWaveDCAdvancedSettings.perform_adaptive_refinement\n\nbool: Flag indicating if adaptive refinement is performed.\n\nSIWaveDCAdvancedSettings.refine_bws\n\nbool: Flag indicating if the mesh along bondwires is refined.\n\nSIWaveDCAdvancedSettings.refine_vias\n\nbool: Flag indicating if the mesh along vias is refined.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ModelType.IC_MODEL",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ModelType.IC_MODEL.html#ic_model",
        "title": "IC_MODEL",
        "section": "IC_MODEL",
        "text": "IC_MODEL"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ModelType.IC_MODEL",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ModelType.IC_MODEL.html#ansys.edb.core.simulation_setup.simulation_settings.ModelType.IC_MODEL",
        "title": "IC_MODEL > IC_MODEL > IC_MODEL",
        "section": "IC_MODEL > IC_MODEL",
        "text": "ModelType.IC_MODEL = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.html#pingroupterminal",
        "title": "PinGroupTerminal",
        "section": "PinGroupTerminal",
        "text": "Represents a pin group terminal.\nPinGroupTerminal.cast([term_type])\nCast the terminal object to the correct concrete type, fetching the type if necessary.\nPinGroupTerminal.create(layout, name, ...[, ...])\nCreate a pin group terminal.\nPinGroupTerminal.create_3d_comp()\nCreate a 3D composite model from an MCAD file.\nPinGroupTerminal.create_hfss()\nCreate an HFSS model from an MCAD file.\nPinGroupTerminal.create_stride()\nCreate a Stride model from an MCAD file.\nPinGroupTerminal.delete()\nDelete the layout object.\nPinGroupTerminal.find(layout, name)\nFind a terminal by name in a given layout.\nPinGroupTerminal.find_by_id(layout, uid)\nFind a Connectable object by database ID in a given layout.\nPinGroupTerminal.get_product_property(...)\nGet the product property of the layout object for a given product ID and attribute ID.\nPinGroupTerminal.get_product_property_ids(prod_id)\nGet a list of attribute IDs given a product ID for the layout object.\nPinGroupTerminal.product_solver_names(product_id)\nGet the list of solver names.\nPinGroupTerminal.product_solver_option(...)\nGet the name of the product solver option.\nPinGroupTerminal.set_product_property(...)\nSet the product property of the layout object for a given product ID and attribute ID.\nPinGroupTerminal.set_product_solver_option(...)\nSet the product solver option.\nPinGroupTerminal.boundary_type\nBoundaryType: Boundary type of the terminal.\nPinGroupTerminal.bundle_terminal\nBundleTerminal: Bundle terminal that the terminal belongs to, if any.\nPinGroupTerminal.component\nComponentGroup:         Component of the Connectable object.\nPinGroupTerminal.edb_uid\nint: Unique, persistent ID for the Connectable object.\nPinGroupTerminal.group\nGroup object.\nPinGroupTerminal.hfss_pi_type\nHfssPIType: HFSS PI type.\nPinGroupTerminal.id\nint: Unique ID of the EDB object.\nPinGroupTerminal.impedance\nValue: Impedance of the terminal.\nPinGroupTerminal.is_auto_port\nbool: Flag indicating if the terminal is an auto port.\nPinGroupTerminal.is_circuit_port\nbool: Flag indicating if the terminal is a circuit port.\nPinGroupTerminal.is_interface_terminal\nbool: Flag indicating if the terminal is an interface.\nPinGroupTerminal.is_mcad\nbool: Flag indicating if this is an MCAD model.\nPinGroupTerminal.is_mcad_3d_comp\nbool: Flag indicating if this is a 3D composite MCAD model.\nPinGroupTerminal.is_mcad_hfss\nbool: Flag indicating if this is an HFSS MCAD model.\nPinGroupTerminal.is_mcad_stride\nbool: Flag indicating if this is a Stride MCAD model.\nPinGroupTerminal.is_null\nbool: Flag indicating if the object exists in the database.\nPinGroupTerminal.is_reference_terminal\nbool: Flag indicating if the terminal is a reference terminal.\nPinGroupTerminal.layer\nLayer: Layer.\nPinGroupTerminal.layout\nLayout: Layout owning the object.\nPinGroupTerminal.layout_obj_type\n\nPinGroupTerminal.model\nstr: S-parameter model.\nPinGroupTerminal.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nPinGroupTerminal.name\nstr: Name of the terminal.\nPinGroupTerminal.net\nNet: Net of the Connectable object.\nPinGroupTerminal.obj_type\nLayoutObjType: Layout object type.\nPinGroupTerminal.pin_group\nPinGroup: Pin group of the terminal.\nPinGroupTerminal.port_post_processing_prop\nPortPostProcessingProp: Port postprocessing properties.\nPinGroupTerminal.reference_layer\nLayer: Layer that the terminal references, if any, by either layer object or name.\nPinGroupTerminal.reference_terminal\nTerminal: Terminal that the terminal references, if any.\nPinGroupTerminal.rlc_boundary_parameters\nRlc: RLC boundary parameters.\nPinGroupTerminal.source_amplitude\nValue: Source amplitude of the terminal.\nPinGroupTerminal.source_phase\nValue: Source phase of the terminal.\nPinGroupTerminal.term_to_ground\nSourceTermToGroundType: Source terminal-to-ground type.\nPinGroupTerminal.type\n\nPinGroupTerminal.use_reference_from_hierarchy\nbool: Flag indicating if the terminal can use references from the hierarchy.\nPinGroupTerminal\nPinGroupTerminal.cast\nPinGroupTerminal.create\nPinGroupTerminal.create_3d_comp\nPinGroupTerminal.create_hfss\nPinGroupTerminal.create_stride\nPinGroupTerminal.delete\nPinGroupTerminal.find\nPinGroupTerminal.find_by_id\nPinGroupTerminal.get_product_property\nPinGroupTerminal.get_product_property_ids\nPinGroupTerminal.product_solver_names\nPinGroupTerminal.product_solver_option\nPinGroupTerminal.set_product_property\nPinGroupTerminal.set_product_solver_option\nPinGroupTerminal.boundary_type\nBoundaryType\nPinGroupTerminal.bundle_terminal\nBundleTerminal\nPinGroupTerminal.component\nComponentGroup\nPinGroupTerminal.edb_uid\nint\nPinGroupTerminal.group\nGroup\nPinGroupTerminal.hfss_pi_type\nHfssPIType\nPinGroupTerminal.id\nint\nPinGroupTerminal.impedance\nValue\nPinGroupTerminal.is_auto_port\nbool\nPinGroupTerminal.is_circuit_port\nbool\nPinGroupTerminal.is_interface_terminal\nbool\nPinGroupTerminal.is_mcad\nbool\nPinGroupTerminal.is_mcad_3d_comp\nbool\nPinGroupTerminal.is_mcad_hfss\nbool\nPinGroupTerminal.is_mcad_stride\nbool\nPinGroupTerminal.is_null\nbool\nPinGroupTerminal.is_reference_terminal\nbool\nPinGroupTerminal.layer\nLayer\nPinGroupTerminal.layout\nLayout\nPinGroupTerminal.layout_obj_type\nPinGroupTerminal.model\nstr\nPinGroupTerminal.msg\nEDBObjMessage\nPinGroupTerminal.name\nstr\nPinGroupTerminal.net\nNet\nPinGroupTerminal.obj_type\nLayoutObjType\nPinGroupTerminal.pin_group\nPinGroup\nPinGroupTerminal.port_post_processing_prop\nPortPostProcessingProp\nPinGroupTerminal.reference_layer\nLayer\nPinGroupTerminal.reference_terminal\nTerminal\nPinGroupTerminal.rlc_boundary_parameters\nRlc\nPinGroupTerminal.source_amplitude\nValue\nPinGroupTerminal.source_phase\nValue\nPinGroupTerminal.term_to_ground\nSourceTermToGroundType\nPinGroupTerminal.type\nPinGroupTerminal.use_reference_from_hierarchy\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.html#ansys.edb.core.terminal.terminals.PinGroupTerminal",
        "title": "PinGroupTerminal > PinGroupTerminal > PinGroupTerminal",
        "section": "PinGroupTerminal > PinGroupTerminal",
        "text": "class ansys.edb.core.terminal.terminals.PinGroupTerminal(msg)\n\nRepresents a pin group terminal.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nPinGroupTerminal.cast([term_type])\n\nCast the terminal object to the correct concrete type, fetching the type if necessary.\n\nPinGroupTerminal.create(layout, name, ...[, ...])\n\nCreate a pin group terminal.\n\nPinGroupTerminal.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nPinGroupTerminal.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nPinGroupTerminal.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nPinGroupTerminal.delete()\n\nDelete the layout object.\n\nPinGroupTerminal.find(layout, name)\n\nFind a terminal by name in a given layout.\n\nPinGroupTerminal.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nPinGroupTerminal.get_product_property(...)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nPinGroupTerminal.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nPinGroupTerminal.product_solver_names(product_id)\n\nGet the list of solver names.\n\nPinGroupTerminal.product_solver_option(...)\n\nGet the name of the product solver option.\n\nPinGroupTerminal.set_product_property(...)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nPinGroupTerminal.set_product_solver_option(...)\n\nSet the product solver option.\n\n\n\nAttributes\n\n\n\n\n\n\n\nPinGroupTerminal.boundary_type\n\nBoundaryType: Boundary type of the terminal.\n\nPinGroupTerminal.bundle_terminal\n\nBundleTerminal: Bundle terminal that the terminal belongs to, if any.\n\nPinGroupTerminal.component\n\nComponentGroup:         Component of the Connectable object.\n\nPinGroupTerminal.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nPinGroupTerminal.group\n\nGroup object.\n\nPinGroupTerminal.hfss_pi_type\n\nHfssPIType: HFSS PI type.\n\nPinGroupTerminal.id\n\nint: Unique ID of the EDB object.\n\nPinGroupTerminal.impedance\n\nValue: Impedance of the terminal.\n\nPinGroupTerminal.is_auto_port\n\nbool: Flag indicating if the terminal is an auto port.\n\nPinGroupTerminal.is_circuit_port\n\nbool: Flag indicating if the terminal is a circuit port.\n\nPinGroupTerminal.is_interface_terminal\n\nbool: Flag indicating if the terminal is an interface.\n\nPinGroupTerminal.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nPinGroupTerminal.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nPinGroupTerminal.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nPinGroupTerminal.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nPinGroupTerminal.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nPinGroupTerminal.is_reference_terminal\n\nbool: Flag indicating if the terminal is a reference terminal.\n\nPinGroupTerminal.layer\n\nLayer: Layer.\n\nPinGroupTerminal.layout\n\nLayout: Layout owning the object.\n\nPinGroupTerminal.layout_obj_type\n\n\n\nPinGroupTerminal.model\n\nstr: S-parameter model.\n\nPinGroupTerminal.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nPinGroupTerminal.name\n\nstr: Name of the terminal.\n\nPinGroupTerminal.net\n\nNet: Net of the Connectable object.\n\nPinGroupTerminal.obj_type\n\nLayoutObjType: Layout object type.\n\nPinGroupTerminal.pin_group\n\nPinGroup: Pin group of the terminal.\n\nPinGroupTerminal.port_post_processing_prop\n\nPortPostProcessingProp: Port postprocessing properties.\n\nPinGroupTerminal.reference_layer\n\nLayer: Layer that the terminal references, if any, by either layer object or name.\n\nPinGroupTerminal.reference_terminal\n\nTerminal: Terminal that the terminal references, if any.\n\nPinGroupTerminal.rlc_boundary_parameters\n\nRlc: RLC boundary parameters.\n\nPinGroupTerminal.source_amplitude\n\nValue: Source amplitude of the terminal.\n\nPinGroupTerminal.source_phase\n\nValue: Source phase of the terminal.\n\nPinGroupTerminal.term_to_ground\n\nSourceTermToGroundType: Source terminal-to-ground type.\n\nPinGroupTerminal.type\n\n\n\nPinGroupTerminal.use_reference_from_hierarchy\n\nbool: Flag indicating if the terminal can use references from the hierarchy.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.settings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.settings.html#settings",
        "title": "settings",
        "section": "settings",
        "text": "RaptorXSimulationSettings: Simulation settings of the RaptorX simulation setup.\nsettings\nRaptorXSimulationSettings"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.settings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.settings.html#ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.settings",
        "title": "settings > settings > settings",
        "section": "settings > settings",
        "text": "property RaptorXSimulationSetup.settings\n\nRaptorXSimulationSettings: Simulation settings of the RaptorX simulation setup.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.bundle_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.bundle_terminal.html#bundle_terminal",
        "title": "bundle_terminal",
        "section": "bundle_terminal",
        "text": "BundleTerminal: Bundle terminal that the terminal belongs to, if any.\nbundle_terminal\nBundleTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.bundle_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.bundle_terminal.html#ansys.edb.core.terminal.terminals.Terminal.bundle_terminal",
        "title": "bundle_terminal > bundle_terminal > bundle_terminal",
        "section": "bundle_terminal > bundle_terminal",
        "text": "property Terminal.bundle_terminal\n\nBundleTerminal: Bundle terminal that the terminal belongs to, if any.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.set_hfss_extent_info",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.set_hfss_extent_info.html#set_hfss_extent_info",
        "title": "set_hfss_extent_info",
        "section": "set_hfss_extent_info",
        "text": "Set the HFSS extents of this cell.\nset_hfss_extent_info\nHfssExtentInfo"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.set_hfss_extent_info",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.set_hfss_extent_info.html#ansys.edb.core.layout.cell.Cell.set_hfss_extent_info",
        "title": "set_hfss_extent_info > set_hfss_extent_info > set_hfss_extent_info",
        "section": "set_hfss_extent_info > set_hfss_extent_info",
        "text": "Cell.set_hfss_extent_info(extents)\n\nSet the HFSS extents of this cell.\n\nParameters\n\nextents\n\nHfssExtentInfo\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.id",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.id",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.id.html#ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property Jedec4BondwireDef.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireType",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireType.html#bondwiretype",
        "title": "BondwireType",
        "section": "BondwireType",
        "text": "Provides an enum representing bondwire types.\nBondwireType.APD\n\nBondwireType.JEDEC4\n\nBondwireType.JEDEC5\n\nBondwireType.NUM_OF_TYPE\n\nBondwireType.INVALID\n\nBondwireType\nBondwireType.APD\nBondwireType.JEDEC4\nBondwireType.JEDEC5\nBondwireType.NUM_OF_TYPE\nBondwireType.INVALID"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireType",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireType.html#ansys.edb.core.primitive.primitive.BondwireType",
        "title": "BondwireType > BondwireType > BondwireType",
        "section": "BondwireType > BondwireType",
        "text": "class ansys.edb.core.primitive.primitive.BondwireType(value)\n\nProvides an enum representing bondwire types.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nBondwireType.APD\n\n\n\nBondwireType.JEDEC4\n\n\n\nBondwireType.JEDEC5\n\n\n\nBondwireType.NUM_OF_TYPE\n\n\n\nBondwireType.INVALID\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.netlist_model.NetlistModel.is_null",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.netlist_model.NetlistModel.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.netlist_model.NetlistModel.is_null",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.netlist_model.NetlistModel.is_null.html#ansys.edb.core.hierarchy.netlist_model.NetlistModel.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property NetlistModel.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.set_variable_value",
        "href": "api/_autosummary/ansys.edb.core.database.Database.set_variable_value.html#set_variable_value",
        "title": "set_variable_value",
        "section": "set_variable_value",
        "text": "Set a variable to a new value.\nVariable name.\nNew value.\nset_variable_value\npython:str\npython:str\npython:int\npython:float\ncomplex\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.set_variable_value",
        "href": "api/_autosummary/ansys.edb.core.database.Database.set_variable_value.html#ansys.edb.core.database.Database.set_variable_value",
        "title": "set_variable_value > set_variable_value > set_variable_value",
        "section": "set_variable_value > set_variable_value",
        "text": "Database.set_variable_value(name, new_value)\n\nSet a variable to a new value.\n\nParameters\n\nname\n\npython:str\n\nVariable name.\n\nnew_value\n\npython:str, python:int, python:float, complex, Value\n\nNew value.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.lower_elevation",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.lower_elevation.html#lower_elevation",
        "title": "lower_elevation",
        "section": "lower_elevation",
        "text": "Value: Lower elevation value of the layer.\nThe setter accepts a ValueLike term.\nlower_elevation\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.lower_elevation",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.lower_elevation.html#ansys.edb.core.layer.via_layer.ViaLayer.lower_elevation",
        "title": "lower_elevation > lower_elevation > lower_elevation",
        "section": "lower_elevation > lower_elevation",
        "text": "property ViaLayer.lower_elevation\n\nValue: Lower elevation value of the layer.\n\nThe setter accepts a ValueLike term.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.primitive_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.primitive_type.html#primitive_type",
        "title": "primitive_type",
        "section": "primitive_type",
        "text": "PrimitiveType: Primitive type of the primitive.\nThis property is read-only.\nprimitive_type\nPrimitiveType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.primitive_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.primitive_type.html#ansys.edb.core.primitive.primitive.Rectangle.primitive_type",
        "title": "primitive_type > primitive_type > primitive_type",
        "section": "primitive_type > primitive_type",
        "text": "property Rectangle.primitive_type\n\nPrimitiveType: Primitive type of the primitive.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.unique_name",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.unique_name.html#unique_name",
        "title": "unique_name",
        "section": "unique_name",
        "text": "Get a unique pin group name in the layout using a given prefix.\nLayout to search for the pin group.\nPrefix of the unique name.\nName of the pin group found.\nunique_name\nLayout\npython:str\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.unique_name",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.unique_name.html#ansys.edb.core.hierarchy.pin_group.PinGroup.unique_name",
        "title": "unique_name > unique_name > unique_name",
        "section": "unique_name > unique_name",
        "text": "classmethod PinGroup.unique_name(layout, prefix)\n\nGet a unique pin group name in the layout using a given prefix.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the pin group.\n\nprefix\n\npython:str\n\nPrefix of the unique name.\n\nReturns\n\npython:str\n\nName of the pin group found.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.voids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.voids.html#voids",
        "title": "voids",
        "section": "voids",
        "text": "list of Primitive: List of void        primitive objects inside the primitive.\nThis property is read-only.\nvoids\nlist\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.voids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.voids.html#ansys.edb.core.primitive.primitive.Path.voids",
        "title": "voids > voids > voids",
        "section": "voids > voids",
        "text": "property Path.voids\n\nlist of Primitive: List of void        primitive objects inside the primitive.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the property.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.set_product_property.html#ansys.edb.core.net.net_class.NetClass.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "NetClass.set_product_property(prod_id, attr_id, prop_value)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nprop_value\n\npython:str\n\nString stored in the property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.do_renormalize",
        "href": "api/_autosummary/ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.do_renormalize.html#do_renormalize",
        "title": "do_renormalize",
        "section": "do_renormalize",
        "text": "Enable port impedance renormalization.\nTrue when successful, False when failed.\ndo_renormalize\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.do_renormalize",
        "href": "api/_autosummary/ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.do_renormalize.html#ansys.edb.core.utility.port_post_processing_prop.PortPostProcessingProp.do_renormalize",
        "title": "do_renormalize > do_renormalize > do_renormalize",
        "section": "do_renormalize > do_renormalize",
        "text": "PortPostProcessingProp.do_renormalize\n\nEnable port impedance renormalization.\n\nReturns\n\nbool\n\nTrue when successful, False when failed.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.DrawOverride.NO_OVERRIDE",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.DrawOverride.NO_OVERRIDE.html#no_override",
        "title": "NO_OVERRIDE",
        "section": "NO_OVERRIDE",
        "text": "NO_OVERRIDE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.DrawOverride.NO_OVERRIDE",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.DrawOverride.NO_OVERRIDE.html#ansys.edb.core.layer.layer.DrawOverride.NO_OVERRIDE",
        "title": "NO_OVERRIDE > NO_OVERRIDE > NO_OVERRIDE",
        "section": "NO_OVERRIDE > NO_OVERRIDE",
        "text": "DrawOverride.NO_OVERRIDE = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.msg",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.msg",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.msg.html#ansys.edb.core.primitive.primitive.PadstackInstance.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property PadstackInstance.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform.Transform.mirror",
        "href": "api/_autosummary/ansys.edb.core.utility.transform.Transform.mirror.html#mirror",
        "title": "mirror",
        "section": "mirror",
        "text": "bool: Mirror property. If True, mirror about y axis.\nmirror\nbool\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform.Transform.mirror",
        "href": "api/_autosummary/ansys.edb.core.utility.transform.Transform.mirror.html#ansys.edb.core.utility.transform.Transform.mirror",
        "title": "mirror > mirror > mirror",
        "section": "mirror > mirror",
        "text": "property Transform.mirror\n\nbool: Mirror property. If True, mirror about y axis.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.die_property.DieType",
        "href": "api/_autosummary/ansys.edb.core.definition.die_property.DieType.html#dietype",
        "title": "DieType",
        "section": "DieType",
        "text": "Provides an enum representing die types.\nDieType.NONE\n\nDieType.FLIPCHIP\n\nDieType.WIREBOND\n\nDieType\nDieType.NONE\nDieType.FLIPCHIP\nDieType.WIREBOND"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.die_property.DieType",
        "href": "api/_autosummary/ansys.edb.core.definition.die_property.DieType.html#ansys.edb.core.definition.die_property.DieType",
        "title": "DieType > DieType > DieType",
        "section": "DieType > DieType",
        "text": "class ansys.edb.core.definition.die_property.DieType(value)\n\nProvides an enum representing die types.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nDieType.NONE\n\n\n\nDieType.FLIPCHIP\n\n\n\nDieType.WIREBOND\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.id",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.id",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.id.html#ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property LayoutObjInstance2DGeometry.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_mcad_stride.html#is_mcad_stride",
        "title": "is_mcad_stride",
        "section": "is_mcad_stride",
        "text": "bool: Flag indicating if this is a Stride MCAD model.\nThis property is read-only.\nis_mcad_stride\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.is_mcad_stride.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.is_mcad_stride",
        "title": "is_mcad_stride > is_mcad_stride > is_mcad_stride",
        "section": "is_mcad_stride > is_mcad_stride",
        "text": "property PinGroupTerminal.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PathCornerType",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PathCornerType.html#pathcornertype",
        "title": "PathCornerType",
        "section": "PathCornerType",
        "text": "Provides an enum representing corner types.\nPathCornerType.ROUND\n\nPathCornerType.SHARP\n\nPathCornerType.MITER\n\nPathCornerType\nPathCornerType.ROUND\nPathCornerType.SHARP\nPathCornerType.MITER"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PathCornerType",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PathCornerType.html#ansys.edb.core.primitive.primitive.PathCornerType",
        "title": "PathCornerType > PathCornerType > PathCornerType",
        "section": "PathCornerType > PathCornerType",
        "text": "class ansys.edb.core.primitive.primitive.PathCornerType(value)\n\nProvides an enum representing corner types.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nPathCornerType.ROUND\n\n\n\nPathCornerType.SHARP\n\n\n\nPathCornerType.MITER\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.zones",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.zones.html#zones",
        "title": "zones",
        "section": "zones",
        "text": "list[int]: IDs of all zones containing the layer.\nThis property is read-only.\nzones\nlist\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.zones",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.zones.html#ansys.edb.core.layer.via_layer.ViaLayer.zones",
        "title": "zones > zones > zones",
        "section": "zones > zones",
        "text": "property ViaLayer.zones\n\nlist[int]: IDs of all zones containing the layer.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.small_void_area",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.small_void_area.html#small_void_area",
        "title": "small_void_area",
        "section": "small_void_area",
        "text": "float: Voids with an area smaller than this value are ignored during simulation.\nsmall_void_area\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.small_void_area",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.small_void_area.html#ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.small_void_area",
        "title": "small_void_area > small_void_area > small_void_area",
        "section": "small_void_area > small_void_area",
        "text": "property AdvancedSettings.small_void_area\n\nfloat: Voids with an area smaller than this value are ignored during simulation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.is_null.html#ansys.edb.core.definition.port_property.PortProperty.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property PortProperty.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.solve_independent_preference",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.solve_independent_preference.html#solve_independent_preference",
        "title": "solve_independent_preference",
        "section": "solve_independent_preference",
        "text": "bool: Flag indicating if the object is assigned to solve independent of its parent context.\nTrue if the object is assigned to solve independently, False if the object is embedded.\nFor a ComponentModel\ninstance, this flag indicates if the model is embedded with the field solver, when applicable.\nFor a CellInstance instance,\nit indicates if the design’s geometry is flattened/meshed with the parent, when applicable.\nsolve_independent_preference\nbool\nTrue\nFalse\nComponentModel\nCellInstance"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.solve_independent_preference",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.solve_independent_preference.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.solve_independent_preference",
        "title": "solve_independent_preference > solve_independent_preference > solve_independent_preference",
        "section": "solve_independent_preference > solve_independent_preference",
        "text": "property CellInstance.solve_independent_preference\n\nbool: Flag indicating if the object is assigned to solve independent of its parent context.\n\nReturns\n\nbool\n\nTrue if the object is assigned to solve independently, False if the object is embedded.\n\nNotes\n\nFor a ComponentModel\ninstance, this flag indicates if the model is embedded with the field solver, when applicable.\n\nFor a CellInstance instance,\nit indicates if the design’s geometry is flattened/meshed with the parent, when applicable.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.SIWAVE_HFSS_SOLVER_REGIONS",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.SIWAVE_HFSS_SOLVER_REGIONS.html#siwave_hfss_solver_regions",
        "title": "SIWAVE_HFSS_SOLVER_REGIONS",
        "section": "SIWAVE_HFSS_SOLVER_REGIONS",
        "text": "SIWAVE_HFSS_SOLVER_REGIONS"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.SIWAVE_HFSS_SOLVER_REGIONS",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.SIWAVE_HFSS_SOLVER_REGIONS.html#ansys.edb.core.layer.layer_collection.LayerType.SIWAVE_HFSS_SOLVER_REGIONS",
        "title": "SIWAVE_HFSS_SOLVER_REGIONS > SIWAVE_HFSS_SOLVER_REGIONS > SIWAVE_HFSS_SOLVER_REGIONS",
        "section": "SIWAVE_HFSS_SOLVER_REGIONS > SIWAVE_HFSS_SOLVER_REGIONS",
        "text": "LayerType.SIWAVE_HFSS_SOLVER_REGIONS = 16\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform.Transform.transform_point",
        "href": "api/_autosummary/ansys.edb.core.utility.transform.Transform.transform_point.html#transform_point",
        "title": "transform_point",
        "section": "transform_point",
        "text": "Transform a point.\nPoint values [x, y] to transform.\nTransformed point.\ntransform_point\nPointData\nPointData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform.Transform.transform_point",
        "href": "api/_autosummary/ansys.edb.core.utility.transform.Transform.transform_point.html#ansys.edb.core.utility.transform.Transform.transform_point",
        "title": "transform_point > transform_point > transform_point",
        "section": "transform_point > transform_point",
        "text": "Transform.transform_point(point)\n\nTransform a point.\n\nParameters\n\npoint\n\nPointData\n\nPoint values [x, y] to transform.\n\nReturns\n\nPointData\n\nTransformed point.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.add_terminal",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.add_terminal.html#add_terminal",
        "title": "add_terminal",
        "section": "add_terminal",
        "text": "Add a terminal with a pin number.\nTerminal name to associate with the pin.\nPin number.\nadd_terminal\npython:str\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.add_terminal",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.add_terminal.html#ansys.edb.core.hierarchy.spice_model.SPICEModel.add_terminal",
        "title": "add_terminal > add_terminal > add_terminal",
        "section": "add_terminal > add_terminal",
        "text": "SPICEModel.add_terminal(terminal, pin)\n\nAdd a terminal with a pin number.\n\nParameters\n\nterminal\n\npython:str\n\nTerminal name to associate with the pin.\n\npin\n\npython:str\n\nPin number.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.layout_obj_type.html#layout_obj_type",
        "title": "layout_obj_type",
        "section": "layout_obj_type",
        "text": "layout_obj_type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.layout_obj_type.html#ansys.edb.core.primitive.primitive.Circle.layout_obj_type",
        "title": "layout_obj_type > layout_obj_type > layout_obj_type",
        "section": "layout_obj_type > layout_obj_type",
        "text": "Circle.layout_obj_type = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the property.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.set_product_property.html#ansys.edb.core.terminal.terminals.EdgeTerminal.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "EdgeTerminal.set_product_property(prod_id, attr_id, prop_value)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nprop_value\n\npython:str\n\nString stored in the property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.owning_cell_instance",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.owning_cell_instance.html#owning_cell_instance",
        "title": "owning_cell_instance",
        "section": "owning_cell_instance",
        "text": "CellInstance: Cell instance that owns the terminal.\nowning_cell_instance\nCellInstance"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.owning_cell_instance",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.owning_cell_instance.html#ansys.edb.core.terminal.terminals.TerminalInstance.owning_cell_instance",
        "title": "owning_cell_instance > owning_cell_instance > owning_cell_instance",
        "section": "owning_cell_instance > owning_cell_instance",
        "text": "property TerminalInstance.owning_cell_instance\n\nCellInstance: Cell instance that owns the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.NPortComponentModel.id",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.NPortComponentModel.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.NPortComponentModel.id",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.NPortComponentModel.id.html#ansys.edb.core.definition.component_model.NPortComponentModel.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property NPortComponentModel.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.mesh_region_name",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.mesh_region_name.html#mesh_region_name",
        "title": "mesh_region_name",
        "section": "mesh_region_name",
        "text": "str: Name of the mesh region to use.\nmesh_region_name\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.mesh_region_name",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.mesh_region_name.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.mesh_region_name",
        "title": "mesh_region_name > mesh_region_name > mesh_region_name",
        "section": "mesh_region_name > mesh_region_name",
        "text": "property HFSSGeneralSettings.mesh_region_name\n\nstr: Name of the mesh region to use.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.source_terms_to_ground",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.source_terms_to_ground.html#source_terms_to_ground",
        "title": "source_terms_to_ground",
        "section": "source_terms_to_ground",
        "text": "dict { str : int }: Dictionary of SourceName, NodeToGround pairs.\nNodeToGround options are 0 (unspecified), 1 (negative), and 2 (positive).\nsource_terms_to_ground\ndict\nstr\nint\nSourceName, NodeToGround\nNodeToGround\n0\n1\n2"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.source_terms_to_ground",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.source_terms_to_ground.html#ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.source_terms_to_ground",
        "title": "source_terms_to_ground > source_terms_to_ground > source_terms_to_ground",
        "section": "source_terms_to_ground > source_terms_to_ground",
        "text": "property SIWaveDCIRSimulationSettings.source_terms_to_ground\n\ndict { str : int }: Dictionary of SourceName, NodeToGround pairs.\n\nNodeToGround options are 0 (unspecified), 1 (negative), and 2 (positive).\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.get_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.get_hfss_prop.html#get_hfss_prop",
        "title": "get_hfss_prop",
        "section": "get_hfss_prop",
        "text": "Get HFSS properties.\nName of the material property.\nWhether to solve inside.\nget_hfss_prop\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.get_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.get_hfss_prop.html#ansys.edb.core.primitive.primitive.Bondwire.get_hfss_prop",
        "title": "get_hfss_prop > get_hfss_prop > get_hfss_prop",
        "section": "get_hfss_prop > get_hfss_prop",
        "text": "Bondwire.get_hfss_prop()\n\nGet HFSS properties.\n\nReturns\n\nmaterial\n\npython:str\n\nName of the material property.\n\nsolve_inside\n\nbool\n\nWhether to solve inside.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.dc_report_show_active_devices",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.dc_report_show_active_devices.html#dc_report_show_active_devices",
        "title": "dc_report_show_active_devices",
        "section": "dc_report_show_active_devices",
        "text": "bool: Flag indicating if active devices are shown in the DC report.\ndc_report_show_active_devices\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.dc_report_show_active_devices",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.dc_report_show_active_devices.html#ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.dc_report_show_active_devices",
        "title": "dc_report_show_active_devices > dc_report_show_active_devices > dc_report_show_active_devices",
        "section": "dc_report_show_active_devices > dc_report_show_active_devices",
        "text": "property SIWaveDCIRSimulationSettings.dc_report_show_active_devices\n\nbool: Flag indicating if active devices are shown in the DC report.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.model",
        "href": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.model.html#model",
        "title": "model",
        "section": "model",
        "text": "Model: Model object.\nThis is a copy of the model object. Use the setter for any modifications to be reflected.\nmodel\nModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.model",
        "href": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.model.html#ansys.edb.core.definition.ic_component_property.ICComponentProperty.model",
        "title": "model > model > model",
        "section": "model > model",
        "text": "property ICComponentProperty.model\n\nModel: Model object.\n\nThis is a copy of the model object. Use the setter for any modifications to be reflected.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.layout_obj_type.html#layout_obj_type",
        "title": "layout_obj_type",
        "section": "layout_obj_type",
        "text": "layout_obj_type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.layout_obj_type.html#ansys.edb.core.layer.stackup_layer.StackupLayer.layout_obj_type",
        "title": "layout_obj_type > layout_obj_type > layout_obj_type",
        "section": "layout_obj_type > layout_obj_type",
        "text": "StackupLayer.layout_obj_type = 5\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.layout",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.layout.html#layout",
        "title": "layout",
        "section": "layout",
        "text": "Layout: Layout owning the object.\nThis property is read-only.\nlayout\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.layout",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.layout.html#ansys.edb.core.primitive.primitive.Bondwire.layout",
        "title": "layout > layout > layout",
        "section": "layout > layout",
        "text": "property Bondwire.layout\n\nLayout: Layout owning the object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the property.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.set_product_property.html#ansys.edb.core.primitive.primitive.Bondwire.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "Bondwire.set_product_property(prod_id, attr_id, prop_value)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nprop_value\n\npython:str\n\nString stored in the property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.num_via_density",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.num_via_density.html#num_via_density",
        "title": "num_via_density",
        "section": "num_via_density",
        "text": "float: Spacing between vias.\nnum_via_density\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.num_via_density",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.num_via_density.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.num_via_density",
        "title": "num_via_density > num_via_density > num_via_density",
        "section": "num_via_density > num_via_density",
        "text": "property HFSSAdvancedSettings.num_via_density\n\nfloat: Spacing between vias.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.create_stride",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.create_stride.html#create_stride",
        "title": "create_stride",
        "section": "create_stride",
        "text": "Create a Stride model from an MCAD file.\nStride model created.\ncreate_stride\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.create_stride",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.create_stride.html#ansys.edb.core.hierarchy.group.Group.create_stride",
        "title": "create_stride > create_stride > create_stride",
        "section": "create_stride > create_stride",
        "text": "Group.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nReturns\n\nMcadModel\n\nStride model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.height",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.height.html#height",
        "title": "height",
        "section": "height",
        "text": "Value: Height of the package.\nheight\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.height",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.height.html#ansys.edb.core.definition.package_def.PackageDef.height",
        "title": "height > height > height",
        "section": "height > height",
        "text": "property PackageDef.height\n\nValue: Height of the package.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.source_phase",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.source_phase.html#source_phase",
        "title": "source_phase",
        "section": "source_phase",
        "text": "Value: Source phase of the terminal.\nsource_phase\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.source_phase",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.source_phase.html#ansys.edb.core.terminal.terminals.EdgeTerminal.source_phase",
        "title": "source_phase > source_phase > source_phase",
        "section": "source_phase > source_phase",
        "text": "property EdgeTerminal.source_phase\n\nValue: Source phase of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.create_3d_comp.html#create_3d_comp",
        "title": "create_3d_comp",
        "section": "create_3d_comp",
        "text": "Create a 3D composite model from an MCAD file.\n3D composite model created.\ncreate_3d_comp\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.create_3d_comp.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.create_3d_comp",
        "title": "create_3d_comp > create_3d_comp > create_3d_comp",
        "section": "create_3d_comp > create_3d_comp",
        "text": "VoltageRegulator.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nReturns\n\nMcadModel\n\n3D composite model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.html#padstackinstanceterminal",
        "title": "PadstackInstanceTerminal",
        "section": "PadstackInstanceTerminal",
        "text": "Represents a padstack instance terminal.\nPadstackInstanceTerminal.cast([term_type])\nCast the terminal object to the correct concrete type, fetching the type if necessary.\nPadstackInstanceTerminal.create(layout, ...)\nCreate a padstack instance terminal.\nPadstackInstanceTerminal.create_3d_comp()\nCreate a 3D composite model from an MCAD file.\nPadstackInstanceTerminal.create_hfss()\nCreate an HFSS model from an MCAD file.\nPadstackInstanceTerminal.create_stride()\nCreate a Stride model from an MCAD file.\nPadstackInstanceTerminal.delete()\nDelete the layout object.\nPadstackInstanceTerminal.find(layout, name)\nFind a terminal by name in a given layout.\nPadstackInstanceTerminal.find_by_id(layout, uid)\nFind a Connectable object by database ID in a given layout.\nPadstackInstanceTerminal.get_product_property(...)\nGet the product property of the layout object for a given product ID and attribute ID.\nPadstackInstanceTerminal.get_product_property_ids(prod_id)\nGet a list of attribute IDs given a product ID for the layout object.\nPadstackInstanceTerminal.product_solver_names(...)\nGet the list of solver names.\nPadstackInstanceTerminal.product_solver_option(...)\nGet the name of the product solver option.\nPadstackInstanceTerminal.set_product_property(...)\nSet the product property of the layout object for a given product ID and attribute ID.\nPadstackInstanceTerminal.set_product_solver_option(...)\nSet the product solver option.\nPadstackInstanceTerminal.boundary_type\nBoundaryType: Boundary type of the terminal.\nPadstackInstanceTerminal.bundle_terminal\nBundleTerminal: Bundle terminal that the terminal belongs to, if any.\nPadstackInstanceTerminal.component\nComponentGroup:         Component of the Connectable object.\nPadstackInstanceTerminal.edb_uid\nint: Unique, persistent ID for the Connectable object.\nPadstackInstanceTerminal.group\nGroup object.\nPadstackInstanceTerminal.hfss_pi_type\nHfssPIType: HFSS PI type.\nPadstackInstanceTerminal.id\nint: Unique ID of the EDB object.\nPadstackInstanceTerminal.impedance\nValue: Impedance of the terminal.\nPadstackInstanceTerminal.is_auto_port\nbool: Flag indicating if the terminal is an auto port.\nPadstackInstanceTerminal.is_circuit_port\nbool: Flag indicating if the terminal is a circuit port.\nPadstackInstanceTerminal.is_interface_terminal\nbool: Flag indicating if the terminal is an interface.\nPadstackInstanceTerminal.is_mcad\nbool: Flag indicating if this is an MCAD model.\nPadstackInstanceTerminal.is_mcad_3d_comp\nbool: Flag indicating if this is a 3D composite MCAD model.\nPadstackInstanceTerminal.is_mcad_hfss\nbool: Flag indicating if this is an HFSS MCAD model.\nPadstackInstanceTerminal.is_mcad_stride\nbool: Flag indicating if this is a Stride MCAD model.\nPadstackInstanceTerminal.is_null\nbool: Flag indicating if the object exists in the database.\nPadstackInstanceTerminal.is_reference_terminal\nbool: Flag indicating if the terminal is a reference terminal.\nPadstackInstanceTerminal.layer\nLayer: Layer the terminal is placed on.\nPadstackInstanceTerminal.layout\nLayout: Layout owning the object.\nPadstackInstanceTerminal.layout_obj_type\n\nPadstackInstanceTerminal.model\nstr: S-parameter model.\nPadstackInstanceTerminal.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nPadstackInstanceTerminal.name\nstr: Name of the terminal.\nPadstackInstanceTerminal.net\nNet: Net of the Connectable object.\nPadstackInstanceTerminal.obj_type\nLayoutObjType: Layout object type.\nPadstackInstanceTerminal.padstack_instance\nPadstackInstance: Padstack instance of the terminal.\nPadstackInstanceTerminal.params\nlist of PadstackInstance and Layer: Padstack instance and layer.\nPadstackInstanceTerminal.port_post_processing_prop\nPortPostProcessingProp: Port postprocessing properties.\nPadstackInstanceTerminal.reference_layer\nLayer: Layer that the terminal references, if any, by either layer object or name.\nPadstackInstanceTerminal.reference_terminal\nTerminal: Terminal that the terminal references, if any.\nPadstackInstanceTerminal.rlc_boundary_parameters\nRlc: RLC boundary parameters.\nPadstackInstanceTerminal.source_amplitude\nValue: Source amplitude of the terminal.\nPadstackInstanceTerminal.source_phase\nValue: Source phase of the terminal.\nPadstackInstanceTerminal.term_to_ground\nSourceTermToGroundType: Source terminal-to-ground type.\nPadstackInstanceTerminal.type\n\nPadstackInstanceTerminal.use_reference_from_hierarchy\nbool: Flag indicating if the terminal can use references from the hierarchy.\nPadstackInstanceTerminal\nPadstackInstanceTerminal.cast\nPadstackInstanceTerminal.create\nPadstackInstanceTerminal.create_3d_comp\nPadstackInstanceTerminal.create_hfss\nPadstackInstanceTerminal.create_stride\nPadstackInstanceTerminal.delete\nPadstackInstanceTerminal.find\nPadstackInstanceTerminal.find_by_id\nPadstackInstanceTerminal.get_product_property\nPadstackInstanceTerminal.get_product_property_ids\nPadstackInstanceTerminal.product_solver_names\nPadstackInstanceTerminal.product_solver_option\nPadstackInstanceTerminal.set_product_property\nPadstackInstanceTerminal.set_product_solver_option\nPadstackInstanceTerminal.boundary_type\nBoundaryType\nPadstackInstanceTerminal.bundle_terminal\nBundleTerminal\nPadstackInstanceTerminal.component\nComponentGroup\nPadstackInstanceTerminal.edb_uid\nint\nPadstackInstanceTerminal.group\nGroup\nPadstackInstanceTerminal.hfss_pi_type\nHfssPIType\nPadstackInstanceTerminal.id\nint\nPadstackInstanceTerminal.impedance\nValue\nPadstackInstanceTerminal.is_auto_port\nbool\nPadstackInstanceTerminal.is_circuit_port\nbool\nPadstackInstanceTerminal.is_interface_terminal\nbool\nPadstackInstanceTerminal.is_mcad\nbool\nPadstackInstanceTerminal.is_mcad_3d_comp\nbool\nPadstackInstanceTerminal.is_mcad_hfss\nbool\nPadstackInstanceTerminal.is_mcad_stride\nbool\nPadstackInstanceTerminal.is_null\nbool\nPadstackInstanceTerminal.is_reference_terminal\nbool\nPadstackInstanceTerminal.layer\nLayer\nPadstackInstanceTerminal.layout\nLayout\nPadstackInstanceTerminal.layout_obj_type\nPadstackInstanceTerminal.model\nstr\nPadstackInstanceTerminal.msg\nEDBObjMessage\nPadstackInstanceTerminal.name\nstr\nPadstackInstanceTerminal.net\nNet\nPadstackInstanceTerminal.obj_type\nLayoutObjType\nPadstackInstanceTerminal.padstack_instance\nPadstackInstance\nPadstackInstanceTerminal.params\nlist\nPadstackInstance\nLayer\nPadstackInstanceTerminal.port_post_processing_prop\nPortPostProcessingProp\nPadstackInstanceTerminal.reference_layer\nLayer\nPadstackInstanceTerminal.reference_terminal\nTerminal\nPadstackInstanceTerminal.rlc_boundary_parameters\nRlc\nPadstackInstanceTerminal.source_amplitude\nValue\nPadstackInstanceTerminal.source_phase\nValue\nPadstackInstanceTerminal.term_to_ground\nSourceTermToGroundType\nPadstackInstanceTerminal.type\nPadstackInstanceTerminal.use_reference_from_hierarchy\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal",
        "title": "PadstackInstanceTerminal > PadstackInstanceTerminal > PadstackInstanceTerminal",
        "section": "PadstackInstanceTerminal > PadstackInstanceTerminal",
        "text": "class ansys.edb.core.terminal.terminals.PadstackInstanceTerminal(msg)\n\nRepresents a padstack instance terminal.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nPadstackInstanceTerminal.cast([term_type])\n\nCast the terminal object to the correct concrete type, fetching the type if necessary.\n\nPadstackInstanceTerminal.create(layout, ...)\n\nCreate a padstack instance terminal.\n\nPadstackInstanceTerminal.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nPadstackInstanceTerminal.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nPadstackInstanceTerminal.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nPadstackInstanceTerminal.delete()\n\nDelete the layout object.\n\nPadstackInstanceTerminal.find(layout, name)\n\nFind a terminal by name in a given layout.\n\nPadstackInstanceTerminal.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nPadstackInstanceTerminal.get_product_property(...)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nPadstackInstanceTerminal.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nPadstackInstanceTerminal.product_solver_names(...)\n\nGet the list of solver names.\n\nPadstackInstanceTerminal.product_solver_option(...)\n\nGet the name of the product solver option.\n\nPadstackInstanceTerminal.set_product_property(...)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nPadstackInstanceTerminal.set_product_solver_option(...)\n\nSet the product solver option.\n\n\n\nAttributes\n\n\n\n\n\n\n\nPadstackInstanceTerminal.boundary_type\n\nBoundaryType: Boundary type of the terminal.\n\nPadstackInstanceTerminal.bundle_terminal\n\nBundleTerminal: Bundle terminal that the terminal belongs to, if any.\n\nPadstackInstanceTerminal.component\n\nComponentGroup:         Component of the Connectable object.\n\nPadstackInstanceTerminal.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nPadstackInstanceTerminal.group\n\nGroup object.\n\nPadstackInstanceTerminal.hfss_pi_type\n\nHfssPIType: HFSS PI type.\n\nPadstackInstanceTerminal.id\n\nint: Unique ID of the EDB object.\n\nPadstackInstanceTerminal.impedance\n\nValue: Impedance of the terminal.\n\nPadstackInstanceTerminal.is_auto_port\n\nbool: Flag indicating if the terminal is an auto port.\n\nPadstackInstanceTerminal.is_circuit_port\n\nbool: Flag indicating if the terminal is a circuit port.\n\nPadstackInstanceTerminal.is_interface_terminal\n\nbool: Flag indicating if the terminal is an interface.\n\nPadstackInstanceTerminal.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nPadstackInstanceTerminal.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nPadstackInstanceTerminal.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nPadstackInstanceTerminal.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nPadstackInstanceTerminal.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nPadstackInstanceTerminal.is_reference_terminal\n\nbool: Flag indicating if the terminal is a reference terminal.\n\nPadstackInstanceTerminal.layer\n\nLayer: Layer the terminal is placed on.\n\nPadstackInstanceTerminal.layout\n\nLayout: Layout owning the object.\n\nPadstackInstanceTerminal.layout_obj_type\n\n\n\nPadstackInstanceTerminal.model\n\nstr: S-parameter model.\n\nPadstackInstanceTerminal.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nPadstackInstanceTerminal.name\n\nstr: Name of the terminal.\n\nPadstackInstanceTerminal.net\n\nNet: Net of the Connectable object.\n\nPadstackInstanceTerminal.obj_type\n\nLayoutObjType: Layout object type.\n\nPadstackInstanceTerminal.padstack_instance\n\nPadstackInstance: Padstack instance of the terminal.\n\nPadstackInstanceTerminal.params\n\nlist of PadstackInstance and Layer: Padstack instance and layer.\n\nPadstackInstanceTerminal.port_post_processing_prop\n\nPortPostProcessingProp: Port postprocessing properties.\n\nPadstackInstanceTerminal.reference_layer\n\nLayer: Layer that the terminal references, if any, by either layer object or name.\n\nPadstackInstanceTerminal.reference_terminal\n\nTerminal: Terminal that the terminal references, if any.\n\nPadstackInstanceTerminal.rlc_boundary_parameters\n\nRlc: RLC boundary parameters.\n\nPadstackInstanceTerminal.source_amplitude\n\nValue: Source amplitude of the terminal.\n\nPadstackInstanceTerminal.source_phase\n\nValue: Source phase of the terminal.\n\nPadstackInstanceTerminal.term_to_ground\n\nSourceTermToGroundType: Source terminal-to-ground type.\n\nPadstackInstanceTerminal.type\n\n\n\nPadstackInstanceTerminal.use_reference_from_hierarchy\n\nbool: Flag indicating if the terminal can use references from the hierarchy.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.solderball_layer",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.solderball_layer.html#solderball_layer",
        "title": "solderball_layer",
        "section": "solderball_layer",
        "text": "Layer: Solderball layer of the padstack instance.\nsolderball_layer\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.solderball_layer",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.solderball_layer.html#ansys.edb.core.primitive.primitive.PadstackInstance.solderball_layer",
        "title": "solderball_layer > solderball_layer > solderball_layer",
        "section": "solderball_layer > solderball_layer",
        "text": "property PadstackInstance.solderball_layer\n\nLayer: Solderball layer of the padstack instance.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.component",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.component.html#component",
        "title": "component",
        "section": "component",
        "text": "ComponentGroup:         Component of the Connectable object.\ncomponent\nComponentGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.component",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.component.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.component",
        "title": "component > component > component",
        "section": "component > component",
        "text": "property PadstackInstanceTerminal.component\n\nComponentGroup:         Component of the Connectable object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.net",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.net.html#net",
        "title": "net",
        "section": "net",
        "text": "Net: Net of the Connectable object.\nThis property can be set with a Net instance, a string, or None.\nnet\nNet\nNet\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.net",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.net.html#ansys.edb.core.terminal.terminals.TerminalInstance.net",
        "title": "net > net > net",
        "section": "net > net",
        "text": "property TerminalInstance.net\n\nNet: Net of the Connectable object.\n\nThis property can be set with a Net instance, a string, or None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_parameterized",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_parameterized.html#is_parameterized",
        "title": "is_parameterized",
        "section": "is_parameterized",
        "text": "bool: Whether the primitive is parametrized.\nThis property is read-only.\nis_parameterized\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_parameterized",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_parameterized.html#ansys.edb.core.primitive.primitive.Path.is_parameterized",
        "title": "is_parameterized > is_parameterized > is_parameterized",
        "section": "is_parameterized > is_parameterized",
        "text": "property Path.is_parameterized\n\nbool: Whether the primitive is parametrized.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.create_hfss.html#create_hfss",
        "title": "create_hfss",
        "section": "create_hfss",
        "text": "Create an HFSS model from an MCAD file.\nHFSS model created.\ncreate_hfss\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.create_hfss.html#ansys.edb.core.primitive.primitive.Circle.create_hfss",
        "title": "create_hfss > create_hfss > create_hfss",
        "section": "create_hfss > create_hfss",
        "text": "Circle.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nReturns\n\nMcadModel\n\nHFSS model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.unite",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.unite.html#unite",
        "title": "unite",
        "section": "unite",
        "text": "Compute the union of a list of polygons.\nList of polygons.\nunite\npython:list\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.unite",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.unite.html#ansys.edb.core.geometry.polygon_data.PolygonData.unite",
        "title": "unite > unite > unite",
        "section": "unite > unite",
        "text": "classmethod PolygonData.unite(polygons)\n\nCompute the union of a list of polygons.\n\nParameters\n\npolygons: list[PolygonData]\n\nList of polygons.\n\nReturns\n\npython:list[PolygonData]\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.mesh_for_via_plating",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.mesh_for_via_plating.html#mesh_for_via_plating",
        "title": "mesh_for_via_plating",
        "section": "mesh_for_via_plating",
        "text": "bool: Flag indicating if meshing for via plating is enabled.\nmesh_for_via_plating\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.mesh_for_via_plating",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.mesh_for_via_plating.html#ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.mesh_for_via_plating",
        "title": "mesh_for_via_plating > mesh_for_via_plating > mesh_for_via_plating",
        "section": "mesh_for_via_plating > mesh_for_via_plating",
        "text": "property AdvancedSettings.mesh_for_via_plating\n\nbool: Flag indicating if meshing for via plating is enabled.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.create_value",
        "href": "api/_autosummary/ansys.edb.core.database.Database.create_value.html#create_value",
        "title": "create_value",
        "section": "create_value",
        "text": "Create a value instance.\nThis value instance can reference variables on the variable server.\nValue, which can be any type that can be converted to a Value\ninstance.\nCreating a value from a Database instance can reference variables\nin the Database instance.\nCreating a value from a Cell instance can reference variables in\nboth the Database instance and the\nCell instance\nCreating a value from a ComponentDef\ninstance can reference variables in both the Database instance and\nthe ComponentDef instance.\ncreate_value\npython:str\npython:int\npython:float\ncomplex\nValue\nValue\nDatabase\nDatabase\nCell\nDatabase\nCell\nComponentDef\nDatabase\nComponentDef"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.create_value",
        "href": "api/_autosummary/ansys.edb.core.database.Database.create_value.html#ansys.edb.core.database.Database.create_value",
        "title": "create_value > create_value > create_value",
        "section": "create_value > create_value",
        "text": "Database.create_value(val)\n\nCreate a value instance.\n\nThis value instance can reference variables on the variable server.\n\nParameters\n\nval\n\npython:str, python:int, python:float, complex\n\nValue, which can be any type that can be converted to a Value\ninstance.\n\nReturns\n\nValue\n\n\n\nNotes\n\nCreating a value from a Database instance can reference variables\nin the Database instance.\n\nCreating a value from a Cell instance can reference variables in\nboth the Database instance and the\nCell instance\n\nCreating a value from a ComponentDef\ninstance can reference variables in both the Database instance and\nthe ComponentDef instance.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_ROUND90",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_ROUND90.html#padgeomtype_round90",
        "title": "PADGEOMTYPE_ROUND90",
        "section": "PADGEOMTYPE_ROUND90",
        "text": "PADGEOMTYPE_ROUND90"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_ROUND90",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_ROUND90.html#ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_ROUND90",
        "title": "PADGEOMTYPE_ROUND90 > PADGEOMTYPE_ROUND90 > PADGEOMTYPE_ROUND90",
        "section": "PADGEOMTYPE_ROUND90 > PADGEOMTYPE_ROUND90",
        "text": "PadGeometryType.PADGEOMTYPE_ROUND90 = 9\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SettingsOptions.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SettingsOptions.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents this object’s ID.\nThis property is read-only.\nmsg\nEDBObjMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SettingsOptions.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SettingsOptions.msg.html#ansys.edb.core.simulation_setup.simulation_settings.SettingsOptions.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property SettingsOptions.msg\n\nEDBObjMessage: Protobuf message that represents this object’s ID.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.create",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a differential pair.\nYou must either provide both nets or omit both nets.\nLayout to create the differential pair in.\nName of the new differential pair.\nPositive net or name of the positive net.\nNegative net or the name of negative net.\nDifferential pair created.\ncreate\nLayout\npython:str\nNet\npython:str\npython:None\nNet\npython:str\npython:None\nDifferentialPair"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.create",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.create.html#ansys.edb.core.net.differential_pair.DifferentialPair.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod DifferentialPair.create(layout, name, pos_net=None, neg_net=None)\n\nCreate a differential pair.\n\nYou must either provide both nets or omit both nets.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to create the differential pair in.\n\nname\n\npython:str\n\nName of the new differential pair.\n\npos_net\n\nNet or python:str, default: python:None\n\nPositive net or name of the positive net.\n\nneg_net\n\nNet or python:str, default: python:None\n\nNegative net or the name of negative net.\n\nReturns\n\nDifferentialPair\n\nDifferential pair created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.NPortComponentModel.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.NPortComponentModel.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.NPortComponentModel.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.NPortComponentModel.msg.html#ansys.edb.core.definition.component_model.NPortComponentModel.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property NPortComponentModel.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.sweep_data",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.sweep_data.html#sweep_data",
        "title": "sweep_data",
        "section": "sweep_data",
        "text": "list of SweepData: Frequency sweeps of the simulation setup.\nsweep_data\nlist\nSweepData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.sweep_data",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.sweep_data.html#ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.sweep_data",
        "title": "sweep_data > sweep_data > sweep_data",
        "section": "sweep_data > sweep_data",
        "text": "property SIWaveDCIRSimulationSetup.sweep_data\n\nlist of SweepData: Frequency sweeps of the simulation setup.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.obj_type.html#obj_type",
        "title": "obj_type",
        "section": "obj_type",
        "text": "LayoutObjType: Layout object type.\nThis property is read-only.\nobj_type\nLayoutObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.obj_type.html#ansys.edb.core.primitive.primitive.Bondwire.obj_type",
        "title": "obj_type > obj_type > obj_type",
        "section": "obj_type > obj_type",
        "text": "property Bondwire.obj_type\n\nLayoutObjType: Layout object type.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDs for a given product ID for the layer.\nProduct ID.\nList of attribute IDs.\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.get_product_property_ids.html#ansys.edb.core.layer.stackup_layer.StackupLayer.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "StackupLayer.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs for a given product ID for the layer.\n\nParameters\n\nprod_id\n\nProductIdType\n\nProduct ID.\n\nReturns\n\npython:list[python:int]\n\nList of attribute IDs.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.edb_uid.html#edb_uid",
        "title": "edb_uid",
        "section": "edb_uid",
        "text": "int: Unique, persistent ID for the Connectable object.\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\nThis property is read-only.\nedb_uid\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.edb_uid.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.edb_uid",
        "title": "edb_uid > edb_uid > edb_uid",
        "section": "edb_uid > edb_uid",
        "text": "property CellInstance.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.design_mode",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.design_mode.html#design_mode",
        "title": "design_mode",
        "section": "design_mode",
        "text": "DesignMode: Design mode of the cell.\ndesign_mode\nDesignMode"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.design_mode",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.design_mode.html#ansys.edb.core.layout.cell.Cell.design_mode",
        "title": "design_mode > design_mode > design_mode",
        "section": "design_mode > design_mode",
        "text": "property Cell.design_mode\n\nDesignMode: Design mode of the cell.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.origin",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.origin.html#origin",
        "title": "origin",
        "section": "origin",
        "text": "Point3DData:         Origin 3D point of the MCAD model.\norigin\nPoint3DData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.origin",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.origin.html#ansys.edb.core.layout.mcad_model.McadModel.origin",
        "title": "origin > origin > origin",
        "section": "origin > origin",
        "text": "property McadModel.origin\n\nPoint3DData:         Origin 3D point of the MCAD model.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.add_void",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.add_void.html#add_void",
        "title": "add_void",
        "section": "add_void",
        "text": "Add a void to the primitive.\nVoid to add.\nadd_void\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.add_void",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.add_void.html#ansys.edb.core.primitive.primitive.BoardBendDef.add_void",
        "title": "add_void > add_void > add_void",
        "section": "add_void > add_void",
        "text": "BoardBendDef.add_void(hole)\n\nAdd a void to the primitive.\n\nParameters\n\nhole\n\nPrimitive\n\nVoid to add.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings.compute_inductance",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings.compute_inductance.html#compute_inductance",
        "title": "compute_inductance",
        "section": "compute_inductance",
        "text": "bool: Flag indicating if inductance is calculated.\ncompute_inductance\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings.compute_inductance",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings.compute_inductance.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings.compute_inductance",
        "title": "compute_inductance > compute_inductance > compute_inductance",
        "section": "compute_inductance > compute_inductance",
        "text": "property SIWaveDCSettings.compute_inductance\n\nbool: Flag indicating if inductance is calculated.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.msg",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.msg",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.msg.html#ansys.edb.core.net.net_class.NetClass.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property NetClass.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.group",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.group.html#group",
        "title": "group",
        "section": "group",
        "text": "Group object.\ngroup\nGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.group",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.group.html#ansys.edb.core.terminal.terminals.TerminalInstance.group",
        "title": "group > group > group",
        "section": "group > group",
        "text": "property TerminalInstance.group\n\nGroup object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.multi_frequency_adaptive_solution",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.multi_frequency_adaptive_solution.html#multi_frequency_adaptive_solution",
        "title": "multi_frequency_adaptive_solution",
        "section": "multi_frequency_adaptive_solution",
        "text": "MultiFrequencyAdaptiveSolution: Settings for a multi-frequency adaptive solution.\nmulti_frequency_adaptive_solution\nMultiFrequencyAdaptiveSolution"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.multi_frequency_adaptive_solution",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.multi_frequency_adaptive_solution.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.multi_frequency_adaptive_solution",
        "title": "multi_frequency_adaptive_solution > multi_frequency_adaptive_solution > multi_frequency_adaptive_solution",
        "section": "multi_frequency_adaptive_solution > multi_frequency_adaptive_solution",
        "text": "property HFSSGeneralSettings.multi_frequency_adaptive_solution\n\nMultiFrequencyAdaptiveSolution: Settings for a multi-frequency adaptive solution.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.get_all_variable_names",
        "href": "api/_autosummary/ansys.edb.core.database.Database.get_all_variable_names.html#get_all_variable_names",
        "title": "get_all_variable_names",
        "section": "get_all_variable_names",
        "text": "Get all variable names.\nNames of all variables.\nget_all_variable_names\npython:list\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.get_all_variable_names",
        "href": "api/_autosummary/ansys.edb.core.database.Database.get_all_variable_names.html#ansys.edb.core.database.Database.get_all_variable_names",
        "title": "get_all_variable_names > get_all_variable_names > get_all_variable_names",
        "section": "get_all_variable_names > get_all_variable_names",
        "text": "Database.get_all_variable_names()\n\nGet all variable names.\n\nReturns\n\npython:list[python:str]\n\nNames of all variables.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.BOARD_BEND",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.BOARD_BEND.html#board_bend",
        "title": "BOARD_BEND",
        "section": "BOARD_BEND",
        "text": "BOARD_BEND"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.BOARD_BEND",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.BOARD_BEND.html#ansys.edb.core.primitive.primitive.PrimitiveType.BOARD_BEND",
        "title": "BOARD_BEND > BOARD_BEND > BOARD_BEND",
        "section": "BOARD_BEND > BOARD_BEND",
        "text": "PrimitiveType.BOARD_BEND = 8\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_override_shrink_factor",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_override_shrink_factor.html#use_override_shrink_factor",
        "title": "use_override_shrink_factor",
        "section": "use_override_shrink_factor",
        "text": "bool: Flag indicating if shrink factor is overridden.\nuse_override_shrink_factor\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_override_shrink_factor",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_override_shrink_factor.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_override_shrink_factor",
        "title": "use_override_shrink_factor > use_override_shrink_factor > use_override_shrink_factor",
        "section": "use_override_shrink_factor > use_override_shrink_factor",
        "text": "property RaptorXAdvancedSettings.use_override_shrink_factor\n\nbool: Flag indicating if shrink factor is overridden.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.zone_ids",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.zone_ids.html#zone_ids",
        "title": "zone_ids",
        "section": "zone_ids",
        "text": "list[int]: List of all zones in the layer collection.\nzone_ids\nlist\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.zone_ids",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.zone_ids.html#ansys.edb.core.layer.layer_collection.LayerCollection.zone_ids",
        "title": "zone_ids > zone_ids > zone_ids",
        "section": "zone_ids > zone_ids",
        "text": "property LayerCollection.zone_ids\n\nlist[int]: List of all zones in the layer collection.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.remove_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.remove_hfss_prop.html#remove_hfss_prop",
        "title": "remove_hfss_prop",
        "section": "remove_hfss_prop",
        "text": "Remove HFSS properties.\nremove_hfss_prop"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.remove_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.remove_hfss_prop.html#ansys.edb.core.primitive.primitive.Rectangle.remove_hfss_prop",
        "title": "remove_hfss_prop > remove_hfss_prop > remove_hfss_prop",
        "section": "remove_hfss_prop > remove_hfss_prop",
        "text": "Rectangle.remove_hfss_prop()\n\nRemove HFSS properties.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.remove_property",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.remove_property.html#remove_property",
        "title": "remove_property",
        "section": "remove_property",
        "text": "Remove the value from a material property.\nProperty ID.\nremove_property\nMaterialProperty"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.remove_property",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.remove_property.html#ansys.edb.core.definition.material_def.MaterialDef.remove_property",
        "title": "remove_property > remove_property > remove_property",
        "section": "remove_property > remove_property",
        "text": "MaterialDef.remove_property(material_property)\n\nRemove the value from a material property.\n\nParameters\n\nmaterial_property\n\nMaterialProperty\n\nProperty ID.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.use_reference_from_hierarchy",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.use_reference_from_hierarchy.html#use_reference_from_hierarchy",
        "title": "use_reference_from_hierarchy",
        "section": "use_reference_from_hierarchy",
        "text": "bool: Flag indicating if the terminal can use references from the hierarchy.\nuse_reference_from_hierarchy\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.use_reference_from_hierarchy",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.use_reference_from_hierarchy.html#ansys.edb.core.terminal.terminals.EdgeTerminal.use_reference_from_hierarchy",
        "title": "use_reference_from_hierarchy > use_reference_from_hierarchy > use_reference_from_hierarchy",
        "section": "use_reference_from_hierarchy > use_reference_from_hierarchy",
        "text": "property EdgeTerminal.use_reference_from_hierarchy\n\nbool: Flag indicating if the terminal can use references from the hierarchy.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.set_anisotropic_thermal_modifier",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.set_anisotropic_thermal_modifier.html#set_anisotropic_thermal_modifier",
        "title": "set_anisotropic_thermal_modifier",
        "section": "set_anisotropic_thermal_modifier",
        "text": "Set the anisotropic thermal modifier of a given material definition.\nProperty ID.\nComponent ID.\nAnisotropic thermal modifier to set to the material definition.\nset_anisotropic_thermal_modifier\nMaterialProperty\npython:int\nThermalModifier"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.set_anisotropic_thermal_modifier",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.set_anisotropic_thermal_modifier.html#ansys.edb.core.definition.material_def.MaterialDef.set_anisotropic_thermal_modifier",
        "title": "set_anisotropic_thermal_modifier > set_anisotropic_thermal_modifier > set_anisotropic_thermal_modifier",
        "section": "set_anisotropic_thermal_modifier > set_anisotropic_thermal_modifier",
        "text": "MaterialDef.set_anisotropic_thermal_modifier(material_property_id, component_id, thermal_modifier)\n\nSet the anisotropic thermal modifier of a given material definition.\n\nParameters\n\nmaterial_property_id\n\nMaterialProperty\n\nProperty ID.\n\ncomponent_id\n\npython:int\n\nComponent ID.\n\nthermal_modifier\n\nThermalModifier\n\nAnisotropic thermal modifier to set to the material definition.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.NPortComponentModel",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.NPortComponentModel.html#nportcomponentmodel",
        "title": "NPortComponentModel",
        "section": "NPortComponentModel",
        "text": "Represents an NPort component model.\nNPortComponentModel.create(name)\nCreate an NPort component model.\nNPortComponentModel.find_by_id(comp_def, value)\nFind a component model by ID in a given component def.\nNPortComponentModel.find_by_name(comp_def, value)\nFind a component model by name in a given component def.\nNPortComponentModel.id\nint: Unique ID of the EDB object.\nNPortComponentModel.is_null\nbool: Flag indicating if the object exists in the database.\nNPortComponentModel.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nNPortComponentModel.reference_file\nstr: Name of the reference file associated with the component model.\nNPortComponentModel\nNPortComponentModel.create\nNPortComponentModel.find_by_id\nNPortComponentModel.find_by_name\nNPortComponentModel.id\nint\nNPortComponentModel.is_null\nbool\nNPortComponentModel.msg\nEDBObjMessage\nNPortComponentModel.reference_file\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.NPortComponentModel",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.NPortComponentModel.html#ansys.edb.core.definition.component_model.NPortComponentModel",
        "title": "NPortComponentModel > NPortComponentModel > NPortComponentModel",
        "section": "NPortComponentModel > NPortComponentModel",
        "text": "class ansys.edb.core.definition.component_model.NPortComponentModel(msg)\n\nRepresents an NPort component model.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nNPortComponentModel.create(name)\n\nCreate an NPort component model.\n\nNPortComponentModel.find_by_id(comp_def, value)\n\nFind a component model by ID in a given component def.\n\nNPortComponentModel.find_by_name(comp_def, value)\n\nFind a component model by name in a given component def.\n\n\n\nAttributes\n\n\n\n\n\n\n\nNPortComponentModel.id\n\nint: Unique ID of the EDB object.\n\nNPortComponentModel.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nNPortComponentModel.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nNPortComponentModel.reference_file\n\nstr: Name of the reference file associated with the component model.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.bondwire_type",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.bondwire_type.html#bondwire_type",
        "title": "bondwire_type",
        "section": "bondwire_type",
        "text": "BondwireDefType: Type of the JEDEC5 bondwire.\nThis property is read-only.\nbondwire_type\nBondwireDefType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.bondwire_type",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.bondwire_type.html#ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.bondwire_type",
        "title": "bondwire_type > bondwire_type > bondwire_type",
        "section": "bondwire_type > bondwire_type",
        "text": "property Jedec5BondwireDef.bondwire_type\n\nBondwireDefType: Type of the JEDEC5 bondwire.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.miter_ratio",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.miter_ratio.html#miter_ratio",
        "title": "miter_ratio",
        "section": "miter_ratio",
        "text": "Value: Miter ratio.\nmiter_ratio\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.miter_ratio",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.miter_ratio.html#ansys.edb.core.primitive.primitive.Path.miter_ratio",
        "title": "miter_ratio > miter_ratio > miter_ratio",
        "section": "miter_ratio > miter_ratio",
        "text": "property Path.miter_ratio\n\nValue: Miter ratio.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.is_mcad.html#is_mcad",
        "title": "is_mcad",
        "section": "is_mcad",
        "text": "bool: Flag indicating if this is an MCAD model.\nThis property is read-only.\nis_mcad\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.is_mcad.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.is_mcad",
        "title": "is_mcad > is_mcad > is_mcad",
        "section": "is_mcad > is_mcad",
        "text": "property ComponentGroup.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentType.OTHER",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentType.OTHER.html#other",
        "title": "OTHER",
        "section": "OTHER",
        "text": "OTHER"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentType.OTHER",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentType.OTHER.html#ansys.edb.core.hierarchy.component_group.ComponentType.OTHER",
        "title": "OTHER > OTHER > OTHER",
        "section": "OTHER > OTHER",
        "text": "ComponentType.OTHER = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerTypeSet",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerTypeSet.html#layertypeset",
        "title": "LayerTypeSet",
        "section": "LayerTypeSet",
        "text": "Provides an enum representing layer type sets used for filtering layers.\nLayerTypeSet.STACKUP_LAYER_SET\n\nLayerTypeSet.SIGNAL_LAYER_SET\n\nLayerTypeSet.DIELECTRIC_LAYER_SET\n\nLayerTypeSet.NON_STACKUP_LAYER_SET\n\nLayerTypeSet.ALL_LAYER_SET\n\nLayerTypeSet\nLayerTypeSet.STACKUP_LAYER_SET\nLayerTypeSet.SIGNAL_LAYER_SET\nLayerTypeSet.DIELECTRIC_LAYER_SET\nLayerTypeSet.NON_STACKUP_LAYER_SET\nLayerTypeSet.ALL_LAYER_SET"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerTypeSet",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerTypeSet.html#ansys.edb.core.layer.layer_collection.LayerTypeSet",
        "title": "LayerTypeSet > LayerTypeSet > LayerTypeSet",
        "section": "LayerTypeSet > LayerTypeSet",
        "text": "class ansys.edb.core.layer.layer_collection.LayerTypeSet(value)\n\nProvides an enum representing layer type sets used for filtering layers.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nLayerTypeSet.STACKUP_LAYER_SET\n\n\n\nLayerTypeSet.SIGNAL_LAYER_SET\n\n\n\nLayerTypeSet.DIELECTRIC_LAYER_SET\n\n\n\nLayerTypeSet.NON_STACKUP_LAYER_SET\n\n\n\nLayerTypeSet.ALL_LAYER_SET\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.RectangleRepresentationType.LOWER_LEFT_UPPER_RIGHT",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.RectangleRepresentationType.LOWER_LEFT_UPPER_RIGHT.html#lower_left_upper_right",
        "title": "LOWER_LEFT_UPPER_RIGHT",
        "section": "LOWER_LEFT_UPPER_RIGHT",
        "text": "LOWER_LEFT_UPPER_RIGHT"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.RectangleRepresentationType.LOWER_LEFT_UPPER_RIGHT",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.RectangleRepresentationType.LOWER_LEFT_UPPER_RIGHT.html#ansys.edb.core.primitive.primitive.RectangleRepresentationType.LOWER_LEFT_UPPER_RIGHT",
        "title": "LOWER_LEFT_UPPER_RIGHT > LOWER_LEFT_UPPER_RIGHT > LOWER_LEFT_UPPER_RIGHT",
        "section": "LOWER_LEFT_UPPER_RIGHT > LOWER_LEFT_UPPER_RIGHT",
        "text": "RectangleRepresentationType.LOWER_LEFT_UPPER_RIGHT = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.msg",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "Protobuf message that represents this object’s ID.\nmsg\nLayoutObjInstanceGeometryMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.msg",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.msg.html#ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property LayoutObjInstance2DGeometry.msg\n\nProtobuf message that represents this object’s ID.\n\nReturns\n\nLayoutObjInstanceGeometryMessage\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.group",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.group.html#group",
        "title": "group",
        "section": "group",
        "text": "Group object.\ngroup\nGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.group",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.group.html#ansys.edb.core.hierarchy.structure3d.Structure3D.group",
        "title": "group > group > group",
        "section": "group > group",
        "text": "property Structure3D.group\n\nGroup object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.is_mcad_hfss.html#is_mcad_hfss",
        "title": "is_mcad_hfss",
        "section": "is_mcad_hfss",
        "text": "bool: Flag indicating if this is an HFSS MCAD model.\nThis property is read-only.\nis_mcad_hfss\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.is_mcad_hfss.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.is_mcad_hfss",
        "title": "is_mcad_hfss > is_mcad_hfss > is_mcad_hfss",
        "section": "is_mcad_hfss > is_mcad_hfss",
        "text": "property CellInstance.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.flattened_layout",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.flattened_layout.html#flattened_layout",
        "title": "flattened_layout",
        "section": "flattened_layout",
        "text": "Layout: Flattened layout of the cell.\nThis property is read-only.\nflattened_layout\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.flattened_layout",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.flattened_layout.html#ansys.edb.core.layout.cell.Cell.flattened_layout",
        "title": "flattened_layout > flattened_layout > flattened_layout",
        "section": "flattened_layout > flattened_layout",
        "text": "property Cell.flattened_layout\n\nLayout: Flattened layout of the cell.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.set_variable_desc",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.set_variable_desc.html#set_variable_desc",
        "title": "set_variable_desc",
        "section": "set_variable_desc",
        "text": "Set a variable to have a new description.\nVariable name.\nNew variable description.\nset_variable_desc\npython:str\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.set_variable_desc",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.set_variable_desc.html#ansys.edb.core.layout.layout.Layout.set_variable_desc",
        "title": "set_variable_desc > set_variable_desc > set_variable_desc",
        "section": "set_variable_desc > set_variable_desc",
        "text": "Layout.set_variable_desc(name, desc)\n\nSet a variable to have a new description.\n\nParameters\n\nname\n\npython:str\n\nVariable name.\n\ndesc\n\npython:str\n\nNew variable description.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_mcad_hfss.html#is_mcad_hfss",
        "title": "is_mcad_hfss",
        "section": "is_mcad_hfss",
        "text": "bool: Flag indicating if this is an HFSS MCAD model.\nThis property is read-only.\nis_mcad_hfss\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_mcad_hfss.html#ansys.edb.core.primitive.primitive.Rectangle.is_mcad_hfss",
        "title": "is_mcad_hfss > is_mcad_hfss > is_mcad_hfss",
        "section": "is_mcad_hfss > is_mcad_hfss",
        "text": "property Rectangle.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.decompose",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.decompose.html#decompose",
        "title": "decompose",
        "section": "decompose",
        "text": "Decompose the instance array.\ndecompose"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.decompose",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.decompose.html#ansys.edb.core.hierarchy.inst_array.InstArray.decompose",
        "title": "decompose > decompose > decompose",
        "section": "decompose > decompose",
        "text": "InstArray.decompose()\n\nDecompose the instance array.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.hfss_extent_info",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.hfss_extent_info.html#hfss_extent_info",
        "title": "hfss_extent_info",
        "section": "hfss_extent_info",
        "text": "HfssExtentInfo:         HFSS extents for the cell.\nhfss_extent_info\nHfssExtentInfo"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.hfss_extent_info",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.hfss_extent_info.html#ansys.edb.core.layout.cell.Cell.hfss_extent_info",
        "title": "hfss_extent_info > hfss_extent_info > hfss_extent_info",
        "section": "hfss_extent_info > hfss_extent_info",
        "text": "property Cell.hfss_extent_info\n\nHfssExtentInfo:         HFSS extents for the cell.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.html#text",
        "title": "Text",
        "section": "Text",
        "text": "Represents a text object.\nText.add_void(hole)\nAdd a void to the primitive.\nText.cast()\nCast the primitive object to the correct concrete type.\nText.create(layout, layer, center_x, ...)\nCreate a text object.\nText.create_3d_comp()\nCreate a 3D composite model from an MCAD file.\nText.create_hfss()\nCreate an HFSS model from an MCAD file.\nText.create_stride()\nCreate a Stride model from an MCAD file.\nText.delete()\nDelete the layout object.\nText.find_by_id(layout, uid)\nFind a Connectable object by database ID in a given layout.\nText.get_hfss_prop()\nGet HFSS properties.\nText.get_product_property(prod_id, attr_id)\nGet the product property of the layout object for a given product ID and attribute ID.\nText.get_product_property_ids(prod_id)\nGet a list of attribute IDs given a product ID for the layout object.\nText.get_text_data()\nGet the data for the text object.\nText.make_zone_primitive(zone_id)\nMake the primitive a zone primitive with a zone specified by the provided ID.\nText.remove_hfss_prop()\nRemove HFSS properties.\nText.set_hfss_prop(material, solve_inside)\nSet HFSS properties.\nText.set_product_property(prod_id, attr_id, ...)\nSet the product property of the layout object for a given product ID and attribute ID.\nText.set_text_data(center_x, center_y, text)\nSet the data for the text object.\nText.can_be_zone_primitive\nbool: Flag indicating if the primitive can be a zone.\nText.component\nComponentGroup:         Component of the Connectable object.\nText.edb_uid\nint: Unique, persistent ID for the Connectable object.\nText.group\nGroup object.\nText.has_voids\nbool: Flag indicating if a primitive has voids inside.\nText.id\nint: Unique ID of the EDB object.\nText.is_mcad\nbool: Flag indicating if this is an MCAD model.\nText.is_mcad_3d_comp\nbool: Flag indicating if this is a 3D composite MCAD model.\nText.is_mcad_hfss\nbool: Flag indicating if this is an HFSS MCAD model.\nText.is_mcad_stride\nbool: Flag indicating if this is a Stride MCAD model.\nText.is_negative\nbool: Flag indicating if the primitive is negative.\nText.is_null\nbool: Flag indicating if the object exists in the database.\nText.is_parameterized\nbool: Whether the primitive is parametrized.\nText.is_void\nbool: Flag indicating if a primitive is a void.\nText.is_zone_primitive\nbool: Flag indicating if the primitive object is a zone.\nText.layer\nLayer: Layer that the primitive object is on.\nText.layout\nLayout: Layout owning the object.\nText.layout_obj_type\n\nText.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nText.net\nNet: Net of the Connectable object.\nText.obj_type\nLayoutObjType: Layout object type.\nText.owner\nPrimitive: Owner of the primitive object.\nText.primitive_type\nPrimitiveType: Primitive type of the primitive.\nText.voids\nlist of Primitive: List of void        primitive objects inside the primitive.\nText\nText.add_void\nText.cast\nText.create\nText.create_3d_comp\nText.create_hfss\nText.create_stride\nText.delete\nText.find_by_id\nText.get_hfss_prop\nText.get_product_property\nText.get_product_property_ids\nText.get_text_data\nText.make_zone_primitive\nText.remove_hfss_prop\nText.set_hfss_prop\nText.set_product_property\nText.set_text_data\nText.can_be_zone_primitive\nbool\nText.component\nComponentGroup\nText.edb_uid\nint\nText.group\nGroup\nText.has_voids\nbool\nText.id\nint\nText.is_mcad\nbool\nText.is_mcad_3d_comp\nbool\nText.is_mcad_hfss\nbool\nText.is_mcad_stride\nbool\nText.is_negative\nbool\nText.is_null\nbool\nText.is_parameterized\nbool\nText.is_void\nbool\nText.is_zone_primitive\nbool\nText.layer\nLayer\nText.layout\nLayout\nText.layout_obj_type\nText.msg\nEDBObjMessage\nText.net\nNet\nText.obj_type\nLayoutObjType\nText.owner\nPrimitive\nText.primitive_type\nPrimitiveType\nText.voids\nlist\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.html#ansys.edb.core.primitive.primitive.Text",
        "title": "Text > Text > Text",
        "section": "Text > Text",
        "text": "class ansys.edb.core.primitive.primitive.Text(msg)\n\nRepresents a text object.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nText.add_void(hole)\n\nAdd a void to the primitive.\n\nText.cast()\n\nCast the primitive object to the correct concrete type.\n\nText.create(layout, layer, center_x, ...)\n\nCreate a text object.\n\nText.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nText.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nText.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nText.delete()\n\nDelete the layout object.\n\nText.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nText.get_hfss_prop()\n\nGet HFSS properties.\n\nText.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nText.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nText.get_text_data()\n\nGet the data for the text object.\n\nText.make_zone_primitive(zone_id)\n\nMake the primitive a zone primitive with a zone specified by the provided ID.\n\nText.remove_hfss_prop()\n\nRemove HFSS properties.\n\nText.set_hfss_prop(material, solve_inside)\n\nSet HFSS properties.\n\nText.set_product_property(prod_id, attr_id, ...)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nText.set_text_data(center_x, center_y, text)\n\nSet the data for the text object.\n\n\n\nAttributes\n\n\n\n\n\n\n\nText.can_be_zone_primitive\n\nbool: Flag indicating if the primitive can be a zone.\n\nText.component\n\nComponentGroup:         Component of the Connectable object.\n\nText.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nText.group\n\nGroup object.\n\nText.has_voids\n\nbool: Flag indicating if a primitive has voids inside.\n\nText.id\n\nint: Unique ID of the EDB object.\n\nText.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nText.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nText.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nText.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nText.is_negative\n\nbool: Flag indicating if the primitive is negative.\n\nText.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nText.is_parameterized\n\nbool: Whether the primitive is parametrized.\n\nText.is_void\n\nbool: Flag indicating if a primitive is a void.\n\nText.is_zone_primitive\n\nbool: Flag indicating if the primitive object is a zone.\n\nText.layer\n\nLayer: Layer that the primitive object is on.\n\nText.layout\n\nLayout: Layout owning the object.\n\nText.layout_obj_type\n\n\n\nText.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nText.net\n\nNet: Net of the Connectable object.\n\nText.obj_type\n\nLayoutObjType: Layout object type.\n\nText.owner\n\nPrimitive: Owner of the primitive object.\n\nText.primitive_type\n\nPrimitiveType: Primitive type of the primitive.\n\nText.voids\n\nlist of Primitive: List of void        primitive objects inside the primitive.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.set_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.set_hfss_prop.html#set_hfss_prop",
        "title": "set_hfss_prop",
        "section": "set_hfss_prop",
        "text": "Set HFSS properties.\nMaterial property name to set.\nWhether to solve inside.\nset_hfss_prop\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.set_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.set_hfss_prop.html#ansys.edb.core.primitive.primitive.Polygon.set_hfss_prop",
        "title": "set_hfss_prop > set_hfss_prop > set_hfss_prop",
        "section": "set_hfss_prop > set_hfss_prop",
        "text": "Polygon.set_hfss_prop(material, solve_inside)\n\nSet HFSS properties.\n\nParameters\n\nmaterial\n\npython:str\n\nMaterial property name to set.\n\nsolve_inside\n\nbool\n\nWhether to solve inside.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.layer",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.layer.html#layer",
        "title": "layer",
        "section": "layer",
        "text": "Layer: Layer.\nlayer\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.layer",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.layer.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.layer",
        "title": "layer > layer > layer",
        "section": "layer > layer",
        "text": "property PinGroupTerminal.layer\n\nLayer: Layer.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.FreqSweepType",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.FreqSweepType.html#freqsweeptype",
        "title": "FreqSweepType",
        "section": "FreqSweepType",
        "text": "Enum representing frequency sweep types.\nFreqSweepType.INTERPOLATING_SWEEP\n\nFreqSweepType.DISCRETE_SWEEP\n\nFreqSweepType.BROADBAND_SWEEP\n\nFreqSweepType\nFreqSweepType.INTERPOLATING_SWEEP\nFreqSweepType.DISCRETE_SWEEP\nFreqSweepType.BROADBAND_SWEEP"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.FreqSweepType",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.FreqSweepType.html#ansys.edb.core.simulation_setup.simulation_setup.FreqSweepType",
        "title": "FreqSweepType > FreqSweepType > FreqSweepType",
        "section": "FreqSweepType > FreqSweepType",
        "text": "class ansys.edb.core.simulation_setup.simulation_setup.FreqSweepType(value)\n\nEnum representing frequency sweep types.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nFreqSweepType.INTERPOLATING_SWEEP\n\n\n\nFreqSweepType.DISCRETE_SWEEP\n\n\n\nFreqSweepType.BROADBAND_SWEEP\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.delete",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the layout object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.delete",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.delete.html#ansys.edb.core.primitive.primitive.Bondwire.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "Bondwire.delete()\n\nDelete the layout object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.create_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.create_stride.html#create_stride",
        "title": "create_stride",
        "section": "create_stride",
        "text": "Create a Stride model from an MCAD file.\nStride model created.\ncreate_stride\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.create_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.create_stride.html#ansys.edb.core.primitive.primitive.Polygon.create_stride",
        "title": "create_stride > create_stride > create_stride",
        "section": "create_stride > create_stride",
        "text": "Polygon.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nReturns\n\nMcadModel\n\nStride model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.layers",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.layers.html#layers",
        "title": "layers",
        "section": "layers",
        "text": "list of Layer: All layer instances.\nThis list contains the layer` instances that the layout object instance has geometry on.\nlayers\nlist\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.layers",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.layers.html#ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.layers",
        "title": "layers > layers > layers",
        "section": "layers > layers",
        "text": "property LayoutObjInstance.layers\n\nlist of Layer: All layer instances.\n\nThis list contains the layer` instances that the layout object instance has geometry on.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.get_geometries",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.get_geometries.html#get_geometries",
        "title": "get_geometries",
        "section": "get_geometries",
        "text": "Get the geometry that exists on a given layer.\nLayer.\nget_geometries\nLayer\npython:str\npython:list\nLayoutObjInstance2DGeometry\nLayoutObjInstance3DGeometry"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.get_geometries",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.get_geometries.html#ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.get_geometries",
        "title": "get_geometries > get_geometries > get_geometries",
        "section": "get_geometries > get_geometries",
        "text": "LayoutObjInstance.get_geometries(layer)\n\nGet the geometry that exists on a given layer.\n\nParameters\n\nlayer\n\nLayer or python:str\n\nLayer.\n\nReturns\n\npython:list[LayoutObjInstance2DGeometry or LayoutObjInstance3DGeometry]\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.get_start_elevation",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.get_start_elevation.html#get_start_elevation",
        "title": "get_start_elevation",
        "section": "get_start_elevation",
        "text": "Get the start elevation layer of the bondwire.\nStart cell context of the bondwire.\nStart elevation level of the bondwire.\nget_start_elevation\nCellInstance\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.get_start_elevation",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.get_start_elevation.html#ansys.edb.core.primitive.primitive.Bondwire.get_start_elevation",
        "title": "get_start_elevation > get_start_elevation > get_start_elevation",
        "section": "get_start_elevation > get_start_elevation",
        "text": "Bondwire.get_start_elevation(start_context)\n\nGet the start elevation layer of the bondwire.\n\nParameters\n\nstart_context\n\nCellInstance\n\nStart cell context of the bondwire.\n\nReturns\n\nLayer\n\nStart elevation level of the bondwire.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.html#siwavedcirsimulationsetup",
        "title": "SIWaveDCIRSimulationSetup",
        "section": "SIWaveDCIRSimulationSetup",
        "text": "Represents SIWave DCIR simulation setup data.\nSIWaveDCIRSimulationSetup.cast()\nCast the base SimulationSetup object to correct subclass, if possible.\nSIWaveDCIRSimulationSetup.create(cell, name)\nCreate a SIWave DCIR simulation setup.\nSIWaveDCIRSimulationSetup.id\nint: Unique ID of the EDB object.\nSIWaveDCIRSimulationSetup.is_null\nbool: Flag indicating if the object exists in the database.\nSIWaveDCIRSimulationSetup.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nSIWaveDCIRSimulationSetup.name\nstr: Name of simulation setup.\nSIWaveDCIRSimulationSetup.position\nint: Position of the simulation in the setup order.\nSIWaveDCIRSimulationSetup.settings\nSIWaveSimulationSettings: Simulation settings of the simulation setup.\nSIWaveDCIRSimulationSetup.sweep_data\nlist of SweepData: Frequency sweeps of the simulation setup.\nSIWaveDCIRSimulationSetup.type\nSimulationSetupType: Type of the simulation setup.\nSIWaveDCIRSimulationSetup\nSIWaveDCIRSimulationSetup.cast\nSIWaveDCIRSimulationSetup.create\nSIWaveDCIRSimulationSetup.id\nint\nSIWaveDCIRSimulationSetup.is_null\nbool\nSIWaveDCIRSimulationSetup.msg\nEDBObjMessage\nSIWaveDCIRSimulationSetup.name\nstr\nSIWaveDCIRSimulationSetup.position\nint\nSIWaveDCIRSimulationSetup.settings\nSIWaveSimulationSettings\nSIWaveDCIRSimulationSetup.sweep_data\nlist\nSweepData\nSIWaveDCIRSimulationSetup.type\nSimulationSetupType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.html#ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup",
        "title": "SIWaveDCIRSimulationSetup > SIWaveDCIRSimulationSetup > SIWaveDCIRSimulationSetup",
        "section": "SIWaveDCIRSimulationSetup > SIWaveDCIRSimulationSetup",
        "text": "class ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup(msg)\n\nRepresents SIWave DCIR simulation setup data.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nSIWaveDCIRSimulationSetup.cast()\n\nCast the base SimulationSetup object to correct subclass, if possible.\n\nSIWaveDCIRSimulationSetup.create(cell, name)\n\nCreate a SIWave DCIR simulation setup.\n\n\n\nAttributes\n\n\n\n\n\n\n\nSIWaveDCIRSimulationSetup.id\n\nint: Unique ID of the EDB object.\n\nSIWaveDCIRSimulationSetup.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nSIWaveDCIRSimulationSetup.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nSIWaveDCIRSimulationSetup.name\n\nstr: Name of simulation setup.\n\nSIWaveDCIRSimulationSetup.position\n\nint: Position of the simulation in the setup order.\n\nSIWaveDCIRSimulationSetup.settings\n\nSIWaveSimulationSettings: Simulation settings of the simulation setup.\n\nSIWaveDCIRSimulationSetup.sweep_data\n\nlist of SweepData: Frequency sweeps of the simulation setup.\n\nSIWaveDCIRSimulationSetup.type\n\nSimulationSetupType: Type of the simulation setup.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.create_hfss.html#create_hfss",
        "title": "create_hfss",
        "section": "create_hfss",
        "text": "Create an HFSS model.\nThis method makes a call directly on a Connectable or\nLayout.\ncreate_hfss\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.create_hfss.html#ansys.edb.core.layout.mcad_model.McadModel.create_hfss",
        "title": "create_hfss > create_hfss > create_hfss",
        "section": "create_hfss > create_hfss",
        "text": "classmethod McadModel.create_hfss(connectable=None, layout=None, filename=None, design=None)\n\nCreate an HFSS model.\n\nThis method makes a call directly on a Connectable or\nLayout.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier.expression",
        "href": "api/_autosummary/ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier.expression.html#expression",
        "title": "expression",
        "section": "expression",
        "text": "Value: Expression value representing the thermal modifier.\nThis property is read-only.\nexpression\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier.expression",
        "href": "api/_autosummary/ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier.expression.html#ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier.expression",
        "title": "expression > expression > expression",
        "section": "expression > expression",
        "text": "property MaterialPropertyThermalModifier.expression\n\nValue: Expression value representing the thermal modifier.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.frequency_range",
        "href": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.frequency_range.html#frequency_range",
        "title": "frequency_range",
        "section": "frequency_range",
        "text": "tuple of float, float: Frequency range (low, high).\nfrequency_range\ntuple\nfloat\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.frequency_range",
        "href": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.frequency_range.html#ansys.edb.core.definition.debye_model.DebyeModel.frequency_range",
        "title": "frequency_range > frequency_range > frequency_range",
        "section": "frequency_range > frequency_range",
        "text": "property DebyeModel.frequency_range\n\ntuple of float, float: Frequency range (low, high).\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.is_mcad.html#is_mcad",
        "title": "is_mcad",
        "section": "is_mcad",
        "text": "bool: Flag indicating if this is an MCAD model.\nThis property is read-only.\nis_mcad\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.is_mcad.html#ansys.edb.core.primitive.primitive.PadstackInstance.is_mcad",
        "title": "is_mcad > is_mcad > is_mcad",
        "section": "is_mcad > is_mcad",
        "text": "property PadstackInstance.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.msg",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.msg",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.msg.html#ansys.edb.core.layout.cell.Cell.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property Cell.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.html#lengthmeshoperation",
        "title": "LengthMeshOperation",
        "section": "LengthMeshOperation",
        "text": "Represents a length mesh operation.\nstr: Name of the mesh operation.\nlist of tuple of (str, str, bool): List of net layer         information for the mesh operation.\nbool: Flag indicating if the mesh operation is enabled.\nbool: Flag indicating if refining inside is enabled.\nstr: Name of the mesh region.\nbool: Flag indicating if solve inside is enabled.\nstr: Maximum length of the mesh elements.\nbool: Flag indicating if the maximum length of mesh elements is restricted.\nstr: Maximum number of mesh elements.\nbool: Flag indicating if the maximum number of mesh elements is restricted.\nLengthMeshOperation.enabled\nbool: Flag indicating if the mesh operation is enabled.\nLengthMeshOperation.max_elements\nstr: Maximum number of mesh elements.\nLengthMeshOperation.max_length\nstr: Maximum length of the mesh elements.\nLengthMeshOperation.mesh_region\nstr: Name of the mesh region.\nLengthMeshOperation.name\nstr: Name of the mesh operation.\nLengthMeshOperation.net_layer_info\nlist of tuple of (str, str, bool): List of net layer         information for the mesh operation.\nLengthMeshOperation.refine_inside\nbool: Flag indicating if refining inside is enabled.\nLengthMeshOperation.restrict_max_elements\nbool: Flag indicating if the maximum number of mesh elements is restricted.\nLengthMeshOperation.restrict_max_length\nbool: Flag indicating if the maximum length of mesh elements is restricted.\nLengthMeshOperation.solve_inside\nbool: Flag indicating if solve inside is enabled.\nLengthMeshOperation\nname\npython:str\nstr\nnet_layer_info\npython:list\npython:tuple\npython:str\npython:str\npython:None\nlist\ntuple\nstr\nstr\nbool\nenabled\npython:True\nbool\nrefine_inside\npython:False\nbool\nmesh_region\npython:str\nstr\nsolve_inside\npython:False\nbool\nmax_length\npython:str\nstr\nrestrict_max_length\npython:str\npython:True\nbool\nmax_elements\npython:str\nstr\nrestrict_max_elements\npython:False\nbool\nLengthMeshOperation.enabled\nbool\nLengthMeshOperation.max_elements\nstr\nLengthMeshOperation.max_length\nstr\nLengthMeshOperation.mesh_region\nstr\nLengthMeshOperation.name\nstr\nLengthMeshOperation.net_layer_info\nlist\ntuple\nstr\nstr\nbool\nLengthMeshOperation.refine_inside\nbool\nLengthMeshOperation.restrict_max_elements\nbool\nLengthMeshOperation.restrict_max_length\nbool\nLengthMeshOperation.solve_inside\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.html#ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation",
        "title": "LengthMeshOperation > LengthMeshOperation > LengthMeshOperation",
        "section": "LengthMeshOperation > LengthMeshOperation",
        "text": "class ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation(name='', net_layer_info=None, enabled=True, refine_inside=False, mesh_region='', solve_inside=False, max_length='1mm', restrict_max_length=True, max_elements='1000', restrict_max_elements=False)\n\nRepresents a length mesh operation.\n\nAttributes\n\nname\n\npython:str, default: “”\n\nstr: Name of the mesh operation.\n\nnet_layer_info\n\npython:list[python:tuple(python:str, python:str, bool)], default: python:None\n\nlist of tuple of (str, str, bool): List of net layer         information for the mesh operation.\n\nenabled\n\nbool, default: python:True\n\nbool: Flag indicating if the mesh operation is enabled.\n\nrefine_inside\n\nbool, default: python:False\n\nbool: Flag indicating if refining inside is enabled.\n\nmesh_region\n\npython:str, default: “”\n\nstr: Name of the mesh region.\n\nsolve_inside\n\nbool, default: python:False\n\nbool: Flag indicating if solve inside is enabled.\n\nmax_length\n\npython:str, default: “1mm”\n\nstr: Maximum length of the mesh elements.\n\nrestrict_max_length\n\npython:str, default: python:True\n\nbool: Flag indicating if the maximum length of mesh elements is restricted.\n\nmax_elements\n\npython:str, default: “1000”\n\nstr: Maximum number of mesh elements.\n\nrestrict_max_elements\n\nbool, default: python:False\n\nbool: Flag indicating if the maximum number of mesh elements is restricted.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nLengthMeshOperation.enabled\n\nbool: Flag indicating if the mesh operation is enabled.\n\nLengthMeshOperation.max_elements\n\nstr: Maximum number of mesh elements.\n\nLengthMeshOperation.max_length\n\nstr: Maximum length of the mesh elements.\n\nLengthMeshOperation.mesh_region\n\nstr: Name of the mesh region.\n\nLengthMeshOperation.name\n\nstr: Name of the mesh operation.\n\nLengthMeshOperation.net_layer_info\n\nlist of tuple of (str, str, bool): List of net layer         information for the mesh operation.\n\nLengthMeshOperation.refine_inside\n\nbool: Flag indicating if refining inside is enabled.\n\nLengthMeshOperation.restrict_max_elements\n\nbool: Flag indicating if the maximum number of mesh elements is restricted.\n\nLengthMeshOperation.restrict_max_length\n\nbool: Flag indicating if the maximum length of mesh elements is restricted.\n\nLengthMeshOperation.solve_inside\n\nbool: Flag indicating if solve inside is enabled.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXSimulationSettings.advanced",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXSimulationSettings.advanced.html#advanced",
        "title": "advanced",
        "section": "advanced",
        "text": "RaptorXAdvancedSettings: Advanced settings for RaptorX simulations.\nadvanced\nRaptorXAdvancedSettings"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXSimulationSettings.advanced",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXSimulationSettings.advanced.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXSimulationSettings.advanced",
        "title": "advanced > advanced > advanced",
        "section": "advanced > advanced",
        "text": "property RaptorXSimulationSettings.advanced\n\nRaptorXAdvancedSettings: Advanced settings for RaptorX simulations.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PathEndCapType",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PathEndCapType.html#pathendcaptype",
        "title": "PathEndCapType",
        "section": "PathEndCapType",
        "text": "Provides an enum representing end cap types.\nPathEndCapType.ROUND\n\nPathEndCapType.FLAT\n\nPathEndCapType.EXTENDED\n\nPathEndCapType.CLIPPED\n\nPathEndCapType.INVALID\n\nPathEndCapType\nPathEndCapType.ROUND\nPathEndCapType.FLAT\nPathEndCapType.EXTENDED\nPathEndCapType.CLIPPED\nPathEndCapType.INVALID"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PathEndCapType",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PathEndCapType.html#ansys.edb.core.primitive.primitive.PathEndCapType",
        "title": "PathEndCapType > PathEndCapType > PathEndCapType",
        "section": "PathEndCapType > PathEndCapType",
        "text": "class ansys.edb.core.primitive.primitive.PathEndCapType(value)\n\nProvides an enum representing end cap types.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nPathEndCapType.ROUND\n\n\n\nPathEndCapType.FLAT\n\n\n\nPathEndCapType.EXTENDED\n\n\n\nPathEndCapType.CLIPPED\n\n\n\nPathEndCapType.INVALID\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.create_hfss.html#create_hfss",
        "title": "create_hfss",
        "section": "create_hfss",
        "text": "Create an HFSS model from an MCAD file.\nHFSS model created.\ncreate_hfss\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.create_hfss.html#ansys.edb.core.primitive.primitive.Bondwire.create_hfss",
        "title": "create_hfss > create_hfss > create_hfss",
        "section": "create_hfss > create_hfss",
        "text": "Bondwire.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nReturns\n\nMcadModel\n\nHFSS model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the product property.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.get_product_property.html#ansys.edb.core.net.net.Net.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "Net.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nReturns\n\npython:str\n\nString stored in the product property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel.find_by_id.html#find_by_id",
        "title": "find_by_id",
        "section": "find_by_id",
        "text": "Find a component model by ID in a given component def.\nComponent def to search for the component model.\nID of the component model.\nComponent model that is found, None otherwise.\nfind_by_id\nComponentDef\npython:int\nComponentModel\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel.find_by_id.html#ansys.edb.core.definition.component_model.DynamicLinkComponentModel.find_by_id",
        "title": "find_by_id > find_by_id > find_by_id",
        "section": "find_by_id > find_by_id",
        "text": "classmethod DynamicLinkComponentModel.find_by_id(comp_def, value)\n\nFind a component model by ID in a given component def.\n\nParameters\n\ncomp_def\n\nComponentDef\n\nComponent def to search for the component model.\n\nvalue\n\npython:int\n\nID of the component model.\n\nReturns\n\nComponentModel\n\nComponent model that is found, None otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.add_layer_bottom",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.add_layer_bottom.html#add_layer_bottom",
        "title": "add_layer_bottom",
        "section": "add_layer_bottom",
        "text": "Add a new layer to the bottom of the layer collection.\nThis method adjusts existing layers as needed to maintain stackup consistency.\nName of the layer to add.\nadd_layer_bottom\nLayer\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.add_layer_bottom",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.add_layer_bottom.html#ansys.edb.core.layer.layer_collection.LayerCollection.add_layer_bottom",
        "title": "add_layer_bottom > add_layer_bottom > add_layer_bottom",
        "section": "add_layer_bottom > add_layer_bottom",
        "text": "LayerCollection.add_layer_bottom(layer_to_add)\n\nAdd a new layer to the bottom of the layer collection.\n\nThis method adjusts existing layers as needed to maintain stackup consistency.\n\nParameters\n\nlayer_to_add\n\nLayer\n\nName of the layer to add.\n\nReturns\n\nLayer\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.die_property.DieOrientation",
        "href": "api/_autosummary/ansys.edb.core.definition.die_property.DieOrientation.html#dieorientation",
        "title": "DieOrientation",
        "section": "DieOrientation",
        "text": "Provides an enum representing die orientations.\nDieOrientation.CHIP_UP\n\nDieOrientation.CHIP_DOWN\n\nDieOrientation\nDieOrientation.CHIP_UP\nDieOrientation.CHIP_DOWN"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.die_property.DieOrientation",
        "href": "api/_autosummary/ansys.edb.core.definition.die_property.DieOrientation.html#ansys.edb.core.definition.die_property.DieOrientation",
        "title": "DieOrientation > DieOrientation > DieOrientation",
        "section": "DieOrientation > DieOrientation",
        "text": "class ansys.edb.core.definition.die_property.DieOrientation(value)\n\nProvides an enum representing die orientations.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nDieOrientation.CHIP_UP\n\n\n\nDieOrientation.CHIP_DOWN\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.defeature_absolute_length",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.defeature_absolute_length.html#defeature_absolute_length",
        "title": "defeature_absolute_length",
        "section": "defeature_absolute_length",
        "text": "str: Absolute length used as tolerance when defeaturing polygons.\ndefeature_absolute_length\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.defeature_absolute_length",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.defeature_absolute_length.html#ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.defeature_absolute_length",
        "title": "defeature_absolute_length > defeature_absolute_length > defeature_absolute_length",
        "section": "defeature_absolute_length > defeature_absolute_length",
        "text": "property AdvancedSettings.defeature_absolute_length\n\nstr: Absolute length used as tolerance when defeaturing polygons.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap.create",
        "href": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a layer map object.\nVariable representing the map’s direction.\nLayerMap object created.\ncreate\nLayerMap"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap.create",
        "href": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap.create.html#ansys.edb.core.utility.layer_map.LayerMap.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "static LayerMap.create(direction)\n\nCreate a layer map object.\n\nParameters\n\ndirection: LayerMapUniqueDirection\n\nVariable representing the map’s direction.\n\nReturns\n\nLayerMap\n\nLayerMap object created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the product property.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.get_product_property.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "PinGroupTerminal.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nReturns\n\npython:str\n\nString stored in the product property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.solve_independent_preference",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.solve_independent_preference.html#solve_independent_preference",
        "title": "solve_independent_preference",
        "section": "solve_independent_preference",
        "text": "bool: Flag indicating if the object is assigned to solve independent of its parent context.\nTrue if the object is assigned to solve independently, False if the object is embedded.\nFor a ComponentModel\ninstance, this flag indicates if the model is embedded with the field solver, when applicable.\nFor a CellInstance instance,\nit indicates if the design’s geometry is flattened/meshed with the parent, when applicable.\nsolve_independent_preference\nbool\nTrue\nFalse\nComponentModel\nCellInstance"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.solve_independent_preference",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.solve_independent_preference.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.solve_independent_preference",
        "title": "solve_independent_preference > solve_independent_preference > solve_independent_preference",
        "section": "solve_independent_preference > solve_independent_preference",
        "text": "property ComponentGroup.solve_independent_preference\n\nbool: Flag indicating if the object is assigned to solve independent of its parent context.\n\nReturns\n\nbool\n\nTrue if the object is assigned to solve independently, False if the object is embedded.\n\nNotes\n\nFor a ComponentModel\ninstance, this flag indicates if the model is embedded with the field solver, when applicable.\n\nFor a CellInstance instance,\nit indicates if the design’s geometry is flattened/meshed with the parent, when applicable.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDs given a product ID for the layout object.\nID representing a product that supports the EDB.\nAll user-defined attribute IDs for properties stored in the object\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.get_product_property_ids.html#ansys.edb.core.net.extended_net.ExtendedNet.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "ExtendedNet.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nReturns\n\npython:list[python:int]\n\nAll user-defined attribute IDs for properties stored in the object\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.value.Value.sqrt",
        "href": "api/_autosummary/ansys.edb.core.utility.value.Value.sqrt.html#sqrt",
        "title": "sqrt",
        "section": "sqrt",
        "text": "Square root of this value as a constant value.\nsqrt"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.value.Value.sqrt",
        "href": "api/_autosummary/ansys.edb.core.utility.value.Value.sqrt.html#ansys.edb.core.utility.value.Value.sqrt",
        "title": "sqrt > sqrt > sqrt",
        "section": "sqrt > sqrt",
        "text": "property Value.sqrt\n\nSquare root of this value as a constant value.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType",
        "href": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType.html#definitionobjtype",
        "title": "DefinitionObjType",
        "section": "DefinitionObjType",
        "text": "Provides an enum representing definition object types.\nDefinitionObjType.INVALID_DEFINITION_TYPE\n\nDefinitionObjType.PADSTACK_DEF\n\nDefinitionObjType.COMPONENT_DEF\n\nDefinitionObjType.BONDWIRE_DEF\n\nDefinitionObjType.MATERIAL_DEF\n\nDefinitionObjType.DATASET_DEF\n\nDefinitionObjType.PACKAGE_DEF\n\nDefinitionObjType.DEFINITION_TYPE_COUNT\n\nDefinitionObjType\nDefinitionObjType.INVALID_DEFINITION_TYPE\nDefinitionObjType.PADSTACK_DEF\nDefinitionObjType.COMPONENT_DEF\nDefinitionObjType.BONDWIRE_DEF\nDefinitionObjType.MATERIAL_DEF\nDefinitionObjType.DATASET_DEF\nDefinitionObjType.PACKAGE_DEF\nDefinitionObjType.DEFINITION_TYPE_COUNT"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType",
        "href": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType.html#ansys.edb.core.edb_defs.DefinitionObjType",
        "title": "DefinitionObjType > DefinitionObjType > DefinitionObjType",
        "section": "DefinitionObjType > DefinitionObjType",
        "text": "class ansys.edb.core.edb_defs.DefinitionObjType(value)\n\nProvides an enum representing definition object types.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nDefinitionObjType.INVALID_DEFINITION_TYPE\n\n\n\nDefinitionObjType.PADSTACK_DEF\n\n\n\nDefinitionObjType.COMPONENT_DEF\n\n\n\nDefinitionObjType.BONDWIRE_DEF\n\n\n\nDefinitionObjType.MATERIAL_DEF\n\n\n\nDefinitionObjType.DATASET_DEF\n\n\n\nDefinitionObjType.PACKAGE_DEF\n\n\n\nDefinitionObjType.DEFINITION_TYPE_COUNT\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.owner",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.owner.html#owner",
        "title": "owner",
        "section": "owner",
        "text": "Primitive: Owner of the primitive object.\nThis property is read-only.\nowner\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.owner",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.owner.html#ansys.edb.core.primitive.primitive.Primitive.owner",
        "title": "owner > owner > owner",
        "section": "owner > owner",
        "text": "property Primitive.owner\n\nPrimitive: Owner of the primitive object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.find_by_id.html#find_by_id",
        "title": "find_by_id",
        "section": "find_by_id",
        "text": "Find a Connectable object by database ID in a given layout.\nLayout to search for the Connectable object.\nDatabase ID.\nConnectable object with the given database ID.\nfind_by_id\nLayout\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.find_by_id.html#ansys.edb.core.hierarchy.inst_array.InstArray.find_by_id",
        "title": "find_by_id > find_by_id > find_by_id",
        "section": "find_by_id > find_by_id",
        "text": "classmethod InstArray.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the Connectable object.\n\nuid\n\npython:int\n\nDatabase ID.\n\nReturns\n\nConnectable\n\nConnectable object with the given database ID.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SettingsOptions.mesh_size_factor",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SettingsOptions.mesh_size_factor.html#mesh_size_factor",
        "title": "mesh_size_factor",
        "section": "mesh_size_factor",
        "text": "float: Mesh size factor used for lambda refinement.\nmesh_size_factor\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SettingsOptions.mesh_size_factor",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SettingsOptions.mesh_size_factor.html#ansys.edb.core.simulation_setup.simulation_settings.SettingsOptions.mesh_size_factor",
        "title": "mesh_size_factor > mesh_size_factor > mesh_size_factor",
        "section": "mesh_size_factor > mesh_size_factor",
        "text": "property SettingsOptions.mesh_size_factor\n\nfloat: Mesh size factor used for lambda refinement.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.net",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.net.html#net",
        "title": "net",
        "section": "net",
        "text": "Net: Net of the Connectable object.\nThis property can be set with a Net instance, a string, or None.\nnet\nNet\nNet\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.net",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.net.html#ansys.edb.core.terminal.terminals.PointTerminal.net",
        "title": "net > net > net",
        "section": "net > net",
        "text": "property PointTerminal.net\n\nNet: Net of the Connectable object.\n\nThis property can be set with a Net instance, a string, or None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData.x",
        "href": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData.x.html#x",
        "title": "x",
        "section": "x",
        "text": "Value: X coordinate.\nx\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData.x",
        "href": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData.x.html#ansys.edb.core.geometry.point3d_data.Point3DData.x",
        "title": "x > x > x",
        "section": "x > x",
        "text": "property Point3DData.x\n\nValue: X coordinate.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.angle",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.angle.html#angle",
        "title": "angle",
        "section": "angle",
        "text": "Get the angle between this arc and another arc if provided or the angle of this arc.\nOther arc.\nAngle in radians.\nangle\nArcData\npython:None\npython:float"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.angle",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.angle.html#ansys.edb.core.geometry.arc_data.ArcData.angle",
        "title": "angle > angle > angle",
        "section": "angle > angle",
        "text": "ArcData.angle(arc=None)\n\nGet the angle between this arc and another arc if provided or the angle of this arc.\n\nParameters\n\narc\n\nArcData, default: python:None\n\nOther arc.\n\nReturns\n\npython:float\n\nAngle in radians.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.find",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.find.html#find",
        "title": "find",
        "section": "find",
        "text": "Find a group by name.\nLayout to search for the group.\nName of the group.\nGroup that is found, None otherwise.\nfind\nLayout\npython:str\nGroup\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.find",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.find.html#ansys.edb.core.hierarchy.group.Group.find",
        "title": "find > find > find",
        "section": "find > find",
        "text": "classmethod Group.find(layout, name)\n\nFind a group by name.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the group.\n\nname\n\npython:str\n\nName of the group.\n\nReturns\n\nGroup\n\nGroup that is found, None otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.y_count",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.y_count.html#y_count",
        "title": "y_count",
        "section": "y_count",
        "text": "Value: Y count of the instance array.\ny_count\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.y_count",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.y_count.html#ansys.edb.core.hierarchy.inst_array.InstArray.y_count",
        "title": "y_count > y_count > y_count",
        "section": "y_count > y_count",
        "text": "property InstArray.y_count\n\nValue: Y count of the instance array.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.html#apdbondwiredef",
        "title": "ApdBondwireDef",
        "section": "ApdBondwireDef",
        "text": "Represents an APD bondwire definition.\nApdBondwireDef.create(database, name)\nCreate an APD bondwire definition in a given database.\nApdBondwireDef.delete()\nDelete the bondwire definition.\nApdBondwireDef.find_by_name(database, name)\nFind an APD bondwire definition by name in a given database.\nApdBondwireDef.get_parameters()\nGet the parameters of the APD bondwire definition.\nApdBondwireDef.load_definitions_from_file(...)\nLoad an APD bondwire definition into a given database.\nApdBondwireDef.set_parameters(name)\nSet parameters of the APD bondwire definition.\nApdBondwireDef.bondwire_type\nBondwireDefType: Type of the APD bondwire.\nApdBondwireDef.definition_type\nDefinitionObjType: Object type of the bondwire definition.\nApdBondwireDef.id\nint: Unique ID of the EDB object.\nApdBondwireDef.is_null\nbool: Flag indicating if the object exists in the database.\nApdBondwireDef.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nApdBondwireDef.name\nstr: Name of the bondwire definition.\nApdBondwireDef\nApdBondwireDef.create\nApdBondwireDef.delete\nApdBondwireDef.find_by_name\nApdBondwireDef.get_parameters\nApdBondwireDef.load_definitions_from_file\nApdBondwireDef.set_parameters\nApdBondwireDef.bondwire_type\nBondwireDefType\nApdBondwireDef.definition_type\nDefinitionObjType\nApdBondwireDef.id\nint\nApdBondwireDef.is_null\nbool\nApdBondwireDef.msg\nEDBObjMessage\nApdBondwireDef.name\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.html#ansys.edb.core.definition.bondwire_def.ApdBondwireDef",
        "title": "ApdBondwireDef > ApdBondwireDef > ApdBondwireDef",
        "section": "ApdBondwireDef > ApdBondwireDef",
        "text": "class ansys.edb.core.definition.bondwire_def.ApdBondwireDef(msg)\n\nRepresents an APD bondwire definition.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nApdBondwireDef.create(database, name)\n\nCreate an APD bondwire definition in a given database.\n\nApdBondwireDef.delete()\n\nDelete the bondwire definition.\n\nApdBondwireDef.find_by_name(database, name)\n\nFind an APD bondwire definition by name in a given database.\n\nApdBondwireDef.get_parameters()\n\nGet the parameters of the APD bondwire definition.\n\nApdBondwireDef.load_definitions_from_file(...)\n\nLoad an APD bondwire definition into a given database.\n\nApdBondwireDef.set_parameters(name)\n\nSet parameters of the APD bondwire definition.\n\n\n\nAttributes\n\n\n\n\n\n\n\nApdBondwireDef.bondwire_type\n\nBondwireDefType: Type of the APD bondwire.\n\nApdBondwireDef.definition_type\n\nDefinitionObjType: Object type of the bondwire definition.\n\nApdBondwireDef.id\n\nint: Unique ID of the EDB object.\n\nApdBondwireDef.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nApdBondwireDef.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nApdBondwireDef.name\n\nstr: Name of the bondwire definition.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.layer_id",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.layer_id.html#layer_id",
        "title": "layer_id",
        "section": "layer_id",
        "text": "int: Layer ID.\nlayer_id\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.layer_id",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.layer_id.html#ansys.edb.core.layer.layer.Layer.layer_id",
        "title": "layer_id > layer_id > layer_id",
        "section": "layer_id > layer_id",
        "text": "property Layer.layer_id\n\nint: Layer ID.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.ProductIdType.DESIGNER",
        "href": "api/_autosummary/ansys.edb.core.database.ProductIdType.DESIGNER.html#designer",
        "title": "DESIGNER",
        "section": "DESIGNER",
        "text": "DESIGNER"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.ProductIdType.DESIGNER",
        "href": "api/_autosummary/ansys.edb.core.database.ProductIdType.DESIGNER.html#ansys.edb.core.database.ProductIdType.DESIGNER",
        "title": "DESIGNER > DESIGNER > DESIGNER",
        "section": "DESIGNER > DESIGNER",
        "text": "ProductIdType.DESIGNER = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.without_arcs",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.without_arcs.html#without_arcs",
        "title": "without_arcs",
        "section": "without_arcs",
        "text": "Get polygon data with all arcs removed.\nwithout_arcs\npython:float\npython:float\nmath.pi\npython:int\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.without_arcs",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.without_arcs.html#ansys.edb.core.geometry.polygon_data.PolygonData.without_arcs",
        "title": "without_arcs > without_arcs > without_arcs",
        "section": "without_arcs > without_arcs",
        "text": "PolygonData.without_arcs(max_chord_error=0, max_arc_angle=0.5235987755982988, max_points=8)\n\nGet polygon data with all arcs removed.\n\nParameters\n\nmax_chord_error\n\npython:float, default: 0\n\n\n\nmax_arc_angle\n\npython:float, default: math.pi\n\n\n\nmax_points\n\npython:int, default: 8\n\n\n\nReturns\n\nPolygonData\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.get_text_data",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.get_text_data.html#get_text_data",
        "title": "get_text_data",
        "section": "get_text_data",
        "text": "Get the data for the text object.\nValue,\nValue,\nstr\nReturns a tuple in this format:\n(center_x, center_y, text)\ncenter_x : X value of center point.\ncenter_y : Y value of center point.\nradius : Text object’s String value.\nget_text_data\npython:tuple\nValue\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.get_text_data",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.get_text_data.html#ansys.edb.core.primitive.primitive.Text.get_text_data",
        "title": "get_text_data > get_text_data > get_text_data",
        "section": "get_text_data > get_text_data",
        "text": "Text.get_text_data()\n\nGet the data for the text object.\n\nReturns\n\npython:tuple[\n\nValue,\nValue,\nstr\n\n]\n\nReturns a tuple in this format:\n\n(center_x, center_y, text)\n\ncenter_x : X value of center point.\n\ncenter_y : Y value of center point.\n\nradius : Text object’s String value.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.is_null",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.is_null",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.is_null.html#ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property SIWaveDCIRSimulationSetup.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.create",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a pin group.\nLayout to create the pin group in.\nName of the pin group.\nList of padstack instances.\nPin group created.\ncreate\nLayout\npython:str\npython:list\nPadstackInstance\nPinGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.create",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.create.html#ansys.edb.core.hierarchy.pin_group.PinGroup.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod PinGroup.create(layout, name, padstack_instances)\n\nCreate a pin group.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to create the pin group in.\n\nname\n\npython:str\n\nName of the pin group.\n\npadstack_instances\n\npython:list[PadstackInstance]\n\nList of padstack instances.\n\nReturns\n\nPinGroup\n\nPin group created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.convert_primitives_to_vias",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.convert_primitives_to_vias.html#convert_primitives_to_vias",
        "title": "convert_primitives_to_vias",
        "section": "convert_primitives_to_vias",
        "text": "Convert a list of primitives into vias or pins.\nList of primitives.\nWhether the list consists of pins. The default is False, in which\ncase the list consists of vias.\nconvert_primitives_to_vias\npython:list\nPrimitive\npython:False\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.convert_primitives_to_vias",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.convert_primitives_to_vias.html#ansys.edb.core.layout.layout.Layout.convert_primitives_to_vias",
        "title": "convert_primitives_to_vias > convert_primitives_to_vias > convert_primitives_to_vias",
        "section": "convert_primitives_to_vias > convert_primitives_to_vias",
        "text": "Layout.convert_primitives_to_vias(primitives, is_pins=False)\n\nConvert a list of primitives into vias or pins.\n\nParameters\n\nprimitives\n\npython:list[Primitive]\n\nList of primitives.\n\nis_pins\n\nbool, default: python:False\n\nWhether the list consists of pins. The default is False, in which\ncase the list consists of vias.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.relative_permitivity_at_optical_frequency",
        "href": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.relative_permitivity_at_optical_frequency.html#relative_permitivity_at_optical_frequency",
        "title": "relative_permitivity_at_optical_frequency",
        "section": "relative_permitivity_at_optical_frequency",
        "text": "float: Relative permitivity at the optical frequency.\nrelative_permitivity_at_optical_frequency\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.relative_permitivity_at_optical_frequency",
        "href": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.relative_permitivity_at_optical_frequency.html#ansys.edb.core.definition.debye_model.DebyeModel.relative_permitivity_at_optical_frequency",
        "title": "relative_permitivity_at_optical_frequency > relative_permitivity_at_optical_frequency > relative_permitivity_at_optical_frequency",
        "section": "relative_permitivity_at_optical_frequency > relative_permitivity_at_optical_frequency",
        "text": "property DebyeModel.relative_permitivity_at_optical_frequency\n\nfloat: Relative permitivity at the optical frequency.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.bundle_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.bundle_terminal.html#bundle_terminal",
        "title": "bundle_terminal",
        "section": "bundle_terminal",
        "text": "BundleTerminal: Bundle terminal that the terminal belongs to, if any.\nbundle_terminal\nBundleTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.bundle_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.bundle_terminal.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.bundle_terminal",
        "title": "bundle_terminal > bundle_terminal > bundle_terminal",
        "section": "bundle_terminal > bundle_terminal",
        "text": "property PinGroupTerminal.bundle_terminal\n\nBundleTerminal: Bundle terminal that the terminal belongs to, if any.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.add_layers",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.add_layers.html#add_layers",
        "title": "add_layers",
        "section": "add_layers",
        "text": "Add layers to the padstack definition data object.\nList of layer names.\nadd_layers\nList\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.add_layers",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.add_layers.html#ansys.edb.core.definition.padstack_def_data.PadstackDefData.add_layers",
        "title": "add_layers > add_layers > add_layers",
        "section": "add_layers > add_layers",
        "text": "PadstackDefData.add_layers(names)\n\nAdd layers to the padstack definition data object.\n\nParameters\n\nnames\n\nList[python:str]\n\nList of layer names.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.id",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.id",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.id.html#ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property Jedec5BondwireDef.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.remove_pins",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.remove_pins.html#remove_pins",
        "title": "remove_pins",
        "section": "remove_pins",
        "text": "Remove a list of padstack instances from the group.\nList of padstick instances.\nremove_pins\npython:list\nPadstackInstance"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.remove_pins",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.remove_pins.html#ansys.edb.core.hierarchy.pin_group.PinGroup.remove_pins",
        "title": "remove_pins > remove_pins > remove_pins",
        "section": "remove_pins > remove_pins",
        "text": "PinGroup.remove_pins(pins)\n\nRemove a list of padstack instances from the group.\n\nParameters\n\npins\n\npython:list[PadstackInstance]\n\nList of padstick instances.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.THERMAL_CONDUCTIVITY",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.THERMAL_CONDUCTIVITY.html#thermal_conductivity",
        "title": "THERMAL_CONDUCTIVITY",
        "section": "THERMAL_CONDUCTIVITY",
        "text": "THERMAL_CONDUCTIVITY"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.THERMAL_CONDUCTIVITY",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.THERMAL_CONDUCTIVITY.html#ansys.edb.core.definition.material_def.MaterialProperty.THERMAL_CONDUCTIVITY",
        "title": "THERMAL_CONDUCTIVITY > THERMAL_CONDUCTIVITY > THERMAL_CONDUCTIVITY",
        "section": "THERMAL_CONDUCTIVITY > THERMAL_CONDUCTIVITY",
        "text": "MaterialProperty.THERMAL_CONDUCTIVITY = 14\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge.msg",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge.msg",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge.msg.html#ansys.edb.core.terminal.terminals.PrimitiveEdge.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property PrimitiveEdge.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerTypeSet.STACKUP_LAYER_SET",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerTypeSet.STACKUP_LAYER_SET.html#stackup_layer_set",
        "title": "STACKUP_LAYER_SET",
        "section": "STACKUP_LAYER_SET",
        "text": "STACKUP_LAYER_SET"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerTypeSet.STACKUP_LAYER_SET",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerTypeSet.STACKUP_LAYER_SET.html#ansys.edb.core.layer.layer_collection.LayerTypeSet.STACKUP_LAYER_SET",
        "title": "STACKUP_LAYER_SET > STACKUP_LAYER_SET > STACKUP_LAYER_SET",
        "section": "STACKUP_LAYER_SET > STACKUP_LAYER_SET",
        "text": "LayerTypeSet.STACKUP_LAYER_SET = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.id",
        "href": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.id",
        "href": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.id.html#ansys.edb.core.definition.debye_model.DebyeModel.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property DebyeModel.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.generate_auto_hfss_regions",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.generate_auto_hfss_regions.html#generate_auto_hfss_regions",
        "title": "generate_auto_hfss_regions",
        "section": "generate_auto_hfss_regions",
        "text": "Generate auto HFSS regions.\nThis method automatically identifies areas for use as HFSS regions in SIwave simulations.\ngenerate_auto_hfss_regions"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.generate_auto_hfss_regions",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.generate_auto_hfss_regions.html#ansys.edb.core.layout.cell.Cell.generate_auto_hfss_regions",
        "title": "generate_auto_hfss_regions > generate_auto_hfss_regions > generate_auto_hfss_regions",
        "section": "generate_auto_hfss_regions > generate_auto_hfss_regions",
        "text": "Cell.generate_auto_hfss_regions()\n\nGenerate auto HFSS regions.\n\nThis method automatically identifies areas for use as HFSS regions in SIwave simulations.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData.distance",
        "href": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData.distance.html#distance",
        "title": "distance",
        "section": "distance",
        "text": "Compute the distance from this point to another point.\nOther point\nDistance to the other point.\ndistance\nPoint3DData\npython:float"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData.distance",
        "href": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData.distance.html#ansys.edb.core.geometry.point3d_data.Point3DData.distance",
        "title": "distance > distance > distance",
        "section": "distance > distance",
        "text": "Point3DData.distance(other)\n\nCompute the distance from this point to another point.\n\nParameters\n\nother\n\nPoint3DData\n\nOther point\n\nReturns\n\npython:float\n\nDistance to the other point.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.roughness_enabled",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.roughness_enabled.html#roughness_enabled",
        "title": "roughness_enabled",
        "section": "roughness_enabled",
        "text": "bool: Flag indicating if roughness models are used by the layer.\nroughness_enabled\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.roughness_enabled",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.roughness_enabled.html#ansys.edb.core.layer.via_layer.ViaLayer.roughness_enabled",
        "title": "roughness_enabled > roughness_enabled > roughness_enabled",
        "section": "roughness_enabled > roughness_enabled",
        "text": "property ViaLayer.roughness_enabled\n\nbool: Flag indicating if roughness models are used by the layer.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.html#raptorxadvancedsettings",
        "title": "RaptorXAdvancedSettings",
        "section": "RaptorXAdvancedSettings",
        "text": "Represents advanced settings for RaptorX simulations.\nRaptorXAdvancedSettings.advanced_options\ndict { str : list`[:obj:`str] }: Advanced options.\nRaptorXAdvancedSettings.auto_removal_sliver_poly\nfloat: Automatic sliver polygon removal tolerance.\nRaptorXAdvancedSettings.cells_per_wavelength\nint: Number of cells that fit under each wavelength.\nRaptorXAdvancedSettings.edge_mesh\nstr: Thickness and width of the exterior conductor filament.\nRaptorXAdvancedSettings.eliminate_slit_per_holes\nfloat: Threshold for strain or thermal relief slits and hole polygon areas.\nRaptorXAdvancedSettings.mesh_frequency\nstr: Mesh frequency override.\nRaptorXAdvancedSettings.msg\nEDBObjMessage: Protobuf message that represents this object's ID.\nRaptorXAdvancedSettings.net_settings_options\ndict { str : list`[:obj:`str] }: Options for net settings.\nRaptorXAdvancedSettings.override_shrink_factor\nfloat: Shrink factor override value.\nRaptorXAdvancedSettings.plane_projection_factor\nfloat: Plane projection factor for reducing the mesh complexity of large metal planes.\nRaptorXAdvancedSettings.use_accelerate_via_extraction\nbool: Flag indicating if neighboring vias are simplified/merged.\nRaptorXAdvancedSettings.use_auto_removal_sliver_poly\nbool: Flag indicating if slight misaligned overlapping polygons are to be automatically aligned.\nRaptorXAdvancedSettings.use_cells_per_wavelength\nbool: Flag indicating if cells per wavelength are used.\nRaptorXAdvancedSettings.use_edge_mesh\nbool: Flag indicating if the edge mesh is used.\nRaptorXAdvancedSettings.use_eliminate_slit_per_holes\nbool: Flag indicating if strain relief or thermal relief slits and holes are removed.\nRaptorXAdvancedSettings.use_enable_advanced_cap_effects\nbool: Flag indicating if capacitance-related effects such as conformal dielectrics are applied.\nRaptorXAdvancedSettings.use_enable_etch_transform\nbool: Flag indicating if layout is \"pre-distorted\" based on foundry rules.\nRaptorXAdvancedSettings.use_enable_hybrid_extraction\nbool: Flag indicating if the modeler is to split the layout into         two parts in an attempt to decrease the complexity.\nRaptorXAdvancedSettings.use_enable_substrate_network_extraction\nbool: Flag indicating if modeling of substrate coupling effects         is enabled using equivalent distributed RC networks.\nRaptorXAdvancedSettings.use_extract_floating_metals_dummy\nbool: Flag indicating if floating metals are modeled as dummy fills.\nRaptorXAdvancedSettings.use_extract_floating_metals_floating\nbool: Flag indicating if floating metals are modeled as floating nets.\nRaptorXAdvancedSettings.use_lde\nbool: Flag indicating if variations in resistivity are taken into account.\nRaptorXAdvancedSettings.use_mesh_frequency\nbool: Flag indicating if the default meshing frequency is overridden.\nRaptorXAdvancedSettings.use_override_shrink_factor\nbool: Flag indicating if shrink factor is overridden.\nRaptorXAdvancedSettings.use_plane_projection_factor\nbool: Flag indicating if the plane projection factor is used.\nRaptorXAdvancedSettings.use_relaxed_z_axis\nbool: Flag indicating if simplified meshing is used along the z axis.\nRaptorXAdvancedSettings\nRaptorXAdvancedSettings.advanced_options\ndict\nstr\nlist`[:obj:`str\nRaptorXAdvancedSettings.auto_removal_sliver_poly\nfloat\nRaptorXAdvancedSettings.cells_per_wavelength\nint\nRaptorXAdvancedSettings.edge_mesh\nstr\nRaptorXAdvancedSettings.eliminate_slit_per_holes\nfloat\nRaptorXAdvancedSettings.mesh_frequency\nstr\nRaptorXAdvancedSettings.msg\nEDBObjMessage\nRaptorXAdvancedSettings.net_settings_options\ndict\nstr\nlist`[:obj:`str\nRaptorXAdvancedSettings.override_shrink_factor\nfloat\nRaptorXAdvancedSettings.plane_projection_factor\nfloat\nRaptorXAdvancedSettings.use_accelerate_via_extraction\nbool\nRaptorXAdvancedSettings.use_auto_removal_sliver_poly\nbool\nRaptorXAdvancedSettings.use_cells_per_wavelength\nbool\nRaptorXAdvancedSettings.use_edge_mesh\nbool\nRaptorXAdvancedSettings.use_eliminate_slit_per_holes\nbool\nRaptorXAdvancedSettings.use_enable_advanced_cap_effects\nbool\nRaptorXAdvancedSettings.use_enable_etch_transform\nbool\nRaptorXAdvancedSettings.use_enable_hybrid_extraction\nbool\nRaptorXAdvancedSettings.use_enable_substrate_network_extraction\nbool\nRaptorXAdvancedSettings.use_extract_floating_metals_dummy\nbool\nRaptorXAdvancedSettings.use_extract_floating_metals_floating\nbool\nRaptorXAdvancedSettings.use_lde\nbool\nRaptorXAdvancedSettings.use_mesh_frequency\nbool\nRaptorXAdvancedSettings.use_override_shrink_factor\nbool\nRaptorXAdvancedSettings.use_plane_projection_factor\nbool\nRaptorXAdvancedSettings.use_relaxed_z_axis\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings",
        "title": "RaptorXAdvancedSettings > RaptorXAdvancedSettings > RaptorXAdvancedSettings",
        "section": "RaptorXAdvancedSettings > RaptorXAdvancedSettings",
        "text": "class ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings(sim_setup)\n\nRepresents advanced settings for RaptorX simulations.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nRaptorXAdvancedSettings.advanced_options\n\ndict { str : list`[:obj:`str] }: Advanced options.\n\nRaptorXAdvancedSettings.auto_removal_sliver_poly\n\nfloat: Automatic sliver polygon removal tolerance.\n\nRaptorXAdvancedSettings.cells_per_wavelength\n\nint: Number of cells that fit under each wavelength.\n\nRaptorXAdvancedSettings.edge_mesh\n\nstr: Thickness and width of the exterior conductor filament.\n\nRaptorXAdvancedSettings.eliminate_slit_per_holes\n\nfloat: Threshold for strain or thermal relief slits and hole polygon areas.\n\nRaptorXAdvancedSettings.mesh_frequency\n\nstr: Mesh frequency override.\n\nRaptorXAdvancedSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object's ID.\n\nRaptorXAdvancedSettings.net_settings_options\n\ndict { str : list`[:obj:`str] }: Options for net settings.\n\nRaptorXAdvancedSettings.override_shrink_factor\n\nfloat: Shrink factor override value.\n\nRaptorXAdvancedSettings.plane_projection_factor\n\nfloat: Plane projection factor for reducing the mesh complexity of large metal planes.\n\nRaptorXAdvancedSettings.use_accelerate_via_extraction\n\nbool: Flag indicating if neighboring vias are simplified/merged.\n\nRaptorXAdvancedSettings.use_auto_removal_sliver_poly\n\nbool: Flag indicating if slight misaligned overlapping polygons are to be automatically aligned.\n\nRaptorXAdvancedSettings.use_cells_per_wavelength\n\nbool: Flag indicating if cells per wavelength are used.\n\nRaptorXAdvancedSettings.use_edge_mesh\n\nbool: Flag indicating if the edge mesh is used.\n\nRaptorXAdvancedSettings.use_eliminate_slit_per_holes\n\nbool: Flag indicating if strain relief or thermal relief slits and holes are removed.\n\nRaptorXAdvancedSettings.use_enable_advanced_cap_effects\n\nbool: Flag indicating if capacitance-related effects such as conformal dielectrics are applied.\n\nRaptorXAdvancedSettings.use_enable_etch_transform\n\nbool: Flag indicating if layout is \"pre-distorted\" based on foundry rules.\n\nRaptorXAdvancedSettings.use_enable_hybrid_extraction\n\nbool: Flag indicating if the modeler is to split the layout into         two parts in an attempt to decrease the complexity.\n\nRaptorXAdvancedSettings.use_enable_substrate_network_extraction\n\nbool: Flag indicating if modeling of substrate coupling effects         is enabled using equivalent distributed RC networks.\n\nRaptorXAdvancedSettings.use_extract_floating_metals_dummy\n\nbool: Flag indicating if floating metals are modeled as dummy fills.\n\nRaptorXAdvancedSettings.use_extract_floating_metals_floating\n\nbool: Flag indicating if floating metals are modeled as floating nets.\n\nRaptorXAdvancedSettings.use_lde\n\nbool: Flag indicating if variations in resistivity are taken into account.\n\nRaptorXAdvancedSettings.use_mesh_frequency\n\nbool: Flag indicating if the default meshing frequency is overridden.\n\nRaptorXAdvancedSettings.use_override_shrink_factor\n\nbool: Flag indicating if shrink factor is overridden.\n\nRaptorXAdvancedSettings.use_plane_projection_factor\n\nbool: Flag indicating if the plane projection factor is used.\n\nRaptorXAdvancedSettings.use_relaxed_z_axis\n\nbool: Flag indicating if simplified meshing is used along the z axis.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.cell",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.cell.html#cell",
        "title": "cell",
        "section": "cell",
        "text": "Cell: Owning cell for the layout.\nThis property is read-only.\ncell\nCell"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.cell",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.cell.html#ansys.edb.core.layout.layout.Layout.cell",
        "title": "cell > cell > cell",
        "section": "cell > cell",
        "text": "property Layout.cell\n\nCell: Owning cell for the layout.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.find_by_id.html#find_by_id",
        "title": "find_by_id",
        "section": "find_by_id",
        "text": "Find a Connectable object by database ID in a given layout.\nLayout to search for the Connectable object.\nDatabase ID.\nConnectable object with the given database ID.\nfind_by_id\nLayout\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.find_by_id.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.find_by_id",
        "title": "find_by_id > find_by_id > find_by_id",
        "section": "find_by_id > find_by_id",
        "text": "classmethod TerminalInstanceTerminal.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the Connectable object.\n\nuid\n\npython:int\n\nDatabase ID.\n\nReturns\n\nConnectable\n\nConnectable object with the given database ID.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.ungroup",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.ungroup.html#ungroup",
        "title": "ungroup",
        "section": "ungroup",
        "text": "Dissolve the group.\nWhether all containing groups should also be resolved.\nungroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.ungroup",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.ungroup.html#ansys.edb.core.hierarchy.group.Group.ungroup",
        "title": "ungroup > ungroup > ungroup",
        "section": "ungroup > ungroup",
        "text": "Group.ungroup(recursive)\n\nDissolve the group.\n\nParameters\n\nrecursive\n\nbool\n\nWhether all containing groups should also be resolved.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the product property.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.get_product_property.html#ansys.edb.core.primitive.primitive.Bondwire.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "Bondwire.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nReturns\n\npython:str\n\nString stored in the product property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.msg",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.msg",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.msg.html#ansys.edb.core.terminal.terminals.Terminal.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property Terminal.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerTypeSet.ALL_LAYER_SET",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerTypeSet.ALL_LAYER_SET.html#all_layer_set",
        "title": "ALL_LAYER_SET",
        "section": "ALL_LAYER_SET",
        "text": "ALL_LAYER_SET"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerTypeSet.ALL_LAYER_SET",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerTypeSet.ALL_LAYER_SET.html#ansys.edb.core.layer.layer_collection.LayerTypeSet.ALL_LAYER_SET",
        "title": "ALL_LAYER_SET > ALL_LAYER_SET > ALL_LAYER_SET",
        "section": "ALL_LAYER_SET > ALL_LAYER_SET",
        "text": "LayerTypeSet.ALL_LAYER_SET = 4\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.net",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.net.html#net",
        "title": "net",
        "section": "net",
        "text": "Net: Net of the Connectable object.\nThis property can be set with a Net instance, a string, or None.\nnet\nNet\nNet\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.net",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.net.html#ansys.edb.core.primitive.primitive.Bondwire.net",
        "title": "net > net > net",
        "section": "net > net",
        "text": "property Bondwire.net\n\nNet: Net of the Connectable object.\n\nThis property can be set with a Net instance, a string, or None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PathCornerType.ROUND",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PathCornerType.ROUND.html#round",
        "title": "ROUND",
        "section": "ROUND",
        "text": "ROUND"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PathCornerType.ROUND",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PathCornerType.ROUND.html#ansys.edb.core.primitive.primitive.PathCornerType.ROUND",
        "title": "ROUND > ROUND > ROUND",
        "section": "ROUND > ROUND",
        "text": "PathCornerType.ROUND = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.create",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a pin group terminal.\nLayout to create the pin group terminal in.\nNet reference.\nName of the pin group terminal.\nPin group.\nWhether the pin group terminal is a reference terminal.\ncreate\nLayout\nNet\nstr\npython:None\nstr\nPinGroup\nbool\npython:False\nPinGroupTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.create",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.create.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod PinGroupTerminal.create(layout, name, pin_group, net, is_ref=False)\n\nCreate a pin group terminal.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to create the pin group terminal in.\n\nnet\n\nNet or str or python:None\n\nNet reference.\n\nname\n\nstr\n\nName of the pin group terminal.\n\npin_group\n\nPinGroup\n\nPin group.\n\nis_ref\n\nbool, default: python:False\n\nWhether the pin group terminal is a reference terminal.\n\nReturns\n\nPinGroupTerminal\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel",
        "href": "api/_autosummary/ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.html#multipoledebyemodel",
        "title": "MultipoleDebyeModel",
        "section": "MultipoleDebyeModel",
        "text": "Represents a dielectric material model.\nMultipoleDebyeModel.create()\nCreate a multipole Debye dielectric material model.\nMultipoleDebyeModel.get_parameters()\nGet parameters used to define the model.\nMultipoleDebyeModel.set_parameters(...)\nSet parameters used to define the model.\nMultipoleDebyeModel.id\nint: Unique ID of the EDB object.\nMultipoleDebyeModel.is_null\nbool: Flag indicating if the object exists in the database.\nMultipoleDebyeModel.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nMultipoleDebyeModel.type\nDielectricMaterialModelType: Type of the dielectric material model.\nMultipoleDebyeModel\nMultipoleDebyeModel.create\nMultipoleDebyeModel.get_parameters\nMultipoleDebyeModel.set_parameters\nMultipoleDebyeModel.id\nint\nMultipoleDebyeModel.is_null\nbool\nMultipoleDebyeModel.msg\nEDBObjMessage\nMultipoleDebyeModel.type\nDielectricMaterialModelType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel",
        "href": "api/_autosummary/ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.html#ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel",
        "title": "MultipoleDebyeModel > MultipoleDebyeModel > MultipoleDebyeModel",
        "section": "MultipoleDebyeModel > MultipoleDebyeModel",
        "text": "class ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel(msg)\n\nRepresents a dielectric material model.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nMultipoleDebyeModel.create()\n\nCreate a multipole Debye dielectric material model.\n\nMultipoleDebyeModel.get_parameters()\n\nGet parameters used to define the model.\n\nMultipoleDebyeModel.set_parameters(...)\n\nSet parameters used to define the model.\n\n\n\nAttributes\n\n\n\n\n\n\n\nMultipoleDebyeModel.id\n\nint: Unique ID of the EDB object.\n\nMultipoleDebyeModel.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nMultipoleDebyeModel.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nMultipoleDebyeModel.type\n\nDielectricMaterialModelType: Type of the dielectric material model.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.create_3d_comp.html#create_3d_comp",
        "title": "create_3d_comp",
        "section": "create_3d_comp",
        "text": "Create a 3D composite model from an MCAD file.\n3D composite model created.\ncreate_3d_comp\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.create_3d_comp.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.create_3d_comp",
        "title": "create_3d_comp > create_3d_comp > create_3d_comp",
        "section": "create_3d_comp > create_3d_comp",
        "text": "ComponentGroup.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nReturns\n\nMcadModel\n\n3D composite model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.LayerVisibility.PATH_VISIBLE",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.LayerVisibility.PATH_VISIBLE.html#path_visible",
        "title": "PATH_VISIBLE",
        "section": "PATH_VISIBLE",
        "text": "PATH_VISIBLE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.LayerVisibility.PATH_VISIBLE",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.LayerVisibility.PATH_VISIBLE.html#ansys.edb.core.layer.layer.LayerVisibility.PATH_VISIBLE",
        "title": "PATH_VISIBLE > PATH_VISIBLE > PATH_VISIBLE",
        "section": "PATH_VISIBLE > PATH_VISIBLE",
        "text": "LayerVisibility.PATH_VISIBLE = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.transform3d",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.transform3d.html#transform3d",
        "title": "transform3d",
        "section": "transform3d",
        "text": "Transform3D:         3D transformation information of the cell instance.\nFor the transformation to be applied, the placement_3d property\nmust be set to True.\ntransform3d\nTransform3D\nplacement_3d\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.transform3d",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.transform3d.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.transform3d",
        "title": "transform3d > transform3d > transform3d",
        "section": "transform3d > transform3d",
        "text": "property CellInstance.transform3d\n\nTransform3D:         3D transformation information of the cell instance.\n\nFor the transformation to be applied, the placement_3d property\nmust be set to True.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.net",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.net.html#net",
        "title": "net",
        "section": "net",
        "text": "Net: Net of the Connectable object.\nThis property can be set with a Net instance, a string, or None.\nnet\nNet\nNet\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.net",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.net.html#ansys.edb.core.primitive.primitive.Path.net",
        "title": "net > net > net",
        "section": "net > net",
        "text": "property Path.net\n\nNet: Net of the Connectable object.\n\nThis property can be set with a Net instance, a string, or None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.min_converged_passes",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.min_converged_passes.html#min_converged_passes",
        "title": "min_converged_passes",
        "section": "min_converged_passes",
        "text": "int: Minimum number of converged adaptive passes.\nmin_converged_passes\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.min_converged_passes",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.min_converged_passes.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.min_converged_passes",
        "title": "min_converged_passes > min_converged_passes > min_converged_passes",
        "section": "min_converged_passes > min_converged_passes",
        "text": "property HFSSSettingsOptions.min_converged_passes\n\nint: Minimum number of converged adaptive passes.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.solder_ball_shape",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.solder_ball_shape.html#solder_ball_shape",
        "title": "solder_ball_shape",
        "section": "solder_ball_shape",
        "text": "SolderballShape: Solder ball shape.\nsolder_ball_shape\nSolderballShape"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.solder_ball_shape",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.solder_ball_shape.html#ansys.edb.core.definition.padstack_def_data.PadstackDefData.solder_ball_shape",
        "title": "solder_ball_shape > solder_ball_shape > solder_ball_shape",
        "section": "solder_ball_shape > solder_ball_shape",
        "text": "property PadstackDefData.solder_ball_shape\n\nSolderballShape: Solder ball shape.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.net",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.net.html#net",
        "title": "net",
        "section": "net",
        "text": "Net: Net of the Connectable object.\nThis property can be set with a Net instance, a string, or None.\nnet\nNet\nNet\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.net",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.net.html#ansys.edb.core.primitive.primitive.Circle.net",
        "title": "net > net > net",
        "section": "net > net",
        "text": "property Circle.net\n\nNet: Net of the Connectable object.\n\nThis property can be set with a Net instance, a string, or None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the product property.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.get_product_property.html#ansys.edb.core.primitive.primitive.Path.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "Path.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nReturns\n\npython:str\n\nString stored in the product property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalType.TERM_INST",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalType.TERM_INST.html#term_inst",
        "title": "TERM_INST",
        "section": "TERM_INST",
        "text": "TERM_INST"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalType.TERM_INST",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalType.TERM_INST.html#ansys.edb.core.terminal.terminals.TerminalType.TERM_INST",
        "title": "TERM_INST > TERM_INST > TERM_INST",
        "section": "TERM_INST > TERM_INST",
        "text": "TerminalType.TERM_INST = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.cross_talk_threshold",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.cross_talk_threshold.html#cross_talk_threshold",
        "title": "cross_talk_threshold",
        "section": "cross_talk_threshold",
        "text": "str: Cross-talk threshold.\ncross_talk_threshold\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.cross_talk_threshold",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.cross_talk_threshold.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.cross_talk_threshold",
        "title": "cross_talk_threshold > cross_talk_threshold > cross_talk_threshold",
        "section": "cross_talk_threshold > cross_talk_threshold",
        "text": "property SIWaveAdvancedSettings.cross_talk_threshold\n\nstr: Cross-talk threshold.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.circle_intersect",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.circle_intersect.html#circle_intersect",
        "title": "circle_intersect",
        "section": "circle_intersect",
        "text": "Determine whether the circle intersects with a polygon.\nCenter.\nRadius.\nTrue if the circle intersects with a polygon, False otherwise.\ncircle_intersect\nansys.edb.core.typing.PointLikeT\npython:float\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.circle_intersect",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.circle_intersect.html#ansys.edb.core.geometry.polygon_data.PolygonData.circle_intersect",
        "title": "circle_intersect > circle_intersect > circle_intersect",
        "section": "circle_intersect > circle_intersect",
        "text": "PolygonData.circle_intersect(center, radius)\n\nDetermine whether the circle intersects with a polygon.\n\nParameters\n\ncenter\n\nansys.edb.core.typing.PointLikeT\n\nCenter.\n\nradius\n\npython:float\n\nRadius.\n\nReturns\n\nbool\n\nTrue if the circle intersects with a polygon, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.html#siwaveadvancedsettings",
        "title": "SIWaveAdvancedSettings",
        "section": "SIWaveAdvancedSettings",
        "text": "Represents advanced settings for SIWave simulations.\nSIWaveAdvancedSettings.ac_dc_merge_mode\nint: AC/DC merge mode.\nSIWaveAdvancedSettings.cross_talk_threshold\nstr: Cross-talk threshold.\nSIWaveAdvancedSettings.ignore_non_functional_pads\nbool: Flag indicating if non-functional pads are ignored.\nSIWaveAdvancedSettings.include_co_plane_coupling\nbool: Flag indicating if the co-plane coupling is included.\nSIWaveAdvancedSettings.include_fringe_plane_coupling\nbool: Flag indicating if the fringe-plane coupling is included.\nSIWaveAdvancedSettings.include_inf_gnd\nbool: Flag indicating if an infinite ground plane is included.\nSIWaveAdvancedSettings.include_inter_plane_coupling\nbool: Flag indicating if the inter-plane coupling is included.\nSIWaveAdvancedSettings.include_split_plane_coupling\nbool: Flag indicating if the split-plane coupling is included.\nSIWaveAdvancedSettings.include_trace_plane_coupling\nbool: Flag indicating if the trace-plane coupling is included.\nSIWaveAdvancedSettings.include_vi_sources\nbool: Flag indicating if voltage/current source connections/parasitics are included.\nSIWaveAdvancedSettings.inf_gnd_location\nstr: Infinite ground plane location.\nSIWaveAdvancedSettings.max_coupled_lines\nint: Maximum number of coupled lines.\nSIWaveAdvancedSettings.mesh_automatic\nbool: Flag indicating it mesh refinement frequency is automatically determined.\nSIWaveAdvancedSettings.mesh_frequency\nstr: Mesh refinement frequency.\nSIWaveAdvancedSettings.min_pad_area_to_mesh\nstr: Minimum pad area to mesh.\nSIWaveAdvancedSettings.min_plane_area_to_mesh\nstr: Minimum plane area to mesh.\nSIWaveAdvancedSettings.min_void_area\nstr: Minimum void area.\nSIWaveAdvancedSettings.msg\nEDBObjMessage: Protobuf message that represents this object's ID.\nSIWaveAdvancedSettings.perform_erc\nbool: Flag indicating if ERC is performed during simulation setup.\nSIWaveAdvancedSettings.return_current_distribution\nbool: Flag indicating if return current distribution is traced.\nSIWaveAdvancedSettings.snap_length_threshold\nstr: Snapping length threshold.\nSIWaveAdvancedSettings\nSIWaveAdvancedSettings.ac_dc_merge_mode\nint\nSIWaveAdvancedSettings.cross_talk_threshold\nstr\nSIWaveAdvancedSettings.ignore_non_functional_pads\nbool\nSIWaveAdvancedSettings.include_co_plane_coupling\nbool\nSIWaveAdvancedSettings.include_fringe_plane_coupling\nbool\nSIWaveAdvancedSettings.include_inf_gnd\nbool\nSIWaveAdvancedSettings.include_inter_plane_coupling\nbool\nSIWaveAdvancedSettings.include_split_plane_coupling\nbool\nSIWaveAdvancedSettings.include_trace_plane_coupling\nbool\nSIWaveAdvancedSettings.include_vi_sources\nbool\nSIWaveAdvancedSettings.inf_gnd_location\nstr\nSIWaveAdvancedSettings.max_coupled_lines\nint\nSIWaveAdvancedSettings.mesh_automatic\nbool\nSIWaveAdvancedSettings.mesh_frequency\nstr\nSIWaveAdvancedSettings.min_pad_area_to_mesh\nstr\nSIWaveAdvancedSettings.min_plane_area_to_mesh\nstr\nSIWaveAdvancedSettings.min_void_area\nstr\nSIWaveAdvancedSettings.msg\nEDBObjMessage\nSIWaveAdvancedSettings.perform_erc\nbool\nSIWaveAdvancedSettings.return_current_distribution\nbool\nSIWaveAdvancedSettings.snap_length_threshold\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings",
        "title": "SIWaveAdvancedSettings > SIWaveAdvancedSettings > SIWaveAdvancedSettings",
        "section": "SIWaveAdvancedSettings > SIWaveAdvancedSettings",
        "text": "class ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings(sim_setup)\n\nRepresents advanced settings for SIWave simulations.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nSIWaveAdvancedSettings.ac_dc_merge_mode\n\nint: AC/DC merge mode.\n\nSIWaveAdvancedSettings.cross_talk_threshold\n\nstr: Cross-talk threshold.\n\nSIWaveAdvancedSettings.ignore_non_functional_pads\n\nbool: Flag indicating if non-functional pads are ignored.\n\nSIWaveAdvancedSettings.include_co_plane_coupling\n\nbool: Flag indicating if the co-plane coupling is included.\n\nSIWaveAdvancedSettings.include_fringe_plane_coupling\n\nbool: Flag indicating if the fringe-plane coupling is included.\n\nSIWaveAdvancedSettings.include_inf_gnd\n\nbool: Flag indicating if an infinite ground plane is included.\n\nSIWaveAdvancedSettings.include_inter_plane_coupling\n\nbool: Flag indicating if the inter-plane coupling is included.\n\nSIWaveAdvancedSettings.include_split_plane_coupling\n\nbool: Flag indicating if the split-plane coupling is included.\n\nSIWaveAdvancedSettings.include_trace_plane_coupling\n\nbool: Flag indicating if the trace-plane coupling is included.\n\nSIWaveAdvancedSettings.include_vi_sources\n\nbool: Flag indicating if voltage/current source connections/parasitics are included.\n\nSIWaveAdvancedSettings.inf_gnd_location\n\nstr: Infinite ground plane location.\n\nSIWaveAdvancedSettings.max_coupled_lines\n\nint: Maximum number of coupled lines.\n\nSIWaveAdvancedSettings.mesh_automatic\n\nbool: Flag indicating it mesh refinement frequency is automatically determined.\n\nSIWaveAdvancedSettings.mesh_frequency\n\nstr: Mesh refinement frequency.\n\nSIWaveAdvancedSettings.min_pad_area_to_mesh\n\nstr: Minimum pad area to mesh.\n\nSIWaveAdvancedSettings.min_plane_area_to_mesh\n\nstr: Minimum plane area to mesh.\n\nSIWaveAdvancedSettings.min_void_area\n\nstr: Minimum void area.\n\nSIWaveAdvancedSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object's ID.\n\nSIWaveAdvancedSettings.perform_erc\n\nbool: Flag indicating if ERC is performed during simulation setup.\n\nSIWaveAdvancedSettings.return_current_distribution\n\nbool: Flag indicating if return current distribution is traced.\n\nSIWaveAdvancedSettings.snap_length_threshold\n\nstr: Snapping length threshold.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.html#matrixconvergencedata",
        "title": "MatrixConvergenceData",
        "section": "MatrixConvergenceData",
        "text": "Represents matrix convergence data for an adaptive frequency solution.\nfloat: Minimum magnitude threshold.\nlist of MatrixConvergenceDataEntry: Matrix entries.\nMatrixConvergenceData.add_entry(port_name_1, ...)\nAdd a matrix entry.\nMatrixConvergenceData.set_all_constant(...)\nSet all entries in the matrix to have the given magnitude and phase values.\nMatrixConvergenceData.set_all_diag_constant(...)\nSet all diagonal entries in the matrix to have the given magnitude and phase values.\nMatrixConvergenceData.set_all_off_diag_constant(...)\nSet all diagonal entries in the matrix to have the given magnitude and phase values.\nMatrixConvergenceData.all_constant\nbool: Flag indicating if all matrix entries are the same.\nMatrixConvergenceData.all_diag_constant\nbool: Flag indicating if all diagonal matrix entries are the same.\nMatrixConvergenceData.all_off_diag_constant\nbool: Flag indicating if all off-diagonal matrix entries are the same.\nMatrixConvergenceData.entry_list\nlist of MatrixConvergenceDataEntry: Matrix entries.\nMatrixConvergenceData.mag_min_threshold\nfloat: Minimum magnitude threshold.\nMatrixConvergenceData\nmag_min_threshold\npython:float\nfloat\nentry_list\npython:list\nMatrixConvergenceDataEntry\nlist\nMatrixConvergenceDataEntry\nMatrixConvergenceData.add_entry\nMatrixConvergenceData.set_all_constant\nMatrixConvergenceData.set_all_diag_constant\nMatrixConvergenceData.set_all_off_diag_constant\nMatrixConvergenceData.all_constant\nbool\nMatrixConvergenceData.all_diag_constant\nbool\nMatrixConvergenceData.all_off_diag_constant\nbool\nMatrixConvergenceData.entry_list\nlist\nMatrixConvergenceDataEntry\nMatrixConvergenceData.mag_min_threshold\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.html#ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData",
        "title": "MatrixConvergenceData > MatrixConvergenceData > MatrixConvergenceData",
        "section": "MatrixConvergenceData > MatrixConvergenceData",
        "text": "class ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData(mag_min_threshold=0.01, entry_list=None)\n\nRepresents matrix convergence data for an adaptive frequency solution.\n\nAttributes\n\nmag_min_threshold\n\npython:float\n\nfloat: Minimum magnitude threshold.\n\nentry_list\n\npython:list[MatrixConvergenceDataEntry]\n\nlist of MatrixConvergenceDataEntry: Matrix entries.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nMatrixConvergenceData.add_entry(port_name_1, ...)\n\nAdd a matrix entry.\n\nMatrixConvergenceData.set_all_constant(...)\n\nSet all entries in the matrix to have the given magnitude and phase values.\n\nMatrixConvergenceData.set_all_diag_constant(...)\n\nSet all diagonal entries in the matrix to have the given magnitude and phase values.\n\nMatrixConvergenceData.set_all_off_diag_constant(...)\n\nSet all diagonal entries in the matrix to have the given magnitude and phase values.\n\n\n\nAttributes\n\n\n\n\n\n\n\nMatrixConvergenceData.all_constant\n\nbool: Flag indicating if all matrix entries are the same.\n\nMatrixConvergenceData.all_diag_constant\n\nbool: Flag indicating if all diagonal matrix entries are the same.\n\nMatrixConvergenceData.all_off_diag_constant\n\nbool: Flag indicating if all off-diagonal matrix entries are the same.\n\nMatrixConvergenceData.entry_list\n\nlist of MatrixConvergenceDataEntry: Matrix entries.\n\nMatrixConvergenceData.mag_min_threshold\n\nfloat: Minimum magnitude threshold.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SweepData",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SweepData.html#sweepdata",
        "title": "SweepData",
        "section": "SweepData",
        "text": "Class representing a sweep data setting.\nName of this sweep.\nTrue if this is enabled.\nType of sweep.\nUse Q3D solver for dc calculations.\nSave fields during simulations.\nSave only radiation fields during simulations.\nCalculate DC point during simulations.\nSIwave with 3D DDM.\nSIwave with HFSS solver regions.\nSIwave with HFSS solver regions schematic.\nSIwave with HFSS solver parallel region simulation.\nEnable Using Adaptive Solution for all frequency points.\nSIwave with HFSS regions: number of regions to solve in parallel.\nList of CHFSSRegionComputeResource assignments for parallel region sims.\nAuto/Manual SMatrix only solve.\nMinimum frequency SMatrix only solve.\nFrequency points in the frequency sweep.\nFrequency of Steady State Start.\nMeshing frequencies of the observation mesh.\nFrequency points in meshing frequencies.\nStart meshing frequency.\nStop meshing frequency.\nData for interpolating frequency sweeps.\nList of frequency data.\nSweepData.frequency_string\nstr: String representing the frequency sweep data.\nSweepData\npython:str\nFreqSweepType\npython:int\npython:list\nHFSSRegionComputeResource\npython:str\npython:list\npython:str\npython:float\npython:int\npython:list\npython:str\npython:str\npython:str\nInterpolatingSweepData\nFrequencyData\npython:list\nof\nFrequencyData\nSweepData.frequency_string\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SweepData",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SweepData.html#ansys.edb.core.simulation_setup.simulation_setup.SweepData",
        "title": "SweepData > SweepData > SweepData",
        "section": "SweepData > SweepData",
        "text": "class ansys.edb.core.simulation_setup.simulation_setup.SweepData(name: str, frequency_data: FrequencyData | List[FrequencyData])\n\nClass representing a sweep data setting.\n\nAttributes\n\nname\n\npython:str\n\nName of this sweep.\n\nenabled\n\nbool\n\nTrue if this is enabled.\n\ntype\n\nFreqSweepType\n\nType of sweep.\n\nuse_q3d_for_dc\n\nbool\n\nUse Q3D solver for dc calculations.\n\nsave_fields\n\nbool\n\nSave fields during simulations.\n\nsave_rad_fields_only\n\nbool\n\nSave only radiation fields during simulations.\n\ncompute_dc_point\n\nbool\n\nCalculate DC point during simulations.\n\nsiwave_with_3dddm\n\nbool\n\nSIwave with 3D DDM.\n\nuse_hfss_solver_regions\n\nbool\n\nSIwave with HFSS solver regions.\n\nuse_hfss_solver_region_sch_gen\n\nbool\n\nSIwave with HFSS solver regions schematic.\n\nuse_hfss_solver_region_parallel_solve\n\nbool\n\nSIwave with HFSS solver parallel region simulation.\n\nuse_adp_solution_for_all_sweep_freq\n\nbool\n\nEnable Using Adaptive Solution for all frequency points.\n\nnum_parallel_hfss_regions\n\npython:int\n\nSIwave with HFSS regions: number of regions to solve in parallel.\n\nparallel_hfss_regions_sim_cfg\n\npython:list[HFSSRegionComputeResource]\n\nList of CHFSSRegionComputeResource assignments for parallel region sims.\n\nauto_s_mat_only_solve\n\nbool\n\nAuto/Manual SMatrix only solve.\n\nmin_freq_s_mat_only_solve\n\npython:str\n\nMinimum frequency SMatrix only solve.\n\nfrequencies\n\npython:list[python:str]\n\nFrequency points in the frequency sweep.\n\nsteady_state_start\n\npython:float\n\nFrequency of Steady State Start.\n\nmesh_freq_choice\n\npython:int\n\nMeshing frequencies of the observation mesh.\n\nmesh_freq_points\n\npython:list[python:str]\n\nFrequency points in meshing frequencies.\n\nmesh_freq_range_start\n\npython:str\n\nStart meshing frequency.\n\nmesh_freq_range_stop\n\npython:str\n\nStop meshing frequency.\n\ninterpolation_data\n\nInterpolatingSweepData\n\nData for interpolating frequency sweeps.\n\nfrequency_data\n\nFrequencyData or python:list of FrequencyData\n\nList of frequency data.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nSweepData.frequency_string\n\nstr: String representing the frequency sweep data.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_void",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_void.html#is_void",
        "title": "is_void",
        "section": "is_void",
        "text": "bool: Flag indicating if a primitive is a void.\nis_void\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_void",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_void.html#ansys.edb.core.primitive.primitive.Circle.is_void",
        "title": "is_void > is_void > is_void",
        "section": "is_void > is_void",
        "text": "property Circle.is_void\n\nbool: Flag indicating if a primitive is a void.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.visibility_mask",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.visibility_mask.html#visibility_mask",
        "title": "visibility_mask",
        "section": "visibility_mask",
        "text": "int: Visibility mask of the layer.\nThe setter can take either an int object or a LayerVisibility instance.\nvisibility_mask\nint\nint\nLayerVisibility"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.visibility_mask",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.visibility_mask.html#ansys.edb.core.layer.stackup_layer.StackupLayer.visibility_mask",
        "title": "visibility_mask > visibility_mask > visibility_mask",
        "section": "visibility_mask > visibility_mask",
        "text": "property StackupLayer.visibility_mask\n\nint: Visibility mask of the layer.\n\nThe setter can take either an int object or a LayerVisibility instance.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.find_by_name",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.find_by_name.html#find_by_name",
        "title": "find_by_name",
        "section": "find_by_name",
        "text": "Find a JEDEC5 bondwire definition by name in a given database.\nDatabase to search for the JEDEC5 bondwire definition.\nName of the JEDEC5 bondwire definition.\nJEDEC5 bondwire definition found.\nfind_by_name\nDatabase\npython:str\nJedec5BondwireDef"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.find_by_name",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.find_by_name.html#ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.find_by_name",
        "title": "find_by_name > find_by_name > find_by_name",
        "section": "find_by_name > find_by_name",
        "text": "classmethod Jedec5BondwireDef.find_by_name(database, name)\n\nFind a JEDEC5 bondwire definition by name in a given database.\n\nParameters\n\ndatabase\n\nDatabase\n\nDatabase to search for the JEDEC5 bondwire definition.\n\nname\n\npython:str\n\nName of the JEDEC5 bondwire definition.\n\nReturns\n\nJedec5BondwireDef\n\nJEDEC5 bondwire definition found.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.find_by_id.html#find_by_id",
        "title": "find_by_id",
        "section": "find_by_id",
        "text": "Find a Connectable object by database ID in a given layout.\nLayout to search for the Connectable object.\nDatabase ID.\nConnectable object with the given database ID.\nfind_by_id\nLayout\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.find_by_id.html#ansys.edb.core.hierarchy.pin_group.PinGroup.find_by_id",
        "title": "find_by_id > find_by_id > find_by_id",
        "section": "find_by_id > find_by_id",
        "text": "classmethod PinGroup.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the Connectable object.\n\nuid\n\npython:int\n\nDatabase ID.\n\nReturns\n\nConnectable\n\nConnectable object with the given database ID.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.x_axis",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.x_axis.html#x_axis",
        "title": "x_axis",
        "section": "x_axis",
        "text": "PointData: X axis of the instance array.\nx_axis\nPointData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.x_axis",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.x_axis.html#ansys.edb.core.hierarchy.inst_array.InstArray.x_axis",
        "title": "x_axis > x_axis > x_axis",
        "section": "x_axis > x_axis",
        "text": "property InstArray.x_axis\n\nPointData: X axis of the instance array.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_mcad_stride.html#is_mcad_stride",
        "title": "is_mcad_stride",
        "section": "is_mcad_stride",
        "text": "bool: Flag indicating if this is a Stride MCAD model.\nThis property is read-only.\nis_mcad_stride\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_mcad_stride.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_mcad_stride",
        "title": "is_mcad_stride > is_mcad_stride > is_mcad_stride",
        "section": "is_mcad_stride > is_mcad_stride",
        "text": "property PadstackInstanceTerminal.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.HFSSRegionComputeResource",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.HFSSRegionComputeResource.html#hfssregioncomputeresource",
        "title": "HFSSRegionComputeResource",
        "section": "HFSSRegionComputeResource",
        "text": "Class representing HFSS region computation resources.\nHFSS region id\nResource percentage to allocate to HFSS region\nHFSSRegionComputeResource\npython:int\npython:float"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.HFSSRegionComputeResource",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.HFSSRegionComputeResource.html#ansys.edb.core.simulation_setup.simulation_setup.HFSSRegionComputeResource",
        "title": "HFSSRegionComputeResource > HFSSRegionComputeResource > HFSSRegionComputeResource",
        "section": "HFSSRegionComputeResource > HFSSRegionComputeResource",
        "text": "class ansys.edb.core.simulation_setup.simulation_setup.HFSSRegionComputeResource(region_id, resource_percentage)\n\nClass representing HFSS region computation resources.\n\nAttributes\n\nregion_id\n\npython:int\n\nHFSS region id\n\nresource_percentage\n\npython:float\n\nResource percentage to allocate to HFSS region\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireCrossSectionType.RECTANGLE",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireCrossSectionType.RECTANGLE.html#rectangle",
        "title": "RECTANGLE",
        "section": "RECTANGLE",
        "text": "RECTANGLE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireCrossSectionType.RECTANGLE",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireCrossSectionType.RECTANGLE.html#ansys.edb.core.primitive.primitive.BondwireCrossSectionType.RECTANGLE",
        "title": "RECTANGLE > RECTANGLE > RECTANGLE",
        "section": "RECTANGLE > RECTANGLE",
        "text": "BondwireCrossSectionType.RECTANGLE = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.source_phase",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.source_phase.html#source_phase",
        "title": "source_phase",
        "section": "source_phase",
        "text": "Value: Source phase of the terminal.\nsource_phase\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.source_phase",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.source_phase.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.source_phase",
        "title": "source_phase > source_phase > source_phase",
        "section": "source_phase > source_phase",
        "text": "property PadstackInstanceTerminal.source_phase\n\nValue: Source phase of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerTypeSet.DIELECTRIC_LAYER_SET",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerTypeSet.DIELECTRIC_LAYER_SET.html#dielectric_layer_set",
        "title": "DIELECTRIC_LAYER_SET",
        "section": "DIELECTRIC_LAYER_SET",
        "text": "DIELECTRIC_LAYER_SET"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerTypeSet.DIELECTRIC_LAYER_SET",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerTypeSet.DIELECTRIC_LAYER_SET.html#ansys.edb.core.layer.layer_collection.LayerTypeSet.DIELECTRIC_LAYER_SET",
        "title": "DIELECTRIC_LAYER_SET > DIELECTRIC_LAYER_SET > DIELECTRIC_LAYER_SET",
        "section": "DIELECTRIC_LAYER_SET > DIELECTRIC_LAYER_SET",
        "text": "LayerTypeSet.DIELECTRIC_LAYER_SET = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.DielectricMergingMethod.WEIGHTED_AVERAGE",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.DielectricMergingMethod.WEIGHTED_AVERAGE.html#weighted_average",
        "title": "WEIGHTED_AVERAGE",
        "section": "WEIGHTED_AVERAGE",
        "text": "WEIGHTED_AVERAGE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.DielectricMergingMethod.WEIGHTED_AVERAGE",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.DielectricMergingMethod.WEIGHTED_AVERAGE.html#ansys.edb.core.layer.layer_collection.DielectricMergingMethod.WEIGHTED_AVERAGE",
        "title": "WEIGHTED_AVERAGE > WEIGHTED_AVERAGE > WEIGHTED_AVERAGE",
        "section": "WEIGHTED_AVERAGE > WEIGHTED_AVERAGE",
        "text": "DielectricMergingMethod.WEIGHTED_AVERAGE = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.find",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.find.html#find",
        "title": "find",
        "section": "find",
        "text": "Find a terminal by name in a given layout.\nLayout to search for the terminal.\nName of the terminal.\nfind\nLayout\nstr\nTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.find",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.find.html#ansys.edb.core.terminal.terminals.EdgeTerminal.find",
        "title": "find > find > find",
        "section": "find > find",
        "text": "classmethod EdgeTerminal.find(layout, name)\n\nFind a terminal by name in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the terminal.\n\nname\n\nstr\n\nName of the terminal.\n\nReturns\n\nTerminal\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.component_pins",
        "href": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.component_pins.html#component_pins",
        "title": "component_pins",
        "section": "component_pins",
        "text": "list of ComponentPin: All component pins of the component definition.\nThis property is read-only.\ncomponent_pins\nlist\nComponentPin"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.component_pins",
        "href": "api/_autosummary/ansys.edb.core.definition.component_def.ComponentDef.component_pins.html#ansys.edb.core.definition.component_def.ComponentDef.component_pins",
        "title": "component_pins > component_pins > component_pins",
        "section": "component_pins > component_pins",
        "text": "property ComponentDef.component_pins\n\nlist of ComponentPin: All component pins of the component definition.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the product property.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_product_property.html#ansys.edb.core.primitive.primitive.PadstackInstance.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "PadstackInstance.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nReturns\n\npython:str\n\nString stored in the product property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.net_settings_options",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.net_settings_options.html#net_settings_options",
        "title": "net_settings_options",
        "section": "net_settings_options",
        "text": "dict { str : list`[:obj:`str] }: Options for net settings.\nnet_settings_options\ndict\nstr\nlist`[:obj:`str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.net_settings_options",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.net_settings_options.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.net_settings_options",
        "title": "net_settings_options > net_settings_options > net_settings_options",
        "section": "net_settings_options > net_settings_options",
        "text": "property RaptorXAdvancedSettings.net_settings_options\n\ndict { str : list`[:obj:`str] }: Options for net settings.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.sparameter_model.SParameterModel",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.sparameter_model.SParameterModel.html#sparametermodel",
        "title": "SParameterModel",
        "section": "SParameterModel",
        "text": "Represents an S-parameter model object.\nSParameterModel.clone()\nClone a model.\nSParameterModel.create(name, ref_net)\nCreate an S-parameter model.\nSParameterModel.component_model\nstr: Name of the component model.\nSParameterModel.id\nint: Unique ID of the EDB object.\nSParameterModel.is_null\nbool: Flag indicating if the object exists in the database.\nSParameterModel.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nSParameterModel.reference_net\nstr: Name of the reference net.\nSParameterModel\nSParameterModel.clone\nSParameterModel.create\nSParameterModel.component_model\nstr\nSParameterModel.id\nint\nSParameterModel.is_null\nbool\nSParameterModel.msg\nEDBObjMessage\nSParameterModel.reference_net\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.sparameter_model.SParameterModel",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.sparameter_model.SParameterModel.html#ansys.edb.core.hierarchy.sparameter_model.SParameterModel",
        "title": "SParameterModel > SParameterModel > SParameterModel",
        "section": "SParameterModel > SParameterModel",
        "text": "class ansys.edb.core.hierarchy.sparameter_model.SParameterModel(msg)\n\nRepresents an S-parameter model object.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nSParameterModel.clone()\n\nClone a model.\n\nSParameterModel.create(name, ref_net)\n\nCreate an S-parameter model.\n\n\n\nAttributes\n\n\n\n\n\n\n\nSParameterModel.component_model\n\nstr: Name of the component model.\n\nSParameterModel.id\n\nint: Unique ID of the EDB object.\n\nSParameterModel.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nSParameterModel.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nSParameterModel.reference_net\n\nstr: Name of the reference net.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance.LayoutInstance.msg",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance.LayoutInstance.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance.LayoutInstance.msg",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance.LayoutInstance.msg.html#ansys.edb.core.layout_instance.layout_instance.LayoutInstance.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property LayoutInstance.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetupType.HFSS",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetupType.HFSS.html#hfss",
        "title": "HFSS",
        "section": "HFSS",
        "text": "HFSS"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetupType.HFSS",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetupType.HFSS.html#ansys.edb.core.simulation_setup.simulation_setup.SimulationSetupType.HFSS",
        "title": "HFSS > HFSS > HFSS",
        "section": "HFSS > HFSS",
        "text": "SimulationSetupType.HFSS = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.radius",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.radius.html#radius",
        "title": "radius",
        "section": "radius",
        "text": "ValueLike: Radius of the bend.\nradius"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.radius",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.radius.html#ansys.edb.core.primitive.primitive.BoardBendDef.radius",
        "title": "radius > radius > radius",
        "section": "radius > radius",
        "text": "property BoardBendDef.radius\n\nValueLike: Radius of the bend.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.use_loop_res_for_per_pin",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.use_loop_res_for_per_pin.html#use_loop_res_for_per_pin",
        "title": "use_loop_res_for_per_pin",
        "section": "use_loop_res_for_per_pin",
        "text": "bool: Flag indicating if the per pin uses the loop resolution.\nuse_loop_res_for_per_pin\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.use_loop_res_for_per_pin",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.use_loop_res_for_per_pin.html#ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.use_loop_res_for_per_pin",
        "title": "use_loop_res_for_per_pin > use_loop_res_for_per_pin > use_loop_res_for_per_pin",
        "section": "use_loop_res_for_per_pin > use_loop_res_for_per_pin",
        "text": "property SIWaveDCIRSimulationSettings.use_loop_res_for_per_pin\n\nbool: Flag indicating if the per pin uses the loop resolution.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.name",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the padstack instance.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.name",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.name.html#ansys.edb.core.primitive.primitive.PadstackInstance.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property PadstackInstance.name\n\nstr: Name of the padstack instance.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings.contact_radius",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings.contact_radius.html#contact_radius",
        "title": "contact_radius",
        "section": "contact_radius",
        "text": "str: Circuit element contact radius.\ncontact_radius\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings.contact_radius",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings.contact_radius.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings.contact_radius",
        "title": "contact_radius > contact_radius > contact_radius",
        "section": "contact_radius > contact_radius",
        "text": "property SIWaveDCSettings.contact_radius\n\nstr: Circuit element contact radius.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.set_data",
        "href": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.set_data.html#set_data",
        "title": "set_data",
        "section": "set_data",
        "text": "Set a list of data points in the dataset definition.\nset_data\npython:list\nPointData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.set_data",
        "href": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.set_data.html#ansys.edb.core.definition.dataset_def.DatasetDef.set_data",
        "title": "set_data > set_data > set_data",
        "section": "set_data > set_data",
        "text": "DatasetDef.set_data(points)\n\nSet a list of data points in the dataset definition.\n\nParameters\n\npoints\n\npython:list[PointData]\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.pin_group_terminal",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.pin_group_terminal.html#pin_group_terminal",
        "title": "pin_group_terminal",
        "section": "pin_group_terminal",
        "text": "PinGroupTerminal: Terminal this pin group is part of.\nThis property is read-only.\npin_group_terminal\nPinGroupTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.pin_group_terminal",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.pin_group_terminal.html#ansys.edb.core.hierarchy.pin_group.PinGroup.pin_group_terminal",
        "title": "pin_group_terminal > pin_group_terminal > pin_group_terminal",
        "section": "pin_group_terminal > pin_group_terminal",
        "text": "property PinGroup.pin_group_terminal\n\nPinGroupTerminal: Terminal this pin group is part of.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.component",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.component.html#component",
        "title": "component",
        "section": "component",
        "text": "ComponentGroup:         Component of the Connectable object.\ncomponent\nComponentGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.component",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.component.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.component",
        "title": "component > component > component",
        "section": "component > component",
        "text": "property CellInstance.component\n\nComponentGroup:         Component of the Connectable object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_BULLET",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_BULLET.html#padgeomtype_bullet",
        "title": "PADGEOMTYPE_BULLET",
        "section": "PADGEOMTYPE_BULLET",
        "text": "PADGEOMTYPE_BULLET"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_BULLET",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_BULLET.html#ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_BULLET",
        "title": "PADGEOMTYPE_BULLET > PADGEOMTYPE_BULLET > PADGEOMTYPE_BULLET",
        "section": "PADGEOMTYPE_BULLET > PADGEOMTYPE_BULLET",
        "text": "PadGeometryType.PADGEOMTYPE_BULLET = 5\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SimulationSettings.enabled",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SimulationSettings.enabled.html#enabled",
        "title": "enabled",
        "section": "enabled",
        "text": "bool: Flag indicating if the simulation setup is enabled.\nenabled\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SimulationSettings.enabled",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SimulationSettings.enabled.html#ansys.edb.core.simulation_setup.simulation_settings.SimulationSettings.enabled",
        "title": "enabled > enabled > enabled",
        "section": "enabled > enabled",
        "text": "property SimulationSettings.enabled\n\nbool: Flag indicating if the simulation setup is enabled.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.is_mcad_stride.html#is_mcad_stride",
        "title": "is_mcad_stride",
        "section": "is_mcad_stride",
        "text": "bool: Flag indicating if this is a Stride MCAD model.\nThis property is read-only.\nis_mcad_stride\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.is_mcad_stride.html#ansys.edb.core.primitive.primitive.PadstackInstance.is_mcad_stride",
        "title": "is_mcad_stride > is_mcad_stride > is_mcad_stride",
        "section": "is_mcad_stride > is_mcad_stride",
        "text": "property PadstackInstance.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.add_variable",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.add_variable.html#add_variable",
        "title": "add_variable",
        "section": "add_variable",
        "text": "Add a variable.\nVariable name.\nValue, which can be any type that can be converted to a Value\ninstance.\nWhether the new variable is a parameter. The default is False, which means it is a local variable.\nVariables can be added to the following EDB objects:\nDatabase (Variable names must begin with a ‘$’.)\nComponentDef\nCell\nLayout (Adds variable to the corresponding\nCell instance.)\nAdd variables to a cell and create a value that references these variables.\nadd_variable\npython:str\npython:str\npython:int\npython:float\ncomplex\nValue\nValue\npython:False\nFalse\nDatabase\nComponentDef\nCell\nLayout\nCell"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.add_variable",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.add_variable.html#ansys.edb.core.layout.cell.Cell.add_variable",
        "title": "add_variable > add_variable > add_variable",
        "section": "add_variable > add_variable",
        "text": "Cell.add_variable(name, value, is_param=False)\n\nAdd a variable.\n\nParameters\n\nname\n\npython:str\n\nVariable name.\n\nvalue\n\npython:str, python:int, python:float, complex, Value\n\nValue, which can be any type that can be converted to a Value\ninstance.\n\nis_param\n\nbool, default: python:False\n\nWhether the new variable is a parameter. The default is False, which means it is a local variable.\n\nNotes\n\nVariables can be added to the following EDB objects:\n\nDatabase (Variable names must begin with a ‘$’.)\n\nComponentDef\n\nCell\n\nLayout (Adds variable to the corresponding\nCell instance.)\n\nExamples\n\nAdd variables to a cell and create a value that references these variables.\n\n>>> param = Value(33.1)\n>>> cell.add_variable(\"blue1\", param)\n>>> cell.add_variable(\"blue2\", \"25mm\")\n>>> vv = cell.create_value(\"blue1 + blue2\")\n>>> print(vv.double)\n33.125\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.insert_zone",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.insert_zone.html#insert_zone",
        "title": "insert_zone",
        "section": "insert_zone",
        "text": "Insert a zone.\nZone to copy from when inserting a new zone.\nIf valid, the new zone is inserted as a copy of the given zone.\nOtherwise, the new zone is empty.\nID of the zone inserted if successful.\ninsert_zone\npython:int\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.insert_zone",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.insert_zone.html#ansys.edb.core.layer.layer_collection.LayerCollection.insert_zone",
        "title": "insert_zone > insert_zone > insert_zone",
        "section": "insert_zone > insert_zone",
        "text": "LayerCollection.insert_zone(copy_zone=-1)\n\nInsert a zone.\n\nParameters\n\ncopy_zone\n\npython:int, default: -1\n\nZone to copy from when inserting a new zone.\nIf valid, the new zone is inserted as a copy of the given zone.\nOtherwise, the new zone is empty.\n\nReturns\n\npython:int\n\nID of the zone inserted if successful.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.set_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.set_hfss_prop.html#set_hfss_prop",
        "title": "set_hfss_prop",
        "section": "set_hfss_prop",
        "text": "Set HFSS properties.\nMaterial property name to set.\nWhether to solve inside.\nset_hfss_prop\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.set_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.set_hfss_prop.html#ansys.edb.core.primitive.primitive.Primitive.set_hfss_prop",
        "title": "set_hfss_prop > set_hfss_prop > set_hfss_prop",
        "section": "set_hfss_prop > set_hfss_prop",
        "text": "Primitive.set_hfss_prop(material, solve_inside)\n\nSet HFSS properties.\n\nParameters\n\nmaterial\n\npython:str\n\nMaterial property name to set.\n\nsolve_inside\n\nbool\n\nWhether to solve inside.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.hfss_pi_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.hfss_pi_type.html#hfss_pi_type",
        "title": "hfss_pi_type",
        "section": "hfss_pi_type",
        "text": "HfssPIType: HFSS PI type.\nhfss_pi_type\nHfssPIType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.hfss_pi_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.hfss_pi_type.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.hfss_pi_type",
        "title": "hfss_pi_type > hfss_pi_type > hfss_pi_type",
        "section": "hfss_pi_type > hfss_pi_type",
        "text": "property PadstackInstanceTerminal.hfss_pi_type\n\nHfssPIType: HFSS PI type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.is_closed",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.is_closed.html#is_closed",
        "title": "is_closed",
        "section": "is_closed",
        "text": "bool: Flag indicating if a polygon is closed between the first and last points.\nis_closed\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.is_closed",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.is_closed.html#ansys.edb.core.geometry.polygon_data.PolygonData.is_closed",
        "title": "is_closed > is_closed > is_closed",
        "section": "is_closed > is_closed",
        "text": "property PolygonData.is_closed\n\nbool: Flag indicating if a polygon is closed between the first and last points.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property of the layer for a given product ID and attribute ID.\nProduct ID.\nAttribute ID.\nNew product property value.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.set_product_property.html#ansys.edb.core.layer.layer.Layer.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "Layer.set_product_property(prod_id, attr_it, prop_value)\n\nSet the product property of the layer for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nProduct ID.\n\nattr_it\n\npython:int\n\nAttribute ID.\n\nprop_value\n\npython:str\n\nNew product property value.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.length",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.length.html#length",
        "title": "length",
        "section": "length",
        "text": "str: Circumference length of the arc.\nlength\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.length",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.length.html#ansys.edb.core.geometry.arc_data.ArcData.length",
        "title": "length > length > length",
        "section": "length > length",
        "text": "property ArcData.length\n\nstr: Circumference length of the arc.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.html#componentgroup",
        "title": "ComponentGroup",
        "section": "ComponentGroup",
        "text": "Represents a component group object.\nComponentGroup.add_member(member)\nAdd an object to the group.\nComponentGroup.cast()\nCast the group object to the correct concrete type.\nComponentGroup.create(layout, name, comp_name)\nCreate a component group with a component.\nComponentGroup.create_3d_comp()\nCreate a 3D composite model from an MCAD file.\nComponentGroup.create_hfss()\nCreate an HFSS model from an MCAD file.\nComponentGroup.create_stride()\nCreate a Stride model from an MCAD file.\nComponentGroup.delete()\nDelete the layout object.\nComponentGroup.find(layout, name)\nFind a group by name.\nComponentGroup.find_by_def(layout, comp_def_name)\nFind all components belonging to a given component definition.\nComponentGroup.find_by_id(layout, uid)\nFind a Connectable object by database ID in a given layout.\nComponentGroup.get_product_property(prod_id, ...)\nGet the product property of the layout object for a given product ID and attribute ID.\nComponentGroup.get_product_property_ids(prod_id)\nGet a list of attribute IDs given a product ID for the layout object.\nComponentGroup.remove_member(member)\nRemove an object from the group.\nComponentGroup.set_product_property(prod_id, ...)\nSet the product property of the layout object for a given product ID and attribute ID.\nComponentGroup.ungroup(recursive)\nDissolve the group.\nComponentGroup.component\nComponentGroup:         Component of the Connectable object.\nComponentGroup.component_def\nComponentDef: Component definition for the         hierarchy object if it exists, None otherwise.\nComponentGroup.component_property\nComponentProperty: Component property of the component group.\nComponentGroup.component_type\nComponentType: Component type of the component group.\nComponentGroup.edb_uid\nint: Unique, persistent ID for the Connectable object.\nComponentGroup.group\nGroup object.\nComponentGroup.id\nint: Unique ID of the EDB object.\nComponentGroup.is_mcad\nbool: Flag indicating if this is an MCAD model.\nComponentGroup.is_mcad_3d_comp\nbool: Flag indicating if this is a 3D composite MCAD model.\nComponentGroup.is_mcad_hfss\nbool: Flag indicating if this is an HFSS MCAD model.\nComponentGroup.is_mcad_stride\nbool: Flag indicating if this is a Stride MCAD model.\nComponentGroup.is_null\nbool: Flag indicating if the object exists in the database.\nComponentGroup.layout\nLayout: Layout owning the object.\nComponentGroup.layout_obj_type\n\nComponentGroup.location\ntuple (Value,         Value):         Location [x, y] of the hierarchy object on the placement_layer object.\nComponentGroup.members\nlist of Connectables: All group members.\nComponentGroup.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nComponentGroup.name\nstr: Name of the hierarchy object.\nComponentGroup.net\nNet: Net of the Connectable object.\nComponentGroup.num_pins\nint: Number of pins in the component group.\nComponentGroup.obj_type\nLayoutObjType: Layout object type.\nComponentGroup.placement_layer\nLayer: Placement layer for the hierarchy object.\nComponentGroup.solve_independent_preference\nbool: Flag indicating if the object is assigned to solve independent of its parent context.\nComponentGroup.transform\nTransform:         Transformation information of the hierarchy object.\nComponentGroup\nComponentGroup.add_member\nComponentGroup.cast\nComponentGroup.create\nComponentGroup.create_3d_comp\nComponentGroup.create_hfss\nComponentGroup.create_stride\nComponentGroup.delete\nComponentGroup.find\nComponentGroup.find_by_def\nComponentGroup.find_by_id\nComponentGroup.get_product_property\nComponentGroup.get_product_property_ids\nComponentGroup.remove_member\nComponentGroup.set_product_property\nComponentGroup.ungroup\nComponentGroup.component\nComponentGroup\nComponentGroup.component_def\nComponentDef\nNone\nComponentGroup.component_property\nComponentProperty\nComponentGroup.component_type\nComponentType\nComponentGroup.edb_uid\nint\nComponentGroup.group\nGroup\nComponentGroup.id\nint\nComponentGroup.is_mcad\nbool\nComponentGroup.is_mcad_3d_comp\nbool\nComponentGroup.is_mcad_hfss\nbool\nComponentGroup.is_mcad_stride\nbool\nComponentGroup.is_null\nbool\nComponentGroup.layout\nLayout\nComponentGroup.layout_obj_type\nComponentGroup.location\ntuple\nValue\nValue\nplacement_layer\nComponentGroup.members\nlist\nComponentGroup.msg\nEDBObjMessage\nComponentGroup.name\nstr\nComponentGroup.net\nNet\nComponentGroup.num_pins\nint\nComponentGroup.obj_type\nLayoutObjType\nComponentGroup.placement_layer\nLayer\nComponentGroup.solve_independent_preference\nbool\nComponentGroup.transform\nTransform"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.html#ansys.edb.core.hierarchy.component_group.ComponentGroup",
        "title": "ComponentGroup > ComponentGroup > ComponentGroup",
        "section": "ComponentGroup > ComponentGroup",
        "text": "class ansys.edb.core.hierarchy.component_group.ComponentGroup(msg)\n\nRepresents a component group object.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nComponentGroup.add_member(member)\n\nAdd an object to the group.\n\nComponentGroup.cast()\n\nCast the group object to the correct concrete type.\n\nComponentGroup.create(layout, name, comp_name)\n\nCreate a component group with a component.\n\nComponentGroup.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nComponentGroup.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nComponentGroup.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nComponentGroup.delete()\n\nDelete the layout object.\n\nComponentGroup.find(layout, name)\n\nFind a group by name.\n\nComponentGroup.find_by_def(layout, comp_def_name)\n\nFind all components belonging to a given component definition.\n\nComponentGroup.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nComponentGroup.get_product_property(prod_id, ...)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nComponentGroup.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nComponentGroup.remove_member(member)\n\nRemove an object from the group.\n\nComponentGroup.set_product_property(prod_id, ...)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nComponentGroup.ungroup(recursive)\n\nDissolve the group.\n\n\n\nAttributes\n\n\n\n\n\n\n\nComponentGroup.component\n\nComponentGroup:         Component of the Connectable object.\n\nComponentGroup.component_def\n\nComponentDef: Component definition for the         hierarchy object if it exists, None otherwise.\n\nComponentGroup.component_property\n\nComponentProperty: Component property of the component group.\n\nComponentGroup.component_type\n\nComponentType: Component type of the component group.\n\nComponentGroup.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nComponentGroup.group\n\nGroup object.\n\nComponentGroup.id\n\nint: Unique ID of the EDB object.\n\nComponentGroup.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nComponentGroup.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nComponentGroup.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nComponentGroup.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nComponentGroup.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nComponentGroup.layout\n\nLayout: Layout owning the object.\n\nComponentGroup.layout_obj_type\n\n\n\nComponentGroup.location\n\ntuple (Value,         Value):         Location [x, y] of the hierarchy object on the placement_layer object.\n\nComponentGroup.members\n\nlist of Connectables: All group members.\n\nComponentGroup.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nComponentGroup.name\n\nstr: Name of the hierarchy object.\n\nComponentGroup.net\n\nNet: Net of the Connectable object.\n\nComponentGroup.num_pins\n\nint: Number of pins in the component group.\n\nComponentGroup.obj_type\n\nLayoutObjType: Layout object type.\n\nComponentGroup.placement_layer\n\nLayer: Placement layer for the hierarchy object.\n\nComponentGroup.solve_independent_preference\n\nbool: Flag indicating if the object is assigned to solve independent of its parent context.\n\nComponentGroup.transform\n\nTransform:         Transformation information of the hierarchy object.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.ProductIdType",
        "href": "api/_autosummary/ansys.edb.core.database.ProductIdType.html#productidtype",
        "title": "ProductIdType",
        "section": "ProductIdType",
        "text": "Provides an enum representing IDs of Ansys products that support EDB usage.\nProductIdType.HFSS_3D_LAYOUT\n\nProductIdType.DESIGNER\n\nProductIdType.SIWAVE\n\nProductIdType.GENERIC_TRANSLATOR\n\nProductIdType.USER_DEFINED\n\nProductIdType.INVALID_PRODUCT\n\nProductIdType\nProductIdType.HFSS_3D_LAYOUT\nProductIdType.DESIGNER\nProductIdType.SIWAVE\nProductIdType.GENERIC_TRANSLATOR\nProductIdType.USER_DEFINED\nProductIdType.INVALID_PRODUCT"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.ProductIdType",
        "href": "api/_autosummary/ansys.edb.core.database.ProductIdType.html#ansys.edb.core.database.ProductIdType",
        "title": "ProductIdType > ProductIdType > ProductIdType",
        "section": "ProductIdType > ProductIdType",
        "text": "class ansys.edb.core.database.ProductIdType(value)\n\nProvides an enum representing IDs of Ansys products that support EDB usage.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nProductIdType.HFSS_3D_LAYOUT\n\n\n\nProductIdType.DESIGNER\n\n\n\nProductIdType.SIWAVE\n\n\n\nProductIdType.GENERIC_TRANSLATOR\n\n\n\nProductIdType.USER_DEFINED\n\n\n\nProductIdType.INVALID_PRODUCT\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_interface_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_interface_terminal.html#is_interface_terminal",
        "title": "is_interface_terminal",
        "section": "is_interface_terminal",
        "text": "bool: Flag indicating if the terminal is an interface.\nis_interface_terminal\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_interface_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_interface_terminal.html#ansys.edb.core.terminal.terminals.Terminal.is_interface_terminal",
        "title": "is_interface_terminal > is_interface_terminal > is_interface_terminal",
        "section": "is_interface_terminal > is_interface_terminal",
        "text": "property Terminal.is_interface_terminal\n\nbool: Flag indicating if the terminal is an interface.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.board_bend_defs",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.board_bend_defs.html#board_bend_defs",
        "title": "board_bend_defs",
        "section": "board_bend_defs",
        "text": "list of BoardBendDef: List of all         board bend definitions in the layout.\nThis property is read-only.\nboard_bend_defs\nlist\nBoardBendDef"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.board_bend_defs",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.board_bend_defs.html#ansys.edb.core.layout.layout.Layout.board_bend_defs",
        "title": "board_bend_defs > board_bend_defs > board_bend_defs",
        "section": "board_bend_defs > board_bend_defs",
        "text": "property Layout.board_bend_defs\n\nlist of BoardBendDef: List of all         board bend definitions in the layout.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.is_read_only",
        "href": "api/_autosummary/ansys.edb.core.database.Database.is_read_only.html#is_read_only",
        "title": "is_read_only",
        "section": "is_read_only",
        "text": "bool: Flag indicating if the database is open in read-only mode.\nis_read_only\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.is_read_only",
        "href": "api/_autosummary/ansys.edb.core.database.Database.is_read_only.html#ansys.edb.core.database.Database.is_read_only",
        "title": "is_read_only > is_read_only > is_read_only",
        "section": "is_read_only > is_read_only",
        "text": "property Database.is_read_only\n\nbool: Flag indicating if the database is open in read-only mode.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.dc_report_config_file",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.dc_report_config_file.html#dc_report_config_file",
        "title": "dc_report_config_file",
        "section": "dc_report_config_file",
        "text": "str: Configuration file for the DC report.\ndc_report_config_file\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.dc_report_config_file",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.dc_report_config_file.html#ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.dc_report_config_file",
        "title": "dc_report_config_file > dc_report_config_file > dc_report_config_file",
        "section": "dc_report_config_file > dc_report_config_file",
        "text": "property SIWaveDCIRSimulationSettings.dc_report_config_file\n\nstr: Configuration file for the DC report.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetupType",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetupType.html#simulationsetuptype",
        "title": "SimulationSetupType",
        "section": "SimulationSetupType",
        "text": "Enum representing available simulation setup types.\nSimulationSetupType.HFSS\n\nSimulationSetupType.SI_WAVE\n\nSimulationSetupType.SI_WAVE_DCIR\n\nSimulationSetupType.RAPTOR_X\n\nSimulationSetupType\nSimulationSetupType.HFSS\nSimulationSetupType.SI_WAVE\nSimulationSetupType.SI_WAVE_DCIR\nSimulationSetupType.RAPTOR_X"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetupType",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetupType.html#ansys.edb.core.simulation_setup.simulation_setup.SimulationSetupType",
        "title": "SimulationSetupType > SimulationSetupType > SimulationSetupType",
        "section": "SimulationSetupType > SimulationSetupType",
        "text": "class ansys.edb.core.simulation_setup.simulation_setup.SimulationSetupType(value)\n\nEnum representing available simulation setup types.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nSimulationSetupType.HFSS\n\n\n\nSimulationSetupType.SI_WAVE\n\n\n\nSimulationSetupType.SI_WAVE_DCIR\n\n\n\nSimulationSetupType.RAPTOR_X\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.msg",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.msg",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.msg.html#ansys.edb.core.layout.mcad_model.McadModel.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property McadModel.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.has_voids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.has_voids.html#has_voids",
        "title": "has_voids",
        "section": "has_voids",
        "text": "bool: Flag indicating if a primitive has voids inside.\nThis property is read-only.\nhas_voids\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.has_voids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.has_voids.html#ansys.edb.core.primitive.primitive.BoardBendDef.has_voids",
        "title": "has_voids > has_voids > has_voids",
        "section": "has_voids > has_voids",
        "text": "property BoardBendDef.has_voids\n\nbool: Flag indicating if a primitive has voids inside.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.delete",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the padstack definition.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.delete",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.delete.html#ansys.edb.core.definition.padstack_def.PadstackDef.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "PadstackDef.delete()\n\nDelete the padstack definition.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_back_drill_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_back_drill_type.html#get_back_drill_type",
        "title": "get_back_drill_type",
        "section": "get_back_drill_type",
        "text": "Get the back drill type of the padstack instance.\nWhether to get the back drill type from the bottom.\nBack drill type of the padastack instance.\nget_back_drill_type\nBackDrillType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_back_drill_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_back_drill_type.html#ansys.edb.core.primitive.primitive.PadstackInstance.get_back_drill_type",
        "title": "get_back_drill_type > get_back_drill_type > get_back_drill_type",
        "section": "get_back_drill_type > get_back_drill_type",
        "text": "PadstackInstance.get_back_drill_type(from_bottom)\n\nGet the back drill type of the padstack instance.\n\nParameters\n\nfrom_bottom\n\nbool\n\nWhether to get the back drill type from the bottom.\n\nReturns\n\nBackDrillType\n\nBack drill type of the padastack instance.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.Distribution.DEC",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.Distribution.DEC.html#dec",
        "title": "DEC",
        "section": "DEC",
        "text": "DEC"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.Distribution.DEC",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.Distribution.DEC.html#ansys.edb.core.simulation_setup.simulation_setup.Distribution.DEC",
        "title": "DEC > DEC > DEC",
        "section": "DEC > DEC",
        "text": "Distribution.DEC = 'DEC'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.html#materialproperty",
        "title": "MaterialProperty",
        "section": "MaterialProperty",
        "text": "Provides an enum representing material property types.\nMaterialProperty.PERMITTIVITY\n\nMaterialProperty.PERMEABILITY\n\nMaterialProperty.CONDUCTIVITY\n\nMaterialProperty.DIELECTRIC_LOSS_TANGENT\n\nMaterialProperty.MAGNETIC_LOSS_TANGENT\n\nMaterialProperty.THERMAL_CONDUCTIVITY\n\nMaterialProperty.MASS_DENSITY\n\nMaterialProperty.SPECIFIC_HEAT\n\nMaterialProperty.YOUNGS_MODULUS\n\nMaterialProperty.POISSONS_RATIO\n\nMaterialProperty.THERMAL_EXPANSION_COEFFICIENT\n\nMaterialProperty.INVALID_PROPERTY\n\nMaterialProperty\nMaterialProperty.PERMITTIVITY\nMaterialProperty.PERMEABILITY\nMaterialProperty.CONDUCTIVITY\nMaterialProperty.DIELECTRIC_LOSS_TANGENT\nMaterialProperty.MAGNETIC_LOSS_TANGENT\nMaterialProperty.THERMAL_CONDUCTIVITY\nMaterialProperty.MASS_DENSITY\nMaterialProperty.SPECIFIC_HEAT\nMaterialProperty.YOUNGS_MODULUS\nMaterialProperty.POISSONS_RATIO\nMaterialProperty.THERMAL_EXPANSION_COEFFICIENT\nMaterialProperty.INVALID_PROPERTY"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.html#ansys.edb.core.definition.material_def.MaterialProperty",
        "title": "MaterialProperty > MaterialProperty > MaterialProperty",
        "section": "MaterialProperty > MaterialProperty",
        "text": "class ansys.edb.core.definition.material_def.MaterialProperty(value)\n\nProvides an enum representing material property types.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nMaterialProperty.PERMITTIVITY\n\n\n\nMaterialProperty.PERMEABILITY\n\n\n\nMaterialProperty.CONDUCTIVITY\n\n\n\nMaterialProperty.DIELECTRIC_LOSS_TANGENT\n\n\n\nMaterialProperty.MAGNETIC_LOSS_TANGENT\n\n\n\nMaterialProperty.THERMAL_CONDUCTIVITY\n\n\n\nMaterialProperty.MASS_DENSITY\n\n\n\nMaterialProperty.SPECIFIC_HEAT\n\n\n\nMaterialProperty.YOUNGS_MODULUS\n\n\n\nMaterialProperty.POISSONS_RATIO\n\n\n\nMaterialProperty.THERMAL_EXPANSION_COEFFICIENT\n\n\n\nMaterialProperty.INVALID_PROPERTY\n\n\n\n"
    },
    {
        "objectID": "api/database",
        "href": "api/database.html#database",
        "title": "Database",
        "section": "Database",
        "text": "Database"
    },
    {
        "objectID": "api/database",
        "href": "api/database.html#classes",
        "title": "Database > Classes",
        "section": "Classes",
        "text": "Database(msg)\nRepresents a database object.\nProductIdType(value)\nProvides an enum representing IDs of Ansys products that support EDB usage.\nClasses\nDatabase\nProductIdType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.msg",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.msg",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.msg.html#ansys.edb.core.layer.layer_collection.LayerCollection.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property LayerCollection.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.create_3d_comp.html#create_3d_comp",
        "title": "create_3d_comp",
        "section": "create_3d_comp",
        "text": "Create a 3D component model.\nThis method makes a call directly on a Connectable or\nLayout.\ncreate_3d_comp\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.create_3d_comp.html#ansys.edb.core.layout.mcad_model.McadModel.create_3d_comp",
        "title": "create_3d_comp > create_3d_comp > create_3d_comp",
        "section": "create_3d_comp > create_3d_comp",
        "text": "classmethod McadModel.create_3d_comp(connectable=None, layout=None, filename=None)\n\nCreate a 3D component model.\n\nThis method makes a call directly on a Connectable or\nLayout.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.layout_obj_type.html#layout_obj_type",
        "title": "layout_obj_type",
        "section": "layout_obj_type",
        "text": "layout_obj_type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.layout_obj_type.html#ansys.edb.core.layer.layer.Layer.layout_obj_type",
        "title": "layout_obj_type > layout_obj_type > layout_obj_type",
        "section": "layout_obj_type > layout_obj_type",
        "text": "Layer.layout_obj_type = 5\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.create",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a pin pair model.\nPin pair model created.\ncreate\nPinPairModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.create",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.create.html#ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod PinPairModel.create()\n\nCreate a pin pair model.\n\nReturns\n\nPinPairModel\n\nPin pair model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.RectangleRepresentationType",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.RectangleRepresentationType.html#rectanglerepresentationtype",
        "title": "RectangleRepresentationType",
        "section": "RectangleRepresentationType",
        "text": "Provides an enum representing rectangle types.\nRectangleRepresentationType.INVALID_RECT_TYPE\n\nRectangleRepresentationType.CENTER_WIDTH_HEIGHT\n\nRectangleRepresentationType.LOWER_LEFT_UPPER_RIGHT\n\nRectangleRepresentationType\nRectangleRepresentationType.INVALID_RECT_TYPE\nRectangleRepresentationType.CENTER_WIDTH_HEIGHT\nRectangleRepresentationType.LOWER_LEFT_UPPER_RIGHT"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.RectangleRepresentationType",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.RectangleRepresentationType.html#ansys.edb.core.primitive.primitive.RectangleRepresentationType",
        "title": "RectangleRepresentationType > RectangleRepresentationType > RectangleRepresentationType",
        "section": "RectangleRepresentationType > RectangleRepresentationType",
        "text": "class ansys.edb.core.primitive.primitive.RectangleRepresentationType(value)\n\nProvides an enum representing rectangle types.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nRectangleRepresentationType.INVALID_RECT_TYPE\n\n\n\nRectangleRepresentationType.CENTER_WIDTH_HEIGHT\n\n\n\nRectangleRepresentationType.LOWER_LEFT_UPPER_RIGHT\n\n\n\n"
    },
    {
        "objectID": "api/glossary",
        "href": "api/glossary.html#glossary",
        "title": "Glossary",
        "section": "Glossary",
        "text": "The generic type for most objects in Layout.\nObjects of the following types are all connectables :\nMultizone stackups allow a design to be divided into areas called zones.\nEach zone contains a subset of layers available to the entire circuit board and is spatially defined by polygons on the Outline layer.\nAny of the following data types that represents a numeric value\nint\nfloat\ncomplex\nstr for expressions (‘1nm’, ‘x + 1’ etc)\nValue\nAny of the following data types that represents (x, y) point on a 2D coordinate system.\nPointData\n(ValueLike, ValueLike) or any other iterable with 2 ValueLike inside\nAny of the following data types that represents (x, y, z) point on a 3D coordinate system.\nPoint3DData\n(ValueLike, ValueLike, ValueLike) or any other iterable with 3 ValueLike inside\n(Point3DLike, Point3DLike, Point3DLike)\nA Groisse roughness model is represented by a single value containing the roughness value.\nA Huray roughness model is represented  by a tuple of the form [nodule_radius_value, surface_ratio_value]\nUnion[ValueLike, (ValueLike, ValueLike)]\nHFSS solver properties are represented by a tuple of the form [dc_thickness_type, dc_thickness_value, solve_inside_enabled]\n(DCThicknessType, ValueLike, bool)\nExtent box around the design, represented by a dict with the following key:values\nGlossary\nint\nfloat\ncomplex\nstr\nValue\nPointData\nPoint3DData\nUnion\nDCThicknessType\nbool\ndict\nfloat\nbool\nfloat\nbool\nfloat\nbool\nfloat\nbool\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.num_power_modules",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.num_power_modules.html#num_power_modules",
        "title": "num_power_modules",
        "section": "num_power_modules",
        "text": "int: Number of power modules.\nRead-Only\nnum_power_modules"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.num_power_modules",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.num_power_modules.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.num_power_modules",
        "title": "num_power_modules > num_power_modules > num_power_modules",
        "section": "num_power_modules > num_power_modules",
        "text": "property VoltageRegulator.num_power_modules\n\nObj\n\nint: Number of power modules.\n\nRead-Only\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.render",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.render.html#render",
        "title": "render",
        "section": "render",
        "text": "Render a path.\nPath width.\nEnd cap style for the start of the path.\nEnd cap style for the end of the path.\nCorner style.\nPolygon data to set.\nPath rendered.\nrender\nValue\nPathEndCapType\nPathEndCapType\nPathCornerType\nPolygonData\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.render",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.render.html#ansys.edb.core.primitive.primitive.Path.render",
        "title": "render > render > render",
        "section": "render > render",
        "text": "classmethod Path.render(width, end_cap1, end_cap2, corner_style, path)\n\nRender a path.\n\nParameters\n\nwidth\n\nValue\n\nPath width.\n\nend_cap1\n\nPathEndCapType\n\nEnd cap style for the start of the path.\n\nend_cap2\n\nPathEndCapType\n\nEnd cap style for the end of the path.\n\ncorner_style\n\nPathCornerType\n\nCorner style.\n\npath\n\nPolygonData\n\nPolygon data to set.\n\nReturns\n\nPolygonData\n\nPath rendered.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_void",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_void.html#is_void",
        "title": "is_void",
        "section": "is_void",
        "text": "bool: Flag indicating if a primitive is a void.\nis_void\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_void",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_void.html#ansys.edb.core.primitive.primitive.Bondwire.is_void",
        "title": "is_void > is_void > is_void",
        "section": "is_void > is_void",
        "text": "property Bondwire.is_void\n\nbool: Flag indicating if a primitive is a void.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDs given a product ID for the layout object.\nID representing a product that supports the EDB.\nAll user-defined attribute IDs for properties stored in the object\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.get_product_property_ids.html#ansys.edb.core.net.differential_pair.DifferentialPair.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "DifferentialPair.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nReturns\n\npython:list[python:int]\n\nAll user-defined attribute IDs for properties stored in the object\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel.design_name",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel.design_name.html#design_name",
        "title": "design_name",
        "section": "design_name",
        "text": "str: Name of the design associated with the dynamic link component model.\ndesign_name\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel.design_name",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel.design_name.html#ansys.edb.core.definition.component_model.DynamicLinkComponentModel.design_name",
        "title": "design_name > design_name > design_name",
        "section": "design_name > design_name",
        "text": "property DynamicLinkComponentModel.design_name\n\nstr: Name of the design associated with the dynamic link component model.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.obj_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.obj_type.html#obj_type",
        "title": "obj_type",
        "section": "obj_type",
        "text": "LayoutObjType: Layout object type.\nThis property is read-only.\nobj_type\nLayoutObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.obj_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.obj_type.html#ansys.edb.core.terminal.terminals.EdgeTerminal.obj_type",
        "title": "obj_type > obj_type > obj_type",
        "section": "obj_type > obj_type",
        "text": "property EdgeTerminal.obj_type\n\nLayoutObjType: Layout object type.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_void",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_void.html#is_void",
        "title": "is_void",
        "section": "is_void",
        "text": "bool: Flag indicating if a primitive is a void.\nis_void\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_void",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_void.html#ansys.edb.core.primitive.primitive.Primitive.is_void",
        "title": "is_void > is_void > is_void",
        "section": "is_void > is_void",
        "text": "property Primitive.is_void\n\nbool: Flag indicating if a primitive is a void.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.is_mcad_stride.html#is_mcad_stride",
        "title": "is_mcad_stride",
        "section": "is_mcad_stride",
        "text": "bool: Flag indicating if this is a Stride MCAD model.\nThis property is read-only.\nis_mcad_stride\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.is_mcad_stride.html#ansys.edb.core.terminal.terminals.TerminalInstance.is_mcad_stride",
        "title": "is_mcad_stride > is_mcad_stride > is_mcad_stride",
        "section": "is_mcad_stride > is_mcad_stride",
        "text": "property TerminalInstance.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.id.html#ansys.edb.core.hierarchy.pin_group.PinGroup.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property PinGroup.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.primitives",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.primitives.html#primitives",
        "title": "primitives",
        "section": "primitives",
        "text": "list of Primitive: List of all             primitives in the layout.\nThis property is read-only.\nprimitives\nlist\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.primitives",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.primitives.html#ansys.edb.core.layout.layout.Layout.primitives",
        "title": "primitives > primitives > primitives",
        "section": "primitives > primitives",
        "text": "property Layout.primitives\n\nlist of Primitive: List of all             primitives in the layout.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_mcad_hfss.html#is_mcad_hfss",
        "title": "is_mcad_hfss",
        "section": "is_mcad_hfss",
        "text": "bool: Flag indicating if this is an HFSS MCAD model.\nThis property is read-only.\nis_mcad_hfss\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_mcad_hfss.html#ansys.edb.core.primitive.primitive.Path.is_mcad_hfss",
        "title": "is_mcad_hfss > is_mcad_hfss > is_mcad_hfss",
        "section": "is_mcad_hfss > is_mcad_hfss",
        "text": "property Path.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.can_be_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.can_be_zone_primitive.html#can_be_zone_primitive",
        "title": "can_be_zone_primitive",
        "section": "can_be_zone_primitive",
        "text": "bool: Flag indicating if a polygon can be a zone.\nThis property is read-only.\ncan_be_zone_primitive\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.can_be_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.can_be_zone_primitive.html#ansys.edb.core.primitive.primitive.Polygon.can_be_zone_primitive",
        "title": "can_be_zone_primitive > can_be_zone_primitive > can_be_zone_primitive",
        "section": "can_be_zone_primitive > can_be_zone_primitive",
        "text": "property Polygon.can_be_zone_primitive\n\nbool: Flag indicating if a polygon can be a zone.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.layout",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.layout.html#layout",
        "title": "layout",
        "section": "layout",
        "text": "Layout: Layout owning the object.\nThis property is read-only.\nlayout\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.layout",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.layout.html#ansys.edb.core.terminal.terminals.TerminalInstance.layout",
        "title": "layout > layout > layout",
        "section": "layout > layout",
        "text": "property TerminalInstance.layout\n\nLayout: Layout owning the object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.create_with_primitives",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.create_with_primitives.html#create_with_primitives",
        "title": "create_with_primitives",
        "section": "create_with_primitives",
        "text": "Create one or more via groups with primitives.\nLayout to create the via groups in.\nList of primitives to use to create the via groups.\nWhether to preserve primitives during via group creation. If False\nprimitives are deleted during via group creation.\nList of newly created via groups.\ncreate_with_primitives\nLayout\npython:list\nPrimitive\nFalse\npython:list\nViaGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.create_with_primitives",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.create_with_primitives.html#ansys.edb.core.hierarchy.via_group.ViaGroup.create_with_primitives",
        "title": "create_with_primitives > create_with_primitives > create_with_primitives",
        "section": "create_with_primitives > create_with_primitives",
        "text": "classmethod ViaGroup.create_with_primitives(layout, primitives, is_persistent)\n\nCreate one or more via groups with primitives.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to create the via groups in.\n\nprimitives\n\npython:list[Primitive]\n\nList of primitives to use to create the via groups.\n\nis_persistent\n\nbool\n\nWhether to preserve primitives during via group creation. If False\nprimitives are deleted during via group creation.\n\nReturns\n\npython:list[ViaGroup]\n\nList of newly created via groups.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.msg.html#ansys.edb.core.definition.bondwire_def.ApdBondwireDef.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property ApdBondwireDef.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.layout",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.layout.html#layout",
        "title": "layout",
        "section": "layout",
        "text": "Layout: Layout owning the object.\nThis property is read-only.\nlayout\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.layout",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.layout.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.layout",
        "title": "layout > layout > layout",
        "section": "layout > layout",
        "text": "property TerminalInstanceTerminal.layout\n\nLayout: Layout owning the object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.FrequencyData",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.FrequencyData.html#frequencydata",
        "title": "FrequencyData",
        "section": "FrequencyData",
        "text": "Class representing a frequency setting.\nHere are the choices for the distribution parameter:\nDistribution\nDescription\nExample\nLIN\nlinear (start, stop, step)\nLIN 2GHz 4GHz 100MHz or LIN 1dBm 10dBm 1dB\nLINC\nlinear (start, stop, count)\nLINC 2GHz 4GHz 11\nESTP\nExponential step (start, stop, count)\nESTP 2MHz 10MHz 3\nDEC\ndecade (start, stop, number of decades)\nDEC 10KHz 10GHz 6\nOCT\noctave (start, stop, number of octaves)\nOCT 10MHz 160MHz 5\nSweep distribution type (see table below).\nStart frequency is number with optional frequency units.\nEnd frequency is number with optional frequency units.\nStep is either frequency with optional frequency units or an integer\nFrequencyData\nValues for distribution parameter\nDistribution\npython:str\npython:str\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.FrequencyData",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.FrequencyData.html#ansys.edb.core.simulation_setup.simulation_setup.FrequencyData",
        "title": "FrequencyData > FrequencyData > FrequencyData",
        "section": "FrequencyData > FrequencyData",
        "text": "class ansys.edb.core.simulation_setup.simulation_setup.FrequencyData(distribution: Distribution, start_f: str, end_f: str, step: str)\n\nClass representing a frequency setting.\n\nNotes\n\nHere are the choices for the distribution parameter:\n\nValues for distribution parameter\n\n\n\n\n\n\n\nDistribution\n\nDescription\n\nExample\n\nLIN\n\nlinear (start, stop, step)\n\nLIN 2GHz 4GHz 100MHz or LIN 1dBm 10dBm 1dB\n\nLINC\n\nlinear (start, stop, count)\n\nLINC 2GHz 4GHz 11\n\nESTP\n\nExponential step (start, stop, count)\n\nESTP 2MHz 10MHz 3\n\nDEC\n\ndecade (start, stop, number of decades)\n\nDEC 10KHz 10GHz 6\n\nOCT\n\noctave (start, stop, number of octaves)\n\nOCT 10MHz 160MHz 5\n\nAttributes\n\ndistribution\n\nDistribution\n\nSweep distribution type (see table below).\n\nstart_f\n\npython:str\n\nStart frequency is number with optional frequency units.\n\nend_f\n\npython:str\n\nEnd frequency is number with optional frequency units.\n\nstep\n\npython:str\n\nStep is either frequency with optional frequency units or an integer\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.DielectricMergingMethod.WEIGHTED_CAPACITANCE",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.DielectricMergingMethod.WEIGHTED_CAPACITANCE.html#weighted_capacitance",
        "title": "WEIGHTED_CAPACITANCE",
        "section": "WEIGHTED_CAPACITANCE",
        "text": "WEIGHTED_CAPACITANCE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.DielectricMergingMethod.WEIGHTED_CAPACITANCE",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.DielectricMergingMethod.WEIGHTED_CAPACITANCE.html#ansys.edb.core.layer.layer_collection.DielectricMergingMethod.WEIGHTED_CAPACITANCE",
        "title": "WEIGHTED_CAPACITANCE > WEIGHTED_CAPACITANCE > WEIGHTED_CAPACITANCE",
        "section": "WEIGHTED_CAPACITANCE > WEIGHTED_CAPACITANCE",
        "text": "DielectricMergingMethod.WEIGHTED_CAPACITANCE = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_mcad_3d_comp.html#is_mcad_3d_comp",
        "title": "is_mcad_3d_comp",
        "section": "is_mcad_3d_comp",
        "text": "bool: Flag indicating if this is a 3D composite MCAD model.\nThis property is read-only.\nis_mcad_3d_comp\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_mcad_3d_comp.html#ansys.edb.core.terminal.terminals.PointTerminal.is_mcad_3d_comp",
        "title": "is_mcad_3d_comp > is_mcad_3d_comp > is_mcad_3d_comp",
        "section": "is_mcad_3d_comp > is_mcad_3d_comp",
        "text": "property PointTerminal.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.is_mcad_3d_comp.html#is_mcad_3d_comp",
        "title": "is_mcad_3d_comp",
        "section": "is_mcad_3d_comp",
        "text": "bool: Flag indicating if this is a 3D composite MCAD model.\nThis property is read-only.\nis_mcad_3d_comp\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.is_mcad_3d_comp.html#ansys.edb.core.hierarchy.pin_group.PinGroup.is_mcad_3d_comp",
        "title": "is_mcad_3d_comp > is_mcad_3d_comp > is_mcad_3d_comp",
        "section": "is_mcad_3d_comp > is_mcad_3d_comp",
        "text": "property PinGroup.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.mesh_size_factor",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.mesh_size_factor.html#mesh_size_factor",
        "title": "mesh_size_factor",
        "section": "mesh_size_factor",
        "text": "float: Mesh size factor used for lambda refinement.\nmesh_size_factor\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.mesh_size_factor",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.mesh_size_factor.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.mesh_size_factor",
        "title": "mesh_size_factor > mesh_size_factor > mesh_size_factor",
        "section": "mesh_size_factor > mesh_size_factor",
        "text": "property HFSSSettingsOptions.mesh_size_factor\n\nfloat: Mesh size factor used for lambda refinement.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.model.Model.clone",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.model.Model.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Clone a model.\nclone\nModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.model.Model.clone",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.model.Model.clone.html#ansys.edb.core.hierarchy.model.Model.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "Model.clone()\n\nClone a model.\n\nReturns\n\nModel cloned.\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.create",
        "href": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create an IC component property.\nIC component property created.\ncreate\nICComponentProperty"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.create",
        "href": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.create.html#ansys.edb.core.definition.ic_component_property.ICComponentProperty.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod ICComponentProperty.create()\n\nCreate an IC component property.\n\nReturns\n\nICComponentProperty\n\nIC component property created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.percent_local_refinement",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.percent_local_refinement.html#percent_local_refinement",
        "title": "percent_local_refinement",
        "section": "percent_local_refinement",
        "text": "int: Percent of local refinement used for adaptive mesh refinement.\npercent_local_refinement\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.percent_local_refinement",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.percent_local_refinement.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.percent_local_refinement",
        "title": "percent_local_refinement > percent_local_refinement > percent_local_refinement",
        "section": "percent_local_refinement > percent_local_refinement",
        "text": "property SIWaveDCAdvancedSettings.percent_local_refinement\n\nint: Percent of local refinement used for adaptive mesh refinement.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.remove_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.remove_hfss_prop.html#remove_hfss_prop",
        "title": "remove_hfss_prop",
        "section": "remove_hfss_prop",
        "text": "Remove HFSS properties.\nremove_hfss_prop"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.remove_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.remove_hfss_prop.html#ansys.edb.core.primitive.primitive.BoardBendDef.remove_hfss_prop",
        "title": "remove_hfss_prop > remove_hfss_prop > remove_hfss_prop",
        "section": "remove_hfss_prop > remove_hfss_prop",
        "text": "BoardBendDef.remove_hfss_prop()\n\nRemove HFSS properties.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.solve_inside",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.solve_inside.html#solve_inside",
        "title": "solve_inside",
        "section": "solve_inside",
        "text": "bool: Flag indicating if solve inside is enabled.\nsolve_inside\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.solve_inside",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.solve_inside.html#ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.solve_inside",
        "title": "solve_inside > solve_inside > solve_inside",
        "section": "solve_inside > solve_inside",
        "text": "property SkinDepthMeshOperation.solve_inside\n\nbool: Flag indicating if solve inside is enabled.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.group",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.group.html#group",
        "title": "group",
        "section": "group",
        "text": "Group object.\ngroup\nGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.group",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.group.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.group",
        "title": "group > group > group",
        "section": "group > group",
        "text": "property ComponentGroup.group\n\nGroup object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.set_visible",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.set_visible.html#set_visible",
        "title": "set_visible",
        "section": "set_visible",
        "text": "Set visibility of an MCAD model part at a given index.\nIndex of the MCAD model part.\nset_visible\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.set_visible",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.set_visible.html#ansys.edb.core.layout.mcad_model.McadModel.set_visible",
        "title": "set_visible > set_visible > set_visible",
        "section": "set_visible > set_visible",
        "text": "McadModel.set_visible(index, visible)\n\nSet visibility of an MCAD model part at a given index.\n\nParameters\n\nindex\n\npython:int\n\nIndex of the MCAD model part.\n\nvisible\n\nbool\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.contains_net",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.contains_net.html#contains_net",
        "title": "contains_net",
        "section": "contains_net",
        "text": "Determine if a net exists in the net class.\nNet to search for.\nTrue if the net is in the net class, False otherwise.\ncontains_net\nNet\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.contains_net",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.contains_net.html#ansys.edb.core.net.net_class.NetClass.contains_net",
        "title": "contains_net > contains_net > contains_net",
        "section": "contains_net > contains_net",
        "text": "NetClass.contains_net(net)\n\nDetermine if a net exists in the net class.\n\nParameters\n\nnet\n\nNet\n\nNet to search for.\n\nReturns\n\nbool\n\nTrue if the net is in the net class, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackHoleRange.UNKNOWN_RANGE",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackHoleRange.UNKNOWN_RANGE.html#unknown_range",
        "title": "UNKNOWN_RANGE",
        "section": "UNKNOWN_RANGE",
        "text": "UNKNOWN_RANGE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackHoleRange.UNKNOWN_RANGE",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackHoleRange.UNKNOWN_RANGE.html#ansys.edb.core.definition.padstack_def_data.PadstackHoleRange.UNKNOWN_RANGE",
        "title": "UNKNOWN_RANGE > UNKNOWN_RANGE > UNKNOWN_RANGE",
        "section": "UNKNOWN_RANGE > UNKNOWN_RANGE",
        "text": "PadstackHoleRange.UNKNOWN_RANGE = 4\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.database.Database.find_by_id.html#find_by_id",
        "title": "find_by_id",
        "section": "find_by_id",
        "text": "Find a database by ID.\nUnique EDB ID for the database.\nDatabase when successful, Null when failed.\nfind_by_id\npython:int\nDatabase"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.database.Database.find_by_id.html#ansys.edb.core.database.Database.find_by_id",
        "title": "find_by_id > find_by_id > find_by_id",
        "section": "find_by_id > find_by_id",
        "text": "classmethod Database.find_by_id(db_id)\n\nFind a database by ID.\n\nParameters\n\ndb_id\n\npython:int\n\nUnique EDB ID for the database.\n\nReturns\n\nDatabase\n\nDatabase when successful, Null when failed.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.terminals",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.terminals.html#terminals",
        "title": "terminals",
        "section": "terminals",
        "text": "list of Terminal: All terminals grouped in the terminal.\nterminals\nlist"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.terminals",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.terminals.html#ansys.edb.core.terminal.terminals.BundleTerminal.terminals",
        "title": "terminals > terminals > terminals",
        "section": "terminals > terminals",
        "text": "property BundleTerminal.terminals\n\nlist of Terminal: All terminals grouped in the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.material_name",
        "href": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.material_name.html#material_name",
        "title": "material_name",
        "section": "material_name",
        "text": "str: Name of the solder ball material.\nmaterial_name\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.material_name",
        "href": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.material_name.html#ansys.edb.core.definition.solder_ball_property.SolderBallProperty.material_name",
        "title": "material_name > material_name > material_name",
        "section": "material_name > material_name",
        "text": "property SolderBallProperty.material_name\n\nstr: Name of the solder ball material.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.package_def",
        "href": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.package_def.html#package_def",
        "title": "package_def",
        "section": "package_def",
        "text": "PackageDef: Package definition object.\npackage_def\nPackageDef"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.package_def",
        "href": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.package_def.html#ansys.edb.core.definition.io_component_property.IOComponentProperty.package_def",
        "title": "package_def > package_def > package_def",
        "section": "package_def > package_def",
        "text": "property IOComponentProperty.package_def\n\nPackageDef: Package definition object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.html#layoutinstancecontext",
        "title": "LayoutInstanceContext",
        "section": "LayoutInstanceContext",
        "text": "Represents the layout instance context object.\nLayoutInstanceContext.get_bbox(local)\nGet the bounding box of the context.\nLayoutInstanceContext.get_is_3d_placement(local)\nDetermine if the context has 3D placement enabled.\nLayoutInstanceContext.id\nint: Unique ID of the EDB object.\nLayoutInstanceContext.is_null\nbool: Flag indicating if the object exists in the database.\nLayoutInstanceContext.is_top_or_black_box\nbool: Flag indicating if this is a top-level or blackbox context.\nLayoutInstanceContext.layout\nLayout: Layout of the context.\nLayoutInstanceContext.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nLayoutInstanceContext.placement_elevation\nfloat: Placement elevation of the context.\nLayoutInstanceContext.top_or_black_box\nLayoutInstanceContext: Top-level or blackbox context instance.\nLayoutInstanceContext\nLayoutInstanceContext.get_bbox\nLayoutInstanceContext.get_is_3d_placement\nLayoutInstanceContext.id\nint\nLayoutInstanceContext.is_null\nbool\nLayoutInstanceContext.is_top_or_black_box\nbool\nLayoutInstanceContext.layout\nLayout\nLayoutInstanceContext.msg\nEDBObjMessage\nLayoutInstanceContext.placement_elevation\nfloat\nLayoutInstanceContext.top_or_black_box\nLayoutInstanceContext\ncontext"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.html#ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext",
        "title": "LayoutInstanceContext > LayoutInstanceContext > LayoutInstanceContext",
        "section": "LayoutInstanceContext > LayoutInstanceContext",
        "text": "class ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext(msg)\n\nRepresents the layout instance context object.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nLayoutInstanceContext.get_bbox(local)\n\nGet the bounding box of the context.\n\nLayoutInstanceContext.get_is_3d_placement(local)\n\nDetermine if the context has 3D placement enabled.\n\n\n\nAttributes\n\n\n\n\n\n\n\nLayoutInstanceContext.id\n\nint: Unique ID of the EDB object.\n\nLayoutInstanceContext.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nLayoutInstanceContext.is_top_or_black_box\n\nbool: Flag indicating if this is a top-level or blackbox context.\n\nLayoutInstanceContext.layout\n\nLayout: Layout of the context.\n\nLayoutInstanceContext.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nLayoutInstanceContext.placement_elevation\n\nfloat: Placement elevation of the context.\n\nLayoutInstanceContext.top_or_black_box\n\nLayoutInstanceContext: Top-level or blackbox context instance.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.position",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.position.html#position",
        "title": "position",
        "section": "position",
        "text": "int: Position of the simulation in the setup order.\nposition\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.position",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.position.html#ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.position",
        "title": "position > position > position",
        "section": "position > position",
        "text": "property SIWaveDCIRSimulationSetup.position\n\nint: Position of the simulation in the setup order.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_void",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_void.html#is_void",
        "title": "is_void",
        "section": "is_void",
        "text": "bool: Flag indicating if a primitive is a void.\nis_void\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_void",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.is_void.html#ansys.edb.core.primitive.primitive.Path.is_void",
        "title": "is_void > is_void > is_void",
        "section": "is_void > is_void",
        "text": "property Path.is_void\n\nbool: Flag indicating if a primitive is a void.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackHoleRange.BEGIN_ON_UPPER_PAD",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackHoleRange.BEGIN_ON_UPPER_PAD.html#begin_on_upper_pad",
        "title": "BEGIN_ON_UPPER_PAD",
        "section": "BEGIN_ON_UPPER_PAD",
        "text": "BEGIN_ON_UPPER_PAD"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackHoleRange.BEGIN_ON_UPPER_PAD",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackHoleRange.BEGIN_ON_UPPER_PAD.html#ansys.edb.core.definition.padstack_def_data.PadstackHoleRange.BEGIN_ON_UPPER_PAD",
        "title": "BEGIN_ON_UPPER_PAD > BEGIN_ON_UPPER_PAD > BEGIN_ON_UPPER_PAD",
        "section": "BEGIN_ON_UPPER_PAD > BEGIN_ON_UPPER_PAD",
        "text": "PadstackHoleRange.BEGIN_ON_UPPER_PAD = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.set_material",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.set_material.html#set_material",
        "title": "set_material",
        "section": "set_material",
        "text": "Set the name of the material of the layer.\nNew name of the material.\nset_material\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.set_material",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.set_material.html#ansys.edb.core.layer.stackup_layer.StackupLayer.set_material",
        "title": "set_material > set_material > set_material",
        "section": "set_material > set_material",
        "text": "StackupLayer.set_material(material_name)\n\nSet the name of the material of the layer.\n\nParameters\n\nmaterial_name\n\npython:str\n\nNew name of the material.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDs given a product ID for the layout object.\nID representing a product that supports the EDB.\nAll user-defined attribute IDs for properties stored in the object\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.get_product_property_ids.html#ansys.edb.core.hierarchy.structure3d.Structure3D.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "Structure3D.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nReturns\n\npython:list[python:int]\n\nAll user-defined attribute IDs for properties stored in the object\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.is_circle",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.is_circle.html#is_circle",
        "title": "is_circle",
        "section": "is_circle",
        "text": "Determine whether the outer contour of the polygon is a circle.\nTrue when the outer contour of the polygon is a circle holes, False otherwise.\nis_circle\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.is_circle",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.is_circle.html#ansys.edb.core.geometry.polygon_data.PolygonData.is_circle",
        "title": "is_circle > is_circle > is_circle",
        "section": "is_circle > is_circle",
        "text": "PolygonData.is_circle()\n\nDetermine whether the outer contour of the polygon is a circle.\n\nReturns\n\nbool\n\nTrue when the outer contour of the polygon is a circle holes, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.edb_uid.html#edb_uid",
        "title": "edb_uid",
        "section": "edb_uid",
        "text": "int: Unique, persistent ID for the Connectable object.\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\nThis property is read-only.\nedb_uid\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.edb_uid.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.edb_uid",
        "title": "edb_uid > edb_uid > edb_uid",
        "section": "edb_uid > edb_uid",
        "text": "property VoltageRegulator.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_POLYGON",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_POLYGON.html#padgeomtype_polygon",
        "title": "PADGEOMTYPE_POLYGON",
        "section": "PADGEOMTYPE_POLYGON",
        "text": "PADGEOMTYPE_POLYGON"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_POLYGON",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_POLYGON.html#ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_POLYGON",
        "title": "PADGEOMTYPE_POLYGON > PADGEOMTYPE_POLYGON > PADGEOMTYPE_POLYGON",
        "section": "PADGEOMTYPE_POLYGON > PADGEOMTYPE_POLYGON",
        "text": "PadGeometryType.PADGEOMTYPE_POLYGON = 7\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_null",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_null",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_null.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property TerminalInstanceTerminal.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_lde",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_lde.html#use_lde",
        "title": "use_lde",
        "section": "use_lde",
        "text": "bool: Flag indicating if variations in resistivity are taken into account.\nuse_lde\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_lde",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_lde.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_lde",
        "title": "use_lde > use_lde > use_lde",
        "section": "use_lde > use_lde",
        "text": "property RaptorXAdvancedSettings.use_lde\n\nbool: Flag indicating if variations in resistivity are taken into account.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.refine_inside",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.refine_inside.html#refine_inside",
        "title": "refine_inside",
        "section": "refine_inside",
        "text": "bool: Flag indicating if refining inside is enabled.\nrefine_inside\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.refine_inside",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.refine_inside.html#ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.refine_inside",
        "title": "refine_inside > refine_inside > refine_inside",
        "section": "refine_inside > refine_inside",
        "text": "property LengthMeshOperation.refine_inside\n\nbool: Flag indicating if refining inside is enabled.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.mesh_frequency",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.mesh_frequency.html#mesh_frequency",
        "title": "mesh_frequency",
        "section": "mesh_frequency",
        "text": "str: Mesh frequency override.\nmesh_frequency\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.mesh_frequency",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.mesh_frequency.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.mesh_frequency",
        "title": "mesh_frequency > mesh_frequency > mesh_frequency",
        "section": "mesh_frequency > mesh_frequency",
        "text": "property RaptorXAdvancedSettings.mesh_frequency\n\nstr: Mesh frequency override.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings.use_arc_chord_error_approx",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings.use_arc_chord_error_approx.html#use_arc_chord_error_approx",
        "title": "use_arc_chord_error_approx",
        "section": "use_arc_chord_error_approx",
        "text": "bool: Flag indicating if arc chord error approximation is used.\nuse_arc_chord_error_approx\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings.use_arc_chord_error_approx",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings.use_arc_chord_error_approx.html#ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings.use_arc_chord_error_approx",
        "title": "use_arc_chord_error_approx > use_arc_chord_error_approx > use_arc_chord_error_approx",
        "section": "use_arc_chord_error_approx > use_arc_chord_error_approx",
        "text": "property AdvancedMeshingSettings.use_arc_chord_error_approx\n\nbool: Flag indicating if arc chord error approximation is used.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.arc_to_chord_error",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.arc_to_chord_error.html#arc_to_chord_error",
        "title": "arc_to_chord_error",
        "section": "arc_to_chord_error",
        "text": "str: Maximum allowable arc to chord error.\narc_to_chord_error\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.arc_to_chord_error",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.arc_to_chord_error.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.arc_to_chord_error",
        "title": "arc_to_chord_error > arc_to_chord_error > arc_to_chord_error",
        "section": "arc_to_chord_error > arc_to_chord_error",
        "text": "property HFSSAdvancedMeshingSettings.arc_to_chord_error\n\nstr: Maximum allowable arc to chord error.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.heat_sink",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.heat_sink.html#heat_sink",
        "title": "heat_sink",
        "section": "heat_sink",
        "text": "HeatSink: Heat sink model assigned to the package.\nheat_sink\nHeatSink"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.heat_sink",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.heat_sink.html#ansys.edb.core.definition.package_def.PackageDef.heat_sink",
        "title": "heat_sink > heat_sink > heat_sink",
        "section": "heat_sink > heat_sink",
        "text": "property PackageDef.heat_sink\n\nHeatSink: Heat sink model assigned to the package.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.Distribution.OCT",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.Distribution.OCT.html#oct",
        "title": "OCT",
        "section": "OCT",
        "text": "OCT"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.Distribution.OCT",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.Distribution.OCT.html#ansys.edb.core.simulation_setup.simulation_setup.Distribution.OCT",
        "title": "OCT > OCT > OCT",
        "section": "OCT > OCT",
        "text": "Distribution.OCT = 'OCT'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.find_by_name",
        "href": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.find_by_name.html#find_by_name",
        "title": "find_by_name",
        "section": "find_by_name",
        "text": "Find a dataset definition by name in a given database.\nDatabase to search for the dataset definition.\nName of the dataset definition.\nDataset definition object found.\nIf a dataset isn’t found, the dataset’s is_null attribute is set to True.\nfind_by_name\nDatabase\nstr\nDatasetDef\nis_null\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.find_by_name",
        "href": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.find_by_name.html#ansys.edb.core.definition.dataset_def.DatasetDef.find_by_name",
        "title": "find_by_name > find_by_name > find_by_name",
        "section": "find_by_name > find_by_name",
        "text": "classmethod DatasetDef.find_by_name(database, name)\n\nFind a dataset definition by name in a given database.\n\nParameters\n\ndatabase\n\nDatabase\n\nDatabase to search for the dataset definition.\n\nname\n\nstr\n\nName of the dataset definition.\n\nReturns\n\nDatasetDef\n\nDataset definition object found.\nIf a dataset isn’t found, the dataset’s is_null attribute is set to True.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.obj_type.html#obj_type",
        "title": "obj_type",
        "section": "obj_type",
        "text": "LayoutObjType: Layout object type.\nThis property is read-only.\nobj_type\nLayoutObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.obj_type.html#ansys.edb.core.primitive.primitive.Primitive.obj_type",
        "title": "obj_type > obj_type > obj_type",
        "section": "obj_type > obj_type",
        "text": "property Primitive.obj_type\n\nLayoutObjType: Layout object type.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.net",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.net.html#net",
        "title": "net",
        "section": "net",
        "text": "Net: Net of the Connectable object.\nThis property can be set with a Net instance, a string, or None.\nnet\nNet\nNet\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.net",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.net.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.net",
        "title": "net > net > net",
        "section": "net > net",
        "text": "property TerminalInstanceTerminal.net\n\nNet: Net of the Connectable object.\n\nThis property can be set with a Net instance, a string, or None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.reference_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.reference_terminal.html#reference_terminal",
        "title": "reference_terminal",
        "section": "reference_terminal",
        "text": "Terminal: Terminal that the terminal references, if any.\nreference_terminal\nTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.reference_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.reference_terminal.html#ansys.edb.core.terminal.terminals.PointTerminal.reference_terminal",
        "title": "reference_terminal > reference_terminal > reference_terminal",
        "section": "reference_terminal > reference_terminal",
        "text": "property PointTerminal.reference_terminal\n\nTerminal: Terminal that the terminal references, if any.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.is_power_ground",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.is_power_ground.html#is_power_ground",
        "title": "is_power_ground",
        "section": "is_power_ground",
        "text": "bool: Flag indicating in the net class belongs to the power/ground             NetClass class.\nThis property is read-only.\nis_power_ground\nbool\nNetClass"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.is_power_ground",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.is_power_ground.html#ansys.edb.core.net.net_class.NetClass.is_power_ground",
        "title": "is_power_ground > is_power_ground > is_power_ground",
        "section": "is_power_ground > is_power_ground",
        "text": "property NetClass.is_power_ground\n\nbool: Flag indicating in the net class belongs to the power/ground             NetClass class.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.layout_obj_type.html#layout_obj_type",
        "title": "layout_obj_type",
        "section": "layout_obj_type",
        "text": "layout_obj_type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.layout_obj_type.html#ansys.edb.core.terminal.terminals.BundleTerminal.layout_obj_type",
        "title": "layout_obj_type > layout_obj_type > layout_obj_type",
        "section": "layout_obj_type > layout_obj_type",
        "text": "BundleTerminal.layout_obj_type = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.create",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a padstack edge.\ncreate\nPadstackInstance\nLayer\nstr\nArcData\nPadEdge"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.create",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.create.html#ansys.edb.core.terminal.terminals.PadEdge.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod PadEdge.create(padstack_instance, layer, arc)\n\nCreate a padstack edge.\n\nParameters\n\npadstack_instance\n\nPadstackInstance\n\n\n\nlayer\n\nLayer or str\n\n\n\narc\n\nArcData\n\n\n\nReturns\n\nPadEdge\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.ThermalModifier",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.ThermalModifier.html#thermalmodifier",
        "title": "ThermalModifier",
        "section": "ThermalModifier",
        "text": "Represents a thermal modifier model.\nThermalModifier.id\nint: Unique ID of the EDB object.\nThermalModifier.is_null\nbool: Flag indicating if the object exists in the database.\nThermalModifier.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nThermalModifier\nThermalModifier.id\nint\nThermalModifier.is_null\nbool\nThermalModifier.msg\nEDBObjMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.ThermalModifier",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.ThermalModifier.html#ansys.edb.core.definition.material_def.ThermalModifier",
        "title": "ThermalModifier > ThermalModifier > ThermalModifier",
        "section": "ThermalModifier > ThermalModifier",
        "text": "class ansys.edb.core.definition.material_def.ThermalModifier(msg)\n\nRepresents a thermal modifier model.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nThermalModifier.id\n\nint: Unique ID of the EDB object.\n\nThermalModifier.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThermalModifier.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.delete_variable",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.delete_variable.html#delete_variable",
        "title": "delete_variable",
        "section": "delete_variable",
        "text": "Delete a variable.\nVariable name.\ndelete_variable\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.delete_variable",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.delete_variable.html#ansys.edb.core.layout.cell.Cell.delete_variable",
        "title": "delete_variable > delete_variable > delete_variable",
        "section": "delete_variable > delete_variable",
        "text": "Cell.delete_variable(name)\n\nDelete a variable.\n\nParameters\n\nname\n\npython:str\n\nVariable name.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty.clone",
        "href": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Clone a die property.\nDie property cloned.\nclone\nDieProperty"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty.clone",
        "href": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty.clone.html#ansys.edb.core.definition.die_property.DieProperty.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "DieProperty.clone()\n\nClone a die property.\n\nReturns\n\nDieProperty\n\nDie property cloned.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.edb_uid.html#edb_uid",
        "title": "edb_uid",
        "section": "edb_uid",
        "text": "int: Unique, persistent ID for the Connectable object.\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\nThis property is read-only.\nedb_uid\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.edb_uid.html#ansys.edb.core.primitive.primitive.PadstackInstance.edb_uid",
        "title": "edb_uid > edb_uid > edb_uid",
        "section": "edb_uid > edb_uid",
        "text": "property PadstackInstance.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.via_model_type",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.via_model_type.html#via_model_type",
        "title": "via_model_type",
        "section": "via_model_type",
        "text": "ViaStyle: Via model type.\nvia_model_type\nViaStyle"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.via_model_type",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.via_model_type.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.via_model_type",
        "title": "via_model_type > via_model_type > via_model_type",
        "section": "via_model_type > via_model_type",
        "text": "property HFSSAdvancedSettings.via_model_type\n\nViaStyle: Via model type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.add_menu_variable",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.add_menu_variable.html#add_menu_variable",
        "title": "add_menu_variable",
        "section": "add_menu_variable",
        "text": "Add a menu variable.\nVariable name.\nEach element can be any type that can be converted to a Value\ninstance.\nWhether the new variable is a parameter. The default is False, which means it is a local variable.\nIndex of the value that is initially selected.\nadd_menu_variable\npython:str\npython:list\npython:str\npython:int\npython:float\ncomplex\nValue\nValue\npython:False\nFalse\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.add_menu_variable",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.add_menu_variable.html#ansys.edb.core.layout.cell.Cell.add_menu_variable",
        "title": "add_menu_variable > add_menu_variable > add_menu_variable",
        "section": "add_menu_variable > add_menu_variable",
        "text": "Cell.add_menu_variable(name, values, is_param=False, index=0)\n\nAdd a menu variable.\n\nParameters\n\nname\n\npython:str\n\nVariable name.\n\nvalues\n\npython:list[python:str, python:int, python:float, complex, Value]\n\nEach element can be any type that can be converted to a Value\ninstance.\n\nis_param\n\nbool, default: python:False\n\nWhether the new variable is a parameter. The default is False, which means it is a local variable.\n\nindex\n\npython:int, default: 0\n\nIndex of the value that is initially selected.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_null",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_null",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_null.html#ansys.edb.core.terminal.terminals.PointTerminal.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property PointTerminal.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.create",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a polygon.\nLayout to create the polygon in.\nLayer to place the polygon on.\nNet of the polygon.\nOuter contour of the polygon.\nPolygon created.\ncreate\nLayout\npython:str\nLayer\npython:str\nNet\npython:None\nPolygonData\nPolygon"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.create",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.create.html#ansys.edb.core.primitive.primitive.Polygon.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod Polygon.create(layout, layer, net, polygon_data)\n\nCreate a polygon.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to create the polygon in.\n\nlayer\n\npython:str or Layer\n\nLayer to place the polygon on.\n\nnet\n\npython:str or Net or python:None\n\nNet of the polygon.\n\npolygon_data\n\nPolygonData\n\nOuter contour of the polygon.\n\nReturns\n\nPolygon\n\nPolygon created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.delete",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the layout object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.delete",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.delete.html#ansys.edb.core.primitive.primitive.Path.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "Path.delete()\n\nDelete the layout object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.create_stride",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.create_stride.html#create_stride",
        "title": "create_stride",
        "section": "create_stride",
        "text": "Create a Stride model from an MCAD file.\nStride model created.\ncreate_stride\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.create_stride",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.create_stride.html#ansys.edb.core.hierarchy.structure3d.Structure3D.create_stride",
        "title": "create_stride > create_stride > create_stride",
        "section": "create_stride > create_stride",
        "text": "Structure3D.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nReturns\n\nMcadModel\n\nStride model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.ungroup",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.ungroup.html#ungroup",
        "title": "ungroup",
        "section": "ungroup",
        "text": "Dissolve the group.\nWhether all containing groups should also be resolved.\nungroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.ungroup",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.ungroup.html#ansys.edb.core.hierarchy.structure3d.Structure3D.ungroup",
        "title": "ungroup > ungroup > ungroup",
        "section": "ungroup > ungroup",
        "text": "Structure3D.ungroup(recursive)\n\nDissolve the group.\n\nParameters\n\nrecursive\n\nbool\n\nWhether all containing groups should also be resolved.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.create",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a net.\nLayout to create the net class in.\nName of the net.\nNet class created.\ncreate\nLayout\npython:str\nNetClass"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.create",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.create.html#ansys.edb.core.net.net_class.NetClass.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod NetClass.create(layout, name)\n\nCreate a net.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to create the net class in.\n\nname\n\npython:str\n\nName of the net.\n\nReturns\n\nNetClass\n\nNet class created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.port_reference_terminals_connected",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.port_reference_terminals_connected.html#port_reference_terminals_connected",
        "title": "port_reference_terminals_connected",
        "section": "port_reference_terminals_connected",
        "text": "bool: Flag indicating if port reference terminals are connected.\nThis property applies to lumped ports and circuit ports. It is True if\nport terminals are connected, False otherwise.\nThis property is read-only.\nport_reference_terminals_connected\nbool\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.port_reference_terminals_connected",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.port_reference_terminals_connected.html#ansys.edb.core.layout.layout.Layout.port_reference_terminals_connected",
        "title": "port_reference_terminals_connected > port_reference_terminals_connected > port_reference_terminals_connected",
        "section": "port_reference_terminals_connected > port_reference_terminals_connected",
        "text": "property Layout.port_reference_terminals_connected\n\nbool: Flag indicating if port reference terminals are connected.\n\nThis property applies to lumped ports and circuit ports. It is True if\nport terminals are connected, False otherwise.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.thin_signal_layer_threshold",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.thin_signal_layer_threshold.html#thin_signal_layer_threshold",
        "title": "thin_signal_layer_threshold",
        "section": "thin_signal_layer_threshold",
        "text": "str: Value below which signal layers are considered to have zero thickness.\nthin_signal_layer_threshold\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.thin_signal_layer_threshold",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.thin_signal_layer_threshold.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.thin_signal_layer_threshold",
        "title": "thin_signal_layer_threshold > thin_signal_layer_threshold > thin_signal_layer_threshold",
        "section": "thin_signal_layer_threshold > thin_signal_layer_threshold",
        "text": "property HFSSSolverSettings.thin_signal_layer_threshold\n\nstr: Value below which signal layers are considered to have zero thickness.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.get_variable_value",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.get_variable_value.html#get_variable_value",
        "title": "get_variable_value",
        "section": "get_variable_value",
        "text": "Get the value for a given variable.\nVariable name.\nVariable value.\nget_variable_value\npython:str\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.get_variable_value",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.get_variable_value.html#ansys.edb.core.layout.cell.Cell.get_variable_value",
        "title": "get_variable_value > get_variable_value > get_variable_value",
        "section": "get_variable_value > get_variable_value",
        "text": "Cell.get_variable_value(name)\n\nGet the value for a given variable.\n\nParameters\n\nname\n\npython:str\n\nVariable name.\n\nReturns\n\nValue\n\nVariable value.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.save_rad_fields_only",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.save_rad_fields_only.html#save_rad_fields_only",
        "title": "save_rad_fields_only",
        "section": "save_rad_fields_only",
        "text": "bool: Flag indicating if only radiated field data is to be saved during the simulation.\nsave_rad_fields_only\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.save_rad_fields_only",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.save_rad_fields_only.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.save_rad_fields_only",
        "title": "save_rad_fields_only > save_rad_fields_only > save_rad_fields_only",
        "section": "save_rad_fields_only > save_rad_fields_only",
        "text": "property HFSSGeneralSettings.save_rad_fields_only\n\nbool: Flag indicating if only radiated field data is to be saved during the simulation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier",
        "href": "api/_autosummary/ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier.html#materialpropertythermalmodifier",
        "title": "MaterialPropertyThermalModifier",
        "section": "MaterialPropertyThermalModifier",
        "text": "Representing material property thermal modifiers.\nMaterialPropertyThermalModifier.create([...])\nCreate a material property thermal modifier.\nMaterialPropertyThermalModifier.expression\nValue: Expression value representing the thermal modifier.\nMaterialPropertyThermalModifier.id\nint: Unique ID of the EDB object.\nMaterialPropertyThermalModifier.is_null\nbool: Flag indicating if the object exists in the database.\nMaterialPropertyThermalModifier.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nMaterialPropertyThermalModifier.quadratic_model_params\nBasicQuadraticParams, AdvancedQuadraticParams:         Quadratic model parameters of the thermal modifier.\nMaterialPropertyThermalModifier\nMaterialPropertyThermalModifier.create\nMaterialPropertyThermalModifier.expression\nValue\nMaterialPropertyThermalModifier.id\nint\nMaterialPropertyThermalModifier.is_null\nbool\nMaterialPropertyThermalModifier.msg\nEDBObjMessage\nMaterialPropertyThermalModifier.quadratic_model_params\nBasicQuadraticParams\nAdvancedQuadraticParams"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier",
        "href": "api/_autosummary/ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier.html#ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier",
        "title": "MaterialPropertyThermalModifier > MaterialPropertyThermalModifier > MaterialPropertyThermalModifier",
        "section": "MaterialPropertyThermalModifier > MaterialPropertyThermalModifier",
        "text": "class ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier(msg)\n\nRepresenting material property thermal modifiers.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nMaterialPropertyThermalModifier.create([...])\n\nCreate a material property thermal modifier.\n\n\n\nAttributes\n\n\n\n\n\n\n\nMaterialPropertyThermalModifier.expression\n\nValue: Expression value representing the thermal modifier.\n\nMaterialPropertyThermalModifier.id\n\nint: Unique ID of the EDB object.\n\nMaterialPropertyThermalModifier.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nMaterialPropertyThermalModifier.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nMaterialPropertyThermalModifier.quadratic_model_params\n\nBasicQuadraticParams, AdvancedQuadraticParams:         Quadratic model parameters of the thermal modifier.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_zone_primitive.html#is_zone_primitive",
        "title": "is_zone_primitive",
        "section": "is_zone_primitive",
        "text": "bool: Flag indicating if the primitive object is a zone.\nThis property is read-only.\nis_zone_primitive\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.is_zone_primitive.html#ansys.edb.core.primitive.primitive.BoardBendDef.is_zone_primitive",
        "title": "is_zone_primitive > is_zone_primitive > is_zone_primitive",
        "section": "is_zone_primitive > is_zone_primitive",
        "text": "property BoardBendDef.is_zone_primitive\n\nbool: Flag indicating if the primitive object is a zone.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.HfssPIType.LUMPED",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.HfssPIType.LUMPED.html#lumped",
        "title": "LUMPED",
        "section": "LUMPED",
        "text": "LUMPED"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.HfssPIType.LUMPED",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.HfssPIType.LUMPED.html#ansys.edb.core.terminal.terminals.HfssPIType.LUMPED",
        "title": "LUMPED > LUMPED > LUMPED",
        "section": "LUMPED > LUMPED",
        "text": "HfssPIType.LUMPED = 4\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_inf_gnd",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_inf_gnd.html#include_inf_gnd",
        "title": "include_inf_gnd",
        "section": "include_inf_gnd",
        "text": "bool: Flag indicating if an infinite ground plane is included.\ninclude_inf_gnd\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_inf_gnd",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_inf_gnd.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_inf_gnd",
        "title": "include_inf_gnd > include_inf_gnd > include_inf_gnd",
        "section": "include_inf_gnd > include_inf_gnd",
        "text": "property SIWaveAdvancedSettings.include_inf_gnd\n\nbool: Flag indicating if an infinite ground plane is included.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.msg",
        "href": "api/_autosummary/ansys.edb.core.database.Database.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.msg",
        "href": "api/_autosummary/ansys.edb.core.database.Database.msg.html#ansys.edb.core.database.Database.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property Database.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.delete_simulation_setup",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.delete_simulation_setup.html#delete_simulation_setup",
        "title": "delete_simulation_setup",
        "section": "delete_simulation_setup",
        "text": "Delete a simulation setup by name.\nName of the setup.\ndelete_simulation_setup\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.delete_simulation_setup",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.delete_simulation_setup.html#ansys.edb.core.layout.cell.Cell.delete_simulation_setup",
        "title": "delete_simulation_setup > delete_simulation_setup > delete_simulation_setup",
        "section": "delete_simulation_setup > delete_simulation_setup",
        "text": "Cell.delete_simulation_setup(name)\n\nDelete a simulation setup by name.\n\nParameters\n\nname\n\npython:str\n\nName of the setup.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.create",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a terminal instance terminal.\nLayout to create the terminal instance terminal in.\nTerminal instance to create the terminal instance terminal on.\nName of the terminal instance terminal.\nNet reference.\nWhether the terminal instance terminal is a reference terminal.\ncreate\nLayout\nTerminalInstance\nstr\nNet\nstr\npython:None\npython:False\nTerminalInstanceTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.create",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.create.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod TerminalInstanceTerminal.create(layout, term_instance, name, net_ref, is_ref=False)\n\nCreate a terminal instance terminal.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to create the terminal instance terminal in.\n\nterm_instance\n\nTerminalInstance\n\nTerminal instance to create the terminal instance terminal on.\n\nname\n\nstr\n\nName of the terminal instance terminal.\n\nnet_ref\n\nNet or str or python:None\n\nNet reference.\n\nis_ref\n\nbool, default: python:False\n\nWhether the terminal instance terminal is a reference terminal.\n\nReturns\n\nTerminalInstanceTerminal\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModelType.DEBYE",
        "href": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModelType.DEBYE.html#debye",
        "title": "DEBYE",
        "section": "DEBYE",
        "text": "DEBYE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModelType.DEBYE",
        "href": "api/_autosummary/ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModelType.DEBYE.html#ansys.edb.core.definition.dielectric_material_model.DielectricMaterialModelType.DEBYE",
        "title": "DEBYE > DEBYE > DEBYE",
        "section": "DEBYE > DEBYE",
        "text": "DielectricMaterialModelType.DEBYE = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballShape.SOLDERBALL_CYLINDER",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballShape.SOLDERBALL_CYLINDER.html#solderball_cylinder",
        "title": "SOLDERBALL_CYLINDER",
        "section": "SOLDERBALL_CYLINDER",
        "text": "SOLDERBALL_CYLINDER"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballShape.SOLDERBALL_CYLINDER",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballShape.SOLDERBALL_CYLINDER.html#ansys.edb.core.definition.padstack_def_data.SolderballShape.SOLDERBALL_CYLINDER",
        "title": "SOLDERBALL_CYLINDER > SOLDERBALL_CYLINDER > SOLDERBALL_CYLINDER",
        "section": "SOLDERBALL_CYLINDER > SOLDERBALL_CYLINDER",
        "text": "SolderballShape.SOLDERBALL_CYLINDER = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.NPortComponentModel.reference_file",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.NPortComponentModel.reference_file.html#reference_file",
        "title": "reference_file",
        "section": "reference_file",
        "text": "str: Name of the reference file associated with the component model.\nreference_file\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.NPortComponentModel.reference_file",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.NPortComponentModel.reference_file.html#ansys.edb.core.definition.component_model.NPortComponentModel.reference_file",
        "title": "reference_file > reference_file > reference_file",
        "section": "reference_file > reference_file",
        "text": "property NPortComponentModel.reference_file\n\nstr: Name of the reference file associated with the component model.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.id",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.id",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.id.html#ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property LayoutObjInstance.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.owner",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.owner.html#owner",
        "title": "owner",
        "section": "owner",
        "text": "Primitive: Owner of the primitive object.\nThis property is read-only.\nowner\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.owner",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.owner.html#ansys.edb.core.primitive.primitive.Polygon.owner",
        "title": "owner > owner > owner",
        "section": "owner > owner",
        "text": "property Polygon.owner\n\nPrimitive: Owner of the primitive object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.component_pin.ComponentPin.is_null.html#ansys.edb.core.definition.component_pin.ComponentPin.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property ComponentPin.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.id.html#ansys.edb.core.terminal.terminals.EdgeTerminal.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property EdgeTerminal.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.term_to_ground",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.term_to_ground.html#term_to_ground",
        "title": "term_to_ground",
        "section": "term_to_ground",
        "text": "SourceTermToGroundType: Source terminal-to-ground type.\nterm_to_ground\nSourceTermToGroundType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.term_to_ground",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.term_to_ground.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.term_to_ground",
        "title": "term_to_ground > term_to_ground > term_to_ground",
        "section": "term_to_ground > term_to_ground",
        "text": "property PinGroupTerminal.term_to_ground\n\nSourceTermToGroundType: Source terminal-to-ground type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.obj_type.html#obj_type",
        "title": "obj_type",
        "section": "obj_type",
        "text": "LayoutObjType: Layout object type.\nThis property is read-only.\nobj_type\nLayoutObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.obj_type.html#ansys.edb.core.primitive.primitive.Path.obj_type",
        "title": "obj_type > obj_type > obj_type",
        "section": "obj_type > obj_type",
        "text": "property Path.obj_type\n\nLayoutObjType: Layout object type.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.is_null.html#ansys.edb.core.definition.solder_ball_property.SolderBallProperty.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property SolderBallProperty.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the property.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.set_product_property.html#ansys.edb.core.terminal.terminals.Terminal.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "Terminal.set_product_property(prod_id, attr_id, prop_value)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nprop_value\n\npython:str\n\nString stored in the property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "index",
        "href": "index.html#pyedb-core-documentation-0110",
        "title": "PyEDB-Core documentation 0.1.10",
        "section": "PyEDB-Core documentation 0.1.10",
        "text": "PyEDB-Core is a Python client for the Electronics Database (EDB), a format for storing\ninformation describing designs for Ansys Electronic Desktop (AEDT). Using the PyEDB-Core API,\nyou can make calls to an EDB server that is running either locally or remotely.\nThe EDB server can create, edit, read, and write EDB files to disk. These files can then be\nread into AEDT and their designs simulated.\nPyEDB-Core documentation 0.1.10"
    },
    {
        "objectID": "index",
        "href": "index.html#documentation-and-issues",
        "title": "PyEDB-Core documentation 0.1.10 > Documentation and issues",
        "section": "Documentation and issues",
        "text": "Documentation for the latest stable release of PyEDB-Core is hosted at\nPyEDB-Core documentation.\nThe documentation has five sections:\nGetting started: Describes\nhow to install PyEDB-Core in user mode.\nUser guide: Describes how to\nuse PyEDB-Core.\nAPI reference: Provides API member descriptions\nand usage examples.\nExamples: Provides examples showing\nend-to-end workflows for using PyEDB-Core.\nContribute: Describes how to install\nPyEDB-Core in developer mode and how to contribute to this PyAnsys library.\nIn the upper right corner of the documentation’s title bar, there is an option for switching from\nviewing the documentation for the latest stable release to viewing the documentation for the\ndevelopment version or previously released versions.\nOn the PyEDB-Core Issues page, you can create\nissues to report bugs and request new features. When possible, use these issue templates:\nBug report template\nFeature request template\nDocumentation issue template\nExample request template\nIf your issue does not fit into one of these categories, create your own issue.\nOn the Discussions page on the Ansys Developer portal, you can post questions,\nshare ideas, and get community feedback.\nTo reach the PyAnsys support team, email pyansys.core@ansys.com.\nDocumentation and issues"
    },
    {
        "objectID": "index",
        "href": "index.html#license",
        "title": "PyEDB-Core documentation 0.1.10 > License",
        "section": "License",
        "text": "PyEDB-Core is licensed under the MIT license.\nPyEDB-Core makes no commercial claim over Ansys whatsoever. The use of this Python client requires\na legally licensed copy of AEDT. For more information, see the\nAnsys Electronics page on the Ansys website.\nLicense"
    },
    {
        "objectID": "index",
        "href": "index.html#indices-and-tables",
        "title": "PyEDB-Core documentation 0.1.10 > Indices and tables",
        "section": "Indices and tables",
        "text": "genindex\nsearch\nIndices and tables"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.save_netlist",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.save_netlist.html#save_netlist",
        "title": "save_netlist",
        "section": "save_netlist",
        "text": "bool: Flag indicating if the netlist output is saved.\nsave_netlist\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.save_netlist",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.save_netlist.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXGeneralSettings.save_netlist",
        "title": "save_netlist > save_netlist > save_netlist",
        "section": "save_netlist > save_netlist",
        "text": "property RaptorXGeneralSettings.save_netlist\n\nbool: Flag indicating if the netlist output is saved.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerTypeSet.SIGNAL_LAYER_SET",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerTypeSet.SIGNAL_LAYER_SET.html#signal_layer_set",
        "title": "SIGNAL_LAYER_SET",
        "section": "SIGNAL_LAYER_SET",
        "text": "SIGNAL_LAYER_SET"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerTypeSet.SIGNAL_LAYER_SET",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerTypeSet.SIGNAL_LAYER_SET.html#ansys.edb.core.layer.layer_collection.LayerTypeSet.SIGNAL_LAYER_SET",
        "title": "SIGNAL_LAYER_SET > SIGNAL_LAYER_SET > SIGNAL_LAYER_SET",
        "section": "SIGNAL_LAYER_SET > SIGNAL_LAYER_SET",
        "text": "LayerTypeSet.SIGNAL_LAYER_SET = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.SOLDER_MASK_LAYER",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.SOLDER_MASK_LAYER.html#solder_mask_layer",
        "title": "SOLDER_MASK_LAYER",
        "section": "SOLDER_MASK_LAYER",
        "text": "SOLDER_MASK_LAYER"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.SOLDER_MASK_LAYER",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.SOLDER_MASK_LAYER.html#ansys.edb.core.layer.layer_collection.LayerType.SOLDER_MASK_LAYER",
        "title": "SOLDER_MASK_LAYER > SOLDER_MASK_LAYER > SOLDER_MASK_LAYER",
        "section": "SOLDER_MASK_LAYER > SOLDER_MASK_LAYER",
        "text": "LayerType.SOLDER_MASK_LAYER = 10\n\n"
    },
    {
        "objectID": "api/layer",
        "href": "api/layer.html#layers",
        "title": "Layers",
        "section": "Layers",
        "text": "Layers"
    },
    {
        "objectID": "api/layer",
        "href": "api/layer.html#classes",
        "title": "Layers > Classes",
        "section": "Classes",
        "text": "layer.Layer(msg)\nProvides the base class representing a layer.\nstackup_layer.StackupLayer(msg)\nRepresents a stackup layer.\nvia_layer.ViaLayer(msg)\nRepresents a via layer.\nlayer_collection.LayerCollection(msg)\nRepresents a layer collection.\nClasses\nlayer.Layer\nstackup_layer.StackupLayer\nvia_layer.ViaLayer\nlayer_collection.LayerCollection"
    },
    {
        "objectID": "api/layer",
        "href": "api/layer.html#enums",
        "title": "Layers > Enums",
        "section": "Enums",
        "text": "layer_collection.LayerType(value)\nProvides an enum representing the types of layers.\nlayer.TopBottomAssociation(value)\nProvides an enum representing the top-bottom association of layers.\nlayer.DrawOverride(value)\nProvides an enum representing draw override options for layers.\nlayer.LayerVisibility(value)\nProvides an enum representing visibility options for layers.\nstackup_layer.DCThicknessType(value)\nProvides an enum representing DC thickness types of stackup layers.\nstackup_layer.RoughnessRegion(value)\nProvides an enum representing regions for roughness models of stackup layers.\nlayer_collection.LayerCollectionMode(value)\nProvides an enum representing possible modes of the layer collection.\nlayer_collection.LayerTypeSet(value)\nProvides an enum representing layer type sets used for filtering layers.\nlayer_collection.DielectricMergingMethod(value)\nProvides an enum representing dielectric merging method options.\nEnums\nlayer_collection.LayerType\nlayer.TopBottomAssociation\nlayer.DrawOverride\nlayer.LayerVisibility\nstackup_layer.DCThicknessType\nstackup_layer.RoughnessRegion\nlayer_collection.LayerCollectionMode\nlayer_collection.LayerTypeSet\nlayer_collection.DielectricMergingMethod"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.closest_points",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.closest_points.html#closest_points",
        "title": "closest_points",
        "section": "closest_points",
        "text": "Get the closest points from this arc to another arc, and vice versa.\nOther arc.\nclosest_points\nArcData\npython:tuple\nPointData\nPointData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.closest_points",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.closest_points.html#ansys.edb.core.geometry.arc_data.ArcData.closest_points",
        "title": "closest_points > closest_points > closest_points",
        "section": "closest_points > closest_points",
        "text": "ArcData.closest_points(other)\n\nGet the closest points from this arc to another arc, and vice versa.\n\nParameters\n\nother\n\nArcData\n\nOther arc.\n\nReturns\n\npython:tuple[PointData, PointData]\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.is_null",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.is_null",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.is_null.html#ansys.edb.core.layer.via_layer.ViaLayer.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property ViaLayer.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior.html#sparamdcbehavior",
        "title": "SParamDCBehavior",
        "section": "SParamDCBehavior",
        "text": "Provides an enum representing s parameter DC behavior types.\nSParamDCBehavior.ZERO_DC\n\nSParamDCBehavior.SAME_DC\n\nSParamDCBehavior.LINEAR_DC\n\nSParamDCBehavior.CONSTANT_DC\n\nSParamDCBehavior.ONE_PORT_CAPACITOR_DC\n\nSParamDCBehavior.OPEN_DC\n\nSParamDCBehavior\nSParamDCBehavior.ZERO_DC\nSParamDCBehavior.SAME_DC\nSParamDCBehavior.LINEAR_DC\nSParamDCBehavior.CONSTANT_DC\nSParamDCBehavior.ONE_PORT_CAPACITOR_DC\nSParamDCBehavior.OPEN_DC"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior",
        "title": "SParamDCBehavior > SParamDCBehavior > SParamDCBehavior",
        "section": "SParamDCBehavior > SParamDCBehavior",
        "text": "class ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior(value)\n\nProvides an enum representing s parameter DC behavior types.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nSParamDCBehavior.ZERO_DC\n\n\n\nSParamDCBehavior.SAME_DC\n\n\n\nSParamDCBehavior.LINEAR_DC\n\n\n\nSParamDCBehavior.CONSTANT_DC\n\n\n\nSParamDCBehavior.ONE_PORT_CAPACITOR_DC\n\n\n\nSParamDCBehavior.OPEN_DC\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.create_stride",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.create_stride.html#create_stride",
        "title": "create_stride",
        "section": "create_stride",
        "text": "Create a Stride model from an MCAD file.\nStride model created.\ncreate_stride\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.create_stride",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.create_stride.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.create_stride",
        "title": "create_stride > create_stride > create_stride",
        "section": "create_stride > create_stride",
        "text": "ComponentGroup.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nReturns\n\nMcadModel\n\nStride model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.find_by_id.html#find_by_id",
        "title": "find_by_id",
        "section": "find_by_id",
        "text": "Find a Connectable object by database ID in a given layout.\nLayout to search for the Connectable object.\nDatabase ID.\nConnectable object with the given database ID.\nfind_by_id\nLayout\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.find_by_id.html#ansys.edb.core.primitive.primitive.Polygon.find_by_id",
        "title": "find_by_id > find_by_id > find_by_id",
        "section": "find_by_id > find_by_id",
        "text": "classmethod Polygon.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the Connectable object.\n\nuid\n\npython:int\n\nDatabase ID.\n\nReturns\n\nConnectable\n\nConnectable object with the given database ID.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.healing_option",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.healing_option.html#healing_option",
        "title": "healing_option",
        "section": "healing_option",
        "text": "int: Enable/disable healing of mis-aligned points and edges.\nhealing_option\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.healing_option",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.healing_option.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.healing_option",
        "title": "healing_option > healing_option > healing_option",
        "section": "healing_option > healing_option",
        "text": "property HFSSAdvancedSettings.healing_option\n\nint: Enable/disable healing of mis-aligned points and edges.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.set_material",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.set_material.html#set_material",
        "title": "set_material",
        "section": "set_material",
        "text": "Set the material of the bondwire.\nMaterial name.\nset_material\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.set_material",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.set_material.html#ansys.edb.core.primitive.primitive.Bondwire.set_material",
        "title": "set_material > set_material > set_material",
        "section": "set_material > set_material",
        "text": "Bondwire.set_material(material)\n\nSet the material of the bondwire.\n\nParameters\n\nmaterial\n\npython:str\n\nMaterial name.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.color",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.color.html#color",
        "title": "color",
        "section": "color",
        "text": "tuple[int, int, int]: Color of the layer in (R,G,B) format.\nTuple contains the color values in (R,G,B) format.\ncolor\ntuple\nint\nint\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.color",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.color.html#ansys.edb.core.layer.via_layer.ViaLayer.color",
        "title": "color > color > color",
        "section": "color > color",
        "text": "property ViaLayer.color\n\ntuple[int, int, int]: Color of the layer in (R,G,B) format.\n\nTuple contains the color values in (R,G,B) format.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.has_holes",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.has_holes.html#has_holes",
        "title": "has_holes",
        "section": "has_holes",
        "text": "Determine whether the polygon contains any holes.\nTrue when the polygon contains holes, False otherwise.\nhas_holes\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.has_holes",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.has_holes.html#ansys.edb.core.geometry.polygon_data.PolygonData.has_holes",
        "title": "has_holes > has_holes > has_holes",
        "section": "has_holes > has_holes",
        "text": "PolygonData.has_holes()\n\nDetermine whether the polygon contains any holes.\n\nReturns\n\nbool\n\nTrue when the polygon contains holes, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ViaStyle.NUM_VIA_STYLE",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ViaStyle.NUM_VIA_STYLE.html#num_via_style",
        "title": "NUM_VIA_STYLE",
        "section": "NUM_VIA_STYLE",
        "text": "NUM_VIA_STYLE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ViaStyle.NUM_VIA_STYLE",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ViaStyle.NUM_VIA_STYLE.html#ansys.edb.core.simulation_setup.simulation_settings.ViaStyle.NUM_VIA_STYLE",
        "title": "NUM_VIA_STYLE > NUM_VIA_STYLE > NUM_VIA_STYLE",
        "section": "NUM_VIA_STYLE > NUM_VIA_STYLE",
        "text": "ViaStyle.NUM_VIA_STYLE = 4\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.cast",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.cast.html#cast",
        "title": "cast",
        "section": "cast",
        "text": "Cast the layer object to the correct concrete type.\ncast\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.cast",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.cast.html#ansys.edb.core.layer.layer.Layer.cast",
        "title": "cast > cast > cast",
        "section": "cast > cast",
        "text": "Layer.cast()\n\nCast the layer object to the correct concrete type.\n\nReturns\n\nLayer\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PathEndCapType.INVALID",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PathEndCapType.INVALID.html#invalid",
        "title": "INVALID",
        "section": "INVALID",
        "text": "INVALID"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PathEndCapType.INVALID",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PathEndCapType.INVALID.html#ansys.edb.core.primitive.primitive.PathEndCapType.INVALID",
        "title": "INVALID > INVALID > INVALID",
        "section": "INVALID > INVALID",
        "text": "PathEndCapType.INVALID = -1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.is_null",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.is_null",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.is_null.html#ansys.edb.core.terminal.terminals.PadEdge.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property PadEdge.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.hfss_pi_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.hfss_pi_type.html#hfss_pi_type",
        "title": "hfss_pi_type",
        "section": "hfss_pi_type",
        "text": "HfssPIType: HFSS PI type.\nhfss_pi_type\nHfssPIType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.hfss_pi_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.hfss_pi_type.html#ansys.edb.core.terminal.terminals.PointTerminal.hfss_pi_type",
        "title": "hfss_pi_type > hfss_pi_type > hfss_pi_type",
        "section": "hfss_pi_type > hfss_pi_type",
        "text": "property PointTerminal.hfss_pi_type\n\nHfssPIType: HFSS PI type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.cross_section_height",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.cross_section_height.html#cross_section_height",
        "title": "cross_section_height",
        "section": "cross_section_height",
        "text": "Value: Cross-section height of the bondwire.\ncross_section_height\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.cross_section_height",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.cross_section_height.html#ansys.edb.core.primitive.primitive.Bondwire.cross_section_height",
        "title": "cross_section_height > cross_section_height > cross_section_height",
        "section": "cross_section_height > cross_section_height",
        "text": "property Bondwire.cross_section_height\n\nValue: Cross-section height of the bondwire.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.create",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a padstack definition in a given database.\nDatabase to create the padstack definition in.\nData to set on the padstack definition.\nPadstack definition created.\ncreate\nDatabase\npython:str\nPadstackDef"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.create",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.create.html#ansys.edb.core.definition.padstack_def.PadstackDef.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod PadstackDef.create(db, name)\n\nCreate a padstack definition in a given database.\n\nParameters\n\ndb\n\nDatabase\n\nDatabase to create the padstack definition in.\n\nname\n\npython:str\n\nData to set on the padstack definition.\n\nReturns\n\nPadstackDef\n\nPadstack definition created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.add_layer_below",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.add_layer_below.html#add_layer_below",
        "title": "add_layer_below",
        "section": "add_layer_below",
        "text": "Add a new layer below the specified layer.\nThis method adjusts existing layers as needed to maintain stackup consistency.\nName of the layer to add.\nName of the layer below which to add the new layer.\nadd_layer_below\nLayer\npython:str\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.add_layer_below",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.add_layer_below.html#ansys.edb.core.layer.layer_collection.LayerCollection.add_layer_below",
        "title": "add_layer_below > add_layer_below > add_layer_below",
        "section": "add_layer_below > add_layer_below",
        "text": "LayerCollection.add_layer_below(layer_to_add, layer_to_add_below_name)\n\nAdd a new layer below the specified layer.\n\nThis method adjusts existing layers as needed to maintain stackup consistency.\n\nParameters\n\nlayer_to_add\n\nLayer\n\nName of the layer to add.\n\nlayer_to_add_below_name\n\npython:str\n\nName of the layer below which to add the new layer.\n\nReturns\n\nLayer\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.ungroup",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.ungroup.html#ungroup",
        "title": "ungroup",
        "section": "ungroup",
        "text": "Delete the grouping.\nungroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.ungroup",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.ungroup.html#ansys.edb.core.terminal.terminals.BundleTerminal.ungroup",
        "title": "ungroup > ungroup > ungroup",
        "section": "ungroup > ungroup",
        "text": "BundleTerminal.ungroup()\n\nDelete the grouping.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_mcad.html#is_mcad",
        "title": "is_mcad",
        "section": "is_mcad",
        "text": "bool: Flag indicating if this is an MCAD model.\nThis property is read-only.\nis_mcad\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_mcad.html#ansys.edb.core.primitive.primitive.Primitive.is_mcad",
        "title": "is_mcad > is_mcad > is_mcad",
        "section": "is_mcad > is_mcad",
        "text": "property Primitive.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.add_void",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.add_void.html#add_void",
        "title": "add_void",
        "section": "add_void",
        "text": "Add a void to the primitive.\nVoid to add.\nadd_void\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.add_void",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.add_void.html#ansys.edb.core.primitive.primitive.Polygon.add_void",
        "title": "add_void > add_void > add_void",
        "section": "add_void > add_void",
        "text": "Polygon.add_void(hole)\n\nAdd a void to the primitive.\n\nParameters\n\nhole\n\nPrimitive\n\nVoid to add.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.bundle_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.bundle_terminal.html#bundle_terminal",
        "title": "bundle_terminal",
        "section": "bundle_terminal",
        "text": "BundleTerminal: Bundle terminal that the terminal belongs to, if any.\nbundle_terminal\nBundleTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.bundle_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.bundle_terminal.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.bundle_terminal",
        "title": "bundle_terminal > bundle_terminal > bundle_terminal",
        "section": "bundle_terminal > bundle_terminal",
        "text": "property TerminalInstanceTerminal.bundle_terminal\n\nBundleTerminal: Bundle terminal that the terminal belongs to, if any.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.set_end_cap_style",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.set_end_cap_style.html#set_end_cap_style",
        "title": "set_end_cap_style",
        "section": "set_end_cap_style",
        "text": "Set end cap styles for the path.\nEnd cap style for the start of the path.\nEnd cap style for the end of the path.\nset_end_cap_style"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.set_end_cap_style",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.set_end_cap_style.html#ansys.edb.core.primitive.primitive.Path.set_end_cap_style",
        "title": "set_end_cap_style > set_end_cap_style > set_end_cap_style",
        "section": "set_end_cap_style > set_end_cap_style",
        "text": "Path.set_end_cap_style(end_cap1, end_cap2)\n\nSet end cap styles for the path.\n\nParameters\n\nend_cap1: :class:`.PathEndCapType`\n\nEnd cap style for the start of the path.\n\nend_cap2: :class:`.PathEndCapType`\n\nEnd cap style for the end of the path.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_auto_port",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_auto_port.html#is_auto_port",
        "title": "is_auto_port",
        "section": "is_auto_port",
        "text": "bool: Flag indicating if the terminal is an auto port.\nis_auto_port\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_auto_port",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_auto_port.html#ansys.edb.core.terminal.terminals.EdgeTerminal.is_auto_port",
        "title": "is_auto_port > is_auto_port > is_auto_port",
        "section": "is_auto_port > is_auto_port",
        "text": "property EdgeTerminal.is_auto_port\n\nbool: Flag indicating if the terminal is an auto port.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform.Transform.msg",
        "href": "api/_autosummary/ansys.edb.core.utility.transform.Transform.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform.Transform.msg",
        "href": "api/_autosummary/ansys.edb.core.utility.transform.Transform.msg.html#ansys.edb.core.utility.transform.Transform.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property Transform.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.die_property.DieOrientation.CHIP_UP",
        "href": "api/_autosummary/ansys.edb.core.definition.die_property.DieOrientation.CHIP_UP.html#chip_up",
        "title": "CHIP_UP",
        "section": "CHIP_UP",
        "text": "CHIP_UP"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.die_property.DieOrientation.CHIP_UP",
        "href": "api/_autosummary/ansys.edb.core.definition.die_property.DieOrientation.CHIP_UP.html#ansys.edb.core.definition.die_property.DieOrientation.CHIP_UP",
        "title": "CHIP_UP > CHIP_UP > CHIP_UP",
        "section": "CHIP_UP > CHIP_UP",
        "text": "DieOrientation.CHIP_UP = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.LayerVisibility.ALL_VISIBLE",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.LayerVisibility.ALL_VISIBLE.html#all_visible",
        "title": "ALL_VISIBLE",
        "section": "ALL_VISIBLE",
        "text": "ALL_VISIBLE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.LayerVisibility.ALL_VISIBLE",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.LayerVisibility.ALL_VISIBLE.html#ansys.edb.core.layer.layer.LayerVisibility.ALL_VISIBLE",
        "title": "ALL_VISIBLE > ALL_VISIBLE > ALL_VISIBLE",
        "section": "ALL_VISIBLE > ALL_VISIBLE",
        "text": "LayerVisibility.ALL_VISIBLE = 31\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.port_post_processing_prop",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.port_post_processing_prop.html#port_post_processing_prop",
        "title": "port_post_processing_prop",
        "section": "port_post_processing_prop",
        "text": "PortPostProcessingProp: Port postprocessing properties.\nport_post_processing_prop\nPortPostProcessingProp"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.port_post_processing_prop",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.port_post_processing_prop.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.port_post_processing_prop",
        "title": "port_post_processing_prop > port_post_processing_prop > port_post_processing_prop",
        "section": "port_post_processing_prop > port_post_processing_prop",
        "text": "property TerminalInstanceTerminal.port_post_processing_prop\n\nPortPostProcessingProp: Port postprocessing properties.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the property.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.set_product_property.html#ansys.edb.core.primitive.primitive.BoardBendDef.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "BoardBendDef.set_product_property(prod_id, attr_id, prop_value)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nprop_value\n\npython:str\n\nString stored in the property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.set_product_solver_option",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.set_product_solver_option.html#set_product_solver_option",
        "title": "set_product_solver_option",
        "section": "set_product_solver_option",
        "text": "Set the product solver option.\nID of the product.\nName of the solver.\nName of the product solver option.\nset_product_solver_option\nProductIdType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.set_product_solver_option",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.set_product_solver_option.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.set_product_solver_option",
        "title": "set_product_solver_option > set_product_solver_option > set_product_solver_option",
        "section": "set_product_solver_option > set_product_solver_option",
        "text": "TerminalInstanceTerminal.set_product_solver_option(product_id, solver_name, option)\n\nSet the product solver option.\n\nParameters\n\nproduct_id\n\nProductIdType\n\nID of the product.\n\nsolver_name\n\nobj:str\n\nName of the solver.\n\noption\n\nobj:str\n\nName of the product solver option.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.find_by_name",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.find_by_name.html#find_by_name",
        "title": "find_by_name",
        "section": "find_by_name",
        "text": "Find a differential pair by name in a given layout.\nLayout to search for the differential pair.\nName of the differential pair.\nDifferential pair that was found. Check the is_null\nproperty of the returned differential pair to see if it exists.\nfind_by_name\nLayout\npython:str\nDifferentialPair\nis_null"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.find_by_name",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.find_by_name.html#ansys.edb.core.net.differential_pair.DifferentialPair.find_by_name",
        "title": "find_by_name > find_by_name > find_by_name",
        "section": "find_by_name > find_by_name",
        "text": "classmethod DifferentialPair.find_by_name(layout, name)\n\nFind a differential pair by name in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the differential pair.\n\nname\n\npython:str\n\nName of the differential pair.\n\nReturns\n\nDifferentialPair\n\nDifferential pair that was found. Check the is_null\nproperty of the returned differential pair to see if it exists.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.add_zone_to_layer",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.add_zone_to_layer.html#add_zone_to_layer",
        "title": "add_zone_to_layer",
        "section": "add_zone_to_layer",
        "text": "Set the zone to the layer and update the layer in the collection.\nadd_zone_to_layer\nLayer\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.add_zone_to_layer",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.add_zone_to_layer.html#ansys.edb.core.layer.layer_collection.LayerCollection.add_zone_to_layer",
        "title": "add_zone_to_layer > add_zone_to_layer > add_zone_to_layer",
        "section": "add_zone_to_layer > add_zone_to_layer",
        "text": "LayerCollection.add_zone_to_layer(layer, zone, in_zone)\n\nSet the zone to the layer and update the layer in the collection.\n\nParameters\n\nlayer\n\nLayer\n\n\n\nzone\n\npython:int\n\n\n\nin_zone\n\nbool\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.DCThicknessType.LAYER",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.DCThicknessType.LAYER.html#layer",
        "title": "LAYER",
        "section": "LAYER",
        "text": "LAYER"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.DCThicknessType.LAYER",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.DCThicknessType.LAYER.html#ansys.edb.core.layer.stackup_layer.DCThicknessType.LAYER",
        "title": "LAYER > LAYER > LAYER",
        "section": "LAYER > LAYER",
        "text": "DCThicknessType.LAYER = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.type.html#type",
        "title": "type",
        "section": "type",
        "text": "type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.type.html#ansys.edb.core.terminal.terminals.Terminal.type",
        "title": "type > type > type",
        "section": "type > type",
        "text": "Terminal.type = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.location",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.location.html#location",
        "title": "location",
        "section": "location",
        "text": "tuple (Value,         Value):         Location [x, y] of the hierarchy object on the placement_layer object.\nlocation\ntuple\nValue\nValue\nplacement_layer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.location",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.location.html#ansys.edb.core.hierarchy.structure3d.Structure3D.location",
        "title": "location > location > location",
        "section": "location > location",
        "text": "property Structure3D.location\n\ntuple (Value,         Value):         Location [x, y] of the hierarchy object on the placement_layer object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.is_negative",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.is_negative.html#is_negative",
        "title": "is_negative",
        "section": "is_negative",
        "text": "bool: Flag indicating if the geometry is negative.\nThis property is read-only.\nis_negative\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.is_negative",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.is_negative.html#ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.is_negative",
        "title": "is_negative > is_negative > is_negative",
        "section": "is_negative > is_negative",
        "text": "property LayoutObjInstance2DGeometry.is_negative\n\nbool: Flag indicating if the geometry is negative.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.type",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.type.html#type",
        "title": "type",
        "section": "type",
        "text": "LayerType: Type of the layer.\ntype\nLayerType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.type",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.type.html#ansys.edb.core.layer.layer.Layer.type",
        "title": "type > type > type",
        "section": "type > type",
        "text": "property Layer.type\n\nLayerType: Type of the layer.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.type.html#type",
        "title": "type",
        "section": "type",
        "text": "BondwireType: Type of the bondwire.\ntype\nBondwireType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.type.html#ansys.edb.core.primitive.primitive.Bondwire.type",
        "title": "type > type > type",
        "section": "type > type",
        "text": "property Bondwire.type\n\nBondwireType: Type of the bondwire.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.group",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.group.html#group",
        "title": "group",
        "section": "group",
        "text": "Group object.\ngroup\nGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.group",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.group.html#ansys.edb.core.terminal.terminals.EdgeTerminal.group",
        "title": "group > group > group",
        "section": "group > group",
        "text": "property EdgeTerminal.group\n\nGroup object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform.Transform.id",
        "href": "api/_autosummary/ansys.edb.core.utility.transform.Transform.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform.Transform.id",
        "href": "api/_autosummary/ansys.edb.core.utility.transform.Transform.id.html#ansys.edb.core.utility.transform.Transform.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property Transform.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.order_basis",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.order_basis.html#order_basis",
        "title": "order_basis",
        "section": "order_basis",
        "text": "BasisFunctionOrder: Basis function order.\norder_basis\nBasisFunctionOrder"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.order_basis",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.order_basis.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.order_basis",
        "title": "order_basis > order_basis > order_basis",
        "section": "order_basis > order_basis",
        "text": "property HFSSSettingsOptions.order_basis\n\nBasisFunctionOrder: Basis function order.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.html#layout",
        "title": "Layout",
        "section": "Layout",
        "text": "Represents a layout.\nLayout.add_menu_variable(name, values[, ...])\nAdd a menu variable.\nLayout.add_variable(name, value[, is_param])\nAdd a variable.\nLayout.convert_primitives_to_vias(primitives)\nConvert a list of primitives into vias or pins.\nLayout.create_3d_comp(filename)\nCreate a 3D composite model from an MCAD file.\nLayout.create_hfss(filename, design)\nCreate an HFSS model from an MCAD file.\nLayout.create_mesh_region(xy_exp, pos_z_exp, ...)\nDesignate a mesh region in a design and create partitions for simulation.\nLayout.create_stride(filename)\nCreate a Stride model from an MCAD file.\nLayout.create_value(val)\nCreate a value instance.\nLayout.delete_variable(name)\nDelete a variable.\nLayout.expanded_extent(nets, extent, ...)\nGet an expanded polygon for a list of nets.\nLayout.get_all_variable_names()\nGet all variable names.\nLayout.get_variable_desc(name)\nGet the description of a variable.\nLayout.get_variable_value(name)\nGet the value for a given variable.\nLayout.group_vias(layer[, ...])\nCreate via groups from the primitives on the specified layer.\nLayout.is_parameter(name)\nDetermine if the variable is a parameter.\nLayout.reconstruct_arcs(layer, tolerance)\nReconstruct arcs of polygons on a layer.\nLayout.set_variable_desc(name, desc)\nSet a variable to have a new description.\nLayout.set_variable_value(name, new_value)\nSet a variable to a new value.\nLayout.snap_primitives(layer[, tol, ...])\nSnap primitives on the specified layer to touching geometry.\nLayout.snap_vias(layer[, via_snapping_tol, ...])\nSnap vias on the specified layer to touching geometry.\nLayout.synchronize_bend_manager()\nSynchronize the bend manager.\nLayout.unite_primitives(layer)\nUnite primitives on a layer.\nLayout.board_bend_defs\nlist of BoardBendDef: List of all         board bend definitions in the layout.\nLayout.cell\nCell: Owning cell for the layout.\nLayout.cell_instances\nlist of CellInstances:         List of all cell instances in the layout.\nLayout.differential_pairs\nlist of DifferentialPair:         List of all differential pairs in the layout.\nLayout.extended_nets\nlist of ExtendedNet:         List of all extended nets in the layout.\nLayout.fixed_zone_primitive\nPrimitive: Fixed zones primitive.\nLayout.groups\nlist of Group: List of all groups         in the layout.\nLayout.id\nint: Unique ID of the EDB object.\nLayout.is_null\nbool: Flag indicating if the object exists in the database.\nLayout.layer_collection\nLayerCollection:         Layer collection of the layout.\nLayout.layout_instance\nLayoutInstance:         Instance of the layout.\nLayout.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nLayout.net_classes\nlist of NetClass: List of all         net classes in the layout.\nLayout.nets\nlist of Net: List of all nets         in the layout.\nLayout.padstack_instances\nlist of PadstackInstance: List of             all padstack instances in the layout.\nLayout.pin_groups\nlist of PinGroup : List of all         pin groups in the layout.\nLayout.port_reference_terminals_connected\nbool: Flag indicating if port reference terminals are connected.\nLayout.primitives\nlist of Primitive: List of all             primitives in the layout.\nLayout.terminals\nlist of Terminal:         List of all terminals in the layout.\nLayout.voltage_regulators\nlist of VoltageRegulator:         List of all voltage regulators in the layout.\nLayout.zone_primitives\nlist of Primitive: List of         all primitives in the zones.\nLayout\nLayout.add_menu_variable\nLayout.add_variable\nLayout.convert_primitives_to_vias\nLayout.create_3d_comp\nLayout.create_hfss\nLayout.create_mesh_region\nLayout.create_stride\nLayout.create_value\nLayout.delete_variable\nLayout.expanded_extent\nLayout.get_all_variable_names\nLayout.get_variable_desc\nLayout.get_variable_value\nLayout.group_vias\nLayout.is_parameter\nLayout.reconstruct_arcs\nLayout.set_variable_desc\nLayout.set_variable_value\nLayout.snap_primitives\nLayout.snap_vias\nLayout.synchronize_bend_manager\nLayout.unite_primitives\nLayout.board_bend_defs\nlist\nBoardBendDef\nLayout.cell\nCell\nLayout.cell_instances\nlist\nCellInstances\nLayout.differential_pairs\nlist\nDifferentialPair\nLayout.extended_nets\nlist\nExtendedNet\nLayout.fixed_zone_primitive\nPrimitive\nLayout.groups\nlist\nGroup\nLayout.id\nint\nLayout.is_null\nbool\nLayout.layer_collection\nLayerCollection\nLayout.layout_instance\nLayoutInstance\nLayout.msg\nEDBObjMessage\nLayout.net_classes\nlist\nNetClass\nLayout.nets\nlist\nNet\nLayout.padstack_instances\nlist\nPadstackInstance\nLayout.pin_groups\nlist\nPinGroup\nLayout.port_reference_terminals_connected\nbool\nLayout.primitives\nlist\nPrimitive\nLayout.terminals\nlist\nTerminal\nLayout.voltage_regulators\nlist\nVoltageRegulator\nLayout.zone_primitives\nlist\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.html#ansys.edb.core.layout.layout.Layout",
        "title": "Layout > Layout > Layout",
        "section": "Layout > Layout",
        "text": "class ansys.edb.core.layout.layout.Layout(msg)\n\nRepresents a layout.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nLayout.add_menu_variable(name, values[, ...])\n\nAdd a menu variable.\n\nLayout.add_variable(name, value[, is_param])\n\nAdd a variable.\n\nLayout.convert_primitives_to_vias(primitives)\n\nConvert a list of primitives into vias or pins.\n\nLayout.create_3d_comp(filename)\n\nCreate a 3D composite model from an MCAD file.\n\nLayout.create_hfss(filename, design)\n\nCreate an HFSS model from an MCAD file.\n\nLayout.create_mesh_region(xy_exp, pos_z_exp, ...)\n\nDesignate a mesh region in a design and create partitions for simulation.\n\nLayout.create_stride(filename)\n\nCreate a Stride model from an MCAD file.\n\nLayout.create_value(val)\n\nCreate a value instance.\n\nLayout.delete_variable(name)\n\nDelete a variable.\n\nLayout.expanded_extent(nets, extent, ...)\n\nGet an expanded polygon for a list of nets.\n\nLayout.get_all_variable_names()\n\nGet all variable names.\n\nLayout.get_variable_desc(name)\n\nGet the description of a variable.\n\nLayout.get_variable_value(name)\n\nGet the value for a given variable.\n\nLayout.group_vias(layer[, ...])\n\nCreate via groups from the primitives on the specified layer.\n\nLayout.is_parameter(name)\n\nDetermine if the variable is a parameter.\n\nLayout.reconstruct_arcs(layer, tolerance)\n\nReconstruct arcs of polygons on a layer.\n\nLayout.set_variable_desc(name, desc)\n\nSet a variable to have a new description.\n\nLayout.set_variable_value(name, new_value)\n\nSet a variable to a new value.\n\nLayout.snap_primitives(layer[, tol, ...])\n\nSnap primitives on the specified layer to touching geometry.\n\nLayout.snap_vias(layer[, via_snapping_tol, ...])\n\nSnap vias on the specified layer to touching geometry.\n\nLayout.synchronize_bend_manager()\n\nSynchronize the bend manager.\n\nLayout.unite_primitives(layer)\n\nUnite primitives on a layer.\n\n\n\nAttributes\n\n\n\n\n\n\n\nLayout.board_bend_defs\n\nlist of BoardBendDef: List of all         board bend definitions in the layout.\n\nLayout.cell\n\nCell: Owning cell for the layout.\n\nLayout.cell_instances\n\nlist of CellInstances:         List of all cell instances in the layout.\n\nLayout.differential_pairs\n\nlist of DifferentialPair:         List of all differential pairs in the layout.\n\nLayout.extended_nets\n\nlist of ExtendedNet:         List of all extended nets in the layout.\n\nLayout.fixed_zone_primitive\n\nPrimitive: Fixed zones primitive.\n\nLayout.groups\n\nlist of Group: List of all groups         in the layout.\n\nLayout.id\n\nint: Unique ID of the EDB object.\n\nLayout.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nLayout.layer_collection\n\nLayerCollection:         Layer collection of the layout.\n\nLayout.layout_instance\n\nLayoutInstance:         Instance of the layout.\n\nLayout.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nLayout.net_classes\n\nlist of NetClass: List of all         net classes in the layout.\n\nLayout.nets\n\nlist of Net: List of all nets         in the layout.\n\nLayout.padstack_instances\n\nlist of PadstackInstance: List of             all padstack instances in the layout.\n\nLayout.pin_groups\n\nlist of PinGroup : List of all         pin groups in the layout.\n\nLayout.port_reference_terminals_connected\n\nbool: Flag indicating if port reference terminals are connected.\n\nLayout.primitives\n\nlist of Primitive: List of all             primitives in the layout.\n\nLayout.terminals\n\nlist of Terminal:         List of all terminals in the layout.\n\nLayout.voltage_regulators\n\nlist of VoltageRegulator:         List of all voltage regulators in the layout.\n\nLayout.zone_primitives\n\nlist of Primitive: List of         all primitives in the zones.\n\n"
    },
    {
        "objectID": "api/layout",
        "href": "api/layout.html#layout",
        "title": "Layout",
        "section": "Layout",
        "text": "Layout"
    },
    {
        "objectID": "api/layout",
        "href": "api/layout.html#classes",
        "title": "Layout > Classes",
        "section": "Classes",
        "text": "cell.Cell(msg)\nRepresents a cell object.\nlayout.Layout(msg)\nRepresents a layout.\nmcad_model.McadModel(msg)\nClass representing an MCAD mdel.\nvoltage_regulator.PowerModule(comp_group_name)\nRepresents a power module.\nvoltage_regulator.VoltageRegulator(msg)\nRepresents a voltage regulator.\nClasses\ncell.Cell\nlayout.Layout\nmcad_model.McadModel\nvoltage_regulator.PowerModule\nvoltage_regulator.VoltageRegulator"
    },
    {
        "objectID": "api/layout",
        "href": "api/layout.html#enums",
        "title": "Layout > Enums",
        "section": "Enums",
        "text": "cell.CellType(value)\nProvides an enum representing the types of cells.\ncell.DesignMode(value)\nProvides an enum representing design modes.\nEnums\ncell.CellType\ncell.DesignMode"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.name",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of simulation setup.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.name",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.name.html#ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property SIWaveDCIRSimulationSetup.name\n\nstr: Name of simulation setup.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.full_dc_report_path",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.full_dc_report_path.html#full_dc_report_path",
        "title": "full_dc_report_path",
        "section": "full_dc_report_path",
        "text": "str: Path to the DC report.\nfull_dc_report_path\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.full_dc_report_path",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.full_dc_report_path.html#ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.full_dc_report_path",
        "title": "full_dc_report_path > full_dc_report_path > full_dc_report_path",
        "section": "full_dc_report_path > full_dc_report_path",
        "text": "property SIWaveDCIRSimulationSettings.full_dc_report_path\n\nstr: Path to the DC report.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.CellType",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.CellType.html#celltype",
        "title": "CellType",
        "section": "CellType",
        "text": "Provides an enum representing the types of cells.\nCellType.CIRCUIT_CELL\n\nCellType.FOOTPRINT_CELL\n\nCellType\nCellType.CIRCUIT_CELL\nCellType.FOOTPRINT_CELL"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.CellType",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.CellType.html#ansys.edb.core.layout.cell.CellType",
        "title": "CellType > CellType > CellType",
        "section": "CellType > CellType",
        "text": "class ansys.edb.core.layout.cell.CellType(value)\n\nProvides an enum representing the types of cells.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nCellType.CIRCUIT_CELL\n\n\n\nCellType.FOOTPRINT_CELL\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.create_stride",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.create_stride.html#create_stride",
        "title": "create_stride",
        "section": "create_stride",
        "text": "Create a Stride model from an MCAD file.\nStride model created.\ncreate_stride\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.create_stride",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.create_stride.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.create_stride",
        "title": "create_stride > create_stride > create_stride",
        "section": "create_stride > create_stride",
        "text": "TerminalInstanceTerminal.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nReturns\n\nMcadModel\n\nStride model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the property.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.set_product_property.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "TerminalInstanceTerminal.set_product_property(prod_id, attr_id, prop_value)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nprop_value\n\npython:str\n\nString stored in the property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.reconstruct_arcs",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.reconstruct_arcs.html#reconstruct_arcs",
        "title": "reconstruct_arcs",
        "section": "reconstruct_arcs",
        "text": "Reconstruct arcs of polygons on a layer.\nLayer to reconstruct arcs on.\nTolerance.\nreconstruct_arcs\npython:str\nLayer\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.reconstruct_arcs",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.reconstruct_arcs.html#ansys.edb.core.layout.layout.Layout.reconstruct_arcs",
        "title": "reconstruct_arcs > reconstruct_arcs > reconstruct_arcs",
        "section": "reconstruct_arcs > reconstruct_arcs",
        "text": "Layout.reconstruct_arcs(layer, tolerance)\n\nReconstruct arcs of polygons on a layer.\n\nParameters\n\nlayer\n\npython:str or Layer\n\nLayer to reconstruct arcs on.\n\ntolerance\n\nValue\n\nTolerance.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.obj_type",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.obj_type.html#obj_type",
        "title": "obj_type",
        "section": "obj_type",
        "text": "LayoutObjType: Layout object type.\nThis property is read-only.\nobj_type\nLayoutObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.obj_type",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.obj_type.html#ansys.edb.core.net.differential_pair.DifferentialPair.obj_type",
        "title": "obj_type > obj_type > obj_type",
        "section": "obj_type > obj_type",
        "text": "property DifferentialPair.obj_type\n\nLayoutObjType: Layout object type.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.set_product_solver_option",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.set_product_solver_option.html#set_product_solver_option",
        "title": "set_product_solver_option",
        "section": "set_product_solver_option",
        "text": "Set the product solver option.\nID of the product.\nName of the solver.\nName of the product solver option.\nset_product_solver_option\nProductIdType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.set_product_solver_option",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.set_product_solver_option.html#ansys.edb.core.terminal.terminals.EdgeTerminal.set_product_solver_option",
        "title": "set_product_solver_option > set_product_solver_option > set_product_solver_option",
        "section": "set_product_solver_option > set_product_solver_option",
        "text": "EdgeTerminal.set_product_solver_option(product_id, solver_name, option)\n\nSet the product solver option.\n\nParameters\n\nproduct_id\n\nProductIdType\n\nID of the product.\n\nsolver_name\n\nobj:str\n\nName of the solver.\n\noption\n\nobj:str\n\nName of the product solver option.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.layout",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.layout.html#layout",
        "title": "layout",
        "section": "layout",
        "text": "Layout: Layout owning the object.\nThis property is read-only.\nlayout\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.layout",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.layout.html#ansys.edb.core.primitive.primitive.Path.layout",
        "title": "layout > layout > layout",
        "section": "layout > layout",
        "text": "property Path.layout\n\nLayout: Layout owning the object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.is_convex",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.is_convex.html#is_convex",
        "title": "is_convex",
        "section": "is_convex",
        "text": "Determine whether the polygon is a convex hull.\nTrue when the polygon is a convex hull, False otherwise.\nis_convex\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.is_convex",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.is_convex.html#ansys.edb.core.geometry.polygon_data.PolygonData.is_convex",
        "title": "is_convex > is_convex > is_convex",
        "section": "is_convex > is_convex",
        "text": "PolygonData.is_convex()\n\nDetermine whether the polygon is a convex hull.\n\nReturns\n\nbool\n\nTrue when the polygon is a convex hull, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.is_null",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.is_null",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.is_null.html#ansys.edb.core.hierarchy.structure3d.Structure3D.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property Structure3D.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDs given a product ID for the layout object.\nID representing a product that supports the EDB.\nAll user-defined attribute IDs for properties stored in the object\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.get_product_property_ids.html#ansys.edb.core.terminal.terminals.TerminalInstance.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "TerminalInstance.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nReturns\n\npython:list[python:int]\n\nAll user-defined attribute IDs for properties stored in the object\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_null",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_null",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_null.html#ansys.edb.core.terminal.terminals.Terminal.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property Terminal.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.ignore_non_functional_pads",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.ignore_non_functional_pads.html#ignore_non_functional_pads",
        "title": "ignore_non_functional_pads",
        "section": "ignore_non_functional_pads",
        "text": "bool: Flag indicating if non-functional pads are ignored.\nignore_non_functional_pads\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.ignore_non_functional_pads",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.ignore_non_functional_pads.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.ignore_non_functional_pads",
        "title": "ignore_non_functional_pads > ignore_non_functional_pads > ignore_non_functional_pads",
        "section": "ignore_non_functional_pads > ignore_non_functional_pads",
        "text": "property SIWaveAdvancedSettings.ignore_non_functional_pads\n\nbool: Flag indicating if non-functional pads are ignored.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.find_by_id.html#find_by_id",
        "title": "find_by_id",
        "section": "find_by_id",
        "text": "Find a Connectable object by database ID in a given layout.\nLayout to search for the Connectable object.\nDatabase ID.\nConnectable object with the given database ID.\nfind_by_id\nLayout\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.find_by_id.html#ansys.edb.core.primitive.primitive.Bondwire.find_by_id",
        "title": "find_by_id > find_by_id > find_by_id",
        "section": "find_by_id > find_by_id",
        "text": "classmethod Bondwire.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the Connectable object.\n\nuid\n\npython:int\n\nDatabase ID.\n\nReturns\n\nConnectable\n\nConnectable object with the given database ID.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.term_to_ground",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.term_to_ground.html#term_to_ground",
        "title": "term_to_ground",
        "section": "term_to_ground",
        "text": "SourceTermToGroundType: Source terminal-to-ground type.\nterm_to_ground\nSourceTermToGroundType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.term_to_ground",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.term_to_ground.html#ansys.edb.core.terminal.terminals.EdgeTerminal.term_to_ground",
        "title": "term_to_ground > term_to_ground > term_to_ground",
        "section": "term_to_ground > term_to_ground",
        "text": "property EdgeTerminal.term_to_ground\n\nSourceTermToGroundType: Source terminal-to-ground type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.is_via_layer",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.is_via_layer.html#is_via_layer",
        "title": "is_via_layer",
        "section": "is_via_layer",
        "text": "bool: Flag indicating if the layer is a ViaLayer instance.\nThis property is read-only.\nis_via_layer\nbool\nViaLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.is_via_layer",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.is_via_layer.html#ansys.edb.core.layer.stackup_layer.StackupLayer.is_via_layer",
        "title": "is_via_layer > is_via_layer > is_via_layer",
        "section": "is_via_layer > is_via_layer",
        "text": "property StackupLayer.is_via_layer\n\nbool: Flag indicating if the layer is a ViaLayer instance.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.is_in_pin_group",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.is_in_pin_group.html#is_in_pin_group",
        "title": "is_in_pin_group",
        "section": "is_in_pin_group",
        "text": "Determine if the padstack instance is in a given pin group.\nPin group to check if the padstack instance is in it.\nWhether the padstack instance is in a pin group.\nis_in_pin_group\nPinGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.is_in_pin_group",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.is_in_pin_group.html#ansys.edb.core.primitive.primitive.PadstackInstance.is_in_pin_group",
        "title": "is_in_pin_group > is_in_pin_group > is_in_pin_group",
        "section": "is_in_pin_group > is_in_pin_group",
        "text": "PadstackInstance.is_in_pin_group(pin_group)\n\nDetermine if the padstack instance is in a given pin group.\n\nParameters\n\npin_group\n\nPinGroup\n\nPin group to check if the padstack instance is in it.\n\nReturns\n\nbool\n\nWhether the padstack instance is in a pin group.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.find_by_id.html#find_by_id",
        "title": "find_by_id",
        "section": "find_by_id",
        "text": "Find a Connectable object by database ID in a given layout.\nLayout to search for the Connectable object.\nDatabase ID.\nConnectable object with the given database ID.\nfind_by_id\nLayout\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.find_by_id.html#ansys.edb.core.primitive.primitive.Circle.find_by_id",
        "title": "find_by_id > find_by_id > find_by_id",
        "section": "find_by_id > find_by_id",
        "text": "classmethod Circle.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the Connectable object.\n\nuid\n\npython:int\n\nDatabase ID.\n\nReturns\n\nConnectable\n\nConnectable object with the given database ID.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.clone",
        "href": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Clone the component property.\nComponent property cloned.\nclone\nComponentProperty"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.clone",
        "href": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.clone.html#ansys.edb.core.definition.ic_component_property.ICComponentProperty.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "ICComponentProperty.clone()\n\nClone the component property.\n\nReturns\n\nComponentProperty\n\nComponent property cloned.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.pin_groups",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.pin_groups.html#pin_groups",
        "title": "pin_groups",
        "section": "pin_groups",
        "text": "list of PinGroup:         Pin groups of the padstack instance.\nThis property is read-only.\npin_groups\nlist\nPinGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.pin_groups",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.pin_groups.html#ansys.edb.core.primitive.primitive.PadstackInstance.pin_groups",
        "title": "pin_groups > pin_groups > pin_groups",
        "section": "pin_groups > pin_groups",
        "text": "property PadstackInstance.pin_groups\n\nlist of PinGroup:         Pin groups of the padstack instance.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.create",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a cell instance with a given layout.\nLayout to create the cell instance in.\nName of the cell instance.\nLayout that the cell instance refers to.\nCell instance created.\ncreate\nLayout\npython:str\nLayout\nCellInstance"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.create",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.create.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod CellInstance.create(layout, name, ref)\n\nCreate a cell instance with a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to create the cell instance in.\n\nname\n\npython:str\n\nName of the cell instance.\n\nref\n\nLayout\n\nLayout that the cell instance refers to.\n\nReturns\n\nCellInstance\n\nCell instance created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.DesignMode.IC",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.DesignMode.IC.html#ic",
        "title": "IC",
        "section": "IC",
        "text": "IC"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.DesignMode.IC",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.DesignMode.IC.html#ansys.edb.core.layout.cell.DesignMode.IC",
        "title": "IC > IC > IC",
        "section": "IC > IC",
        "text": "DesignMode.IC = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.port_post_processing_prop",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.port_post_processing_prop.html#port_post_processing_prop",
        "title": "port_post_processing_prop",
        "section": "port_post_processing_prop",
        "text": "PortPostProcessingProp: Port postprocessing properties.\nport_post_processing_prop\nPortPostProcessingProp"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.port_post_processing_prop",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.port_post_processing_prop.html#ansys.edb.core.terminal.terminals.EdgeTerminal.port_post_processing_prop",
        "title": "port_post_processing_prop > port_post_processing_prop > port_post_processing_prop",
        "section": "port_post_processing_prop > port_post_processing_prop",
        "text": "property EdgeTerminal.port_post_processing_prop\n\nPortPostProcessingProp: Port postprocessing properties.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.get_parameters",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.get_parameters.html#get_parameters",
        "title": "get_parameters",
        "section": "get_parameters",
        "text": "Get the parameters of the APD bondwire definition.\nString block of the bondwire parameters.\nget_parameters\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.get_parameters",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.get_parameters.html#ansys.edb.core.definition.bondwire_def.ApdBondwireDef.get_parameters",
        "title": "get_parameters > get_parameters > get_parameters",
        "section": "get_parameters > get_parameters",
        "text": "ApdBondwireDef.get_parameters()\n\nGet the parameters of the APD bondwire definition.\n\nReturns\n\npython:str\n\nString block of the bondwire parameters.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.type",
        "href": "api/_autosummary/ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.type.html#type",
        "title": "type",
        "section": "type",
        "text": "DielectricMaterialModelType: Type of the dielectric material model.\ntype\nDielectricMaterialModelType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.type",
        "href": "api/_autosummary/ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.type.html#ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.type",
        "title": "type > type > type",
        "section": "type > type",
        "text": "property MultipoleDebyeModel.type\n\nDielectricMaterialModelType: Type of the dielectric material model.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.get_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.get_hfss_prop.html#get_hfss_prop",
        "title": "get_hfss_prop",
        "section": "get_hfss_prop",
        "text": "Get HFSS properties.\nName of the material property.\nWhether to solve inside.\nget_hfss_prop\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.get_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.get_hfss_prop.html#ansys.edb.core.primitive.primitive.Text.get_hfss_prop",
        "title": "get_hfss_prop > get_hfss_prop > get_hfss_prop",
        "section": "get_hfss_prop > get_hfss_prop",
        "text": "Text.get_hfss_prop()\n\nGet HFSS properties.\n\nReturns\n\nmaterial\n\npython:str\n\nName of the material property.\n\nsolve_inside\n\nbool\n\nWhether to solve inside.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.edb_uid.html#edb_uid",
        "title": "edb_uid",
        "section": "edb_uid",
        "text": "int: Unique, persistent ID for the Connectable object.\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\nThis property is read-only.\nedb_uid\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.edb_uid.html#ansys.edb.core.primitive.primitive.Polygon.edb_uid",
        "title": "edb_uid > edb_uid > edb_uid",
        "section": "edb_uid > edb_uid",
        "text": "property Polygon.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_mcad_hfss.html#is_mcad_hfss",
        "title": "is_mcad_hfss",
        "section": "is_mcad_hfss",
        "text": "bool: Flag indicating if this is an HFSS MCAD model.\nThis property is read-only.\nis_mcad_hfss\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.is_mcad_hfss.html#ansys.edb.core.terminal.terminals.EdgeTerminal.is_mcad_hfss",
        "title": "is_mcad_hfss > is_mcad_hfss > is_mcad_hfss",
        "section": "is_mcad_hfss > is_mcad_hfss",
        "text": "property EdgeTerminal.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.max_triangles_for_wave_port",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.max_triangles_for_wave_port.html#max_triangles_for_wave_port",
        "title": "max_triangles_for_wave_port",
        "section": "max_triangles_for_wave_port",
        "text": "int: Maximum number of triangles to use for meshing waveports.\nmax_triangles_for_wave_port\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.max_triangles_for_wave_port",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.max_triangles_for_wave_port.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.max_triangles_for_wave_port",
        "title": "max_triangles_for_wave_port > max_triangles_for_wave_port > max_triangles_for_wave_port",
        "section": "max_triangles_for_wave_port > max_triangles_for_wave_port",
        "text": "property HFSSSolverSettings.max_triangles_for_wave_port\n\nint: Maximum number of triangles to use for meshing waveports.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.can_be_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.can_be_zone_primitive.html#can_be_zone_primitive",
        "title": "can_be_zone_primitive",
        "section": "can_be_zone_primitive",
        "text": "bool: Flag indicating if the primitive can be a zone.\nThis property is read-only.\ncan_be_zone_primitive\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.can_be_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.can_be_zone_primitive.html#ansys.edb.core.primitive.primitive.Text.can_be_zone_primitive",
        "title": "can_be_zone_primitive > can_be_zone_primitive > can_be_zone_primitive",
        "section": "can_be_zone_primitive > can_be_zone_primitive",
        "text": "property Text.can_be_zone_primitive\n\nbool: Flag indicating if the primitive can be a zone.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.has_voids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.has_voids.html#has_voids",
        "title": "has_voids",
        "section": "has_voids",
        "text": "bool: Flag indicating if a primitive has voids inside.\nThis property is read-only.\nhas_voids\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.has_voids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.has_voids.html#ansys.edb.core.primitive.primitive.Text.has_voids",
        "title": "has_voids > has_voids > has_voids",
        "section": "has_voids > has_voids",
        "text": "property Text.has_voids\n\nbool: Flag indicating if a primitive has voids inside.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.cells_per_wavelength",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.cells_per_wavelength.html#cells_per_wavelength",
        "title": "cells_per_wavelength",
        "section": "cells_per_wavelength",
        "text": "int: Number of cells that fit under each wavelength.\ncells_per_wavelength\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.cells_per_wavelength",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.cells_per_wavelength.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.cells_per_wavelength",
        "title": "cells_per_wavelength > cells_per_wavelength > cells_per_wavelength",
        "section": "cells_per_wavelength > cells_per_wavelength",
        "text": "property RaptorXAdvancedSettings.cells_per_wavelength\n\nint: Number of cells that fit under each wavelength.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.CIRCLE",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.CIRCLE.html#circle",
        "title": "CIRCLE",
        "section": "CIRCLE",
        "text": "CIRCLE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.CIRCLE",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.CIRCLE.html#ansys.edb.core.primitive.primitive.PrimitiveType.CIRCLE",
        "title": "CIRCLE > CIRCLE > CIRCLE",
        "section": "CIRCLE > CIRCLE",
        "text": "PrimitiveType.CIRCLE = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.MeshOperation.mesh_region",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.MeshOperation.mesh_region.html#mesh_region",
        "title": "mesh_region",
        "section": "mesh_region",
        "text": "str: Name of the mesh region.\nmesh_region\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.MeshOperation.mesh_region",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.MeshOperation.mesh_region.html#ansys.edb.core.simulation_setup.mesh_operation.MeshOperation.mesh_region",
        "title": "mesh_region > mesh_region > mesh_region",
        "section": "mesh_region > mesh_region",
        "text": "property MeshOperation.mesh_region\n\nstr: Name of the mesh region.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.is_mcad_hfss.html#is_mcad_hfss",
        "title": "is_mcad_hfss",
        "section": "is_mcad_hfss",
        "text": "bool: Flag indicating if this is an HFSS MCAD model.\nThis property is read-only.\nis_mcad_hfss\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.is_mcad_hfss.html#ansys.edb.core.hierarchy.pin_group.PinGroup.is_mcad_hfss",
        "title": "is_mcad_hfss > is_mcad_hfss > is_mcad_hfss",
        "section": "is_mcad_hfss > is_mcad_hfss",
        "text": "property PinGroup.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.ProductIdType.USER_DEFINED",
        "href": "api/_autosummary/ansys.edb.core.database.ProductIdType.USER_DEFINED.html#user_defined",
        "title": "USER_DEFINED",
        "section": "USER_DEFINED",
        "text": "USER_DEFINED"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.ProductIdType.USER_DEFINED",
        "href": "api/_autosummary/ansys.edb.core.database.ProductIdType.USER_DEFINED.html#ansys.edb.core.database.ProductIdType.USER_DEFINED",
        "title": "USER_DEFINED > USER_DEFINED > USER_DEFINED",
        "section": "USER_DEFINED > USER_DEFINED",
        "text": "ProductIdType.USER_DEFINED = 3\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.area",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.area.html#area",
        "title": "area",
        "section": "area",
        "text": "Compute the area of the polygon.\nArea of the polygon.\narea\npython:float"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.area",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.area.html#ansys.edb.core.geometry.polygon_data.PolygonData.area",
        "title": "area > area > area",
        "section": "area > area",
        "text": "PolygonData.area()\n\nCompute the area of the polygon.\n\nReturns\n\npython:float\n\nArea of the polygon.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.html#circle",
        "title": "Circle",
        "section": "Circle",
        "text": "Represents a circle object.\nCircle.add_void(hole)\nAdd a void to the primitive.\nCircle.can_be_zone_primitive()\nbool: Flag indicating if a circle can be a zone.\nCircle.cast()\nCast the primitive object to the correct concrete type.\nCircle.create(layout, layer, net, center_x, ...)\nCreate a circle.\nCircle.create_3d_comp()\nCreate a 3D composite model from an MCAD file.\nCircle.create_hfss()\nCreate an HFSS model from an MCAD file.\nCircle.create_stride()\nCreate a Stride model from an MCAD file.\nCircle.delete()\nDelete the layout object.\nCircle.find_by_id(layout, uid)\nFind a Connectable object by database ID in a given layout.\nCircle.get_hfss_prop()\nGet HFSS properties.\nCircle.get_parameters()\nGet parameters of the circle.\nCircle.get_product_property(prod_id, attr_id)\nGet the product property of the layout object for a given product ID and attribute ID.\nCircle.get_product_property_ids(prod_id)\nGet a list of attribute IDs given a product ID for the layout object.\nCircle.make_zone_primitive(zone_id)\nMake the primitive a zone primitive with a zone specified by the provided ID.\nCircle.remove_hfss_prop()\nRemove HFSS properties.\nCircle.render(center_x, center_y, radius, ...)\nRender a circle.\nCircle.set_hfss_prop(material, solve_inside)\nSet HFSS properties.\nCircle.set_parameters(center_x, center_y, radius)\nSet parameters of the circle.\nCircle.set_product_property(prod_id, ...)\nSet the product property of the layout object for a given product ID and attribute ID.\nCircle.component\nComponentGroup:         Component of the Connectable object.\nCircle.edb_uid\nint: Unique, persistent ID for the Connectable object.\nCircle.group\nGroup object.\nCircle.has_voids\nbool: Flag indicating if a primitive has voids inside.\nCircle.id\nint: Unique ID of the EDB object.\nCircle.is_mcad\nbool: Flag indicating if this is an MCAD model.\nCircle.is_mcad_3d_comp\nbool: Flag indicating if this is a 3D composite MCAD model.\nCircle.is_mcad_hfss\nbool: Flag indicating if this is an HFSS MCAD model.\nCircle.is_mcad_stride\nbool: Flag indicating if this is a Stride MCAD model.\nCircle.is_negative\nbool: Flag indicating if the primitive is negative.\nCircle.is_null\nbool: Flag indicating if the object exists in the database.\nCircle.is_parameterized\nbool: Whether the primitive is parametrized.\nCircle.is_void\nbool: Flag indicating if a primitive is a void.\nCircle.is_zone_primitive\nbool: Flag indicating if the primitive object is a zone.\nCircle.layer\nLayer: Layer that the primitive object is on.\nCircle.layout\nLayout: Layout owning the object.\nCircle.layout_obj_type\n\nCircle.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nCircle.net\nNet: Net of the Connectable object.\nCircle.obj_type\nLayoutObjType: Layout object type.\nCircle.owner\nPrimitive: Owner of the primitive object.\nCircle.polygon_data\nPolygonData:         Polygon data object of the circle.\nCircle.primitive_type\nPrimitiveType: Primitive type of the primitive.\nCircle.voids\nlist of Primitive: List of void        primitive objects inside the primitive.\nCircle\nCircle.add_void\nCircle.can_be_zone_primitive\nbool\nCircle.cast\nCircle.create\nCircle.create_3d_comp\nCircle.create_hfss\nCircle.create_stride\nCircle.delete\nCircle.find_by_id\nCircle.get_hfss_prop\nCircle.get_parameters\nCircle.get_product_property\nCircle.get_product_property_ids\nCircle.make_zone_primitive\nCircle.remove_hfss_prop\nCircle.render\nCircle.set_hfss_prop\nCircle.set_parameters\nCircle.set_product_property\nCircle.component\nComponentGroup\nCircle.edb_uid\nint\nCircle.group\nGroup\nCircle.has_voids\nbool\nCircle.id\nint\nCircle.is_mcad\nbool\nCircle.is_mcad_3d_comp\nbool\nCircle.is_mcad_hfss\nbool\nCircle.is_mcad_stride\nbool\nCircle.is_negative\nbool\nCircle.is_null\nbool\nCircle.is_parameterized\nbool\nCircle.is_void\nbool\nCircle.is_zone_primitive\nbool\nCircle.layer\nLayer\nCircle.layout\nLayout\nCircle.layout_obj_type\nCircle.msg\nEDBObjMessage\nCircle.net\nNet\nCircle.obj_type\nLayoutObjType\nCircle.owner\nPrimitive\nCircle.polygon_data\nPolygonData\nCircle.primitive_type\nPrimitiveType\nCircle.voids\nlist\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.html#ansys.edb.core.primitive.primitive.Circle",
        "title": "Circle > Circle > Circle",
        "section": "Circle > Circle",
        "text": "class ansys.edb.core.primitive.primitive.Circle(msg)\n\nRepresents a circle object.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nCircle.add_void(hole)\n\nAdd a void to the primitive.\n\nCircle.can_be_zone_primitive()\n\nbool: Flag indicating if a circle can be a zone.\n\nCircle.cast()\n\nCast the primitive object to the correct concrete type.\n\nCircle.create(layout, layer, net, center_x, ...)\n\nCreate a circle.\n\nCircle.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nCircle.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nCircle.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nCircle.delete()\n\nDelete the layout object.\n\nCircle.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nCircle.get_hfss_prop()\n\nGet HFSS properties.\n\nCircle.get_parameters()\n\nGet parameters of the circle.\n\nCircle.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nCircle.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nCircle.make_zone_primitive(zone_id)\n\nMake the primitive a zone primitive with a zone specified by the provided ID.\n\nCircle.remove_hfss_prop()\n\nRemove HFSS properties.\n\nCircle.render(center_x, center_y, radius, ...)\n\nRender a circle.\n\nCircle.set_hfss_prop(material, solve_inside)\n\nSet HFSS properties.\n\nCircle.set_parameters(center_x, center_y, radius)\n\nSet parameters of the circle.\n\nCircle.set_product_property(prod_id, ...)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\n\n\nAttributes\n\n\n\n\n\n\n\nCircle.component\n\nComponentGroup:         Component of the Connectable object.\n\nCircle.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nCircle.group\n\nGroup object.\n\nCircle.has_voids\n\nbool: Flag indicating if a primitive has voids inside.\n\nCircle.id\n\nint: Unique ID of the EDB object.\n\nCircle.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nCircle.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nCircle.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nCircle.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nCircle.is_negative\n\nbool: Flag indicating if the primitive is negative.\n\nCircle.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nCircle.is_parameterized\n\nbool: Whether the primitive is parametrized.\n\nCircle.is_void\n\nbool: Flag indicating if a primitive is a void.\n\nCircle.is_zone_primitive\n\nbool: Flag indicating if the primitive object is a zone.\n\nCircle.layer\n\nLayer: Layer that the primitive object is on.\n\nCircle.layout\n\nLayout: Layout owning the object.\n\nCircle.layout_obj_type\n\n\n\nCircle.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nCircle.net\n\nNet: Net of the Connectable object.\n\nCircle.obj_type\n\nLayoutObjType: Layout object type.\n\nCircle.owner\n\nPrimitive: Owner of the primitive object.\n\nCircle.polygon_data\n\nPolygonData:         Polygon data object of the circle.\n\nCircle.primitive_type\n\nPrimitiveType: Primitive type of the primitive.\n\nCircle.voids\n\nlist of Primitive: List of void        primitive objects inside the primitive.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDefType",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDefType.html#bondwiredeftype",
        "title": "BondwireDefType",
        "section": "BondwireDefType",
        "text": "Enum representing different types of bondwires.\nBondwireDefType.APD_BONDWIRE_DEF\n\nBondwireDefType.JEDEC4_BONDWIRE_DEF\n\nBondwireDefType.JEDEC5_BONDWIRE_DEF\n\nBondwireDefType\nBondwireDefType.APD_BONDWIRE_DEF\nBondwireDefType.JEDEC4_BONDWIRE_DEF\nBondwireDefType.JEDEC5_BONDWIRE_DEF"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDefType",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.BondwireDefType.html#ansys.edb.core.definition.bondwire_def.BondwireDefType",
        "title": "BondwireDefType > BondwireDefType > BondwireDefType",
        "section": "BondwireDefType > BondwireDefType",
        "text": "class ansys.edb.core.definition.bondwire_def.BondwireDefType(value)\n\nEnum representing different types of bondwires.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nBondwireDefType.APD_BONDWIRE_DEF\n\n\n\nBondwireDefType.JEDEC4_BONDWIRE_DEF\n\n\n\nBondwireDefType.JEDEC5_BONDWIRE_DEF\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.is_mcad_hfss.html#is_mcad_hfss",
        "title": "is_mcad_hfss",
        "section": "is_mcad_hfss",
        "text": "bool: Flag indicating if this is an HFSS MCAD model.\nThis property is read-only.\nis_mcad_hfss\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.is_mcad_hfss.html#ansys.edb.core.hierarchy.inst_array.InstArray.is_mcad_hfss",
        "title": "is_mcad_hfss > is_mcad_hfss > is_mcad_hfss",
        "section": "is_mcad_hfss > is_mcad_hfss",
        "text": "property InstArray.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_mcad.html#is_mcad",
        "title": "is_mcad",
        "section": "is_mcad",
        "text": "bool: Flag indicating if this is an MCAD model.\nThis property is read-only.\nis_mcad\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_mcad.html#ansys.edb.core.primitive.primitive.Text.is_mcad",
        "title": "is_mcad > is_mcad > is_mcad",
        "section": "is_mcad > is_mcad",
        "text": "property Text.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_mcad_3d_comp.html#is_mcad_3d_comp",
        "title": "is_mcad_3d_comp",
        "section": "is_mcad_3d_comp",
        "text": "bool: Flag indicating if this is a 3D composite MCAD model.\nThis property is read-only.\nis_mcad_3d_comp\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_mcad_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_mcad_3d_comp.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_mcad_3d_comp",
        "title": "is_mcad_3d_comp > is_mcad_3d_comp > is_mcad_3d_comp",
        "section": "is_mcad_3d_comp > is_mcad_3d_comp",
        "text": "property PadstackInstanceTerminal.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_inter_plane_coupling",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_inter_plane_coupling.html#include_inter_plane_coupling",
        "title": "include_inter_plane_coupling",
        "section": "include_inter_plane_coupling",
        "text": "bool: Flag indicating if the inter-plane coupling is included.\ninclude_inter_plane_coupling\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_inter_plane_coupling",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_inter_plane_coupling.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.include_inter_plane_coupling",
        "title": "include_inter_plane_coupling > include_inter_plane_coupling > include_inter_plane_coupling",
        "section": "include_inter_plane_coupling > include_inter_plane_coupling",
        "text": "property SIWaveAdvancedSettings.include_inter_plane_coupling\n\nbool: Flag indicating if the inter-plane coupling is included.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_zone_primitive.html#is_zone_primitive",
        "title": "is_zone_primitive",
        "section": "is_zone_primitive",
        "text": "bool: Flag indicating if the primitive object is a zone.\nThis property is read-only.\nis_zone_primitive\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_zone_primitive.html#ansys.edb.core.primitive.primitive.Polygon.is_zone_primitive",
        "title": "is_zone_primitive > is_zone_primitive > is_zone_primitive",
        "section": "is_zone_primitive > is_zone_primitive",
        "text": "property Polygon.is_zone_primitive\n\nbool: Flag indicating if the primitive object is a zone.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.html#pingroup",
        "title": "PinGroup",
        "section": "PinGroup",
        "text": "Represents a pin group object.\nPinGroup.add_pins(pins)\nAdd a list of padstack instances to the group.\nPinGroup.create(layout, name, padstack_instances)\nCreate a pin group.\nPinGroup.create_3d_comp()\nCreate a 3D composite model from an MCAD file.\nPinGroup.create_hfss()\nCreate an HFSS model from an MCAD file.\nPinGroup.create_stride()\nCreate a Stride model from an MCAD file.\nPinGroup.delete()\nDelete the layout object.\nPinGroup.find(layout, name)\nFind a pin group by name in a given layout.\nPinGroup.find_by_id(layout, uid)\nFind a Connectable object by database ID in a given layout.\nPinGroup.get_product_property(prod_id, attr_id)\nGet the product property of the layout object for a given product ID and attribute ID.\nPinGroup.get_product_property_ids(prod_id)\nGet a list of attribute IDs given a product ID for the layout object.\nPinGroup.remove_pins(pins)\nRemove a list of padstack instances from the group.\nPinGroup.set_product_property(prod_id, ...)\nSet the product property of the layout object for a given product ID and attribute ID.\nPinGroup.unique_name(layout, prefix)\nGet a unique pin group name in the layout using a given prefix.\nPinGroup.component\nComponentGroup:         Component of the Connectable object.\nPinGroup.edb_uid\nint: Unique, persistent ID for the Connectable object.\nPinGroup.group\nGroup object.\nPinGroup.id\nint: Unique ID of the EDB object.\nPinGroup.is_mcad\nbool: Flag indicating if this is an MCAD model.\nPinGroup.is_mcad_3d_comp\nbool: Flag indicating if this is a 3D composite MCAD model.\nPinGroup.is_mcad_hfss\nbool: Flag indicating if this is an HFSS MCAD model.\nPinGroup.is_mcad_stride\nbool: Flag indicating if this is a Stride MCAD model.\nPinGroup.is_null\nbool: Flag indicating if the object exists in the database.\nPinGroup.layout\nLayout: Layout owning the object.\nPinGroup.layout_obj_type\n\nPinGroup.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nPinGroup.name\nstr: Name of the pin group.\nPinGroup.net\nNet: Net of the Connectable object.\nPinGroup.obj_type\nLayoutObjType: Layout object type.\nPinGroup.pin_group_terminal\nPinGroupTerminal: Terminal this pin group is part of.\nPinGroup.pins\nlist of PadstackInstances:         Padstack instances.\nPinGroup\nPinGroup.add_pins\nPinGroup.create\nPinGroup.create_3d_comp\nPinGroup.create_hfss\nPinGroup.create_stride\nPinGroup.delete\nPinGroup.find\nPinGroup.find_by_id\nPinGroup.get_product_property\nPinGroup.get_product_property_ids\nPinGroup.remove_pins\nPinGroup.set_product_property\nPinGroup.unique_name\nPinGroup.component\nComponentGroup\nPinGroup.edb_uid\nint\nPinGroup.group\nGroup\nPinGroup.id\nint\nPinGroup.is_mcad\nbool\nPinGroup.is_mcad_3d_comp\nbool\nPinGroup.is_mcad_hfss\nbool\nPinGroup.is_mcad_stride\nbool\nPinGroup.is_null\nbool\nPinGroup.layout\nLayout\nPinGroup.layout_obj_type\nPinGroup.msg\nEDBObjMessage\nPinGroup.name\nstr\nPinGroup.net\nNet\nPinGroup.obj_type\nLayoutObjType\nPinGroup.pin_group_terminal\nPinGroupTerminal\nPinGroup.pins\nlist\nPadstackInstances"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.html#ansys.edb.core.hierarchy.pin_group.PinGroup",
        "title": "PinGroup > PinGroup > PinGroup",
        "section": "PinGroup > PinGroup",
        "text": "class ansys.edb.core.hierarchy.pin_group.PinGroup(msg)\n\nRepresents a pin group object.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nPinGroup.add_pins(pins)\n\nAdd a list of padstack instances to the group.\n\nPinGroup.create(layout, name, padstack_instances)\n\nCreate a pin group.\n\nPinGroup.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nPinGroup.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nPinGroup.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nPinGroup.delete()\n\nDelete the layout object.\n\nPinGroup.find(layout, name)\n\nFind a pin group by name in a given layout.\n\nPinGroup.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nPinGroup.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nPinGroup.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nPinGroup.remove_pins(pins)\n\nRemove a list of padstack instances from the group.\n\nPinGroup.set_product_property(prod_id, ...)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nPinGroup.unique_name(layout, prefix)\n\nGet a unique pin group name in the layout using a given prefix.\n\n\n\nAttributes\n\n\n\n\n\n\n\nPinGroup.component\n\nComponentGroup:         Component of the Connectable object.\n\nPinGroup.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nPinGroup.group\n\nGroup object.\n\nPinGroup.id\n\nint: Unique ID of the EDB object.\n\nPinGroup.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nPinGroup.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nPinGroup.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nPinGroup.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nPinGroup.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nPinGroup.layout\n\nLayout: Layout owning the object.\n\nPinGroup.layout_obj_type\n\n\n\nPinGroup.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nPinGroup.name\n\nstr: Name of the pin group.\n\nPinGroup.net\n\nNet: Net of the Connectable object.\n\nPinGroup.obj_type\n\nLayoutObjType: Layout object type.\n\nPinGroup.pin_group_terminal\n\nPinGroupTerminal: Terminal this pin group is part of.\n\nPinGroup.pins\n\nlist of PadstackInstances:         Padstack instances.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.polygon_data",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.polygon_data.html#polygon_data",
        "title": "polygon_data",
        "section": "polygon_data",
        "text": "PolygonData: Outer contour of the polygon.\npolygon_data\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.polygon_data",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.polygon_data.html#ansys.edb.core.primitive.primitive.Polygon.polygon_data",
        "title": "polygon_data > polygon_data > polygon_data",
        "section": "polygon_data > polygon_data",
        "text": "property Polygon.polygon_data\n\nPolygonData: Outer contour of the polygon.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Edge",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Edge.html#edge",
        "title": "Edge",
        "section": "Edge",
        "text": "Represents an edge.\nEdge.cast()\nCast the base edge object to the correct subclass, if possible.\nEdge.id\nint: Unique ID of the EDB object.\nEdge.is_null\nbool: Flag indicating if the object exists in the database.\nEdge.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nEdge.type\n\nEdge\nEdge.cast\nEdge.id\nint\nEdge.is_null\nbool\nEdge.msg\nEDBObjMessage\nEdge.type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Edge",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Edge.html#ansys.edb.core.terminal.terminals.Edge",
        "title": "Edge > Edge > Edge",
        "section": "Edge > Edge",
        "text": "class ansys.edb.core.terminal.terminals.Edge(msg)\n\nRepresents an edge.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nEdge.cast()\n\nCast the base edge object to the correct subclass, if possible.\n\n\n\nAttributes\n\n\n\n\n\n\n\nEdge.id\n\nint: Unique ID of the EDB object.\n\nEdge.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nEdge.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nEdge.type\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.create",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a cell.\nDatabase to create the cell in.\nType of the cell to create.\nName of the cell.\nCell created.\ncreate\nDatabase\nCellType\npython:str\nCell"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.create",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.create.html#ansys.edb.core.layout.cell.Cell.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod Cell.create(db, cell_type, cell_name)\n\nCreate a cell.\n\nParameters\n\ndb\n\nDatabase\n\nDatabase to create the cell in.\n\ncell_type\n\nCellType\n\nType of the cell to create.\n\ncell_name\n\npython:str\n\nName of the cell.\n\nReturns\n\nCell\n\nCell created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.tangent_at",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.tangent_at.html#tangent_at",
        "title": "tangent_at",
        "section": "tangent_at",
        "text": "Get the tangent vector of the arc at a given point.\nPoint.\ntangent_at\nansys.edb.core.typing.PointLike\nPointData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.tangent_at",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.tangent_at.html#ansys.edb.core.geometry.arc_data.ArcData.tangent_at",
        "title": "tangent_at > tangent_at > tangent_at",
        "section": "tangent_at > tangent_at",
        "text": "ArcData.tangent_at(point)\n\nGet the tangent vector of the arc at a given point.\n\nParameters\n\npoint\n\nansys.edb.core.typing.PointLike\n\nPoint.\n\nReturns\n\nPointData\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentType",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentType.html#componenttype",
        "title": "ComponentType",
        "section": "ComponentType",
        "text": "Provides an enum representing component types.\nComponentType.OTHER\n\nComponentType.RESISTOR\n\nComponentType.INDUCTOR\n\nComponentType.CAPACITOR\n\nComponentType.IC\n\nComponentType.IO\n\nComponentType.INVALID\n\nComponentType\nComponentType.OTHER\nComponentType.RESISTOR\nComponentType.INDUCTOR\nComponentType.CAPACITOR\nComponentType.IC\nComponentType.IO\nComponentType.INVALID"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentType",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentType.html#ansys.edb.core.hierarchy.component_group.ComponentType",
        "title": "ComponentType > ComponentType > ComponentType",
        "section": "ComponentType > ComponentType",
        "text": "class ansys.edb.core.hierarchy.component_group.ComponentType(value)\n\nProvides an enum representing component types.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nComponentType.OTHER\n\n\n\nComponentType.RESISTOR\n\n\n\nComponentType.INDUCTOR\n\n\n\nComponentType.CAPACITOR\n\n\n\nComponentType.IC\n\n\n\nComponentType.IO\n\n\n\nComponentType.INVALID\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_property.ComponentProperty.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.component_property.ComponentProperty.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_property.ComponentProperty.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.component_property.ComponentProperty.msg.html#ansys.edb.core.definition.component_property.ComponentProperty.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property ComponentProperty.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.layout",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.layout.html#layout",
        "title": "layout",
        "section": "layout",
        "text": "Layout: Layout owning the object.\nThis property is read-only.\nlayout\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.layout",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.layout.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.layout",
        "title": "layout > layout > layout",
        "section": "layout > layout",
        "text": "property ComponentGroup.layout\n\nLayout: Layout owning the object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.delete",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the layout object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.delete",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.delete.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "VoltageRegulator.delete()\n\nDelete the layout object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the product property.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.get_product_property.html#ansys.edb.core.primitive.primitive.Circle.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "Circle.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nReturns\n\npython:str\n\nString stored in the product property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.component",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.component.html#component",
        "title": "component",
        "section": "component",
        "text": "ComponentGroup:         Component of the Connectable object.\ncomponent\nComponentGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.component",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.component.html#ansys.edb.core.hierarchy.via_group.ViaGroup.component",
        "title": "component > component > component",
        "section": "component > component",
        "text": "property ViaGroup.component\n\nComponentGroup:         Component of the Connectable object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.dc",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.dc.html#dc",
        "title": "dc",
        "section": "dc",
        "text": "SIWaveDCSettings: DC settings for SIWave simulations.\ndc\nSIWaveDCSettings"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.dc",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.dc.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.dc",
        "title": "dc > dc > dc",
        "section": "dc > dc",
        "text": "property SIWaveSimulationSettings.dc\n\nSIWaveDCSettings: DC settings for SIWave simulations.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property of the layer for a given product ID and attribute ID.\nProduct ID.\nAttribute ID.\nNew product property value.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.set_product_property.html#ansys.edb.core.layer.via_layer.ViaLayer.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "ViaLayer.set_product_property(prod_id, attr_it, prop_value)\n\nSet the product property of the layer for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nProduct ID.\n\nattr_it\n\npython:int\n\nAttribute ID.\n\nprop_value\n\npython:str\n\nNew product property value.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.definition_type",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.definition_type.html#definition_type",
        "title": "definition_type",
        "section": "definition_type",
        "text": "DefinitionObjType: Object type of the bondwire definition.\ndefinition_type\nDefinitionObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.definition_type",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.definition_type.html#ansys.edb.core.definition.bondwire_def.ApdBondwireDef.definition_type",
        "title": "definition_type > definition_type > definition_type",
        "section": "definition_type > definition_type",
        "text": "property ApdBondwireDef.definition_type\n\nDefinitionObjType: Object type of the bondwire definition.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.set_connection_pt",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.set_connection_pt.html#set_connection_pt",
        "title": "set_connection_pt",
        "section": "set_connection_pt",
        "text": "Set connection point position and direction.\nLayer name.\nPosition.\nDirection.\nset_connection_pt\npython:str\nansys.edb.core.typing.PointLike\nConnectionPtDirection"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.set_connection_pt",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.set_connection_pt.html#ansys.edb.core.definition.padstack_def_data.PadstackDefData.set_connection_pt",
        "title": "set_connection_pt > set_connection_pt > set_connection_pt",
        "section": "set_connection_pt > set_connection_pt",
        "text": "PadstackDefData.set_connection_pt(layer, position, direction)\n\nSet connection point position and direction.\n\nParameters\n\nlayer\n\npython:str\n\nLayer name.\n\nposition\n\nansys.edb.core.typing.PointLike\n\nPosition.\n\ndirection\n\nConnectionPtDirection\n\nDirection.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.html#materialdef",
        "title": "MaterialDef",
        "section": "MaterialDef",
        "text": "Represents a material definition.\nMaterialDef.create(database, name, **kwargs)\nCreate a material definition in a given database.\nMaterialDef.delete()\nDelete the material definition.\nMaterialDef.find_by_name(database, name)\nFind a material definition by name in a given database.\nMaterialDef.get_all_properties()\nGet all properties of the material.\nMaterialDef.get_anisotropic_thermal_modifier(...)\nGet the anisotropic thermal modifier of a given material definition.\nMaterialDef.get_dimensions(material_property_id)\nGet dimensions of a given material definition.\nMaterialDef.get_property(material_property)\nSet a property value of the material.\nMaterialDef.get_thermal_modifier(...)\nGet the thermal modifier of a given material definition.\nMaterialDef.remove_property(material_property)\nRemove the value from a material property.\nMaterialDef.set_anisotropic_thermal_modifier(...)\nSet the anisotropic thermal modifier of a given material definition.\nMaterialDef.set_property(material_property, ...)\nSet a material property for a given component.\nMaterialDef.set_thermal_modifier(...)\nSet the thermal modifier of the material definition.\nMaterialDef.definition_type\nDefinitionObjType: Type of the material definition.\nMaterialDef.dielectric_material_model\nDielectricMaterialModel:         Dielectric material model of the material definition.\nMaterialDef.id\nint: Unique ID of the EDB object.\nMaterialDef.is_null\nbool: Flag indicating if the object exists in the database.\nMaterialDef.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nMaterialDef.name\nstr: Name of the material definition.\nMaterialDef\nMaterialDef.create\nMaterialDef.delete\nMaterialDef.find_by_name\nMaterialDef.get_all_properties\nMaterialDef.get_anisotropic_thermal_modifier\nMaterialDef.get_dimensions\nMaterialDef.get_property\nMaterialDef.get_thermal_modifier\nMaterialDef.remove_property\nMaterialDef.set_anisotropic_thermal_modifier\nMaterialDef.set_property\nMaterialDef.set_thermal_modifier\nMaterialDef.definition_type\nDefinitionObjType\nMaterialDef.dielectric_material_model\nDielectricMaterialModel\nMaterialDef.id\nint\nMaterialDef.is_null\nbool\nMaterialDef.msg\nEDBObjMessage\nMaterialDef.name\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.html#ansys.edb.core.definition.material_def.MaterialDef",
        "title": "MaterialDef > MaterialDef > MaterialDef",
        "section": "MaterialDef > MaterialDef",
        "text": "class ansys.edb.core.definition.material_def.MaterialDef(msg)\n\nRepresents a material definition.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nMaterialDef.create(database, name, **kwargs)\n\nCreate a material definition in a given database.\n\nMaterialDef.delete()\n\nDelete the material definition.\n\nMaterialDef.find_by_name(database, name)\n\nFind a material definition by name in a given database.\n\nMaterialDef.get_all_properties()\n\nGet all properties of the material.\n\nMaterialDef.get_anisotropic_thermal_modifier(...)\n\nGet the anisotropic thermal modifier of a given material definition.\n\nMaterialDef.get_dimensions(material_property_id)\n\nGet dimensions of a given material definition.\n\nMaterialDef.get_property(material_property)\n\nSet a property value of the material.\n\nMaterialDef.get_thermal_modifier(...)\n\nGet the thermal modifier of a given material definition.\n\nMaterialDef.remove_property(material_property)\n\nRemove the value from a material property.\n\nMaterialDef.set_anisotropic_thermal_modifier(...)\n\nSet the anisotropic thermal modifier of a given material definition.\n\nMaterialDef.set_property(material_property, ...)\n\nSet a material property for a given component.\n\nMaterialDef.set_thermal_modifier(...)\n\nSet the thermal modifier of the material definition.\n\n\n\nAttributes\n\n\n\n\n\n\n\nMaterialDef.definition_type\n\nDefinitionObjType: Type of the material definition.\n\nMaterialDef.dielectric_material_model\n\nDielectricMaterialModel:         Dielectric material model of the material definition.\n\nMaterialDef.id\n\nint: Unique ID of the EDB object.\n\nMaterialDef.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nMaterialDef.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nMaterialDef.name\n\nstr: Name of the material definition.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the property.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.set_product_property.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "CellInstance.set_product_property(prod_id, attr_id, prop_value)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nprop_value\n\npython:str\n\nString stored in the property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.msg",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.msg",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.msg.html#ansys.edb.core.hierarchy.pin_group.PinGroup.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property PinGroup.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_circuit_port",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_circuit_port.html#is_circuit_port",
        "title": "is_circuit_port",
        "section": "is_circuit_port",
        "text": "bool: Flag indicating if the terminal is a circuit port.\nis_circuit_port\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_circuit_port",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_circuit_port.html#ansys.edb.core.terminal.terminals.PointTerminal.is_circuit_port",
        "title": "is_circuit_port > is_circuit_port > is_circuit_port",
        "section": "is_circuit_port > is_circuit_port",
        "text": "property PointTerminal.is_circuit_port\n\nbool: Flag indicating if the terminal is a circuit port.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.lrc",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.lrc.html#lrc",
        "title": "lrc",
        "section": "lrc",
        "text": "Value: Load regulation current of the voltage regulator.\nThis property can be set with ValueLike.\nlrc\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.lrc",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.lrc.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.lrc",
        "title": "lrc > lrc > lrc",
        "section": "lrc > lrc",
        "text": "property VoltageRegulator.lrc\n\nValue: Load regulation current of the voltage regulator.\n\nThis property can be set with ValueLike.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.scale",
        "href": "api/_autosummary/ansys.edb.core.database.Database.scale.html#scale",
        "title": "scale",
        "section": "scale",
        "text": "Scale all geometries and their locations uniformly by a positive factor.\nAmount to multiply coordinates by.\nscale\npython:float"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.scale",
        "href": "api/_autosummary/ansys.edb.core.database.Database.scale.html#ansys.edb.core.database.Database.scale",
        "title": "scale > scale > scale",
        "section": "scale > scale",
        "text": "Database.scale(scale_factor)\n\nScale all geometries and their locations uniformly by a positive factor.\n\nParameters\n\nscale_factor\n\npython:float\n\nAmount to multiply coordinates by.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_layer_range",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_layer_range.html#get_layer_range",
        "title": "get_layer_range",
        "section": "get_layer_range",
        "text": "Get the top and bottom layers of the padstack instance.\nThe tuple is in this format: (top_layer, bottom_layer).\ntop_layer: Top layer of the padstack instance\nbottom_layer: Bottom layer of the padstack instance\nget_layer_range\npython:tuple\nLayer\nLayer\n(top_layer, bottom_layer)\ntop_layer\nbottom_layer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_layer_range",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_layer_range.html#ansys.edb.core.primitive.primitive.PadstackInstance.get_layer_range",
        "title": "get_layer_range > get_layer_range > get_layer_range",
        "section": "get_layer_range > get_layer_range",
        "text": "PadstackInstance.get_layer_range()\n\nGet the top and bottom layers of the padstack instance.\n\nReturns\n\npython:tuple[Layer, Layer]\n\nThe tuple is in this format: (top_layer, bottom_layer).\n\ntop_layer: Top layer of the padstack instance\n\nbottom_layer: Bottom layer of the padstack instance\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.primitive_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.primitive_type.html#primitive_type",
        "title": "primitive_type",
        "section": "primitive_type",
        "text": "PrimitiveType: Primitive type of the primitive.\nThis property is read-only.\nprimitive_type\nPrimitiveType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.primitive_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.primitive_type.html#ansys.edb.core.primitive.primitive.Path.primitive_type",
        "title": "primitive_type > primitive_type > primitive_type",
        "section": "primitive_type > primitive_type",
        "text": "property Path.primitive_type\n\nPrimitiveType: Primitive type of the primitive.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.get_parameter_override",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.get_parameter_override.html#get_parameter_override",
        "title": "get_parameter_override",
        "section": "get_parameter_override",
        "text": "Get the override of the cell instance parameter by name.\nName of the cell instance parameter.\nOverride value for the cell instance parameter.\nget_parameter_override\npython:str\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.get_parameter_override",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.get_parameter_override.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.get_parameter_override",
        "title": "get_parameter_override > get_parameter_override > get_parameter_override",
        "section": "get_parameter_override > get_parameter_override",
        "text": "CellInstance.get_parameter_override(param_name)\n\nGet the override of the cell instance parameter by name.\n\nParameters\n\nparam_name\n\npython:str\n\nName of the cell instance parameter.\n\nReturns\n\nValue\n\nOverride value for the cell instance parameter.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.is_mcad_stride.html#is_mcad_stride",
        "title": "is_mcad_stride",
        "section": "is_mcad_stride",
        "text": "bool: Flag indicating if this is a Stride MCAD model.\nThis property is read-only.\nis_mcad_stride\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.is_mcad_stride.html#ansys.edb.core.hierarchy.group.Group.is_mcad_stride",
        "title": "is_mcad_stride > is_mcad_stride > is_mcad_stride",
        "section": "is_mcad_stride > is_mcad_stride",
        "text": "property Group.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.create",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a rectangle.\nLayout to create the rectangle in.\nLayer the rectangle is to created on.\nNet the rectangle is to have.\nType that defines the meaning of the given parameters.\nX value of the lower-left point or center point.\nY value of the lower-left point or center point.\nX value of the upper-right point or width.\nY value of the upper-right point or height.\nCorner radius.\nRotation.\nRectangle created.\ncreate\nLayout\npython:str\nLayer\npython:str\nNet\npython:None\nRectangleRepresentationType\nValue\nValue\nValue\nValue\nValue\nValue\nRectangle"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.create",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.create.html#ansys.edb.core.primitive.primitive.Rectangle.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod Rectangle.create(layout, layer, net, rep_type, param1, param2, param3, param4, corner_rad, rotation)\n\nCreate a rectangle.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to create the rectangle in.\n\nlayer\n\npython:str or Layer\n\nLayer the rectangle is to created on.\n\nnet\n\npython:str or Net or python:None\n\nNet the rectangle is to have.\n\nrep_type\n\nRectangleRepresentationType\n\nType that defines the meaning of the given parameters.\n\nparam1\n\nValue\n\nX value of the lower-left point or center point.\n\nparam2\n\nValue\n\nY value of the lower-left point or center point.\n\nparam3\n\nValue\n\nX value of the upper-right point or width.\n\nparam4\n\nValue\n\nY value of the upper-right point or height.\n\ncorner_rad\n\nValue\n\nCorner radius.\n\nrotation\n\nValue\n\nRotation.\n\nReturns\n\nRectangle\n\nRectangle created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDs given a product ID for the layout object.\nID representing a product that supports the EDB.\nAll user-defined attribute IDs for properties stored in the object\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.get_product_property_ids.html#ansys.edb.core.terminal.terminals.BundleTerminal.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "BundleTerminal.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nReturns\n\npython:list[python:int]\n\nAll user-defined attribute IDs for properties stored in the object\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.id.html#ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property PinPairModel.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.create_3d_comp.html#create_3d_comp",
        "title": "create_3d_comp",
        "section": "create_3d_comp",
        "text": "Create a 3D composite model from an MCAD file.\n3D composite model created.\ncreate_3d_comp\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.create_3d_comp.html#ansys.edb.core.terminal.terminals.Terminal.create_3d_comp",
        "title": "create_3d_comp > create_3d_comp > create_3d_comp",
        "section": "create_3d_comp > create_3d_comp",
        "text": "Terminal.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nReturns\n\nMcadModel\n\n3D composite model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.create",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a bondwire.\nLayout to create the bondwire in.\nType of the bondwire. Options are kAPDBondWire and kJDECBondWire.\nBondwire definition name.\nLayer name to create the bondwire on.\nBondwire width.\nBondwire material name.\nStart context. None means top-level,.\nName of the start layer.\nX value of the start point.\nY value of the start point.\nEnd context: End content. None means top-level.\nName of the end layer.\nX value of the end point.\nY value of the end point.\nNet of the bondwire.\nBondwire object created.\ncreate\nLayout\nBondwireType\nkAPDBondWire\nkJDECBondWire\npython:str\npython:str\nValue\npython:str\nCellInstance\nNone\npython:str\nValue\nValue\nCellInstance\nNone\npython:str\nValue\nValue\npython:str\nNet\npython:None\nBondwire"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.create",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.create.html#ansys.edb.core.primitive.primitive.Bondwire.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod Bondwire.create(layout, bondwire_type, definition_name, placement_layer, width, material, start_context, start_layer_name, start_x, start_y, end_context, end_layer_name, end_x, end_y, net)\n\nCreate a bondwire.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to create the bondwire in.\n\nbondwire_type\n\nBondwireType\n\nType of the bondwire. Options are kAPDBondWire and kJDECBondWire.\n\ndefinition_name\n\npython:str\n\nBondwire definition name.\n\nplacement_layer\n\npython:str\n\nLayer name to create the bondwire on.\n\nwidth\n\nValue\n\nBondwire width.\n\nmaterial\n\npython:str\n\nBondwire material name.\n\nstart_context\n\nCellInstance\n\nStart context. None means top-level,.\n\nstart_layer_name\n\npython:str\n\nName of the start layer.\n\nstart_x\n\nValue\n\nX value of the start point.\n\nstart_y\n\nValue\n\nY value of the start point.\n\nend_context\n\nCellInstance\n\nEnd context: End content. None means top-level.\n\nend_layer_name\n\npython:str\n\nName of the end layer.\n\nend_x\n\nValue\n\nX value of the end point.\n\nend_y\n\nValue\n\nY value of the end point.\n\nnet\n\npython:str or Net or python:None\n\nNet of the bondwire.\n\nReturns\n\nBondwire\n\nBondwire object created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.create_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.create_stride.html#create_stride",
        "title": "create_stride",
        "section": "create_stride",
        "text": "Create a Stride model from an MCAD file.\nStride model created.\ncreate_stride\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.create_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.create_stride.html#ansys.edb.core.primitive.primitive.Bondwire.create_stride",
        "title": "create_stride > create_stride > create_stride",
        "section": "create_stride > create_stride",
        "text": "Bondwire.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nReturns\n\nMcadModel\n\nStride model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballPlacement.ABOVE_PADSTACK",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballPlacement.ABOVE_PADSTACK.html#above_padstack",
        "title": "ABOVE_PADSTACK",
        "section": "ABOVE_PADSTACK",
        "text": "ABOVE_PADSTACK"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballPlacement.ABOVE_PADSTACK",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballPlacement.ABOVE_PADSTACK.html#ansys.edb.core.definition.padstack_def_data.SolderballPlacement.ABOVE_PADSTACK",
        "title": "ABOVE_PADSTACK > ABOVE_PADSTACK > ABOVE_PADSTACK",
        "section": "ABOVE_PADSTACK > ABOVE_PADSTACK",
        "text": "SolderballPlacement.ABOVE_PADSTACK = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.find_by_id.html#find_by_id",
        "title": "find_by_id",
        "section": "find_by_id",
        "text": "Find a Connectable object by database ID in a given layout.\nLayout to search for the Connectable object.\nDatabase ID.\nConnectable object with the given database ID.\nfind_by_id\nLayout\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.find_by_id.html#ansys.edb.core.terminal.terminals.BundleTerminal.find_by_id",
        "title": "find_by_id > find_by_id > find_by_id",
        "section": "find_by_id > find_by_id",
        "text": "classmethod BundleTerminal.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the Connectable object.\n\nuid\n\npython:int\n\nDatabase ID.\n\nReturns\n\nConnectable\n\nConnectable object with the given database ID.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.CellType.CIRCUIT_CELL",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.CellType.CIRCUIT_CELL.html#circuit_cell",
        "title": "CIRCUIT_CELL",
        "section": "CIRCUIT_CELL",
        "text": "CIRCUIT_CELL"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.CellType.CIRCUIT_CELL",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.CellType.CIRCUIT_CELL.html#ansys.edb.core.layout.cell.CellType.CIRCUIT_CELL",
        "title": "CIRCUIT_CELL > CIRCUIT_CELL > CIRCUIT_CELL",
        "section": "CIRCUIT_CELL > CIRCUIT_CELL",
        "text": "CellType.CIRCUIT_CELL = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.net",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.net.html#net",
        "title": "net",
        "section": "net",
        "text": "Net: Net of the Connectable object.\nThis property can be set with a Net instance, a string, or None.\nnet\nNet\nNet\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.net",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.net.html#ansys.edb.core.primitive.primitive.Text.net",
        "title": "net > net > net",
        "section": "net > net",
        "text": "property Text.net\n\nNet: Net of the Connectable object.\n\nThis property can be set with a Net instance, a string, or None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.component_def",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.component_def.html#component_def",
        "title": "component_def",
        "section": "component_def",
        "text": "ComponentDef: Component definition for the         hierarchy object if it exists, None otherwise.\nThis property is read-only.\ncomponent_def\nComponentDef\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.component_def",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.component_def.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.component_def",
        "title": "component_def > component_def > component_def",
        "section": "component_def > component_def",
        "text": "property ComponentGroup.component_def\n\nComponentDef: Component definition for the         hierarchy object if it exists, None otherwise.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.no_net_name",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.no_net_name.html#no_net_name",
        "title": "no_net_name",
        "section": "no_net_name",
        "text": "no_net_name"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.no_net_name",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.no_net_name.html#ansys.edb.core.net.net.Net.no_net_name",
        "title": "no_net_name > no_net_name > no_net_name",
        "section": "no_net_name > no_net_name",
        "text": "Net.no_net_name = '<NO-NET>'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_from_axis_and_angle",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_from_axis_and_angle.html#create_from_axis_and_angle",
        "title": "create_from_axis_and_angle",
        "section": "create_from_axis_and_angle",
        "text": "Create a 3D transformation with the given axis and angle.\nAxis.\nAngle.\ncreate_from_axis_and_angle\nfloat\nTransform3D"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_from_axis_and_angle",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_from_axis_and_angle.html#ansys.edb.core.utility.transform3d.Transform3D.create_from_axis_and_angle",
        "title": "create_from_axis_and_angle > create_from_axis_and_angle > create_from_axis_and_angle",
        "section": "create_from_axis_and_angle > create_from_axis_and_angle",
        "text": "classmethod Transform3D.create_from_axis_and_angle(axis, angle)\n\nCreate a 3D transformation with the given axis and angle.\n\nParameters\n\naxis\n\nPoint3DLike\n\nAxis.\n\nangle\n\nfloat\n\nAngle.\n\nReturns\n\nTransform3D\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.net",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.net.html#net",
        "title": "net",
        "section": "net",
        "text": "Net: Net of the Connectable object.\nThis property can be set with a Net instance, a string, or None.\nnet\nNet\nNet\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.net",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.net.html#ansys.edb.core.terminal.terminals.EdgeTerminal.net",
        "title": "net > net > net",
        "section": "net > net",
        "text": "property EdgeTerminal.net\n\nNet: Net of the Connectable object.\n\nThis property can be set with a Net instance, a string, or None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.create",
        "href": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a Djordjecvic Sarkar dielectric material model.\ncreate\nDjordjecvicSarkarModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.create",
        "href": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.create.html#ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod DjordjecvicSarkarModel.create()\n\nCreate a Djordjecvic Sarkar dielectric material model.\n\nReturns\n\nDjordjecvicSarkarModel\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.create_with_component",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.create_with_component.html#create_with_component",
        "title": "create_with_component",
        "section": "create_with_component",
        "text": "Create a cell instance with a component definition.\nLayout to create the cell instance in.\nName of the cell instance.\nComponent that the cell instance refers to.\nCell instance created.\ncreate_with_component\nLayout\npython:str\nComponentDef\nCellInstance"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.create_with_component",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.create_with_component.html#ansys.edb.core.hierarchy.inst_array.InstArray.create_with_component",
        "title": "create_with_component > create_with_component > create_with_component",
        "section": "create_with_component > create_with_component",
        "text": "classmethod InstArray.create_with_component(layout, name, ref)\n\nCreate a cell instance with a component definition.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to create the cell instance in.\n\nname\n\npython:str\n\nName of the cell instance.\n\nref\n\nComponentDef\n\nComponent that the cell instance refers to.\n\nReturns\n\nCellInstance\n\nCell instance created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.ThermalModifier.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.ThermalModifier.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.ThermalModifier.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.ThermalModifier.msg.html#ansys.edb.core.definition.material_def.ThermalModifier.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property ThermalModifier.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.AdaptType.BROADBAND",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.AdaptType.BROADBAND.html#broadband",
        "title": "BROADBAND",
        "section": "BROADBAND",
        "text": "BROADBAND"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.AdaptType.BROADBAND",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.AdaptType.BROADBAND.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.AdaptType.BROADBAND",
        "title": "BROADBAND > BROADBAND > BROADBAND",
        "section": "BROADBAND > BROADBAND",
        "text": "AdaptType.BROADBAND = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.product_solver_option",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.product_solver_option.html#product_solver_option",
        "title": "product_solver_option",
        "section": "product_solver_option",
        "text": "Get the name of the product solver option.\nID of the product.\nName of the solver.\nName of the product solver option.\nproduct_solver_option\nProductIdType\nstr\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.product_solver_option",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.product_solver_option.html#ansys.edb.core.terminal.terminals.Terminal.product_solver_option",
        "title": "product_solver_option > product_solver_option > product_solver_option",
        "section": "product_solver_option > product_solver_option",
        "text": "Terminal.product_solver_option(product_id, solver_name)\n\nGet the name of the product solver option.\n\nParameters\n\nproduct_id\n\nProductIdType\n\nID of the product.\n\nsolver_name\n\nstr\n\nName of the solver.\n\nReturns\n\nstr\n\nName of the product solver option.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_circuit_port",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_circuit_port.html#is_circuit_port",
        "title": "is_circuit_port",
        "section": "is_circuit_port",
        "text": "bool: Flag indicating if the terminal is a circuit port.\nis_circuit_port\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_circuit_port",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_circuit_port.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.is_circuit_port",
        "title": "is_circuit_port > is_circuit_port > is_circuit_port",
        "section": "is_circuit_port > is_circuit_port",
        "text": "property TerminalInstanceTerminal.is_circuit_port\n\nbool: Flag indicating if the terminal is a circuit port.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.edb_uid.html#edb_uid",
        "title": "edb_uid",
        "section": "edb_uid",
        "text": "int: Unique, persistent ID for the Connectable object.\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\nThis property is read-only.\nedb_uid\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.edb_uid.html#ansys.edb.core.primitive.primitive.Primitive.edb_uid",
        "title": "edb_uid > edb_uid > edb_uid",
        "section": "edb_uid > edb_uid",
        "text": "property Primitive.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.cast",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.cast.html#cast",
        "title": "cast",
        "section": "cast",
        "text": "Cast the layer object to the correct concrete type.\ncast\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.cast",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.cast.html#ansys.edb.core.layer.via_layer.ViaLayer.cast",
        "title": "cast > cast > cast",
        "section": "cast > cast",
        "text": "ViaLayer.cast()\n\nCast the layer object to the correct concrete type.\n\nReturns\n\nLayer\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.voids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.voids.html#voids",
        "title": "voids",
        "section": "voids",
        "text": "list of Primitive: List of void        primitive objects inside the primitive.\nThis property is read-only.\nvoids\nlist\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.voids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.voids.html#ansys.edb.core.primitive.primitive.BoardBendDef.voids",
        "title": "voids > voids > voids",
        "section": "voids > voids",
        "text": "property BoardBendDef.voids\n\nlist of Primitive: List of void        primitive objects inside the primitive.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXSimulationSettings.enabled",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXSimulationSettings.enabled.html#enabled",
        "title": "enabled",
        "section": "enabled",
        "text": "bool: Flag indicating if the simulation setup is enabled.\nenabled\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXSimulationSettings.enabled",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXSimulationSettings.enabled.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXSimulationSettings.enabled",
        "title": "enabled > enabled > enabled",
        "section": "enabled > enabled",
        "text": "property RaptorXSimulationSettings.enabled\n\nbool: Flag indicating if the simulation setup is enabled.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.thickness",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.thickness.html#thickness",
        "title": "thickness",
        "section": "thickness",
        "text": "Value: Thickness value of the layer.\nThe setter accepts a ValueLike term.\nthickness\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.thickness",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.thickness.html#ansys.edb.core.layer.stackup_layer.StackupLayer.thickness",
        "title": "thickness > thickness > thickness",
        "section": "thickness > thickness",
        "text": "property StackupLayer.thickness\n\nValue: Thickness value of the layer.\n\nThe setter accepts a ValueLike term.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.msg",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.msg",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.msg.html#ansys.edb.core.primitive.primitive.Polygon.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property Polygon.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.return_current_distribution",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.return_current_distribution.html#return_current_distribution",
        "title": "return_current_distribution",
        "section": "return_current_distribution",
        "text": "bool: Flag indicating if return current distribution is traced.\nreturn_current_distribution\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.return_current_distribution",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.return_current_distribution.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.return_current_distribution",
        "title": "return_current_distribution > return_current_distribution > return_current_distribution",
        "section": "return_current_distribution > return_current_distribution",
        "text": "property SIWaveAdvancedSettings.return_current_distribution\n\nbool: Flag indicating if return current distribution is traced.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.create",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a JEDEC5 bondwire definition.\nDatabase to create the JEDEC5 bondwire definition in.\nName of the JEDEC5 bondwire definition.\nJEDEC5 bondwire definition created.\ncreate\nDatabase\npython:str\nJedec5BondwireDef"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.create",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.create.html#ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod Jedec5BondwireDef.create(database, name)\n\nCreate a JEDEC5 bondwire definition.\n\nParameters\n\ndatabase\n\nDatabase\n\nDatabase to create the JEDEC5 bondwire definition in.\n\nname\n\npython:str\n\nName of the JEDEC5 bondwire definition.\n\nReturns\n\nJedec5BondwireDef\n\nJEDEC5 bondwire definition created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.id.html#ansys.edb.core.terminal.terminals.Terminal.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property Terminal.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.restrict_max_elements",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.restrict_max_elements.html#restrict_max_elements",
        "title": "restrict_max_elements",
        "section": "restrict_max_elements",
        "text": "bool: Flag indicating if the maximum number of mesh elements is restricted.\nrestrict_max_elements\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.restrict_max_elements",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.restrict_max_elements.html#ansys.edb.core.simulation_setup.mesh_operation.SkinDepthMeshOperation.restrict_max_elements",
        "title": "restrict_max_elements > restrict_max_elements > restrict_max_elements",
        "section": "restrict_max_elements > restrict_max_elements",
        "text": "property SkinDepthMeshOperation.restrict_max_elements\n\nbool: Flag indicating if the maximum number of mesh elements is restricted.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.get_hole_parameters",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.get_hole_parameters.html#get_hole_parameters",
        "title": "get_hole_parameters",
        "section": "get_hole_parameters",
        "text": "Get hole parameters in their original values in the database.\nThe tuple is in this format: (fp, offset_x, offset_y, rotation).\nfp: Polygon geometry\noffset_x: X offset\noffset_y: Y offset\nrotation : Rotation\nget_hole_parameters\npython:tuple\nPolygonData\nValue\nValue\nValue\n(fp, offset_x, offset_y, rotation)\nfp\noffset_x\noffset_y\nrotation"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.get_hole_parameters",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.get_hole_parameters.html#ansys.edb.core.definition.padstack_def_data.PadstackDefData.get_hole_parameters",
        "title": "get_hole_parameters > get_hole_parameters > get_hole_parameters",
        "section": "get_hole_parameters > get_hole_parameters",
        "text": "PadstackDefData.get_hole_parameters()\n\nGet hole parameters in their original values in the database.\n\nReturns\n\npython:tuple[PolygonData,         Value,         Value, Value]\n\nThe tuple is in this format: (fp, offset_x, offset_y, rotation).\n\nfp: Polygon geometry\n\noffset_x: X offset\n\noffset_y: Y offset\n\nrotation : Rotation\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.port_post_processing_prop",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.port_post_processing_prop.html#port_post_processing_prop",
        "title": "port_post_processing_prop",
        "section": "port_post_processing_prop",
        "text": "PortPostProcessingProp: Port postprocessing properties.\nport_post_processing_prop\nPortPostProcessingProp"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.port_post_processing_prop",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.port_post_processing_prop.html#ansys.edb.core.terminal.terminals.PointTerminal.port_post_processing_prop",
        "title": "port_post_processing_prop > port_post_processing_prop > port_post_processing_prop",
        "section": "port_post_processing_prop > port_post_processing_prop",
        "text": "property PointTerminal.port_post_processing_prop\n\nPortPostProcessingProp: Port postprocessing properties.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.sparameter_model.SParameterModel.reference_net",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.sparameter_model.SParameterModel.reference_net.html#reference_net",
        "title": "reference_net",
        "section": "reference_net",
        "text": "str: Name of the reference net.\nreference_net\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.sparameter_model.SParameterModel.reference_net",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.sparameter_model.SParameterModel.reference_net.html#ansys.edb.core.hierarchy.sparameter_model.SParameterModel.reference_net",
        "title": "reference_net > reference_net > reference_net",
        "section": "reference_net > reference_net",
        "text": "property SParameterModel.reference_net\n\nstr: Name of the reference net.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.set_parameters",
        "href": "api/_autosummary/ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.set_parameters.html#set_parameters",
        "title": "set_parameters",
        "section": "set_parameters",
        "text": "Set parameters used to define the model.\nList of frequencies.\nList of relative permitivites at each frequency.\nList of loss tangents at each frequency.\nset_parameters\npython:list\npython:float\npython:list\npython:float\npython:list\npython:float"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.set_parameters",
        "href": "api/_autosummary/ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.set_parameters.html#ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.set_parameters",
        "title": "set_parameters > set_parameters > set_parameters",
        "section": "set_parameters > set_parameters",
        "text": "MultipoleDebyeModel.set_parameters(frequencies, permitivities, loss_tangents)\n\nSet parameters used to define the model.\n\nParameters\n\nfrequencies\n\npython:list[python:float]\n\nList of frequencies.\n\npermitivities\n\npython:list[python:float]\n\nList of relative permitivites at each frequency.\n\nloss_tangents\n\npython:list[python:float]\n\nList of loss tangents at each frequency.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.netlist_model.NetlistModel",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.netlist_model.NetlistModel.html#netlistmodel",
        "title": "NetlistModel",
        "section": "NetlistModel",
        "text": "Represents a netlist model object.\nNetlistModel.clone()\nClone a model.\nNetlistModel.create(name)\nCreate a netlist model.\nNetlistModel.id\nint: Unique ID of the EDB object.\nNetlistModel.is_null\nbool: Flag indicating if the object exists in the database.\nNetlistModel.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nNetlistModel.netlist\nstr: Netlist name.\nNetlistModel\nNetlistModel.clone\nNetlistModel.create\nNetlistModel.id\nint\nNetlistModel.is_null\nbool\nNetlistModel.msg\nEDBObjMessage\nNetlistModel.netlist\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.netlist_model.NetlistModel",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.netlist_model.NetlistModel.html#ansys.edb.core.hierarchy.netlist_model.NetlistModel",
        "title": "NetlistModel > NetlistModel > NetlistModel",
        "section": "NetlistModel > NetlistModel",
        "text": "class ansys.edb.core.hierarchy.netlist_model.NetlistModel(msg)\n\nRepresents a netlist model object.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nNetlistModel.clone()\n\nClone a model.\n\nNetlistModel.create(name)\n\nCreate a netlist model.\n\n\n\nAttributes\n\n\n\n\n\n\n\nNetlistModel.id\n\nint: Unique ID of the EDB object.\n\nNetlistModel.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nNetlistModel.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nNetlistModel.netlist\n\nstr: Netlist name.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.get_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.get_hfss_prop.html#get_hfss_prop",
        "title": "get_hfss_prop",
        "section": "get_hfss_prop",
        "text": "Get HFSS properties.\nName of the material property.\nWhether to solve inside.\nget_hfss_prop\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.get_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.get_hfss_prop.html#ansys.edb.core.primitive.primitive.BoardBendDef.get_hfss_prop",
        "title": "get_hfss_prop > get_hfss_prop > get_hfss_prop",
        "section": "get_hfss_prop > get_hfss_prop",
        "text": "BoardBendDef.get_hfss_prop()\n\nGet HFSS properties.\n\nReturns\n\nmaterial\n\npython:str\n\nName of the material property.\n\nsolve_inside\n\nbool\n\nWhether to solve inside.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.type.html#type",
        "title": "type",
        "section": "type",
        "text": "type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.type.html#ansys.edb.core.terminal.terminals.BundleTerminal.type",
        "title": "type > type > type",
        "section": "type > type",
        "text": "BundleTerminal.type = 4\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.set_hole_overrides",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.set_hole_overrides.html#set_hole_overrides",
        "title": "set_hole_overrides",
        "section": "set_hole_overrides",
        "text": "Set the hole overrides of the padstack instance.\nWhether the padstack instance is a hole override.\nHole override diameter of the padstack instance.\nset_hole_overrides\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.set_hole_overrides",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.set_hole_overrides.html#ansys.edb.core.primitive.primitive.PadstackInstance.set_hole_overrides",
        "title": "set_hole_overrides > set_hole_overrides > set_hole_overrides",
        "section": "set_hole_overrides > set_hole_overrides",
        "text": "PadstackInstance.set_hole_overrides(is_hole_override, hole_override)\n\nSet the hole overrides of the padstack instance.\n\nParameters\n\nis_hole_override\n\nbool\n\nWhether the padstack instance is a hole override.\n\nhole_override\n\nValue\n\nHole override diameter of the padstack instance.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the product property.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.get_product_property.html#ansys.edb.core.hierarchy.group.Group.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "Group.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nReturns\n\npython:str\n\nString stored in the product property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.SIGNAL_LAYER",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.SIGNAL_LAYER.html#signal_layer",
        "title": "SIGNAL_LAYER",
        "section": "SIGNAL_LAYER",
        "text": "SIGNAL_LAYER"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.SIGNAL_LAYER",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.SIGNAL_LAYER.html#ansys.edb.core.layer.layer_collection.LayerType.SIGNAL_LAYER",
        "title": "SIGNAL_LAYER > SIGNAL_LAYER > SIGNAL_LAYER",
        "section": "SIGNAL_LAYER > SIGNAL_LAYER",
        "text": "LayerType.SIGNAL_LAYER = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.transpose",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.transpose.html#transpose",
        "title": "transpose",
        "section": "transpose",
        "text": "Transpose the 3D transformation.\ntranspose"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.transpose",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.transpose.html#ansys.edb.core.utility.transform3d.Transform3D.transpose",
        "title": "transpose > transpose > transpose",
        "section": "transpose > transpose",
        "text": "Transform3D.transpose()\n\nTranspose the 3D transformation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.create_hfss.html#create_hfss",
        "title": "create_hfss",
        "section": "create_hfss",
        "text": "Create an HFSS model from an MCAD file.\nAbsolute path of the MCAD file.\nDesign name.\nHFSS model created.\ncreate_hfss\npython:str\npython:str\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.create_hfss.html#ansys.edb.core.layout.layout.Layout.create_hfss",
        "title": "create_hfss > create_hfss > create_hfss",
        "section": "create_hfss > create_hfss",
        "text": "Layout.create_hfss(filename, design)\n\nCreate an HFSS model from an MCAD file.\n\nParameters\n\nfilename\n\npython:str\n\nAbsolute path of the MCAD file.\n\ndesign\n\npython:str\n\nDesign name.\n\nReturns\n\nMcadModel\n\nHFSS model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.create_hfss.html#create_hfss",
        "title": "create_hfss",
        "section": "create_hfss",
        "text": "Create an HFSS model from an MCAD file.\nHFSS model created.\ncreate_hfss\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.create_hfss.html#ansys.edb.core.primitive.primitive.Path.create_hfss",
        "title": "create_hfss > create_hfss > create_hfss",
        "section": "create_hfss > create_hfss",
        "text": "Path.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nReturns\n\nMcadModel\n\nHFSS model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.clone",
        "href": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Clone a port property.\nPort property cloned.\nclone\nPortProperty"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.clone",
        "href": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.clone.html#ansys.edb.core.definition.port_property.PortProperty.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "PortProperty.clone()\n\nClone a port property.\n\nReturns\n\nPortProperty\n\nPort property cloned.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.is_footprint",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.is_footprint.html#is_footprint",
        "title": "is_footprint",
        "section": "is_footprint",
        "text": "bool: Flag indicating if the cell is a footprint.\nThis property is read-only.\nis_footprint\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.is_footprint",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.is_footprint.html#ansys.edb.core.layout.cell.Cell.is_footprint",
        "title": "is_footprint > is_footprint > is_footprint",
        "section": "is_footprint > is_footprint",
        "text": "property Cell.is_footprint\n\nbool: Flag indicating if the cell is a footprint.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.is_mcad_stride.html#is_mcad_stride",
        "title": "is_mcad_stride",
        "section": "is_mcad_stride",
        "text": "bool: Flag indicating if this is a Stride MCAD model.\nThis property is read-only.\nis_mcad_stride\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.is_mcad_stride.html#ansys.edb.core.hierarchy.structure3d.Structure3D.is_mcad_stride",
        "title": "is_mcad_stride > is_mcad_stride > is_mcad_stride",
        "section": "is_mcad_stride > is_mcad_stride",
        "text": "property Structure3D.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.nets",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.nets.html#nets",
        "title": "nets",
        "section": "nets",
        "text": "list of Net: List of nets in the net class.\nThis property is read-only.\nnets\nlist\nNet"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.nets",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.nets.html#ansys.edb.core.net.net_class.NetClass.nets",
        "title": "nets > nets > nets",
        "section": "nets > nets",
        "text": "property NetClass.nets\n\nlist of Net: List of nets in the net class.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.name",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the voltage regulator.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.name",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.name.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property VoltageRegulator.name\n\nstr: Name of the voltage regulator.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry.color",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry.color.html#color",
        "title": "color",
        "section": "color",
        "text": "int: Color of the geometry.\nThis property is read-only.\ncolor\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry.color",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry.color.html#ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance3DGeometry.color",
        "title": "color > color > color",
        "section": "color > color",
        "text": "property LayoutObjInstance3DGeometry.color\n\nint: Color of the geometry.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.id.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property TerminalInstanceTerminal.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.get_version_by_release",
        "href": "api/_autosummary/ansys.edb.core.database.Database.get_version_by_release.html#get_version_by_release",
        "title": "get_version_by_release",
        "section": "get_version_by_release",
        "text": "Get the EDB version for a given release name.\nRelease name.\nEDB version.\nget_version_by_release\npython:str\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.get_version_by_release",
        "href": "api/_autosummary/ansys.edb.core.database.Database.get_version_by_release.html#ansys.edb.core.database.Database.get_version_by_release",
        "title": "get_version_by_release > get_version_by_release > get_version_by_release",
        "section": "get_version_by_release > get_version_by_release",
        "text": "classmethod Database.get_version_by_release(release)\n\nGet the EDB version for a given release name.\n\nParameters\n\nrelease\n\npython:str\n\nRelease name.\n\nReturns\n\npython:str\n\nEDB version.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.points",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.points.html#points",
        "title": "points",
        "section": "points",
        "text": "list of PointData: Geometric points representing the arc.\npoints\nlist\nPointData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.points",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.points.html#ansys.edb.core.geometry.arc_data.ArcData.points",
        "title": "points > points > points",
        "section": "points > points",
        "text": "property ArcData.points\n\nlist of PointData: Geometric points representing the arc.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.is_mcad_stride.html#is_mcad_stride",
        "title": "is_mcad_stride",
        "section": "is_mcad_stride",
        "text": "bool: Flag indicating if this is a Stride MCAD model.\nThis property is read-only.\nis_mcad_stride\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.is_mcad_stride.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.is_mcad_stride",
        "title": "is_mcad_stride > is_mcad_stride > is_mcad_stride",
        "section": "is_mcad_stride > is_mcad_stride",
        "text": "property CellInstance.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.search",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.search.html#search",
        "title": "search",
        "section": "search",
        "text": "Search all objects intersecting a given box.\nTesting region, described as a “lower-left, upper-right” box.\nWhether the RTree object intersects when the bounding-box of its\nPolygonData instance\nintersects the testing  object. If False, an explicit intersection\nis required for a hit.\nList of intersecting RTree objects.\nsearch\npython:tuple\nPointData\nPointData\nPolygonData\nFalse\nlist\nof\nRTreeObj"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.search",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.search.html#ansys.edb.core.geometry.r_tree.RTree.search",
        "title": "search > search > search",
        "section": "search > search",
        "text": "RTree.search(box, bb_search)\n\nSearch all objects intersecting a given box.\n\nParameters\n\nbox\n\npython:tuple[PointData, PointData]\n\nTesting region, described as a “lower-left, upper-right” box.\n\nbb_search\n\nbool\n\nWhether the RTree object intersects when the bounding-box of its\nPolygonData instance\nintersects the testing  object. If False, an explicit intersection\nis required for a hit.\n\nReturns\n\nlist of RTreeObj\n\nList of intersecting RTree objects.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.net",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.net.html#net",
        "title": "net",
        "section": "net",
        "text": "Net: Net of the Connectable object.\nThis property can be set with a Net instance, a string, or None.\nnet\nNet\nNet\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.net",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.net.html#ansys.edb.core.hierarchy.group.Group.net",
        "title": "net > net > net",
        "section": "net > net",
        "text": "property Group.net\n\nNet: Net of the Connectable object.\n\nThis property can be set with a Net instance, a string, or None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.net",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.net.html#net",
        "title": "net",
        "section": "net",
        "text": "Net: Net of the Connectable object.\nThis property can be set with a Net instance, a string, or None.\nnet\nNet\nNet\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.net",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.net.html#ansys.edb.core.primitive.primitive.Polygon.net",
        "title": "net > net > net",
        "section": "net > net",
        "text": "property Polygon.net\n\nNet: Net of the Connectable object.\n\nThis property can be set with a Net instance, a string, or None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_mcad_hfss.html#is_mcad_hfss",
        "title": "is_mcad_hfss",
        "section": "is_mcad_hfss",
        "text": "bool: Flag indicating if this is an HFSS MCAD model.\nThis property is read-only.\nis_mcad_hfss\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_mcad_hfss.html#ansys.edb.core.terminal.terminals.PointTerminal.is_mcad_hfss",
        "title": "is_mcad_hfss > is_mcad_hfss > is_mcad_hfss",
        "section": "is_mcad_hfss > is_mcad_hfss",
        "text": "property PointTerminal.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.layout",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.layout.html#layout",
        "title": "layout",
        "section": "layout",
        "text": "Layout: Layout owning the object.\nThis property is read-only.\nlayout\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.layout",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.layout.html#ansys.edb.core.terminal.terminals.EdgeTerminal.layout",
        "title": "layout > layout > layout",
        "section": "layout > layout",
        "text": "property EdgeTerminal.layout\n\nLayout: Layout owning the object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_interface_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_interface_terminal.html#is_interface_terminal",
        "title": "is_interface_terminal",
        "section": "is_interface_terminal",
        "text": "bool: Flag indicating if the terminal is an interface.\nis_interface_terminal\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_interface_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_interface_terminal.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_interface_terminal",
        "title": "is_interface_terminal > is_interface_terminal > is_interface_terminal",
        "section": "is_interface_terminal > is_interface_terminal",
        "text": "property PadstackInstanceTerminal.is_interface_terminal\n\nbool: Flag indicating if the terminal is an interface.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.id.html#ansys.edb.core.primitive.primitive.Rectangle.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property Rectangle.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get the list of property IDs for a given property ID.\nProduct ID.\nAttribute IDs for the given product ID.\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.get_product_property_ids.html#ansys.edb.core.definition.package_def.PackageDef.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "PackageDef.get_product_property_ids(prod_id)\n\nGet the list of property IDs for a given property ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nProduct ID.\n\nReturns\n\npython:list[python:int]\n\nAttribute IDs for the given product ID.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.component",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.component.html#component",
        "title": "component",
        "section": "component",
        "text": "ComponentGroup:         Component of the Connectable object.\ncomponent\nComponentGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.component",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.component.html#ansys.edb.core.primitive.primitive.Primitive.component",
        "title": "component > component > component",
        "section": "component > component",
        "text": "property Primitive.component\n\nComponentGroup:         Component of the Connectable object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.html#boundarytype",
        "title": "BoundaryType",
        "section": "BoundaryType",
        "text": "Provides an enum representing terminal boundary types.\nBoundaryType.PORT\n\nBoundaryType.PEC\n\nBoundaryType.RLC\n\nBoundaryType.CURRENT_SOURCE\n\nBoundaryType.VOLTAGE_SOURCE\n\nBoundaryType.NEXXIM_GROUND\n\nBoundaryType.NEXXIM_PORT\n\nBoundaryType.DC_TERMINAL\n\nBoundaryType.VOLTAGE_PROBE\n\nBoundaryType\nBoundaryType.PORT\nBoundaryType.PEC\nBoundaryType.RLC\nBoundaryType.CURRENT_SOURCE\nBoundaryType.VOLTAGE_SOURCE\nBoundaryType.NEXXIM_GROUND\nBoundaryType.NEXXIM_PORT\nBoundaryType.DC_TERMINAL\nBoundaryType.VOLTAGE_PROBE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.html#ansys.edb.core.terminal.terminals.BoundaryType",
        "title": "BoundaryType > BoundaryType > BoundaryType",
        "section": "BoundaryType > BoundaryType",
        "text": "class ansys.edb.core.terminal.terminals.BoundaryType(value)\n\nProvides an enum representing terminal boundary types.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nBoundaryType.PORT\n\n\n\nBoundaryType.PEC\n\n\n\nBoundaryType.RLC\n\n\n\nBoundaryType.CURRENT_SOURCE\n\n\n\nBoundaryType.VOLTAGE_SOURCE\n\n\n\nBoundaryType.NEXXIM_GROUND\n\n\n\nBoundaryType.NEXXIM_PORT\n\n\n\nBoundaryType.DC_TERMINAL\n\n\n\nBoundaryType.VOLTAGE_PROBE\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.create",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create an edge terminal.\nLayout to create the edge terminal in.\nName of the edge terminal.\nNet reference. The default is None.\nWhether the edge terminal is a reference terminal.\ncreate\nLayout\nstr\npython:list\nof\nEdge\nNet\nstr\npython:None\nNone\nbool\npython:False\nEdgeTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.create",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.create.html#ansys.edb.core.terminal.terminals.EdgeTerminal.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod EdgeTerminal.create(layout, name, edges, net=None, is_ref=False)\n\nCreate an edge terminal.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to create the edge terminal in.\n\nname\n\nstr\n\nName of the edge terminal.\n\nedges\n\npython:list of Edge\n\n\n\nnet\n\nNet or str or python:None\n\nNet reference. The default is None.\n\nis_ref\n\nbool, default: python:False\n\nWhether the edge terminal is a reference terminal.\n\nReturns\n\nEdgeTerminal\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.cast",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.cast.html#cast",
        "title": "cast",
        "section": "cast",
        "text": "Cast the terminal object to the correct concrete type, fetching the type if necessary.\ncast\nTerminalType\nTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.cast",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.cast.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.cast",
        "title": "cast > cast > cast",
        "section": "cast > cast",
        "text": "TerminalInstanceTerminal.cast(term_type=None)\n\nCast the terminal object to the correct concrete type, fetching the type if necessary.\n\nParameters\n\nterm_type\n\nTerminalType\n\n\n\nReturns\n\nTerminal\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDs given a product ID for the layout object.\nID representing a product that supports the EDB.\nAll user-defined attribute IDs for properties stored in the object\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.get_product_property_ids.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "VoltageRegulator.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nReturns\n\npython:list[python:int]\n\nAll user-defined attribute IDs for properties stored in the object\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.UNDEFINED_LAYER_TYPE",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.UNDEFINED_LAYER_TYPE.html#undefined_layer_type",
        "title": "UNDEFINED_LAYER_TYPE",
        "section": "UNDEFINED_LAYER_TYPE",
        "text": "UNDEFINED_LAYER_TYPE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.UNDEFINED_LAYER_TYPE",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.UNDEFINED_LAYER_TYPE.html#ansys.edb.core.layer.layer_collection.LayerType.UNDEFINED_LAYER_TYPE",
        "title": "UNDEFINED_LAYER_TYPE > UNDEFINED_LAYER_TYPE > UNDEFINED_LAYER_TYPE",
        "section": "UNDEFINED_LAYER_TYPE > UNDEFINED_LAYER_TYPE",
        "text": "LayerType.UNDEFINED_LAYER_TYPE = -1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDs given a product ID for the layout object.\nID representing a product that supports the EDB.\nAll user-defined attribute IDs for properties stored in the object\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.get_product_property_ids.html#ansys.edb.core.hierarchy.inst_array.InstArray.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "InstArray.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nReturns\n\npython:list[python:int]\n\nAll user-defined attribute IDs for properties stored in the object\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.layout_obj_type.html#layout_obj_type",
        "title": "layout_obj_type",
        "section": "layout_obj_type",
        "text": "layout_obj_type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.layout_obj_type.html#ansys.edb.core.hierarchy.pin_group.PinGroup.layout_obj_type",
        "title": "layout_obj_type > layout_obj_type > layout_obj_type",
        "section": "layout_obj_type > layout_obj_type",
        "text": "PinGroup.layout_obj_type = 12\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.is_parameter",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.is_parameter.html#is_parameter",
        "title": "is_parameter",
        "section": "is_parameter",
        "text": "Determine if the variable is a parameter.\nVariable name.\nTrue if the variable is a parameter, False otherwise.\nis_parameter\npython:str\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.is_parameter",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.is_parameter.html#ansys.edb.core.layout.layout.Layout.is_parameter",
        "title": "is_parameter > is_parameter > is_parameter",
        "section": "is_parameter > is_parameter",
        "text": "Layout.is_parameter(name)\n\nDetermine if the variable is a parameter.\n\nParameters\n\nname\n\npython:str\n\nVariable name.\n\nReturns\n\nbool\n\nTrue if the variable is a parameter, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.id",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.id",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.id.html#ansys.edb.core.definition.padstack_def_data.PadstackDefData.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property PadstackDefData.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.boundary_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.boundary_type.html#boundary_type",
        "title": "boundary_type",
        "section": "boundary_type",
        "text": "BoundaryType: Boundary type of the terminal.\nboundary_type\nBoundaryType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.boundary_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.boundary_type.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.boundary_type",
        "title": "boundary_type > boundary_type > boundary_type",
        "section": "boundary_type > boundary_type",
        "text": "property TerminalInstanceTerminal.boundary_type\n\nBoundaryType: Boundary type of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.debye_model.DebyeModel.is_null.html#ansys.edb.core.definition.debye_model.DebyeModel.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property DebyeModel.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.placement_layer",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.placement_layer.html#placement_layer",
        "title": "placement_layer",
        "section": "placement_layer",
        "text": "Layer: Placement layer for the hierarchy object.\nplacement_layer\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.placement_layer",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.placement_layer.html#ansys.edb.core.hierarchy.structure3d.Structure3D.placement_layer",
        "title": "placement_layer > placement_layer > placement_layer",
        "section": "placement_layer > placement_layer",
        "text": "property Structure3D.placement_layer\n\nLayer: Placement layer for the hierarchy object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.reference_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.reference_terminal.html#reference_terminal",
        "title": "reference_terminal",
        "section": "reference_terminal",
        "text": "Terminal: Terminal that the terminal references, if any.\nreference_terminal\nTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.reference_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.reference_terminal.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.reference_terminal",
        "title": "reference_terminal > reference_terminal > reference_terminal",
        "section": "reference_terminal > reference_terminal",
        "text": "property PadstackInstanceTerminal.reference_terminal\n\nTerminal: Terminal that the terminal references, if any.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.layout",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.layout.html#layout",
        "title": "layout",
        "section": "layout",
        "text": "Layout: Layout owning the object.\nThis property is read-only.\nlayout\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.layout",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.layout.html#ansys.edb.core.net.net.Net.layout",
        "title": "layout > layout > layout",
        "section": "layout > layout",
        "text": "property Net.layout\n\nLayout: Layout owning the object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.source_phase",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.source_phase.html#source_phase",
        "title": "source_phase",
        "section": "source_phase",
        "text": "Value: Source phase of the terminal.\nsource_phase\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.source_phase",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.source_phase.html#ansys.edb.core.terminal.terminals.BundleTerminal.source_phase",
        "title": "source_phase > source_phase > source_phase",
        "section": "source_phase > source_phase",
        "text": "property BundleTerminal.source_phase\n\nValue: Source phase of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.msg.html#ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property RLCComponentProperty.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.layout_obj_type.html#layout_obj_type",
        "title": "layout_obj_type",
        "section": "layout_obj_type",
        "text": "layout_obj_type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.layout_obj_type.html#ansys.edb.core.hierarchy.inst_array.InstArray.layout_obj_type",
        "title": "layout_obj_type > layout_obj_type > layout_obj_type",
        "section": "layout_obj_type > layout_obj_type",
        "text": "InstArray.layout_obj_type = 4\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.cast",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.cast.html#cast",
        "title": "cast",
        "section": "cast",
        "text": "Cast the base SimulationSetup object to correct subclass, if possible.\ncast\nSimulationSetup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.cast",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.cast.html#ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.cast",
        "title": "cast > cast > cast",
        "section": "cast > cast",
        "text": "SIWaveDCIRSimulationSetup.cast()\n\nCast the base SimulationSetup object to correct subclass, if possible.\n\nReturns\n\nSimulationSetup\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_auto_port",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_auto_port.html#is_auto_port",
        "title": "is_auto_port",
        "section": "is_auto_port",
        "text": "bool: Flag indicating if the terminal is an auto port.\nis_auto_port\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_auto_port",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_auto_port.html#ansys.edb.core.terminal.terminals.Terminal.is_auto_port",
        "title": "is_auto_port > is_auto_port > is_auto_port",
        "section": "is_auto_port > is_auto_port",
        "text": "property Terminal.is_auto_port\n\nbool: Flag indicating if the terminal is an auto port.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty.msg.html#ansys.edb.core.definition.die_property.DieProperty.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property DieProperty.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.mesh_for_via_plating",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.mesh_for_via_plating.html#mesh_for_via_plating",
        "title": "mesh_for_via_plating",
        "section": "mesh_for_via_plating",
        "text": "bool: Flag indicating if meshing for via plating is enabled.\nmesh_for_via_plating\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.mesh_for_via_plating",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.mesh_for_via_plating.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.mesh_for_via_plating",
        "title": "mesh_for_via_plating > mesh_for_via_plating > mesh_for_via_plating",
        "section": "mesh_for_via_plating > mesh_for_via_plating",
        "text": "property HFSSAdvancedSettings.mesh_for_via_plating\n\nbool: Flag indicating if meshing for via plating is enabled.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentType.CAPACITOR",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentType.CAPACITOR.html#capacitor",
        "title": "CAPACITOR",
        "section": "CAPACITOR",
        "text": "CAPACITOR"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentType.CAPACITOR",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentType.CAPACITOR.html#ansys.edb.core.hierarchy.component_group.ComponentType.CAPACITOR",
        "title": "CAPACITOR > CAPACITOR > CAPACITOR",
        "section": "CAPACITOR > CAPACITOR",
        "text": "ComponentType.CAPACITOR = 3\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.layout",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.layout.html#layout",
        "title": "layout",
        "section": "layout",
        "text": "Layout: Layout owning the object.\nThis property is read-only.\nlayout\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.layout",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.layout.html#ansys.edb.core.hierarchy.pin_group.PinGroup.layout",
        "title": "layout > layout > layout",
        "section": "layout > layout",
        "text": "property PinGroup.layout\n\nLayout: Layout owning the object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.set_is_in_zone",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.set_is_in_zone.html#set_is_in_zone",
        "title": "set_is_in_zone",
        "section": "set_is_in_zone",
        "text": "Set whether the layer exists in a given zone.\nZone.\nWhether the layer exists in this zone.\nset_is_in_zone\npython:int\npython:True"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.set_is_in_zone",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.set_is_in_zone.html#ansys.edb.core.layer.via_layer.ViaLayer.set_is_in_zone",
        "title": "set_is_in_zone > set_is_in_zone > set_is_in_zone",
        "section": "set_is_in_zone > set_is_in_zone",
        "text": "ViaLayer.set_is_in_zone(zone, in_zone=True)\n\nSet whether the layer exists in a given zone.\n\nParameters\n\nzone\n\npython:int\n\nZone.\n\nin_zone\n\nbool, default: python:True\n\nWhether the layer exists in this zone.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.set_variable_value",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.set_variable_value.html#set_variable_value",
        "title": "set_variable_value",
        "section": "set_variable_value",
        "text": "Set a variable to a new value.\nVariable name.\nNew value.\nset_variable_value\npython:str\npython:str\npython:int\npython:float\ncomplex\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.set_variable_value",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.set_variable_value.html#ansys.edb.core.layout.layout.Layout.set_variable_value",
        "title": "set_variable_value > set_variable_value > set_variable_value",
        "section": "set_variable_value > set_variable_value",
        "text": "Layout.set_variable_value(name, new_value)\n\nSet a variable to a new value.\n\nParameters\n\nname\n\npython:str\n\nVariable name.\n\nnew_value\n\npython:str, python:int, python:float, complex, Value\n\nNew value.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.snap_length_threshold",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.snap_length_threshold.html#snap_length_threshold",
        "title": "snap_length_threshold",
        "section": "snap_length_threshold",
        "text": "str: Snapping length threshold.\nsnap_length_threshold\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.snap_length_threshold",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.snap_length_threshold.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.snap_length_threshold",
        "title": "snap_length_threshold > snap_length_threshold > snap_length_threshold",
        "section": "snap_length_threshold > snap_length_threshold",
        "text": "property SIWaveAdvancedSettings.snap_length_threshold\n\nstr: Snapping length threshold.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings.min_passes",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings.min_passes.html#min_passes",
        "title": "min_passes",
        "section": "min_passes",
        "text": "int: Minimum number of conduction adaptive passes.\nmin_passes\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings.min_passes",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings.min_passes.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings.min_passes",
        "title": "min_passes > min_passes > min_passes",
        "section": "min_passes > min_passes",
        "text": "property HFSSDCRSettings.min_passes\n\nint: Minimum number of conduction adaptive passes.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the product property.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.get_product_property.html#ansys.edb.core.hierarchy.structure3d.Structure3D.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "Structure3D.get_product_property(prod_id, attr_id)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nReturns\n\npython:str\n\nString stored in the product property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDs given a product ID for the layout object.\nID representing a product that supports the EDB.\nAll user-defined attribute IDs for properties stored in the object\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.get_product_property_ids.html#ansys.edb.core.primitive.primitive.Circle.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "Circle.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nReturns\n\npython:list[python:int]\n\nAll user-defined attribute IDs for properties stored in the object\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.add_void",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.add_void.html#add_void",
        "title": "add_void",
        "section": "add_void",
        "text": "Add a void to the primitive.\nVoid to add.\nadd_void\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.add_void",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.add_void.html#ansys.edb.core.primitive.primitive.Text.add_void",
        "title": "add_void > add_void > add_void",
        "section": "add_void > add_void",
        "text": "Text.add_void(hole)\n\nAdd a void to the primitive.\n\nParameters\n\nhole\n\nPrimitive\n\nVoid to add.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.voltage_regulators",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.voltage_regulators.html#voltage_regulators",
        "title": "voltage_regulators",
        "section": "voltage_regulators",
        "text": "list of VoltageRegulator:         List of all voltage regulators in the layout.\nThis property is read-only.\nvoltage_regulators\nlist\nVoltageRegulator"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.voltage_regulators",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.voltage_regulators.html#ansys.edb.core.layout.layout.Layout.voltage_regulators",
        "title": "voltage_regulators > voltage_regulators > voltage_regulators",
        "section": "voltage_regulators > voltage_regulators",
        "text": "property Layout.voltage_regulators\n\nlist of VoltageRegulator:         List of all voltage regulators in the layout.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.AdaptType",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.AdaptType.html#adapttype",
        "title": "AdaptType",
        "section": "AdaptType",
        "text": "Provides an enum representing HFSS adaptive solution types.\nAdaptType.SINGLE\n\nAdaptType.MULTI_FREQUENCIES\n\nAdaptType.BROADBAND\n\nAdaptType.NUM_ADAPT_TYPE\n\nAdaptType\nAdaptType.SINGLE\nAdaptType.MULTI_FREQUENCIES\nAdaptType.BROADBAND\nAdaptType.NUM_ADAPT_TYPE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.AdaptType",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.AdaptType.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.AdaptType",
        "title": "AdaptType > AdaptType > AdaptType",
        "section": "AdaptType > AdaptType",
        "text": "class ansys.edb.core.simulation_setup.hfss_simulation_settings.AdaptType(value)\n\nProvides an enum representing HFSS adaptive solution types.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nAdaptType.SINGLE\n\n\n\nAdaptType.MULTI_FREQUENCIES\n\n\n\nAdaptType.BROADBAND\n\n\n\nAdaptType.NUM_ADAPT_TYPE\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.layer_collection",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.layer_collection.html#layer_collection",
        "title": "layer_collection",
        "section": "layer_collection",
        "text": "LayerCollection:         Layer collection of the layout.\nlayer_collection\nLayerCollection"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.layer_collection",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.layer_collection.html#ansys.edb.core.layout.layout.Layout.layer_collection",
        "title": "layer_collection > layer_collection > layer_collection",
        "section": "layer_collection > layer_collection",
        "text": "property Layout.layer_collection\n\nLayerCollection:         Layer collection of the layout.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.netlist_model.NetlistModel.create",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.netlist_model.NetlistModel.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a netlist model.\nName of the netlist model.\nNetlist model created.\ncreate\npython:str\nNetlistModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.netlist_model.NetlistModel.create",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.netlist_model.NetlistModel.create.html#ansys.edb.core.hierarchy.netlist_model.NetlistModel.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod NetlistModel.create(name)\n\nCreate a netlist model.\n\nParameters\n\nname\n\npython:str\n\nName of the netlist model.\n\nReturns\n\nNetlistModel\n\nNetlist model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.general",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.general.html#general",
        "title": "general",
        "section": "general",
        "text": "SIWaveGeneralSettings: General settings for SIWave simulations.\ngeneral\nSIWaveGeneralSettings"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.general",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.general.html#ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.general",
        "title": "general > general > general",
        "section": "general > general",
        "text": "property SIWaveDCIRSimulationSettings.general\n\nSIWaveGeneralSettings: General settings for SIWave simulations.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.session.session",
        "href": "api/_autosummary/ansys.edb.core.session.session.html#session",
        "title": "session",
        "section": "session",
        "text": "Launch a local session to an EDB API server in a context manager.\nDirectory where the EDB_RPC_Server.exe file is installed.\nPort number to listen on.\nIP address where the server executable file is running. The default is None, in which\ncase localhost is used.\nThis parameter is currently not supported. In future releases, this parameter is to\nsupport remotely running the API on another machine.\nCreate a session that automatically disconnects when it goes out of scope.\nsession\npython:str\nEDB_RPC_Server.exe\npython:int\npython:str\npython:None\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.session.session",
        "href": "api/_autosummary/ansys.edb.core.session.session.html#ansys.edb.core.session.session",
        "title": "session > session > session",
        "section": "session > session",
        "text": "ansys.edb.core.session.session(ansys_em_root, port_num, ip_address=None)\n\nLaunch a local session to an EDB API server in a context manager.\n\nParameters\n\nansys_em_root\n\npython:str\n\nDirectory where the EDB_RPC_Server.exe file is installed.\n\nport_num\n\npython:int\n\nPort number to listen on.\n\nip_address\n\npython:str, default: python:None\n\nIP address where the server executable file is running. The default is None, in which\ncase localhost is used.\n\nThis parameter is currently not supported. In future releases, this parameter is to\nsupport remotely running the API on another machine.\n\nExamples\n\nCreate a session that automatically disconnects when it goes out of scope.\n\n>>> with session(\"C:\\\\Program Files\\\\AnsysEM\\\\v231\\\\Win64\", 50051):\n>>>    # program goes here\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.advanced",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.advanced.html#advanced",
        "title": "advanced",
        "section": "advanced",
        "text": "SIWaveAdvancedSettings: Advanced settings for SIWave simulations.\nadvanced\nSIWaveAdvancedSettings"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.advanced",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.advanced.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSimulationSettings.advanced",
        "title": "advanced > advanced > advanced",
        "section": "advanced > advanced",
        "text": "property SIWaveSimulationSettings.advanced\n\nSIWaveAdvancedSettings: Advanced settings for SIWave simulations.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.msg",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.msg",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.msg.html#ansys.edb.core.geometry.r_tree.RTree.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property RTree.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.is_mcad_stride.html#is_mcad_stride",
        "title": "is_mcad_stride",
        "section": "is_mcad_stride",
        "text": "bool: Flag indicating if this is a Stride MCAD model.\nThis property is read-only.\nis_mcad_stride\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.is_mcad_stride.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.is_mcad_stride",
        "title": "is_mcad_stride > is_mcad_stride > is_mcad_stride",
        "section": "is_mcad_stride > is_mcad_stride",
        "text": "property VoltageRegulator.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.layout_obj_type.html#layout_obj_type",
        "title": "layout_obj_type",
        "section": "layout_obj_type",
        "text": "layout_obj_type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.layout_obj_type.html#ansys.edb.core.layer.via_layer.ViaLayer.layout_obj_type",
        "title": "layout_obj_type > layout_obj_type > layout_obj_type",
        "section": "layout_obj_type > layout_obj_type",
        "text": "ViaLayer.layout_obj_type = 5\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.add_net",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.add_net.html#add_net",
        "title": "add_net",
        "section": "add_net",
        "text": "Add a net to the extended net.\nNet to add.\nadd_net\nNet"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.add_net",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.add_net.html#ansys.edb.core.net.extended_net.ExtendedNet.add_net",
        "title": "add_net > add_net > add_net",
        "section": "add_net > add_net",
        "text": "ExtendedNet.add_net(net)\n\nAdd a net to the extended net.\n\nParameters\n\nnet\n\nNet\n\nNet to add.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.remove_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.remove_hfss_prop.html#remove_hfss_prop",
        "title": "remove_hfss_prop",
        "section": "remove_hfss_prop",
        "text": "Remove HFSS properties.\nremove_hfss_prop"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.remove_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.remove_hfss_prop.html#ansys.edb.core.primitive.primitive.Text.remove_hfss_prop",
        "title": "remove_hfss_prop > remove_hfss_prop > remove_hfss_prop",
        "section": "remove_hfss_prop > remove_hfss_prop",
        "text": "Text.remove_hfss_prop()\n\nRemove HFSS properties.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.msg",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.msg",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.msg.html#ansys.edb.core.terminal.terminals.EdgeTerminal.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property EdgeTerminal.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.bounding_circle",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.bounding_circle.html#bounding_circle",
        "title": "bounding_circle",
        "section": "bounding_circle",
        "text": "Compute the bounding circle of the polygon.\nbounding_circle\npython:tuple\nPointData\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.bounding_circle",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.bounding_circle.html#ansys.edb.core.geometry.polygon_data.PolygonData.bounding_circle",
        "title": "bounding_circle > bounding_circle > bounding_circle",
        "section": "bounding_circle > bounding_circle",
        "text": "PolygonData.bounding_circle()\n\nCompute the bounding circle of the polygon.\n\nReturns\n\npython:tuple[PointData, Value]\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.outline",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.outline.html#outline",
        "title": "outline",
        "section": "outline",
        "text": "PolygonData: Via group outline.\nThis property is read-only.\noutline\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.outline",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.outline.html#ansys.edb.core.hierarchy.via_group.ViaGroup.outline",
        "title": "outline > outline > outline",
        "section": "outline > outline",
        "text": "property ViaGroup.outline\n\nPolygonData: Via group outline.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product property of the layer for a given product ID and attribute ID.\nProduct ID.\nAttribute ID.\nProduct property.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.get_product_property.html#ansys.edb.core.layer.layer.Layer.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "Layer.get_product_property(prod_id, attr_it)\n\nGet the product property of the layer for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nProduct ID.\n\nattr_it\n\npython:int\n\nAttribute ID.\n\nReturns\n\npython:str\n\nProduct property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.enabled",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.enabled.html#enabled",
        "title": "enabled",
        "section": "enabled",
        "text": "bool: Flag indicating if the simulation setup is enabled.\nenabled\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.enabled",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.enabled.html#ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.enabled",
        "title": "enabled > enabled > enabled",
        "section": "enabled > enabled",
        "text": "property SIWaveDCIRSimulationSettings.enabled\n\nbool: Flag indicating if the simulation setup is enabled.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.add_void",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.add_void.html#add_void",
        "title": "add_void",
        "section": "add_void",
        "text": "Add a void to the primitive.\nVoid to add.\nadd_void\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.add_void",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.add_void.html#ansys.edb.core.primitive.primitive.Rectangle.add_void",
        "title": "add_void > add_void > add_void",
        "section": "add_void > add_void",
        "text": "Rectangle.add_void(hole)\n\nAdd a void to the primitive.\n\nParameters\n\nhole\n\nPrimitive\n\nVoid to add.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.html#cellinstance",
        "title": "CellInstance",
        "section": "CellInstance",
        "text": "Represents a cell instance object.\nCellInstance.create(layout, name, ref)\nCreate a cell instance with a given layout.\nCellInstance.create_3d_comp()\nCreate a 3D composite model from an MCAD file.\nCellInstance.create_hfss()\nCreate an HFSS model from an MCAD file.\nCellInstance.create_stride()\nCreate a Stride model from an MCAD file.\nCellInstance.create_with_component(layout, ...)\nCreate a cell instance with a component definition.\nCellInstance.delete()\nDelete the layout object.\nCellInstance.find(layout, name)\nFind a cell instance by name in a given layout.\nCellInstance.find_by_id(layout, uid)\nFind a Connectable object by database ID in a given layout.\nCellInstance.get_parameter_override(param_name)\nGet the override of the cell instance parameter by name.\nCellInstance.get_product_property(prod_id, ...)\nGet the product property of the layout object for a given product ID and attribute ID.\nCellInstance.get_product_property_ids(prod_id)\nGet a list of attribute IDs given a product ID for the layout object.\nCellInstance.set_parameter_override(...)\nSet an override value for a given cell instance parameter.\nCellInstance.set_product_property(prod_id, ...)\nSet the product property of the layout object for a given product ID and attribute ID.\nCellInstance.component\nComponentGroup:         Component of the Connectable object.\nCellInstance.component_def\nComponentDef: Component definition for the         hierarchy object if it exists, None otherwise.\nCellInstance.edb_uid\nint: Unique, persistent ID for the Connectable object.\nCellInstance.group\nGroup object.\nCellInstance.id\nint: Unique ID of the EDB object.\nCellInstance.is_mcad\nbool: Flag indicating if this is an MCAD model.\nCellInstance.is_mcad_3d_comp\nbool: Flag indicating if this is a 3D composite MCAD model.\nCellInstance.is_mcad_hfss\nbool: Flag indicating if this is an HFSS MCAD model.\nCellInstance.is_mcad_stride\nbool: Flag indicating if this is a Stride MCAD model.\nCellInstance.is_null\nbool: Flag indicating if the object exists in the database.\nCellInstance.layout\nLayout: Layout owning the object.\nCellInstance.layout_obj_type\n\nCellInstance.location\ntuple (Value,         Value):         Location [x, y] of the hierarchy object on the placement_layer object.\nCellInstance.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nCellInstance.name\nstr: Name of the hierarchy object.\nCellInstance.net\nNet: Net of the Connectable object.\nCellInstance.obj_type\nLayoutObjType: Layout object type.\nCellInstance.placement_3d\nbool: Flag indicating if the cell instance is 3D placed in the owning layout.\nCellInstance.placement_layer\nLayer: Placement layer for the hierarchy object.\nCellInstance.reference_layout\nLayout: Reference layout of the cell instance.\nCellInstance.solve_independent_preference\nbool: Flag indicating if the object is assigned to solve independent of its parent context.\nCellInstance.term_instances\nlist of TerminalInstance: Terminal         instances associated with the cell instance.\nCellInstance.transform\nTransform:         Transformation information of the hierarchy object.\nCellInstance.transform3d\nTransform3D:         3D transformation information of the cell instance.\nCellInstance\nCellInstance.create\nCellInstance.create_3d_comp\nCellInstance.create_hfss\nCellInstance.create_stride\nCellInstance.create_with_component\nCellInstance.delete\nCellInstance.find\nCellInstance.find_by_id\nCellInstance.get_parameter_override\nCellInstance.get_product_property\nCellInstance.get_product_property_ids\nCellInstance.set_parameter_override\nCellInstance.set_product_property\nCellInstance.component\nComponentGroup\nCellInstance.component_def\nComponentDef\nNone\nCellInstance.edb_uid\nint\nCellInstance.group\nGroup\nCellInstance.id\nint\nCellInstance.is_mcad\nbool\nCellInstance.is_mcad_3d_comp\nbool\nCellInstance.is_mcad_hfss\nbool\nCellInstance.is_mcad_stride\nbool\nCellInstance.is_null\nbool\nCellInstance.layout\nLayout\nCellInstance.layout_obj_type\nCellInstance.location\ntuple\nValue\nValue\nplacement_layer\nCellInstance.msg\nEDBObjMessage\nCellInstance.name\nstr\nCellInstance.net\nNet\nCellInstance.obj_type\nLayoutObjType\nCellInstance.placement_3d\nbool\nCellInstance.placement_layer\nLayer\nCellInstance.reference_layout\nLayout\nCellInstance.solve_independent_preference\nbool\nCellInstance.term_instances\nlist\nTerminalInstance\nCellInstance.transform\nTransform\nCellInstance.transform3d\nTransform3D"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.html#ansys.edb.core.hierarchy.cell_instance.CellInstance",
        "title": "CellInstance > CellInstance > CellInstance",
        "section": "CellInstance > CellInstance",
        "text": "class ansys.edb.core.hierarchy.cell_instance.CellInstance(msg)\n\nRepresents a cell instance object.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nCellInstance.create(layout, name, ref)\n\nCreate a cell instance with a given layout.\n\nCellInstance.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nCellInstance.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nCellInstance.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nCellInstance.create_with_component(layout, ...)\n\nCreate a cell instance with a component definition.\n\nCellInstance.delete()\n\nDelete the layout object.\n\nCellInstance.find(layout, name)\n\nFind a cell instance by name in a given layout.\n\nCellInstance.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nCellInstance.get_parameter_override(param_name)\n\nGet the override of the cell instance parameter by name.\n\nCellInstance.get_product_property(prod_id, ...)\n\nGet the product property of the layout object for a given product ID and attribute ID.\n\nCellInstance.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nCellInstance.set_parameter_override(...)\n\nSet an override value for a given cell instance parameter.\n\nCellInstance.set_product_property(prod_id, ...)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\n\n\nAttributes\n\n\n\n\n\n\n\nCellInstance.component\n\nComponentGroup:         Component of the Connectable object.\n\nCellInstance.component_def\n\nComponentDef: Component definition for the         hierarchy object if it exists, None otherwise.\n\nCellInstance.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nCellInstance.group\n\nGroup object.\n\nCellInstance.id\n\nint: Unique ID of the EDB object.\n\nCellInstance.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nCellInstance.is_mcad_3d_comp\n\nbool: Flag indicating if this is a 3D composite MCAD model.\n\nCellInstance.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nCellInstance.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nCellInstance.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nCellInstance.layout\n\nLayout: Layout owning the object.\n\nCellInstance.layout_obj_type\n\n\n\nCellInstance.location\n\ntuple (Value,         Value):         Location [x, y] of the hierarchy object on the placement_layer object.\n\nCellInstance.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nCellInstance.name\n\nstr: Name of the hierarchy object.\n\nCellInstance.net\n\nNet: Net of the Connectable object.\n\nCellInstance.obj_type\n\nLayoutObjType: Layout object type.\n\nCellInstance.placement_3d\n\nbool: Flag indicating if the cell instance is 3D placed in the owning layout.\n\nCellInstance.placement_layer\n\nLayer: Placement layer for the hierarchy object.\n\nCellInstance.reference_layout\n\nLayout: Reference layout of the cell instance.\n\nCellInstance.solve_independent_preference\n\nbool: Flag indicating if the object is assigned to solve independent of its parent context.\n\nCellInstance.term_instances\n\nlist of TerminalInstance: Terminal         instances associated with the cell instance.\n\nCellInstance.transform\n\nTransform:         Transformation information of the hierarchy object.\n\nCellInstance.transform3d\n\nTransform3D:         3D transformation information of the cell instance.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.max_coupled_lines",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.max_coupled_lines.html#max_coupled_lines",
        "title": "max_coupled_lines",
        "section": "max_coupled_lines",
        "text": "int: Maximum number of coupled lines.\nmax_coupled_lines\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.max_coupled_lines",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.max_coupled_lines.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.max_coupled_lines",
        "title": "max_coupled_lines > max_coupled_lines > max_coupled_lines",
        "section": "max_coupled_lines > max_coupled_lines",
        "text": "property SIWaveAdvancedSettings.max_coupled_lines\n\nint: Maximum number of coupled lines.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.net_classes",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.net_classes.html#net_classes",
        "title": "net_classes",
        "section": "net_classes",
        "text": "list of NetClass: All net classes on the net.\nThis property is read-only.\nnet_classes\nlist\nNetClass"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.net_classes",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.net_classes.html#ansys.edb.core.net.net.Net.net_classes",
        "title": "net_classes > net_classes > net_classes",
        "section": "net_classes > net_classes",
        "text": "property Net.net_classes\n\nlist of NetClass: All net classes on the net.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.primitive_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.primitive_type.html#primitive_type",
        "title": "primitive_type",
        "section": "primitive_type",
        "text": "PrimitiveType: Primitive type of the primitive.\nThis property is read-only.\nprimitive_type\nPrimitiveType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.primitive_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.primitive_type.html#ansys.edb.core.primitive.primitive.Bondwire.primitive_type",
        "title": "primitive_type > primitive_type > primitive_type",
        "section": "primitive_type > primitive_type",
        "text": "property Bondwire.primitive_type\n\nPrimitiveType: Primitive type of the primitive.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.max_elements",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.max_elements.html#max_elements",
        "title": "max_elements",
        "section": "max_elements",
        "text": "str: Maximum number of mesh elements.\nmax_elements\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.max_elements",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.max_elements.html#ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.max_elements",
        "title": "max_elements > max_elements > max_elements",
        "section": "max_elements > max_elements",
        "text": "property LengthMeshOperation.max_elements\n\nstr: Maximum number of mesh elements.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.layout_obj_type.html#layout_obj_type",
        "title": "layout_obj_type",
        "section": "layout_obj_type",
        "text": "layout_obj_type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.layout_obj_type.html#ansys.edb.core.primitive.primitive.Path.layout_obj_type",
        "title": "layout_obj_type > layout_obj_type > layout_obj_type",
        "section": "layout_obj_type > layout_obj_type",
        "text": "Path.layout_obj_type = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.placement_layer",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.placement_layer.html#placement_layer",
        "title": "placement_layer",
        "section": "placement_layer",
        "text": "Layer: Placement layer for the hierarchy object.\nplacement_layer\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.placement_layer",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.placement_layer.html#ansys.edb.core.hierarchy.via_group.ViaGroup.placement_layer",
        "title": "placement_layer > placement_layer > placement_layer",
        "section": "placement_layer > placement_layer",
        "text": "property ViaGroup.placement_layer\n\nLayer: Placement layer for the hierarchy object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.find_by_def",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.find_by_def.html#find_by_def",
        "title": "find_by_def",
        "section": "find_by_def",
        "text": "Find all components belonging to a given component definition.\nLayout to search for component groups.\nName of the ComponentDef instance.\nList of component groups that are found.\nfind_by_def\nLayout\npython:str\nComponentDef\npython:list\nComponentGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.find_by_def",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.find_by_def.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.find_by_def",
        "title": "find_by_def > find_by_def > find_by_def",
        "section": "find_by_def > find_by_def",
        "text": "classmethod ComponentGroup.find_by_def(layout, comp_def_name)\n\nFind all components belonging to a given component definition.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for component groups.\n\ncomp_def_name\n\npython:str\n\nName of the ComponentDef instance.\n\nReturns\n\npython:list[ComponentGroup]\n\nList of component groups that are found.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the property.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.set_product_property.html#ansys.edb.core.hierarchy.pin_group.PinGroup.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "PinGroup.set_product_property(prod_id, attr_id, prop_value)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nprop_value\n\npython:str\n\nString stored in the property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.is_null",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.is_null",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.is_null.html#ansys.edb.core.layout_instance.layout_obj_instance.LayoutObjInstance2DGeometry.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property LayoutObjInstance2DGeometry.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.edb_uid.html#edb_uid",
        "title": "edb_uid",
        "section": "edb_uid",
        "text": "int: Unique, persistent ID for the Connectable object.\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\nThis property is read-only.\nedb_uid\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.edb_uid.html#ansys.edb.core.primitive.primitive.Text.edb_uid",
        "title": "edb_uid > edb_uid > edb_uid",
        "section": "edb_uid > edb_uid",
        "text": "property Text.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamInterpolation",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamInterpolation.html#sparaminterpolation",
        "title": "SParamInterpolation",
        "section": "SParamInterpolation",
        "text": "Provides an enum representing s parameter interpolation types.\nSParamInterpolation.POINT_IN\n\nSParamInterpolation.LINEAR_IN\n\nSParamInterpolation.STEP_IN\n\nSParamInterpolation\nSParamInterpolation.POINT_IN\nSParamInterpolation.LINEAR_IN\nSParamInterpolation.STEP_IN"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamInterpolation",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamInterpolation.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamInterpolation",
        "title": "SParamInterpolation > SParamInterpolation > SParamInterpolation",
        "section": "SParamInterpolation > SParamInterpolation",
        "text": "class ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamInterpolation(value)\n\nProvides an enum representing s parameter interpolation types.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nSParamInterpolation.POINT_IN\n\n\n\nSParamInterpolation.LINEAR_IN\n\n\n\nSParamInterpolation.STEP_IN\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.remove_all_power_modules",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.remove_all_power_modules.html#remove_all_power_modules",
        "title": "remove_all_power_modules",
        "section": "remove_all_power_modules",
        "text": "Remove all power modules in the voltage regulator.\nremove_all_power_modules"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.remove_all_power_modules",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.remove_all_power_modules.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.remove_all_power_modules",
        "title": "remove_all_power_modules > remove_all_power_modules > remove_all_power_modules",
        "section": "remove_all_power_modules > remove_all_power_modules",
        "text": "VoltageRegulator.remove_all_power_modules()\n\nRemove all power modules in the voltage regulator.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.do_lambda_refine",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.do_lambda_refine.html#do_lambda_refine",
        "title": "do_lambda_refine",
        "section": "do_lambda_refine",
        "text": "bool: Flag indicating if lambda refinement is used during meshing.\ndo_lambda_refine\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.do_lambda_refine",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.do_lambda_refine.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.do_lambda_refine",
        "title": "do_lambda_refine > do_lambda_refine > do_lambda_refine",
        "section": "do_lambda_refine > do_lambda_refine",
        "text": "property HFSSSettingsOptions.do_lambda_refine\n\nbool: Flag indicating if lambda refinement is used during meshing.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.polygon_data",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.polygon_data.html#polygon_data",
        "title": "polygon_data",
        "section": "polygon_data",
        "text": "PolygonData:         Polygon data object of the rectangle.\nThis property is read-only.\npolygon_data\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.polygon_data",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.polygon_data.html#ansys.edb.core.primitive.primitive.Rectangle.polygon_data",
        "title": "polygon_data > polygon_data > polygon_data",
        "section": "polygon_data > polygon_data",
        "text": "property Rectangle.polygon_data\n\nPolygonData:         Polygon data object of the rectangle.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.zone",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.zone.html#zone",
        "title": "zone",
        "section": "zone",
        "text": "int: Zone index associated with the owning layer collection.\nIf the owner is invalid, the index is 0. If the owner is multizone,\nthe index is -1.\nThis property is read-only.\nzone\nint\n0\n-1"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.zone",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.zone.html#ansys.edb.core.layer.layer.Layer.zone",
        "title": "zone > zone > zone",
        "section": "zone > zone",
        "text": "property Layer.zone\n\nint: Zone index associated with the owning layer collection.\n\nIf the owner is invalid, the index is 0. If the owner is multizone,\nthe index is -1.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.layout",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.layout.html#layout",
        "title": "layout",
        "section": "layout",
        "text": "Layout: Layout owning the object.\nThis property is read-only.\nlayout\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.layout",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.layout.html#ansys.edb.core.primitive.primitive.BoardBendDef.layout",
        "title": "layout > layout > layout",
        "section": "layout > layout",
        "text": "property BoardBendDef.layout\n\nLayout: Layout owning the object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.PATH_3D",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.PATH_3D.html#path_3d",
        "title": "PATH_3D",
        "section": "PATH_3D",
        "text": "PATH_3D"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.PATH_3D",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.PATH_3D.html#ansys.edb.core.primitive.primitive.PrimitiveType.PATH_3D",
        "title": "PATH_3D > PATH_3D > PATH_3D",
        "section": "PATH_3D > PATH_3D",
        "text": "PrimitiveType.PATH_3D = 7\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.create_with_outline",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.create_with_outline.html#create_with_outline",
        "title": "create_with_outline",
        "section": "create_with_outline",
        "text": "Create a via group with a polygon outline.\nLayout that owns the via group.\nList of primitives to use to create the via group.\nPlacement layer for the via group.\nNet that the via group is to belong to.\nVia group created.\ncreate_with_outline\nLayout\npython:list\nPoint2D\nor\npython:list\nPolygonData\npython:float\npython:str\nLayer\npython:str\nNet\npython:None\nViaGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.create_with_outline",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.create_with_outline.html#ansys.edb.core.hierarchy.via_group.ViaGroup.create_with_outline",
        "title": "create_with_outline > create_with_outline > create_with_outline",
        "section": "create_with_outline > create_with_outline",
        "text": "classmethod ViaGroup.create_with_outline(layout, outline, conductivity_ratio, layer, net=None)\n\nCreate a via group with a polygon outline.\n\nParameters\n\nlayout\n\nLayout\n\nLayout that owns the via group.\n\noutline\n\npython:list[Point2D] or             python:list[PolygonData]\n\nList of primitives to use to create the via group.\n\nconductivity_ratio\n\npython:float\n\n\n\nlayer\n\npython:str or Layer\n\nPlacement layer for the via group.\n\nnet\n\npython:str or Net, default: python:None\n\nNet that the via group is to belong to.\n\nReturns\n\nViaGroup\n\nVia group created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.cast",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.cast.html#cast",
        "title": "cast",
        "section": "cast",
        "text": "Cast the terminal object to the correct concrete type, fetching the type if necessary.\ncast\nTerminalType\nTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.cast",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.cast.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.cast",
        "title": "cast > cast > cast",
        "section": "cast > cast",
        "text": "PinGroupTerminal.cast(term_type=None)\n\nCast the terminal object to the correct concrete type, fetching the type if necessary.\n\nParameters\n\nterm_type\n\nTerminalType\n\n\n\nReturns\n\nTerminal\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.ExtentType.CONFORMING",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.ExtentType.CONFORMING.html#conforming",
        "title": "CONFORMING",
        "section": "CONFORMING",
        "text": "CONFORMING"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.ExtentType.CONFORMING",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.ExtentType.CONFORMING.html#ansys.edb.core.geometry.polygon_data.ExtentType.CONFORMING",
        "title": "CONFORMING > CONFORMING > CONFORMING",
        "section": "CONFORMING > CONFORMING",
        "text": "ExtentType.CONFORMING = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.net",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.net.html#net",
        "title": "net",
        "section": "net",
        "text": "Net: Net of the Connectable object.\nThis property can be set with a Net instance, a string, or None.\nnet\nNet\nNet\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.net",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.net.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.net",
        "title": "net > net > net",
        "section": "net > net",
        "text": "property ComponentGroup.net\n\nNet: Net of the Connectable object.\n\nThis property can be set with a Net instance, a string, or None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.set_property",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.set_property.html#set_property",
        "title": "set_property",
        "section": "set_property",
        "text": "Set a material property for a given component.\nID of the material property.\nNew value.\nID of the component.\nTensor row.\nTensor column.\nset_property\nMaterialProperty\nValue\npython:int\npython:None\npython:int\npython:None\npython:int\npython:None"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.set_property",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.set_property.html#ansys.edb.core.definition.material_def.MaterialDef.set_property",
        "title": "set_property > set_property > set_property",
        "section": "set_property > set_property",
        "text": "MaterialDef.set_property(material_property, value, component_id=None, col=None, row=None)\n\nSet a material property for a given component.\n\nParameters\n\nmaterial_property\n\nMaterialProperty\n\nID of the material property.\n\nvalue\n\nValue\n\nNew value.\n\ncomponent_id\n\npython:int, default: python:None\n\nID of the component.\n\nrow\n\npython:int, default: python:None\n\nTensor row.\n\ncol\n\npython:int, default: python:None\n\nTensor column.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.get_all_variable_names",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.get_all_variable_names.html#get_all_variable_names",
        "title": "get_all_variable_names",
        "section": "get_all_variable_names",
        "text": "Get all variable names.\nNames of all variables.\nget_all_variable_names\npython:list\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.get_all_variable_names",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.get_all_variable_names.html#ansys.edb.core.layout.layout.Layout.get_all_variable_names",
        "title": "get_all_variable_names > get_all_variable_names > get_all_variable_names",
        "section": "get_all_variable_names > get_all_variable_names",
        "text": "Layout.get_all_variable_names()\n\nGet all variable names.\n\nReturns\n\npython:list[python:str]\n\nNames of all variables.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PathEndCapType.ROUND",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PathEndCapType.ROUND.html#round",
        "title": "ROUND",
        "section": "ROUND",
        "text": "ROUND"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PathEndCapType.ROUND",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PathEndCapType.ROUND.html#ansys.edb.core.primitive.primitive.PathEndCapType.ROUND",
        "title": "ROUND > ROUND > ROUND",
        "section": "ROUND > ROUND",
        "text": "PathEndCapType.ROUND = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.model.Model.msg",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.model.Model.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.model.Model.msg",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.model.Model.msg.html#ansys.edb.core.hierarchy.model.Model.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property Model.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeType.PADSTACK",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeType.PADSTACK.html#padstack",
        "title": "PADSTACK",
        "section": "PADSTACK",
        "text": "PADSTACK"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeType.PADSTACK",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeType.PADSTACK.html#ansys.edb.core.terminal.terminals.EdgeType.PADSTACK",
        "title": "PADSTACK > PADSTACK > PADSTACK",
        "section": "PADSTACK > PADSTACK",
        "text": "EdgeType.PADSTACK = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.find_by_id.html#find_by_id",
        "title": "find_by_id",
        "section": "find_by_id",
        "text": "Find a Connectable object by database ID in a given layout.\nLayout to search for the Connectable object.\nDatabase ID.\nConnectable object with the given database ID.\nfind_by_id\nLayout\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.find_by_id.html#ansys.edb.core.terminal.terminals.TerminalInstance.find_by_id",
        "title": "find_by_id > find_by_id > find_by_id",
        "section": "find_by_id > find_by_id",
        "text": "classmethod TerminalInstance.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the Connectable object.\n\nuid\n\npython:int\n\nDatabase ID.\n\nReturns\n\nConnectable\n\nConnectable object with the given database ID.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSParameterSettings.extrapolation",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSParameterSettings.extrapolation.html#extrapolation",
        "title": "extrapolation",
        "section": "extrapolation",
        "text": "SParamExtrapolation: Extrapolation type.\nextrapolation\nSParamExtrapolation"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSParameterSettings.extrapolation",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSParameterSettings.extrapolation.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSParameterSettings.extrapolation",
        "title": "extrapolation > extrapolation > extrapolation",
        "section": "extrapolation > extrapolation",
        "text": "property SIWaveSParameterSettings.extrapolation\n\nSParamExtrapolation: Extrapolation type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDs given a product ID for the layout object.\nID representing a product that supports the EDB.\nAll user-defined attribute IDs for properties stored in the object\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.get_product_property_ids.html#ansys.edb.core.terminal.terminals.EdgeTerminal.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "EdgeTerminal.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nReturns\n\npython:list[python:int]\n\nAll user-defined attribute IDs for properties stored in the object\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.cast",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.cast.html#cast",
        "title": "cast",
        "section": "cast",
        "text": "Cast the layer object to the correct concrete type.\ncast\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.cast",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.cast.html#ansys.edb.core.layer.stackup_layer.StackupLayer.cast",
        "title": "cast > cast > cast",
        "section": "cast > cast",
        "text": "StackupLayer.cast()\n\nCast the layer object to the correct concrete type.\n\nReturns\n\nLayer\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.DIELECTRIC_LOSS_TANGENT",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.DIELECTRIC_LOSS_TANGENT.html#dielectric_loss_tangent",
        "title": "DIELECTRIC_LOSS_TANGENT",
        "section": "DIELECTRIC_LOSS_TANGENT",
        "text": "DIELECTRIC_LOSS_TANGENT"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.DIELECTRIC_LOSS_TANGENT",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.DIELECTRIC_LOSS_TANGENT.html#ansys.edb.core.definition.material_def.MaterialProperty.DIELECTRIC_LOSS_TANGENT",
        "title": "DIELECTRIC_LOSS_TANGENT > DIELECTRIC_LOSS_TANGENT > DIELECTRIC_LOSS_TANGENT",
        "section": "DIELECTRIC_LOSS_TANGENT > DIELECTRIC_LOSS_TANGENT",
        "text": "MaterialProperty.DIELECTRIC_LOSS_TANGENT = 6\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.msg.html#ansys.edb.core.definition.bondwire_def.Jedec4BondwireDef.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property Jedec4BondwireDef.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_void",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_void.html#is_void",
        "title": "is_void",
        "section": "is_void",
        "text": "bool: Flag indicating if a primitive is a void.\nis_void\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_void",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.is_void.html#ansys.edb.core.primitive.primitive.Polygon.is_void",
        "title": "is_void > is_void > is_void",
        "section": "is_void > is_void",
        "text": "property Polygon.is_void\n\nbool: Flag indicating if a primitive is a void.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.layout",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.layout.html#layout",
        "title": "layout",
        "section": "layout",
        "text": "Layout: Layout owning the object.\nThis property is read-only.\nlayout\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.layout",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.layout.html#ansys.edb.core.hierarchy.via_group.ViaGroup.layout",
        "title": "layout > layout > layout",
        "section": "layout > layout",
        "text": "property ViaGroup.layout\n\nLayout: Layout owning the object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.layer_names",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.layer_names.html#layer_names",
        "title": "layer_names",
        "section": "layer_names",
        "text": "list of str: List of layer names in the padstack definition data object.\nThis property is read-only.\nlayer_names\nlist\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.layer_names",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.layer_names.html#ansys.edb.core.definition.padstack_def_data.PadstackDefData.layer_names",
        "title": "layer_names > layer_names > layer_names",
        "section": "layer_names > layer_names",
        "text": "property PadstackDefData.layer_names\n\nlist of str: List of layer names in the padstack definition data object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.create_stride",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.create_stride.html#create_stride",
        "title": "create_stride",
        "section": "create_stride",
        "text": "Create a Stride model from an MCAD file.\nStride model created.\ncreate_stride\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.create_stride",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.create_stride.html#ansys.edb.core.hierarchy.inst_array.InstArray.create_stride",
        "title": "create_stride > create_stride > create_stride",
        "section": "create_stride > create_stride",
        "text": "InstArray.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nReturns\n\nMcadModel\n\nStride model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.obj_type",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.obj_type.html#obj_type",
        "title": "obj_type",
        "section": "obj_type",
        "text": "LayoutObjType: Layout object type.\nThis property is read-only.\nobj_type\nLayoutObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.obj_type",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.obj_type.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.obj_type",
        "title": "obj_type > obj_type > obj_type",
        "section": "obj_type > obj_type",
        "text": "property VoltageRegulator.obj_type\n\nLayoutObjType: Layout object type.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.group",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.group.html#group",
        "title": "group",
        "section": "group",
        "text": "Group object.\ngroup\nGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.group",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.group.html#ansys.edb.core.primitive.primitive.PadstackInstance.group",
        "title": "group > group > group",
        "section": "group > group",
        "text": "property PadstackInstance.group\n\nGroup object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.msg.html#ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property SIWaveDCIRSimulationSetup.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.temperature_settings.TemperatureSettings",
        "href": "api/_autosummary/ansys.edb.core.utility.temperature_settings.TemperatureSettings.html#temperaturesettings",
        "title": "TemperatureSettings",
        "section": "TemperatureSettings",
        "text": "Provides temperature settings.\nWhether to include temperature dependence.\nWhether to enable thermal feedback.\nTemperature value.\nTemperatureSettings"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.temperature_settings.TemperatureSettings",
        "href": "api/_autosummary/ansys.edb.core.utility.temperature_settings.TemperatureSettings.html#ansys.edb.core.utility.temperature_settings.TemperatureSettings",
        "title": "TemperatureSettings > TemperatureSettings > TemperatureSettings",
        "section": "TemperatureSettings > TemperatureSettings",
        "text": "class ansys.edb.core.utility.temperature_settings.TemperatureSettings(include_temp_dependence, enable_thermal_feedback, temperature)\n\nProvides temperature settings.\n\nAttributes\n\ninclude_temp_dependence\n\nbool\n\nWhether to include temperature dependence.\n\nenable_thermal_feedback\n\nbool\n\nWhether to enable thermal feedback.\n\ntemperature\n\nValueLike\n\nTemperature value.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier.quadratic_model_params",
        "href": "api/_autosummary/ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier.quadratic_model_params.html#quadratic_model_params",
        "title": "quadratic_model_params",
        "section": "quadratic_model_params",
        "text": "BasicQuadraticParams, AdvancedQuadraticParams:         Quadratic model parameters of the thermal modifier.\nThe quadratic model is in this form:         PropVal(Temp) = PropValRef[1 + C1(Temp - TempRef) + C2(Temp - TempRef)^2]\nwhere PropValRef = The original property value without the thermal modifier applied\nThis property is read-only.\nquadratic_model_params\nBasicQuadraticParams\nAdvancedQuadraticParams"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier.quadratic_model_params",
        "href": "api/_autosummary/ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier.quadratic_model_params.html#ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier.quadratic_model_params",
        "title": "quadratic_model_params > quadratic_model_params > quadratic_model_params",
        "section": "quadratic_model_params > quadratic_model_params",
        "text": "property MaterialPropertyThermalModifier.quadratic_model_params\n\nBasicQuadraticParams, AdvancedQuadraticParams:         Quadratic model parameters of the thermal modifier.\n\nThe quadratic model is in this form:         PropVal(Temp) = PropValRef[1 + C1(Temp - TempRef) + C2(Temp - TempRef)^2]\nwhere PropValRef = The original property value without the thermal modifier applied\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.x_count",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.x_count.html#x_count",
        "title": "x_count",
        "section": "x_count",
        "text": "Value: X count of the instance array.\nx_count\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.x_count",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.x_count.html#ansys.edb.core.hierarchy.inst_array.InstArray.x_count",
        "title": "x_count > x_count > x_count",
        "section": "x_count > x_count",
        "text": "property InstArray.x_count\n\nValue: X count of the instance array.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamExtrapolation",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamExtrapolation.html#sparamextrapolation",
        "title": "SParamExtrapolation",
        "section": "SParamExtrapolation",
        "text": "Provides an enum representing s parameter extrapolation types.\nSParamExtrapolation.ZERO_EX\n\nSParamExtrapolation.SAME_EX\n\nSParamExtrapolation.LINEAR_EX\n\nSParamExtrapolation.CONSTANT_EX\n\nSParamExtrapolation\nSParamExtrapolation.ZERO_EX\nSParamExtrapolation.SAME_EX\nSParamExtrapolation.LINEAR_EX\nSParamExtrapolation.CONSTANT_EX"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamExtrapolation",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamExtrapolation.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamExtrapolation",
        "title": "SParamExtrapolation > SParamExtrapolation > SParamExtrapolation",
        "section": "SParamExtrapolation > SParamExtrapolation",
        "text": "class ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamExtrapolation(value)\n\nProvides an enum representing s parameter extrapolation types.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nSParamExtrapolation.ZERO_EX\n\n\n\nSParamExtrapolation.SAME_EX\n\n\n\nSParamExtrapolation.LINEAR_EX\n\n\n\nSParamExtrapolation.CONSTANT_EX\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings.circle_start_azimuth",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings.circle_start_azimuth.html#circle_start_azimuth",
        "title": "circle_start_azimuth",
        "section": "circle_start_azimuth",
        "text": "str: Starting azimuth used when approximating arcs.\ncircle_start_azimuth\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings.circle_start_azimuth",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings.circle_start_azimuth.html#ansys.edb.core.simulation_setup.simulation_settings.AdvancedMeshingSettings.circle_start_azimuth",
        "title": "circle_start_azimuth > circle_start_azimuth > circle_start_azimuth",
        "section": "circle_start_azimuth > circle_start_azimuth",
        "text": "property AdvancedMeshingSettings.circle_start_azimuth\n\nstr: Starting azimuth used when approximating arcs.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.simplify_dielectrics_for_phi",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.simplify_dielectrics_for_phi.html#simplify_dielectrics_for_phi",
        "title": "simplify_dielectrics_for_phi",
        "section": "simplify_dielectrics_for_phi",
        "text": "Split dielectric layers at the boundaries of signal layers and merge them.\nThickness threshold for the layer.\nMethod for merging.\nList of dielectric layers created during the dielectric simplification process.\nsimplify_dielectrics_for_phi\nDatabase\npython:float\nDielectricMergingMethod\nWEIGHTED_CAPACITANCE\npython:list\nStackupLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.simplify_dielectrics_for_phi",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.simplify_dielectrics_for_phi.html#ansys.edb.core.layer.layer_collection.LayerCollection.simplify_dielectrics_for_phi",
        "title": "simplify_dielectrics_for_phi > simplify_dielectrics_for_phi > simplify_dielectrics_for_phi",
        "section": "simplify_dielectrics_for_phi > simplify_dielectrics_for_phi",
        "text": "LayerCollection.simplify_dielectrics_for_phi(database, layer_thickness_thresh=-1, merging_method=DielectricMergingMethod.WEIGHTED_CAPACITANCE)\n\nSplit dielectric layers at the boundaries of signal layers and merge them.\n\nParameters\n\ndatabase\n\nDatabase\n\n\n\nlayer_thickness_thresh\n\npython:float, default: -1\n\nThickness threshold for the layer.\n\nmerging_method\n\nDielectricMergingMethod, default: WEIGHTED_CAPACITANCE\n\nMethod for merging.\n\nReturns\n\npython:list[StackupLayer]\n\nList of dielectric layers created during the dielectric simplification process.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.layout_obj_type.html#layout_obj_type",
        "title": "layout_obj_type",
        "section": "layout_obj_type",
        "text": "layout_obj_type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.layout_obj_type.html#ansys.edb.core.net.differential_pair.DifferentialPair.layout_obj_type",
        "title": "layout_obj_type > layout_obj_type > layout_obj_type",
        "section": "layout_obj_type > layout_obj_type",
        "text": "DifferentialPair.layout_obj_type = 11\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel.html#dynamiclinkcomponentmodel",
        "title": "DynamicLinkComponentModel",
        "section": "DynamicLinkComponentModel",
        "text": "Represents a dynamic link component model.\nDynamicLinkComponentModel.create(name)\nCreate a dynamic link component model.\nDynamicLinkComponentModel.find_by_id(...)\nFind a component model by ID in a given component def.\nDynamicLinkComponentModel.find_by_name(...)\nFind a component model by name in a given component def.\nDynamicLinkComponentModel.design_name\nstr: Name of the design associated with the dynamic link component model.\nDynamicLinkComponentModel.id\nint: Unique ID of the EDB object.\nDynamicLinkComponentModel.is_null\nbool: Flag indicating if the object exists in the database.\nDynamicLinkComponentModel.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nDynamicLinkComponentModel.reference_file\nstr: Name of the reference file associated with the component model.\nDynamicLinkComponentModel\nDynamicLinkComponentModel.create\nDynamicLinkComponentModel.find_by_id\nDynamicLinkComponentModel.find_by_name\nDynamicLinkComponentModel.design_name\nstr\nDynamicLinkComponentModel.id\nint\nDynamicLinkComponentModel.is_null\nbool\nDynamicLinkComponentModel.msg\nEDBObjMessage\nDynamicLinkComponentModel.reference_file\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel.html#ansys.edb.core.definition.component_model.DynamicLinkComponentModel",
        "title": "DynamicLinkComponentModel > DynamicLinkComponentModel > DynamicLinkComponentModel",
        "section": "DynamicLinkComponentModel > DynamicLinkComponentModel",
        "text": "class ansys.edb.core.definition.component_model.DynamicLinkComponentModel(msg)\n\nRepresents a dynamic link component model.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nDynamicLinkComponentModel.create(name)\n\nCreate a dynamic link component model.\n\nDynamicLinkComponentModel.find_by_id(...)\n\nFind a component model by ID in a given component def.\n\nDynamicLinkComponentModel.find_by_name(...)\n\nFind a component model by name in a given component def.\n\n\n\nAttributes\n\n\n\n\n\n\n\nDynamicLinkComponentModel.design_name\n\nstr: Name of the design associated with the dynamic link component model.\n\nDynamicLinkComponentModel.id\n\nint: Unique ID of the EDB object.\n\nDynamicLinkComponentModel.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nDynamicLinkComponentModel.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nDynamicLinkComponentModel.reference_file\n\nstr: Name of the reference file associated with the component model.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.component",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.component.html#component",
        "title": "component",
        "section": "component",
        "text": "ComponentGroup:         Component of the Connectable object.\ncomponent\nComponentGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.component",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.component.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.component",
        "title": "component > component > component",
        "section": "component > component",
        "text": "property ComponentGroup.component\n\nComponentGroup:         Component of the Connectable object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.remove_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.remove_hfss_prop.html#remove_hfss_prop",
        "title": "remove_hfss_prop",
        "section": "remove_hfss_prop",
        "text": "Remove HFSS properties.\nremove_hfss_prop"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.remove_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.remove_hfss_prop.html#ansys.edb.core.primitive.primitive.Polygon.remove_hfss_prop",
        "title": "remove_hfss_prop > remove_hfss_prop > remove_hfss_prop",
        "section": "remove_hfss_prop > remove_hfss_prop",
        "text": "Polygon.remove_hfss_prop()\n\nRemove HFSS properties.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.create_stride",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.create_stride.html#create_stride",
        "title": "create_stride",
        "section": "create_stride",
        "text": "Create a Stride model from an MCAD file.\nStride model created.\ncreate_stride\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.create_stride",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.create_stride.html#ansys.edb.core.terminal.terminals.PointTerminal.create_stride",
        "title": "create_stride > create_stride > create_stride",
        "section": "create_stride > create_stride",
        "text": "PointTerminal.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nReturns\n\nMcadModel\n\nStride model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.delete",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the layout object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.delete",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.delete.html#ansys.edb.core.terminal.terminals.Terminal.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "Terminal.delete()\n\nDelete the layout object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.HfssPIType.COAXIAL_OPEN",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.HfssPIType.COAXIAL_OPEN.html#coaxial_open",
        "title": "COAXIAL_OPEN",
        "section": "COAXIAL_OPEN",
        "text": "COAXIAL_OPEN"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.HfssPIType.COAXIAL_OPEN",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.HfssPIType.COAXIAL_OPEN.html#ansys.edb.core.terminal.terminals.HfssPIType.COAXIAL_OPEN",
        "title": "COAXIAL_OPEN > COAXIAL_OPEN > COAXIAL_OPEN",
        "section": "COAXIAL_OPEN > COAXIAL_OPEN",
        "text": "HfssPIType.COAXIAL_OPEN = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.port_post_processing_prop",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.port_post_processing_prop.html#port_post_processing_prop",
        "title": "port_post_processing_prop",
        "section": "port_post_processing_prop",
        "text": "PortPostProcessingProp: Port postprocessing properties.\nport_post_processing_prop\nPortPostProcessingProp"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.port_post_processing_prop",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.port_post_processing_prop.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.port_post_processing_prop",
        "title": "port_post_processing_prop > port_post_processing_prop > port_post_processing_prop",
        "section": "port_post_processing_prop > port_post_processing_prop",
        "text": "property PinGroupTerminal.port_post_processing_prop\n\nPortPostProcessingProp: Port postprocessing properties.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property of the layout object for a given product ID and attribute ID.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the property.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.set_product_property.html#ansys.edb.core.hierarchy.structure3d.Structure3D.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "Structure3D.set_product_property(prod_id, attr_id, prop_value)\n\nSet the product property of the layout object for a given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nprop_value\n\npython:str\n\nString stored in the property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.triangle3d_data.Triangle3DData",
        "href": "api/_autosummary/ansys.edb.core.geometry.triangle3d_data.Triangle3DData.html#triangle3ddata",
        "title": "Triangle3DData",
        "section": "Triangle3DData",
        "text": "Represents a triangle defined by three 3D points.\nTriangle3DData.point_1\nPoint3DData: First 3D point.\nTriangle3DData.point_2\nPoint3DData: Second 3D point.\nTriangle3DData.point_3\nPoint3DData: Third 3D point.\nTriangle3DData\nTriangle3DData.point_1\nPoint3DData\nTriangle3DData.point_2\nPoint3DData\nTriangle3DData.point_3\nPoint3DData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.triangle3d_data.Triangle3DData",
        "href": "api/_autosummary/ansys.edb.core.geometry.triangle3d_data.Triangle3DData.html#ansys.edb.core.geometry.triangle3d_data.Triangle3DData",
        "title": "Triangle3DData > Triangle3DData > Triangle3DData",
        "section": "Triangle3DData > Triangle3DData",
        "text": "class ansys.edb.core.geometry.triangle3d_data.Triangle3DData(point_1, point_2, point_3)\n\nRepresents a triangle defined by three 3D points.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nTriangle3DData.point_1\n\nPoint3DData: First 3D point.\n\nTriangle3DData.point_2\n\nPoint3DData: Second 3D point.\n\nTriangle3DData.point_3\n\nPoint3DData: Third 3D point.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_mcad_stride.html#is_mcad_stride",
        "title": "is_mcad_stride",
        "section": "is_mcad_stride",
        "text": "bool: Flag indicating if this is a Stride MCAD model.\nThis property is read-only.\nis_mcad_stride\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_mcad_stride.html#ansys.edb.core.primitive.primitive.Bondwire.is_mcad_stride",
        "title": "is_mcad_stride > is_mcad_stride > is_mcad_stride",
        "section": "is_mcad_stride > is_mcad_stride",
        "text": "property Bondwire.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.edb_uid.html#edb_uid",
        "title": "edb_uid",
        "section": "edb_uid",
        "text": "int: Unique, persistent ID for the Connectable object.\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\nThis property is read-only.\nedb_uid\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.edb_uid.html#ansys.edb.core.hierarchy.group.Group.edb_uid",
        "title": "edb_uid > edb_uid > edb_uid",
        "section": "edb_uid > edb_uid",
        "text": "property Group.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_void",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_void.html#is_void",
        "title": "is_void",
        "section": "is_void",
        "text": "bool: Flag indicating if a primitive is a void.\nis_void\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_void",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.is_void.html#ansys.edb.core.primitive.primitive.Rectangle.is_void",
        "title": "is_void > is_void > is_void",
        "section": "is_void > is_void",
        "text": "property Rectangle.is_void\n\nbool: Flag indicating if a primitive is a void.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.edb_uid.html#edb_uid",
        "title": "edb_uid",
        "section": "edb_uid",
        "text": "int: Unique, persistent ID for the Connectable object.\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\nThis property is read-only.\nedb_uid\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.edb_uid.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.edb_uid",
        "title": "edb_uid > edb_uid > edb_uid",
        "section": "edb_uid > edb_uid",
        "text": "property PinGroupTerminal.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.id",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.id",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.id.html#ansys.edb.core.definition.padstack_def.PadstackDef.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property PadstackDef.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.msg",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.msg",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.msg.html#ansys.edb.core.hierarchy.structure3d.Structure3D.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property Structure3D.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.type",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.type.html#type",
        "title": "type",
        "section": "type",
        "text": "SimulationSetupType: Type of the simulation setup.\ntype\nSimulationSetupType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.type",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.type.html#ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.type",
        "title": "type > type > type",
        "section": "type > type",
        "text": "property RaptorXSimulationSetup.type\n\nSimulationSetupType: Type of the simulation setup.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.create",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a terminal instance.\nLayout to create the terminal instance in.\nName of the cell instance to create the terminal instance on.\nName of the terminal instance.\nNet reference.\ncreate\nLayout\nCellInstance\nstr\nNet\nstr\npython:None\nTerminalInstance"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.create",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.create.html#ansys.edb.core.terminal.terminals.TerminalInstance.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod TerminalInstance.create(layout, cell_instance, name, net_ref)\n\nCreate a terminal instance.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to create the terminal instance in.\n\ncell_instance\n\nCellInstance\n\nName of the cell instance to create the terminal instance on.\n\nname\n\nstr\n\nName of the terminal instance.\n\nnet_ref\n\nNet or str or python:None\n\nNet reference.\n\nReturns\n\nTerminalInstance\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.model",
        "href": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.model.html#model",
        "title": "model",
        "section": "model",
        "text": "Model: Model object.\nThis is a copy of the model object. Use the setter for any modifications to be reflected.\nmodel\nModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.model",
        "href": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.model.html#ansys.edb.core.definition.io_component_property.IOComponentProperty.model",
        "title": "model > model > model",
        "section": "model > model",
        "text": "property IOComponentProperty.model\n\nModel: Model object.\n\nThis is a copy of the model object. Use the setter for any modifications to be reflected.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.msg.html#ansys.edb.core.definition.solder_ball_property.SolderBallProperty.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property SolderBallProperty.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.radius",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.radius.html#radius",
        "title": "radius",
        "section": "radius",
        "text": "float: Radius of the arc.\nradius\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.radius",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.radius.html#ansys.edb.core.geometry.arc_data.ArcData.radius",
        "title": "radius > radius > radius",
        "section": "radius > radius",
        "text": "property ArcData.radius\n\nfloat: Radius of the arc.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.mode",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.mode.html#mode",
        "title": "mode",
        "section": "mode",
        "text": "LayerCollectionMode: Mode of the layer collection.\nmode\nLayerCollectionMode"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.mode",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.mode.html#ansys.edb.core.layer.layer_collection.LayerCollection.mode",
        "title": "mode > mode > mode",
        "section": "mode > mode",
        "text": "property LayerCollection.mode\n\nLayerCollectionMode: Mode of the layer collection.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.layout",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.layout.html#layout",
        "title": "layout",
        "section": "layout",
        "text": "Layout: Layout owning the object.\nThis property is read-only.\nlayout\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.layout",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.layout.html#ansys.edb.core.net.net_class.NetClass.layout",
        "title": "layout > layout > layout",
        "section": "layout > layout",
        "text": "property NetClass.layout\n\nLayout: Layout owning the object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge.is_null",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge.is_null",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge.is_null.html#ansys.edb.core.terminal.terminals.PrimitiveEdge.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property PrimitiveEdge.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.is_null.html#ansys.edb.core.definition.multipole_debye_model.MultipoleDebyeModel.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property MultipoleDebyeModel.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.cast",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.cast.html#cast",
        "title": "cast",
        "section": "cast",
        "text": "Cast the primitive object to the correct concrete type.\ncast\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.cast",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.cast.html#ansys.edb.core.primitive.primitive.Text.cast",
        "title": "cast > cast > cast",
        "section": "cast > cast",
        "text": "Text.cast()\n\nCast the primitive object to the correct concrete type.\n\nReturns\n\nPrimitive\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetupType.SI_WAVE",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetupType.SI_WAVE.html#si_wave",
        "title": "SI_WAVE",
        "section": "SI_WAVE",
        "text": "SI_WAVE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetupType.SI_WAVE",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetupType.SI_WAVE.html#ansys.edb.core.simulation_setup.simulation_setup.SimulationSetupType.SI_WAVE",
        "title": "SI_WAVE > SI_WAVE > SI_WAVE",
        "section": "SI_WAVE > SI_WAVE",
        "text": "SimulationSetupType.SI_WAVE = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.solver_type",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.solver_type.html#solver_type",
        "title": "solver_type",
        "section": "solver_type",
        "text": "SolverType: HFSS solver type.\nsolver_type\nSolverType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.solver_type",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.solver_type.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.solver_type",
        "title": "solver_type > solver_type > solver_type",
        "section": "solver_type > solver_type",
        "text": "property HFSSSettingsOptions.solver_type\n\nSolverType: HFSS solver type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.is_via_layer",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.is_via_layer.html#is_via_layer",
        "title": "is_via_layer",
        "section": "is_via_layer",
        "text": "bool: Flag indicating if the layer is a ViaLayer instance.\nThis property is read-only.\nis_via_layer\nbool\nViaLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.is_via_layer",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.is_via_layer.html#ansys.edb.core.layer.layer.Layer.is_via_layer",
        "title": "is_via_layer > is_via_layer > is_via_layer",
        "section": "is_via_layer > is_via_layer",
        "text": "property Layer.is_via_layer\n\nbool: Flag indicating if the layer is a ViaLayer instance.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.part_index",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.part_index.html#part_index",
        "title": "part_index",
        "section": "part_index",
        "text": "Get the index of an MCAD model part with a given name.\nName of the MCAD model part.\nIndex of the MCAD model part.\npart_index\npython:str\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.part_index",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.part_index.html#ansys.edb.core.layout.mcad_model.McadModel.part_index",
        "title": "part_index > part_index > part_index",
        "section": "part_index > part_index",
        "text": "McadModel.part_index(name)\n\nGet the index of an MCAD model part with a given name.\n\nParameters\n\nname\n\npython:str\n\nName of the MCAD model part.\n\nReturns\n\npython:int\n\nIndex of the MCAD model part.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.definition_type",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.definition_type.html#definition_type",
        "title": "definition_type",
        "section": "definition_type",
        "text": "DefinitionObjType: Definition type.\ndefinition_type\nDefinitionObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.definition_type",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.definition_type.html#ansys.edb.core.definition.package_def.PackageDef.definition_type",
        "title": "definition_type > definition_type > definition_type",
        "section": "definition_type > definition_type",
        "text": "property PackageDef.definition_type\n\nDefinitionObjType: Definition type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.relative_permitivity_at_frequency",
        "href": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.relative_permitivity_at_frequency.html#relative_permitivity_at_frequency",
        "title": "relative_permitivity_at_frequency",
        "section": "relative_permitivity_at_frequency",
        "text": "float: Relative permitivity frequency.\nrelative_permitivity_at_frequency\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.relative_permitivity_at_frequency",
        "href": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.relative_permitivity_at_frequency.html#ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.relative_permitivity_at_frequency",
        "title": "relative_permitivity_at_frequency > relative_permitivity_at_frequency > relative_permitivity_at_frequency",
        "section": "relative_permitivity_at_frequency > relative_permitivity_at_frequency",
        "text": "property DjordjecvicSarkarModel.relative_permitivity_at_frequency\n\nfloat: Relative permitivity frequency.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballShape.NO_SOLDERBALL",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballShape.NO_SOLDERBALL.html#no_solderball",
        "title": "NO_SOLDERBALL",
        "section": "NO_SOLDERBALL",
        "text": "NO_SOLDERBALL"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballShape.NO_SOLDERBALL",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballShape.NO_SOLDERBALL.html#ansys.edb.core.definition.padstack_def_data.SolderballShape.NO_SOLDERBALL",
        "title": "NO_SOLDERBALL > NO_SOLDERBALL > NO_SOLDERBALL",
        "section": "NO_SOLDERBALL > NO_SOLDERBALL",
        "text": "SolderballShape.NO_SOLDERBALL = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.make_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.make_zone_primitive.html#make_zone_primitive",
        "title": "make_zone_primitive",
        "section": "make_zone_primitive",
        "text": "Make the primitive a zone primitive with a zone specified by the provided ID.\nID of the zone primitive to use.\nmake_zone_primitive\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.make_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.make_zone_primitive.html#ansys.edb.core.primitive.primitive.Bondwire.make_zone_primitive",
        "title": "make_zone_primitive > make_zone_primitive > make_zone_primitive",
        "section": "make_zone_primitive > make_zone_primitive",
        "text": "Bondwire.make_zone_primitive(zone_id)\n\nMake the primitive a zone primitive with a zone specified by the provided ID.\n\nParameters\n\nzone_id\n\npython:int\n\nID of the zone primitive to use.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.MEASURE_LAYER",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.MEASURE_LAYER.html#measure_layer",
        "title": "MEASURE_LAYER",
        "section": "MEASURE_LAYER",
        "text": "MEASURE_LAYER"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.MEASURE_LAYER",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.MEASURE_LAYER.html#ansys.edb.core.layer.layer_collection.LayerType.MEASURE_LAYER",
        "title": "MEASURE_LAYER > MEASURE_LAYER > MEASURE_LAYER",
        "section": "MEASURE_LAYER > MEASURE_LAYER",
        "text": "LayerType.MEASURE_LAYER = 6\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.angle",
        "href": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.angle.html#angle",
        "title": "angle",
        "section": "angle",
        "text": "Get the angle between this vector and another vector.\nOther vector.\nAngle in radians.\nangle\nansys.edb.core.typing.PointLike\npython:float"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.angle",
        "href": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.angle.html#ansys.edb.core.geometry.point_data.PointData.angle",
        "title": "angle > angle > angle",
        "section": "angle > angle",
        "text": "PointData.angle(other)\n\nGet the angle between this vector and another vector.\n\nParameters\n\nother\n\nansys.edb.core.typing.PointLike\n\nOther vector.\n\nReturns\n\npython:float\n\nAngle in radians.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.delete",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the layout object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.delete",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.delete.html#ansys.edb.core.net.differential_pair.DifferentialPair.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "DifferentialPair.delete()\n\nDelete the layout object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_circuit_port",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_circuit_port.html#is_circuit_port",
        "title": "is_circuit_port",
        "section": "is_circuit_port",
        "text": "bool: Flag indicating if the terminal is a circuit port.\nis_circuit_port\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_circuit_port",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.is_circuit_port.html#ansys.edb.core.terminal.terminals.Terminal.is_circuit_port",
        "title": "is_circuit_port > is_circuit_port > is_circuit_port",
        "section": "is_circuit_port > is_circuit_port",
        "text": "property Terminal.is_circuit_port\n\nbool: Flag indicating if the terminal is a circuit port.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireCrossSectionType",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireCrossSectionType.html#bondwirecrosssectiontype",
        "title": "BondwireCrossSectionType",
        "section": "BondwireCrossSectionType",
        "text": "Provides an enum representing bondwire cross section types.\nBondwireCrossSectionType.ROUND\n\nBondwireCrossSectionType.RECTANGLE\n\nBondwireCrossSectionType.INVALID\n\nBondwireCrossSectionType\nBondwireCrossSectionType.ROUND\nBondwireCrossSectionType.RECTANGLE\nBondwireCrossSectionType.INVALID"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireCrossSectionType",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BondwireCrossSectionType.html#ansys.edb.core.primitive.primitive.BondwireCrossSectionType",
        "title": "BondwireCrossSectionType > BondwireCrossSectionType > BondwireCrossSectionType",
        "section": "BondwireCrossSectionType > BondwireCrossSectionType",
        "text": "class ansys.edb.core.primitive.primitive.BondwireCrossSectionType(value)\n\nProvides an enum representing bondwire cross section types.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nBondwireCrossSectionType.ROUND\n\n\n\nBondwireCrossSectionType.RECTANGLE\n\n\n\nBondwireCrossSectionType.INVALID\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.source_phase",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.source_phase.html#source_phase",
        "title": "source_phase",
        "section": "source_phase",
        "text": "Value: Source phase of the terminal.\nsource_phase\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.source_phase",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.source_phase.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.source_phase",
        "title": "source_phase > source_phase > source_phase",
        "section": "source_phase > source_phase",
        "text": "property TerminalInstanceTerminal.source_phase\n\nValue: Source phase of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.component",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.component.html#component",
        "title": "component",
        "section": "component",
        "text": "ComponentGroup:         Component of the Connectable object.\ncomponent\nComponentGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.component",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.component.html#ansys.edb.core.primitive.primitive.Bondwire.component",
        "title": "component > component > component",
        "section": "component > component",
        "text": "property Bondwire.component\n\nComponentGroup:         Component of the Connectable object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.get_zone_name",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.get_zone_name.html#get_zone_name",
        "title": "get_zone_name",
        "section": "get_zone_name",
        "text": "Get the name for a given zone.\nZone ID.\nName of the zone.\nget_zone_name\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.get_zone_name",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollection.get_zone_name.html#ansys.edb.core.layer.layer_collection.LayerCollection.get_zone_name",
        "title": "get_zone_name > get_zone_name > get_zone_name",
        "section": "get_zone_name > get_zone_name",
        "text": "LayerCollection.get_zone_name(zone)\n\nGet the name for a given zone.\n\nParameters\n\nzone\n\npython:int\n\nZone ID.\n\nReturns\n\npython:str\n\nName of the zone.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.layout",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.layout.html#layout",
        "title": "layout",
        "section": "layout",
        "text": "Layout: Layout owning the object.\nThis property is read-only.\nlayout\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.layout",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.layout.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.layout",
        "title": "layout > layout > layout",
        "section": "layout > layout",
        "text": "property PadstackInstanceTerminal.layout\n\nLayout: Layout owning the object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType.PADSTACK_DEF",
        "href": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType.PADSTACK_DEF.html#padstack_def",
        "title": "PADSTACK_DEF",
        "section": "PADSTACK_DEF",
        "text": "PADSTACK_DEF"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType.PADSTACK_DEF",
        "href": "api/_autosummary/ansys.edb.core.edb_defs.DefinitionObjType.PADSTACK_DEF.html#ansys.edb.core.edb_defs.DefinitionObjType.PADSTACK_DEF",
        "title": "PADSTACK_DEF > PADSTACK_DEF > PADSTACK_DEF",
        "section": "PADSTACK_DEF > PADSTACK_DEF",
        "text": "DefinitionObjType.PADSTACK_DEF = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.id.html#ansys.edb.core.hierarchy.via_group.ViaGroup.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property ViaGroup.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.product_solver_option",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.product_solver_option.html#product_solver_option",
        "title": "product_solver_option",
        "section": "product_solver_option",
        "text": "Get the name of the product solver option.\nID of the product.\nName of the solver.\nName of the product solver option.\nproduct_solver_option\nProductIdType\nstr\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.product_solver_option",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.product_solver_option.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.product_solver_option",
        "title": "product_solver_option > product_solver_option > product_solver_option",
        "section": "product_solver_option > product_solver_option",
        "text": "PinGroupTerminal.product_solver_option(product_id, solver_name)\n\nGet the name of the product solver option.\n\nParameters\n\nproduct_id\n\nProductIdType\n\nID of the product.\n\nsolver_name\n\nstr\n\nName of the solver.\n\nReturns\n\nstr\n\nName of the product solver option.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.boundary_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.boundary_type.html#boundary_type",
        "title": "boundary_type",
        "section": "boundary_type",
        "text": "BoundaryType: Boundary type of the terminal.\nboundary_type\nBoundaryType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.boundary_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.boundary_type.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.boundary_type",
        "title": "boundary_type > boundary_type > boundary_type",
        "section": "boundary_type > boundary_type",
        "text": "property PadstackInstanceTerminal.boundary_type\n\nBoundaryType: Boundary type of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialDef.msg.html#ansys.edb.core.definition.material_def.MaterialDef.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property MaterialDef.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.is_null",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.is_null",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.is_null.html#ansys.edb.core.net.extended_net.ExtendedNet.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property ExtendedNet.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.set_back_drill_by_layer",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.set_back_drill_by_layer.html#set_back_drill_by_layer",
        "title": "set_back_drill_by_layer",
        "section": "set_back_drill_by_layer",
        "text": "Set the back drill by the layer.\nLayer to drill to. If drilling from the top, the drill stops at the upper\nelevation of the layer. If drilling from the bottom, the drill stops at\nthe lower elevation of the layer.\nLayer offset (or depth if the layer is empty).\nDrilling diameter.\nWhether to set the back drill type from the bottom.\nset_back_drill_by_layer\nLayer\nValue\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.set_back_drill_by_layer",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.set_back_drill_by_layer.html#ansys.edb.core.primitive.primitive.PadstackInstance.set_back_drill_by_layer",
        "title": "set_back_drill_by_layer > set_back_drill_by_layer > set_back_drill_by_layer",
        "section": "set_back_drill_by_layer > set_back_drill_by_layer",
        "text": "PadstackInstance.set_back_drill_by_layer(drill_to_layer, offset, diameter, from_bottom)\n\nSet the back drill by the layer.\n\nParameters\n\ndrill_to_layer\n\nLayer\n\nLayer to drill to. If drilling from the top, the drill stops at the upper\nelevation of the layer. If drilling from the bottom, the drill stops at\nthe lower elevation of the layer.\n\noffset\n\nValue\n\nLayer offset (or depth if the layer is empty).\n\ndiameter\n\nValue\n\nDrilling diameter.\n\nfrom_bottom\n\nbool\n\nWhether to set the back drill type from the bottom.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.POST_PROCESSING_LAYER",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.POST_PROCESSING_LAYER.html#post_processing_layer",
        "title": "POST_PROCESSING_LAYER",
        "section": "POST_PROCESSING_LAYER",
        "text": "POST_PROCESSING_LAYER"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.POST_PROCESSING_LAYER",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerType.POST_PROCESSING_LAYER.html#ansys.edb.core.layer.layer_collection.LayerType.POST_PROCESSING_LAYER",
        "title": "POST_PROCESSING_LAYER > POST_PROCESSING_LAYER > POST_PROCESSING_LAYER",
        "section": "POST_PROCESSING_LAYER > POST_PROCESSING_LAYER",
        "text": "LayerType.POST_PROCESSING_LAYER = 17\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.delete",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the cell.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.delete",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.delete.html#ansys.edb.core.layout.cell.Cell.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "Cell.delete()\n\nDelete the cell.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.set_parameter_override",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.set_parameter_override.html#set_parameter_override",
        "title": "set_parameter_override",
        "section": "set_parameter_override",
        "text": "Set an override value for a given cell instance parameter.\nName of the cell instance parameter.\nValue to override with.\nset_parameter_override\npython:str\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.set_parameter_override",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.set_parameter_override.html#ansys.edb.core.hierarchy.inst_array.InstArray.set_parameter_override",
        "title": "set_parameter_override > set_parameter_override > set_parameter_override",
        "section": "set_parameter_override > set_parameter_override",
        "text": "InstArray.set_parameter_override(param_name, param_value)\n\nSet an override value for a given cell instance parameter.\n\nParameters\n\nparam_name\n\npython:str\n\nName of the cell instance parameter.\n\nparam_value\n\nValue\n\nValue to override with.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/net",
        "href": "api/net.html#nets",
        "title": "Nets",
        "section": "Nets",
        "text": "Nets"
    },
    {
        "objectID": "api/net",
        "href": "api/net.html#classes",
        "title": "Nets > Classes",
        "section": "Classes",
        "text": "differential_pair.DifferentialPair(msg)\nRepresents a differential pair.\nextended_net.ExtendedNet(msg)\nRepresents an extended net.\nnet.Net(msg)\nRepresents a net.\nnet_class.NetClass(msg)\nRepresents a net class.\nClasses\ndifferential_pair.DifferentialPair\nextended_net.ExtendedNet\nnet.Net\nnet_class.NetClass"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.is_point",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.is_point.html#is_point",
        "title": "is_point",
        "section": "is_point",
        "text": "Determine if the arc is a point.\nAn arc is a point when its start and end points are the same.\nTolearance.\nTrue when the arc is a point, False otherwise.\nis_point\npython:float\noptional\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.is_point",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.is_point.html#ansys.edb.core.geometry.arc_data.ArcData.is_point",
        "title": "is_point > is_point > is_point",
        "section": "is_point > is_point",
        "text": "ArcData.is_point(tolerance=0.0)\n\nDetermine if the arc is a point.\n\nAn arc is a point when its start and end points are the same.\n\nParameters\n\ntolerance\n\npython:float, optional\n\nTolearance.\n\nReturns\n\nbool\n\nTrue when the arc is a point, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/session",
        "href": "api/session.html#session",
        "title": "Session",
        "section": "Session",
        "text": "A session both launches a new EDB API server and creates a channel connection to this server.\nOnce these actions are completed, all EDB API function calls are processed using this channel.\nSession"
    },
    {
        "objectID": "api/session",
        "href": "api/session.html#functions",
        "title": "Session > Functions",
        "section": "Functions",
        "text": "launch_session(ansys_em_root[, port_num])\nLaunch a local session to an EDB API server.\nsession(ansys_em_root, port_num[, ip_address])\nLaunch a local session to an EDB API server in a context manager.\nFunctions\nlaunch_session\nsession"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_edge_mesh",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_edge_mesh.html#use_edge_mesh",
        "title": "use_edge_mesh",
        "section": "use_edge_mesh",
        "text": "bool: Flag indicating if the edge mesh is used.\nuse_edge_mesh\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_edge_mesh",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_edge_mesh.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_edge_mesh",
        "title": "use_edge_mesh > use_edge_mesh > use_edge_mesh",
        "section": "use_edge_mesh > use_edge_mesh",
        "text": "property RaptorXAdvancedSettings.use_edge_mesh\n\nbool: Flag indicating if the edge mesh is used.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.create_mesh_region",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.create_mesh_region.html#create_mesh_region",
        "title": "create_mesh_region",
        "section": "create_mesh_region",
        "text": "Designate a mesh region in a design and create partitions for simulation.\nHorizontal padding on both sides of the new mesh.\nVertical padding above the new mesh region.\nVertical padding below the new mesh region.\nTrue will create a new mesh region defined by the active nets in the design.\nFalse will create a new mesh region defined by the dielectric extents in the design.\nTrue will include bot positive nets and reference nets in the definition of the new mesh region.\nFalse will not include bot positive nets and reference nets.\nGeometry extent type.\nNumber of partitions to create on x axis in the new mesh region.\nNumber of partitions to create on y axis in the new mesh region.\ncreate_mesh_region"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.create_mesh_region",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.create_mesh_region.html#ansys.edb.core.layout.layout.Layout.create_mesh_region",
        "title": "create_mesh_region > create_mesh_region > create_mesh_region",
        "section": "create_mesh_region > create_mesh_region",
        "text": "Layout.create_mesh_region(xy_exp, pos_z_exp, neg_z_exp, use_active_nets, incl_ref, ext, num_x_partitions, num_y_partitions)\n\nDesignate a mesh region in a design and create partitions for simulation.\n\nParameters\n\nxy_exp: :class:`.Value`\n\nHorizontal padding on both sides of the new mesh.\n\npos_z_exp: :class:`.Value`\n\nVertical padding above the new mesh region.\n\nneg_z_exp: :class:`.Value`\n\nVertical padding below the new mesh region.\n\nuse_active_nets: bool\n\nTrue will create a new mesh region defined by the active nets in the design.\nFalse will create a new mesh region defined by the dielectric extents in the design.\n\nincl_ref: bool\n\nTrue will include bot positive nets and reference nets in the definition of the new mesh region.\nFalse will not include bot positive nets and reference nets.\n\next: :class:`.ExtentType`\n\nGeometry extent type.\n\nnum_x_partitions: int\n\nNumber of partitions to create on x axis in the new mesh region.\n\nnum_y_partitions: int\n\nNumber of partitions to create on y axis in the new mesh region.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.find_by_id.html#find_by_id",
        "title": "find_by_id",
        "section": "find_by_id",
        "text": "Find a Connectable object by database ID in a given layout.\nLayout to search for the Connectable object.\nDatabase ID.\nConnectable object with the given database ID.\nfind_by_id\nLayout\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.find_by_id.html#ansys.edb.core.primitive.primitive.Text.find_by_id",
        "title": "find_by_id > find_by_id > find_by_id",
        "section": "find_by_id > find_by_id",
        "text": "classmethod Text.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the Connectable object.\n\nuid\n\npython:int\n\nDatabase ID.\n\nReturns\n\nConnectable\n\nConnectable object with the given database ID.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.id",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.id",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.id.html#ansys.edb.core.utility.transform3d.Transform3D.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property Transform3D.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.msg.html#ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property DjordjecvicSarkarModel.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.set_traj",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.set_traj.html#set_traj",
        "title": "set_traj",
        "section": "set_traj",
        "text": "Set the parameters of the trajectory of the bondwire.\nX value of the start point.\nY value of the start point.\nX value of the end point.\nY value of the end point.\nset_traj\nValue\nValue\nValue\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.set_traj",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.set_traj.html#ansys.edb.core.primitive.primitive.Bondwire.set_traj",
        "title": "set_traj > set_traj > set_traj",
        "section": "set_traj > set_traj",
        "text": "Bondwire.set_traj(x1, y1, x2, y2)\n\nSet the parameters of the trajectory of the bondwire.\n\nParameters\n\nx1\n\nValue\n\nX value of the start point.\n\ny1\n\nValue\n\nY value of the start point.\n\nx2\n\nValue\n\nX value of the end point.\n\ny2\n\nValue\n\nY value of the end point.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.zones",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.zones.html#zones",
        "title": "zones",
        "section": "zones",
        "text": "list[int]: IDs of all zones containing the layer.\nThis property is read-only.\nzones\nlist\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.zones",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.zones.html#ansys.edb.core.layer.layer.Layer.zones",
        "title": "zones > zones > zones",
        "section": "zones > zones",
        "text": "property Layer.zones\n\nlist[int]: IDs of all zones containing the layer.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.modeled",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.modeled.html#modeled",
        "title": "modeled",
        "section": "modeled",
        "text": "Determine if an MCAD model part at a given index is included in the analysis.\nIndex of the MCAD model part.\nTrue if the MCAD model part is included in the analysis, False otherwise.\nmodeled\npython:int\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.modeled",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.modeled.html#ansys.edb.core.layout.mcad_model.McadModel.modeled",
        "title": "modeled > modeled > modeled",
        "section": "modeled > modeled",
        "text": "McadModel.modeled(index)\n\nDetermine if an MCAD model part at a given index is included in the analysis.\n\nParameters\n\nindex\n\npython:int\n\nIndex of the MCAD model part.\n\nReturns\n\nbool\n\nTrue if the MCAD model part is included in the analysis, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.name",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the hierarchy object.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.name",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.name.html#ansys.edb.core.hierarchy.structure3d.Structure3D.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property Structure3D.name\n\nstr: Name of the hierarchy object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.find_by_name",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.find_by_name.html#find_by_name",
        "title": "find_by_name",
        "section": "find_by_name",
        "text": "Find a net class by name in a given layout.\nLayout to search for the net class.\nName of the net class.\nNet class found. Check the is_null property\nof the returned net class to see if it exists.\nfind_by_name\nLayout\npython:str\nNetClass\nis_null"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.find_by_name",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.find_by_name.html#ansys.edb.core.net.net_class.NetClass.find_by_name",
        "title": "find_by_name > find_by_name > find_by_name",
        "section": "find_by_name > find_by_name",
        "text": "classmethod NetClass.find_by_name(layout, name)\n\nFind a net class by name in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the net class.\n\nname\n\npython:str\n\nName of the net class.\n\nReturns\n\nNetClass\n\nNet class found. Check the is_null property\nof the returned net class to see if it exists.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.create",
        "href": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a port property.\nPort property created.\ncreate\nPortProperty"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.create",
        "href": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.create.html#ansys.edb.core.definition.port_property.PortProperty.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod PortProperty.create()\n\nCreate a port property.\n\nReturns\n\nPortProperty\n\nPort property created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.find_by_id.html#find_by_id",
        "title": "find_by_id",
        "section": "find_by_id",
        "text": "Find a package definition object by ID in a given database.\nDatabase to search for the package definition.\nUnique identifier for the package definition.\nPackage definition found, None otherwise.\nfind_by_id\npython:int\nPackageDef\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.find_by_id.html#ansys.edb.core.definition.package_def.PackageDef.find_by_id",
        "title": "find_by_id > find_by_id > find_by_id",
        "section": "find_by_id > find_by_id",
        "text": "classmethod PackageDef.find_by_id(db, uid)\n\nFind a package definition object by ID in a given database.\n\nParameters\n\ndb :class:`.Database`\n\nDatabase to search for the package definition.\n\nUID\n\npython:int\n\nUnique identifier for the package definition.\n\nReturns\n\nPackageDef\n\nPackage definition found, None otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceDataEntry.mag_limit",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceDataEntry.mag_limit.html#mag_limit",
        "title": "mag_limit",
        "section": "mag_limit",
        "text": "float: Magnitude limit.\nmag_limit\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceDataEntry.mag_limit",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceDataEntry.mag_limit.html#ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceDataEntry.mag_limit",
        "title": "mag_limit > mag_limit > mag_limit",
        "section": "mag_limit > mag_limit",
        "text": "property MatrixConvergenceDataEntry.mag_limit\n\nfloat: Magnitude limit.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SolverSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SolverSettings.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents this object’s ID.\nThis property is read-only.\nmsg\nEDBObjMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SolverSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SolverSettings.msg.html#ansys.edb.core.simulation_setup.simulation_settings.SolverSettings.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property SolverSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object’s ID.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.definition_type",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.definition_type.html#definition_type",
        "title": "definition_type",
        "section": "definition_type",
        "text": "DefinitionObjType: Object type of the bondwire definition.\ndefinition_type\nDefinitionObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.definition_type",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.definition_type.html#ansys.edb.core.definition.bondwire_def.Jedec5BondwireDef.definition_type",
        "title": "definition_type > definition_type > definition_type",
        "section": "definition_type > definition_type",
        "text": "property Jedec5BondwireDef.definition_type\n\nDefinitionObjType: Object type of the bondwire definition.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadType.UNKNOWN_GEOM_TYPE",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadType.UNKNOWN_GEOM_TYPE.html#unknown_geom_type",
        "title": "UNKNOWN_GEOM_TYPE",
        "section": "UNKNOWN_GEOM_TYPE",
        "text": "UNKNOWN_GEOM_TYPE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadType.UNKNOWN_GEOM_TYPE",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadType.UNKNOWN_GEOM_TYPE.html#ansys.edb.core.definition.padstack_def_data.PadType.UNKNOWN_GEOM_TYPE",
        "title": "UNKNOWN_GEOM_TYPE > UNKNOWN_GEOM_TYPE > UNKNOWN_GEOM_TYPE",
        "section": "UNKNOWN_GEOM_TYPE > UNKNOWN_GEOM_TYPE",
        "text": "PadType.UNKNOWN_GEOM_TYPE = 4\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDs given a product ID for the layout object.\nID representing a product that supports the EDB.\nAll user-defined attribute IDs for properties stored in the object\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.get_product_property_ids.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "PadstackInstanceTerminal.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nReturns\n\npython:list[python:int]\n\nAll user-defined attribute IDs for properties stored in the object\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.arc",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.arc.html#arc",
        "title": "arc",
        "section": "arc",
        "text": "ArcData: Arc of the edge.\narc\nArcData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.arc",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.arc.html#ansys.edb.core.terminal.terminals.PadEdge.arc",
        "title": "arc > arc > arc",
        "section": "arc > arc",
        "text": "property PadEdge.arc\n\nArcData: Arc of the edge.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.msg",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.msg",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.msg.html#ansys.edb.core.net.extended_net.ExtendedNet.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property ExtendedNet.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.set_fill_material",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.set_fill_material.html#set_fill_material",
        "title": "set_fill_material",
        "section": "set_fill_material",
        "text": "Set the name of the fill material of the layer.\nNew name of the fill material.\nset_fill_material\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.set_fill_material",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.set_fill_material.html#ansys.edb.core.layer.stackup_layer.StackupLayer.set_fill_material",
        "title": "set_fill_material > set_fill_material > set_fill_material",
        "section": "set_fill_material > set_fill_material",
        "text": "StackupLayer.set_fill_material(fill_material_name)\n\nSet the name of the fill material of the layer.\n\nParameters\n\nfill_material_name\n\npython:str\n\nNew name of the fill material.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents this object’s ID.\nThis property is read-only.\nmsg\nEDBObjMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.msg.html#ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property AdvancedSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object’s ID.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.CellType.FOOTPRINT_CELL",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.CellType.FOOTPRINT_CELL.html#footprint_cell",
        "title": "FOOTPRINT_CELL",
        "section": "FOOTPRINT_CELL",
        "text": "FOOTPRINT_CELL"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.CellType.FOOTPRINT_CELL",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.CellType.FOOTPRINT_CELL.html#ansys.edb.core.layout.cell.CellType.FOOTPRINT_CELL",
        "title": "FOOTPRINT_CELL > FOOTPRINT_CELL > FOOTPRINT_CELL",
        "section": "FOOTPRINT_CELL > FOOTPRINT_CELL",
        "text": "CellType.FOOTPRINT_CELL = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.DynamicLinkComponentModel.is_null.html#ansys.edb.core.definition.component_model.DynamicLinkComponentModel.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property DynamicLinkComponentModel.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.DielectricMergingMethod.KRASZEWSKI",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.DielectricMergingMethod.KRASZEWSKI.html#kraszewski",
        "title": "KRASZEWSKI",
        "section": "KRASZEWSKI",
        "text": "KRASZEWSKI"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.DielectricMergingMethod.KRASZEWSKI",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.DielectricMergingMethod.KRASZEWSKI.html#ansys.edb.core.layer.layer_collection.DielectricMergingMethod.KRASZEWSKI",
        "title": "KRASZEWSKI > KRASZEWSKI > KRASZEWSKI",
        "section": "KRASZEWSKI > KRASZEWSKI",
        "text": "DielectricMergingMethod.KRASZEWSKI = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.find_by_id.html#find_by_id",
        "title": "find_by_id",
        "section": "find_by_id",
        "text": "Find a Connectable object by database ID in a given layout.\nLayout to search for the Connectable object.\nDatabase ID.\nConnectable object with the given database ID.\nfind_by_id\nLayout\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.find_by_id.html#ansys.edb.core.primitive.primitive.BoardBendDef.find_by_id",
        "title": "find_by_id > find_by_id > find_by_id",
        "section": "find_by_id > find_by_id",
        "text": "classmethod BoardBendDef.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the Connectable object.\n\nuid\n\npython:int\n\nDatabase ID.\n\nReturns\n\nConnectable\n\nConnectable object with the given database ID.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.delete",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the layout object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.delete",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.delete.html#ansys.edb.core.hierarchy.via_group.ViaGroup.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "ViaGroup.delete()\n\nDelete the layout object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.package_mounting_offset",
        "href": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.package_mounting_offset.html#package_mounting_offset",
        "title": "package_mounting_offset",
        "section": "package_mounting_offset",
        "text": "Value: Mounting offset of the package definition object.\nThis property can be set with ValueLike.\npackage_mounting_offset\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.package_mounting_offset",
        "href": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.package_mounting_offset.html#ansys.edb.core.definition.ic_component_property.ICComponentProperty.package_mounting_offset",
        "title": "package_mounting_offset > package_mounting_offset > package_mounting_offset",
        "section": "package_mounting_offset > package_mounting_offset",
        "text": "property ICComponentProperty.package_mounting_offset\n\nValue: Mounting offset of the package definition object.\n\nThis property can be set with ValueLike.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.create_3d_comp.html#create_3d_comp",
        "title": "create_3d_comp",
        "section": "create_3d_comp",
        "text": "Create a 3D composite model from an MCAD file.\n3D composite model created.\ncreate_3d_comp\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Polygon.create_3d_comp.html#ansys.edb.core.primitive.primitive.Polygon.create_3d_comp",
        "title": "create_3d_comp > create_3d_comp > create_3d_comp",
        "section": "create_3d_comp > create_3d_comp",
        "text": "Polygon.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nReturns\n\nMcadModel\n\n3D composite model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_mcad.html#is_mcad",
        "title": "is_mcad",
        "section": "is_mcad",
        "text": "bool: Flag indicating if this is an MCAD model.\nThis property is read-only.\nis_mcad\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_mcad",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.is_mcad.html#ansys.edb.core.terminal.terminals.PointTerminal.is_mcad",
        "title": "is_mcad > is_mcad > is_mcad",
        "section": "is_mcad > is_mcad",
        "text": "property PointTerminal.is_mcad\n\nbool: Flag indicating if this is an MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.obj_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.obj_type.html#obj_type",
        "title": "obj_type",
        "section": "obj_type",
        "text": "LayoutObjType: Layout object type.\nThis property is read-only.\nobj_type\nLayoutObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.obj_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.obj_type.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.obj_type",
        "title": "obj_type > obj_type > obj_type",
        "section": "obj_type > obj_type",
        "text": "property PinGroupTerminal.obj_type\n\nLayoutObjType: Layout object type.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.delete",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the layout object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.delete",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.delete.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "ComponentGroup.delete()\n\nDelete the layout object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSParameterSettings.dc_behavior",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSParameterSettings.dc_behavior.html#dc_behavior",
        "title": "dc_behavior",
        "section": "dc_behavior",
        "text": "SParamDCBehavior: DC behavior type.\ndc_behavior\nSParamDCBehavior"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSParameterSettings.dc_behavior",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSParameterSettings.dc_behavior.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSParameterSettings.dc_behavior",
        "title": "dc_behavior > dc_behavior > dc_behavior",
        "section": "dc_behavior > dc_behavior",
        "text": "property SIWaveSParameterSettings.dc_behavior\n\nSParamDCBehavior: DC behavior type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.get_parameter_override",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.get_parameter_override.html#get_parameter_override",
        "title": "get_parameter_override",
        "section": "get_parameter_override",
        "text": "Get the override of the cell instance parameter by name.\nName of the cell instance parameter.\nOverride value for the cell instance parameter.\nget_parameter_override\npython:str\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.get_parameter_override",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.get_parameter_override.html#ansys.edb.core.hierarchy.inst_array.InstArray.get_parameter_override",
        "title": "get_parameter_override > get_parameter_override > get_parameter_override",
        "section": "get_parameter_override > get_parameter_override",
        "text": "InstArray.get_parameter_override(param_name)\n\nGet the override of the cell instance parameter by name.\n\nParameters\n\nparam_name\n\npython:str\n\nName of the cell instance parameter.\n\nReturns\n\nValue\n\nOverride value for the cell instance parameter.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.msg",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.msg",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.msg.html#ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property LayoutInstanceContext.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.solve_independent_preference",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.solve_independent_preference.html#solve_independent_preference",
        "title": "solve_independent_preference",
        "section": "solve_independent_preference",
        "text": "bool: Flag indicating if the object is assigned to solve independent of its parent context.\nTrue if the object is assigned to solve independently, False if the object is embedded.\nFor a ComponentModel\ninstance, this flag indicates if the model is embedded with the field solver, when applicable.\nFor a CellInstance instance,\nit indicates if the design’s geometry is flattened/meshed with the parent, when applicable.\nsolve_independent_preference\nbool\nTrue\nFalse\nComponentModel\nCellInstance"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.solve_independent_preference",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.solve_independent_preference.html#ansys.edb.core.hierarchy.group.Group.solve_independent_preference",
        "title": "solve_independent_preference > solve_independent_preference > solve_independent_preference",
        "section": "solve_independent_preference > solve_independent_preference",
        "text": "property Group.solve_independent_preference\n\nbool: Flag indicating if the object is assigned to solve independent of its parent context.\n\nReturns\n\nbool\n\nTrue if the object is assigned to solve independently, False if the object is embedded.\n\nNotes\n\nFor a ComponentModel\ninstance, this flag indicates if the model is embedded with the field solver, when applicable.\n\nFor a CellInstance instance,\nit indicates if the design’s geometry is flattened/meshed with the parent, when applicable.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.save",
        "href": "api/_autosummary/ansys.edb.core.database.Database.save.html#save",
        "title": "save",
        "section": "save",
        "text": "Save any changes to the database.\nsave"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.save",
        "href": "api/_autosummary/ansys.edb.core.database.Database.save.html#ansys.edb.core.database.Database.save",
        "title": "save > save > save",
        "section": "save > save",
        "text": "Database.save()\n\nSave any changes to the database.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.layout_component.LayoutComponent.msg",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.layout_component.LayoutComponent.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.layout_component.LayoutComponent.msg",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.layout_component.LayoutComponent.msg.html#ansys.edb.core.hierarchy.layout_component.LayoutComponent.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property LayoutComponent.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.model",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.model.html#model",
        "title": "model",
        "section": "model",
        "text": "str: S-parameter model.\nmodel\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.model",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.model.html#ansys.edb.core.terminal.terminals.Terminal.model",
        "title": "model > model > model",
        "section": "model > model",
        "text": "property Terminal.model\n\nstr: S-parameter model.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.get_product_property_ids.html#get_product_property_ids",
        "title": "get_product_property_ids",
        "section": "get_product_property_ids",
        "text": "Get a list of attribute IDs given a product ID for the layout object.\nID representing a product that supports the EDB.\nAll user-defined attribute IDs for properties stored in the object\nget_product_property_ids\nProductIdType\npython:list\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.get_product_property_ids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.get_product_property_ids.html#ansys.edb.core.primitive.primitive.Rectangle.get_product_property_ids",
        "title": "get_product_property_ids > get_product_property_ids > get_product_property_ids",
        "section": "get_product_property_ids > get_product_property_ids",
        "text": "Rectangle.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs given a product ID for the layout object.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nReturns\n\npython:list[python:int]\n\nAll user-defined attribute IDs for properties stored in the object\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.BroadbandAdaptiveSolution.low_frequency",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.BroadbandAdaptiveSolution.low_frequency.html#low_frequency",
        "title": "low_frequency",
        "section": "low_frequency",
        "text": "str: Lower-bound adaptive frequency.\nlow_frequency\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.BroadbandAdaptiveSolution.low_frequency",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.BroadbandAdaptiveSolution.low_frequency.html#ansys.edb.core.simulation_setup.adaptive_solutions.BroadbandAdaptiveSolution.low_frequency",
        "title": "low_frequency > low_frequency > low_frequency",
        "section": "low_frequency > low_frequency",
        "text": "property BroadbandAdaptiveSolution.low_frequency\n\nstr: Lower-bound adaptive frequency.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.adaptive_solution_type",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.adaptive_solution_type.html#adaptive_solution_type",
        "title": "adaptive_solution_type",
        "section": "adaptive_solution_type",
        "text": "AdaptType: Adaptive solution type that is set for the simulation.\nadaptive_solution_type\nAdaptType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.adaptive_solution_type",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.adaptive_solution_type.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSGeneralSettings.adaptive_solution_type",
        "title": "adaptive_solution_type > adaptive_solution_type > adaptive_solution_type",
        "section": "adaptive_solution_type > adaptive_solution_type",
        "text": "property HFSSGeneralSettings.adaptive_solution_type\n\nAdaptType: Adaptive solution type that is set for the simulation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.layout",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.layout.html#layout",
        "title": "layout",
        "section": "layout",
        "text": "Layout: Layout owning the object.\nThis property is read-only.\nlayout\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.layout",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.layout.html#ansys.edb.core.primitive.primitive.Circle.layout",
        "title": "layout > layout > layout",
        "section": "layout > layout",
        "text": "property Circle.layout\n\nLayout: Layout owning the object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_auto_port",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_auto_port.html#is_auto_port",
        "title": "is_auto_port",
        "section": "is_auto_port",
        "text": "bool: Flag indicating if the terminal is an auto port.\nis_auto_port\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_auto_port",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_auto_port.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.is_auto_port",
        "title": "is_auto_port > is_auto_port > is_auto_port",
        "section": "is_auto_port > is_auto_port",
        "text": "property PadstackInstanceTerminal.is_auto_port\n\nbool: Flag indicating if the terminal is an auto port.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.per_pin_res_path",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.per_pin_res_path.html#per_pin_res_path",
        "title": "per_pin_res_path",
        "section": "per_pin_res_path",
        "text": "str: Path to the per pin resolution.\nper_pin_res_path\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.per_pin_res_path",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.per_pin_res_path.html#ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.per_pin_res_path",
        "title": "per_pin_res_path > per_pin_res_path > per_pin_res_path",
        "section": "per_pin_res_path > per_pin_res_path",
        "text": "property SIWaveDCIRSimulationSettings.per_pin_res_path\n\nstr: Path to the per pin resolution.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.s_parameter",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.s_parameter.html#s_parameter",
        "title": "s_parameter",
        "section": "s_parameter",
        "text": "SIWaveSParameterSettings: S parameter settings for SIWave simulations.\ns_parameter\nSIWaveSParameterSettings"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.s_parameter",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.s_parameter.html#ansys.edb.core.simulation_setup.siwave_dcir_simulation_settings.SIWaveDCIRSimulationSettings.s_parameter",
        "title": "s_parameter > s_parameter > s_parameter",
        "section": "s_parameter > s_parameter",
        "text": "property SIWaveDCIRSimulationSettings.s_parameter\n\nSIWaveSParameterSettings: S parameter settings for SIWave simulations.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.id",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.id",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.id.html#ansys.edb.core.net.differential_pair.DifferentialPair.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property DifferentialPair.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.create_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.create_stride.html#create_stride",
        "title": "create_stride",
        "section": "create_stride",
        "text": "Create a Stride model from an MCAD file.\nStride model created.\ncreate_stride\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.create_stride",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.create_stride.html#ansys.edb.core.primitive.primitive.Primitive.create_stride",
        "title": "create_stride > create_stride > create_stride",
        "section": "create_stride > create_stride",
        "text": "Primitive.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nReturns\n\nMcadModel\n\nStride model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.INVALID_TYPE",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.INVALID_TYPE.html#invalid_type",
        "title": "INVALID_TYPE",
        "section": "INVALID_TYPE",
        "text": "INVALID_TYPE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.INVALID_TYPE",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.INVALID_TYPE.html#ansys.edb.core.primitive.primitive.PrimitiveType.INVALID_TYPE",
        "title": "INVALID_TYPE > INVALID_TYPE > INVALID_TYPE",
        "section": "INVALID_TYPE > INVALID_TYPE",
        "text": "PrimitiveType.INVALID_TYPE = 9\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.create_3d_comp.html#create_3d_comp",
        "title": "create_3d_comp",
        "section": "create_3d_comp",
        "text": "Create a 3D composite model from an MCAD file.\n3D composite model created.\ncreate_3d_comp\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.create_3d_comp.html#ansys.edb.core.hierarchy.pin_group.PinGroup.create_3d_comp",
        "title": "create_3d_comp > create_3d_comp > create_3d_comp",
        "section": "create_3d_comp > create_3d_comp",
        "text": "PinGroup.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nReturns\n\nMcadModel\n\n3D composite model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.Distribution.ESTP",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.Distribution.ESTP.html#estp",
        "title": "ESTP",
        "section": "ESTP",
        "text": "ESTP"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.Distribution.ESTP",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.Distribution.ESTP.html#ansys.edb.core.simulation_setup.simulation_setup.Distribution.ESTP",
        "title": "ESTP > ESTP > ESTP",
        "section": "ESTP > ESTP",
        "text": "Distribution.ESTP = 'ESTP'\n\n"
    },
    {
        "objectID": "api/terminal",
        "href": "api/terminal.html#terminals",
        "title": "Terminals",
        "section": "Terminals",
        "text": "Terminals"
    },
    {
        "objectID": "api/terminal",
        "href": "api/terminal.html#classes",
        "title": "Terminals > Classes",
        "section": "Classes",
        "text": "BoundaryType(value)\nProvides an enum representing terminal boundary types.\nBundleTerminal(msg)\nRepresents a bundle terminal object.\nEdge(msg)\nRepresents an edge.\nEdgeTerminal(msg)\nRepresents an edge terminal.\nEdgeType(value)\nProvides an enum representing edge types.\nHfssPIType(value)\nProvides an enum representing HFSS PI types.\nPadEdge(msg)\nRepresents a padstack edge.\nPadstackInstanceTerminal(msg)\nRepresents a padstack instance terminal.\nPinGroupTerminal(msg)\nRepresents a pin group terminal.\nPointTerminal(msg)\nRepresents a point terminal object.\nPrimitiveEdge(msg)\nRepresents a primitive edge.\nSourceTermToGroundType(value)\nProvides an enum representing source terminal-to-ground types.\nTerminal(msg)\nRepresents a terminal object.\nTerminalInstance(msg)\nRepresents a terminal instance.\nTerminalInstanceTerminal(msg)\nRepresents a terminal instance terminal.\nTerminalType(value)\nProvides an enum representing terminal types.\nClasses\nBoundaryType\nBundleTerminal\nEdge\nEdgeTerminal\nEdgeType\nHfssPIType\nPadEdge\nPadstackInstanceTerminal\nPinGroupTerminal\nPointTerminal\nPrimitiveEdge\nSourceTermToGroundType\nTerminal\nTerminalInstance\nTerminalInstanceTerminal\nTerminalType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.find",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.find.html#find",
        "title": "find",
        "section": "find",
        "text": "Find a terminal by name in a given layout.\nLayout to search for the terminal.\nName of the terminal.\nfind\nLayout\nstr\nTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.find",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.find.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.find",
        "title": "find > find > find",
        "section": "find > find",
        "text": "classmethod TerminalInstanceTerminal.find(layout, name)\n\nFind a terminal by name in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the terminal.\n\nname\n\nstr\n\nName of the terminal.\n\nReturns\n\nTerminal\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge.html#primitiveedge",
        "title": "PrimitiveEdge",
        "section": "PrimitiveEdge",
        "text": "Represents a primitive edge.\nPrimitiveEdge.cast()\nCast the base edge object to the correct subclass, if possible.\nPrimitiveEdge.create(prim, point)\nCreate a primitive edge.\nPrimitiveEdge.id\nint: Unique ID of the EDB object.\nPrimitiveEdge.is_null\nbool: Flag indicating if the object exists in the database.\nPrimitiveEdge.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nPrimitiveEdge.point\nPointData: Coordinates (x, y) of the terminal.\nPrimitiveEdge.primitive\nPrimitive: Primitive of the terminal.\nPrimitiveEdge.type\n\nPrimitiveEdge\nPrimitiveEdge.cast\nPrimitiveEdge.create\nPrimitiveEdge.id\nint\nPrimitiveEdge.is_null\nbool\nPrimitiveEdge.msg\nEDBObjMessage\nPrimitiveEdge.point\nPointData\nPrimitiveEdge.primitive\nPrimitive\nPrimitiveEdge.type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge.html#ansys.edb.core.terminal.terminals.PrimitiveEdge",
        "title": "PrimitiveEdge > PrimitiveEdge > PrimitiveEdge",
        "section": "PrimitiveEdge > PrimitiveEdge",
        "text": "class ansys.edb.core.terminal.terminals.PrimitiveEdge(msg)\n\nRepresents a primitive edge.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nPrimitiveEdge.cast()\n\nCast the base edge object to the correct subclass, if possible.\n\nPrimitiveEdge.create(prim, point)\n\nCreate a primitive edge.\n\n\n\nAttributes\n\n\n\n\n\n\n\nPrimitiveEdge.id\n\nint: Unique ID of the EDB object.\n\nPrimitiveEdge.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nPrimitiveEdge.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nPrimitiveEdge.point\n\nPointData: Coordinates (x, y) of the terminal.\n\nPrimitiveEdge.primitive\n\nPrimitive: Primitive of the terminal.\n\nPrimitiveEdge.type\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.plating_percentage",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.plating_percentage.html#plating_percentage",
        "title": "plating_percentage",
        "section": "plating_percentage",
        "text": "Value: Hole plating percentage.\nplating_percentage\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.plating_percentage",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.plating_percentage.html#ansys.edb.core.definition.padstack_def_data.PadstackDefData.plating_percentage",
        "title": "plating_percentage > plating_percentage > plating_percentage",
        "section": "plating_percentage > plating_percentage",
        "text": "property PadstackDefData.plating_percentage\n\nValue: Hole plating percentage.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.msg",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.msg",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.msg.html#ansys.edb.core.terminal.terminals.PadEdge.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property PadEdge.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.delete",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the layout object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.delete",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.delete.html#ansys.edb.core.primitive.primitive.BoardBendDef.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "BoardBendDef.delete()\n\nDelete the layout object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.edb_uid.html#edb_uid",
        "title": "edb_uid",
        "section": "edb_uid",
        "text": "int: Unique, persistent ID for the Connectable object.\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\nThis property is read-only.\nedb_uid\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.edb_uid.html#ansys.edb.core.hierarchy.structure3d.Structure3D.edb_uid",
        "title": "edb_uid > edb_uid > edb_uid",
        "section": "edb_uid > edb_uid",
        "text": "property Structure3D.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.is_top_or_black_box",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.is_top_or_black_box.html#is_top_or_black_box",
        "title": "is_top_or_black_box",
        "section": "is_top_or_black_box",
        "text": "bool: Flag indicating if this is a top-level or blackbox context.\nThis property is read-only.\nis_top_or_black_box\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.is_top_or_black_box",
        "href": "api/_autosummary/ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.is_top_or_black_box.html#ansys.edb.core.layout_instance.layout_instance_context.LayoutInstanceContext.is_top_or_black_box",
        "title": "is_top_or_black_box > is_top_or_black_box > is_top_or_black_box",
        "section": "is_top_or_black_box > is_top_or_black_box",
        "text": "property LayoutInstanceContext.is_top_or_black_box\n\nbool: Flag indicating if this is a top-level or blackbox context.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.solve_inside",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.solve_inside.html#solve_inside",
        "title": "solve_inside",
        "section": "solve_inside",
        "text": "bool: Flag indicating if solve inside is enabled.\nsolve_inside\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.solve_inside",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.solve_inside.html#ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.solve_inside",
        "title": "solve_inside > solve_inside > solve_inside",
        "section": "solve_inside > solve_inside",
        "text": "property LengthMeshOperation.solve_inside\n\nbool: Flag indicating if solve inside is enabled.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveGeneralSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveGeneralSettings.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents this object’s ID.\nThis property is read-only.\nmsg\nEDBObjMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveGeneralSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveGeneralSettings.msg.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveGeneralSettings.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property SIWaveGeneralSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object’s ID.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.is_null.html#ansys.edb.core.definition.rlc_component_property.RLCComponentProperty.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property RLCComponentProperty.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.visible",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.visible.html#visible",
        "title": "visible",
        "section": "visible",
        "text": "Get visibility of a MCAD model part at a given index.\nIndex of the MCAD model part.\nvisible\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.visible",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.visible.html#ansys.edb.core.layout.mcad_model.McadModel.visible",
        "title": "visible > visible > visible",
        "section": "visible > visible",
        "text": "McadModel.visible(index)\n\nGet visibility of a MCAD model part at a given index.\n\nParameters\n\nindex\n\npython:int\n\nIndex of the MCAD model part.\n\nReturns\n\nbool\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.NEXXIM_PORT",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.NEXXIM_PORT.html#nexxim_port",
        "title": "NEXXIM_PORT",
        "section": "NEXXIM_PORT",
        "text": "NEXXIM_PORT"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.NEXXIM_PORT",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.NEXXIM_PORT.html#ansys.edb.core.terminal.terminals.BoundaryType.NEXXIM_PORT",
        "title": "NEXXIM_PORT > NEXXIM_PORT > NEXXIM_PORT",
        "section": "NEXXIM_PORT > NEXXIM_PORT",
        "text": "BoundaryType.NEXXIM_PORT = 6\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.is_null.html#ansys.edb.core.definition.bondwire_def.ApdBondwireDef.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property ApdBondwireDef.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.source_amplitude",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.source_amplitude.html#source_amplitude",
        "title": "source_amplitude",
        "section": "source_amplitude",
        "text": "Value: Source amplitude of the terminal.\nsource_amplitude\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.source_amplitude",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.source_amplitude.html#ansys.edb.core.terminal.terminals.Terminal.source_amplitude",
        "title": "source_amplitude > source_amplitude > source_amplitude",
        "section": "source_amplitude > source_amplitude",
        "text": "property Terminal.source_amplitude\n\nValue: Source amplitude of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.msg",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.msg",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.msg.html#ansys.edb.core.primitive.primitive.Rectangle.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property Rectangle.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.ungroup",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.ungroup.html#ungroup",
        "title": "ungroup",
        "section": "ungroup",
        "text": "Dissolve the group.\nWhether all containing groups should also be resolved.\nungroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.ungroup",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.ungroup.html#ansys.edb.core.hierarchy.via_group.ViaGroup.ungroup",
        "title": "ungroup > ungroup > ungroup",
        "section": "ungroup > ungroup",
        "text": "ViaGroup.ungroup(recursive)\n\nDissolve the group.\n\nParameters\n\nrecursive\n\nbool\n\nWhether all containing groups should also be resolved.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.via_material",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.via_material.html#via_material",
        "title": "via_material",
        "section": "via_material",
        "text": "str: Default via material.\nvia_material\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.via_material",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.via_material.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedSettings.via_material",
        "title": "via_material > via_material > via_material",
        "section": "via_material > via_material",
        "text": "property HFSSAdvancedSettings.via_material\n\nstr: Default via material.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.ComponentModel.find_by_name",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.ComponentModel.find_by_name.html#find_by_name",
        "title": "find_by_name",
        "section": "find_by_name",
        "text": "Find a component model by name in a given component def.\nComponent def to search for the component model.\nName of the component model.\nComponent model that is found, None otherwise.\nfind_by_name\nComponentDef\npython:str\nComponentModel\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_model.ComponentModel.find_by_name",
        "href": "api/_autosummary/ansys.edb.core.definition.component_model.ComponentModel.find_by_name.html#ansys.edb.core.definition.component_model.ComponentModel.find_by_name",
        "title": "find_by_name > find_by_name > find_by_name",
        "section": "find_by_name > find_by_name",
        "text": "classmethod ComponentModel.find_by_name(comp_def, value)\n\nFind a component model by name in a given component def.\n\nParameters\n\ncomp_def\n\nComponentDef\n\nComponent def to search for the component model.\n\nvalue\n\npython:str\n\nName of the component model.\n\nReturns\n\nComponentModel\n\nComponent model that is found, None otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.create",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a SIWave DCIR simulation setup.\nCell to create the simulation setup in.\nName of the simulation setup.\nSimulation setup created.\ncreate\nCell\npython:str\nSIWaveDCIRSimulationSetup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.create",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.create.html#ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod SIWaveDCIRSimulationSetup.create(cell, name)\n\nCreate a SIWave DCIR simulation setup.\n\nParameters\n\ncell\n\nCell\n\nCell to create the simulation setup in.\n\nname\n\npython:str\n\nName of the simulation setup.\n\nReturns\n\nSIWaveDCIRSimulationSetup\n\nSimulation setup created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior.CONSTANT_DC",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior.CONSTANT_DC.html#constant_dc",
        "title": "CONSTANT_DC",
        "section": "CONSTANT_DC",
        "text": "CONSTANT_DC"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior.CONSTANT_DC",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior.CONSTANT_DC.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamDCBehavior.CONSTANT_DC",
        "title": "CONSTANT_DC > CONSTANT_DC > CONSTANT_DC",
        "section": "CONSTANT_DC > CONSTANT_DC",
        "text": "SParamDCBehavior.CONSTANT_DC = 3\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.create_3d_comp.html#create_3d_comp",
        "title": "create_3d_comp",
        "section": "create_3d_comp",
        "text": "Create a 3D composite model from an MCAD file.\n3D composite model created.\ncreate_3d_comp\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.create_3d_comp",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.create_3d_comp.html#ansys.edb.core.terminal.terminals.BundleTerminal.create_3d_comp",
        "title": "create_3d_comp > create_3d_comp > create_3d_comp",
        "section": "create_3d_comp > create_3d_comp",
        "text": "BundleTerminal.create_3d_comp()\n\nCreate a 3D composite model from an MCAD file.\n\nReturns\n\nMcadModel\n\n3D composite model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_property.ComponentProperty.model",
        "href": "api/_autosummary/ansys.edb.core.definition.component_property.ComponentProperty.model.html#model",
        "title": "model",
        "section": "model",
        "text": "Model: Model object.\nThis is a copy of the model object. Use the setter for any modifications to be reflected.\nmodel\nModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_property.ComponentProperty.model",
        "href": "api/_autosummary/ansys.edb.core.definition.component_property.ComponentProperty.model.html#ansys.edb.core.definition.component_property.ComponentProperty.model",
        "title": "model > model > model",
        "section": "model > model",
        "text": "property ComponentProperty.model\n\nModel: Model object.\n\nThis is a copy of the model object. Use the setter for any modifications to be reflected.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackHoleRange.END_ON_LOWER_PAD",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackHoleRange.END_ON_LOWER_PAD.html#end_on_lower_pad",
        "title": "END_ON_LOWER_PAD",
        "section": "END_ON_LOWER_PAD",
        "text": "END_ON_LOWER_PAD"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackHoleRange.END_ON_LOWER_PAD",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackHoleRange.END_ON_LOWER_PAD.html#ansys.edb.core.definition.padstack_def_data.PadstackHoleRange.END_ON_LOWER_PAD",
        "title": "END_ON_LOWER_PAD > END_ON_LOWER_PAD > END_ON_LOWER_PAD",
        "section": "END_ON_LOWER_PAD > END_ON_LOWER_PAD",
        "text": "PadstackHoleRange.END_ON_LOWER_PAD = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.MeshOperation.net_layer_info",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.MeshOperation.net_layer_info.html#net_layer_info",
        "title": "net_layer_info",
        "section": "net_layer_info",
        "text": "list of tuple of (str, str, bool): List of net layer         information for the mesh operation.\nThe tuple is in this form: (net_name, layer_name, is_sheet)``.\nnet_layer_info\nlist\ntuple\nstr\nstr\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.MeshOperation.net_layer_info",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.MeshOperation.net_layer_info.html#ansys.edb.core.simulation_setup.mesh_operation.MeshOperation.net_layer_info",
        "title": "net_layer_info > net_layer_info > net_layer_info",
        "section": "net_layer_info > net_layer_info",
        "text": "property MeshOperation.net_layer_info\n\nlist of tuple of (str, str, bool): List of net layer         information for the mesh operation.\n\nThe tuple is in this form: (net_name, layer_name, is_sheet)``.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.impedance",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.impedance.html#impedance",
        "title": "impedance",
        "section": "impedance",
        "text": "Value: Impedance of the terminal.\nimpedance\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.impedance",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.impedance.html#ansys.edb.core.terminal.terminals.Terminal.impedance",
        "title": "impedance > impedance > impedance",
        "section": "impedance > impedance",
        "text": "property Terminal.impedance\n\nValue: Impedance of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.id.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property PadstackInstanceTerminal.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.dc_conductivity",
        "href": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.dc_conductivity.html#dc_conductivity",
        "title": "dc_conductivity",
        "section": "dc_conductivity",
        "text": "float: DC conductivity.\ndc_conductivity\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.dc_conductivity",
        "href": "api/_autosummary/ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.dc_conductivity.html#ansys.edb.core.definition.djordjecvic_sarkar_model.DjordjecvicSarkarModel.dc_conductivity",
        "title": "dc_conductivity > dc_conductivity > dc_conductivity",
        "section": "dc_conductivity > dc_conductivity",
        "text": "property DjordjecvicSarkarModel.dc_conductivity\n\nfloat: DC conductivity.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalType.POINT",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalType.POINT.html#point",
        "title": "POINT",
        "section": "POINT",
        "text": "POINT"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalType.POINT",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalType.POINT.html#ansys.edb.core.terminal.terminals.TerminalType.POINT",
        "title": "POINT > POINT > POINT",
        "section": "POINT > POINT",
        "text": "TerminalType.POINT = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty.die_type",
        "href": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty.die_type.html#die_type",
        "title": "die_type",
        "section": "die_type",
        "text": "DieType: Die type.\ndie_type\nDieType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty.die_type",
        "href": "api/_autosummary/ansys.edb.core.definition.die_property.DieProperty.die_type.html#ansys.edb.core.definition.die_property.DieProperty.die_type",
        "title": "die_type > die_type > die_type",
        "section": "die_type > die_type",
        "text": "property DieProperty.die_type\n\nDieType: Die type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.max_init_mesh_edge_length",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.max_init_mesh_edge_length.html#max_init_mesh_edge_length",
        "title": "max_init_mesh_edge_length",
        "section": "max_init_mesh_edge_length",
        "text": "str: Initial maximum edge length.\nmax_init_mesh_edge_length\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.max_init_mesh_edge_length",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.max_init_mesh_edge_length.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCAdvancedSettings.max_init_mesh_edge_length",
        "title": "max_init_mesh_edge_length > max_init_mesh_edge_length > max_init_mesh_edge_length",
        "section": "max_init_mesh_edge_length > max_init_mesh_edge_length",
        "text": "property SIWaveDCAdvancedSettings.max_init_mesh_edge_length\n\nstr: Initial maximum edge length.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.delete",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the layout object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.delete",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.delete.html#ansys.edb.core.primitive.primitive.Primitive.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "Primitive.delete()\n\nDelete the layout object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.reference_size_auto",
        "href": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.reference_size_auto.html#reference_size_auto",
        "title": "reference_size_auto",
        "section": "reference_size_auto",
        "text": "bool: Flag indicating if the reference size is automatic.\nreference_size_auto\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.reference_size_auto",
        "href": "api/_autosummary/ansys.edb.core.definition.port_property.PortProperty.reference_size_auto.html#ansys.edb.core.definition.port_property.PortProperty.reference_size_auto",
        "title": "reference_size_auto > reference_size_auto > reference_size_auto",
        "section": "reference_size_auto > reference_size_auto",
        "text": "property PortProperty.reference_size_auto\n\nbool: Flag indicating if the reference size is automatic.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.increment_visit",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.increment_visit.html#increment_visit",
        "title": "increment_visit",
        "section": "increment_visit",
        "text": "Increment the visit count, effectively marking all items in the tree as unvisited.\nincrement_visit"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.increment_visit",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.increment_visit.html#ansys.edb.core.geometry.r_tree.RTree.increment_visit",
        "title": "increment_visit > increment_visit > increment_visit",
        "section": "increment_visit > increment_visit",
        "text": "RTree.increment_visit()\n\nIncrement the visit count, effectively marking all items in the tree as unvisited.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.BONDWIRE",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.BONDWIRE.html#bondwire",
        "title": "BONDWIRE",
        "section": "BONDWIRE",
        "text": "BONDWIRE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.BONDWIRE",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PrimitiveType.BONDWIRE.html#ansys.edb.core.primitive.primitive.PrimitiveType.BONDWIRE",
        "title": "BONDWIRE > BONDWIRE > BONDWIRE",
        "section": "BONDWIRE > BONDWIRE",
        "text": "PrimitiveType.BONDWIRE = 4\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.create_hfss.html#create_hfss",
        "title": "create_hfss",
        "section": "create_hfss",
        "text": "Create an HFSS model from an MCAD file.\nHFSS model created.\ncreate_hfss\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.create_hfss.html#ansys.edb.core.hierarchy.structure3d.Structure3D.create_hfss",
        "title": "create_hfss > create_hfss > create_hfss",
        "section": "create_hfss > create_hfss",
        "text": "Structure3D.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nReturns\n\nMcadModel\n\nHFSS model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.PowerModule.pos_output_terminal",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.PowerModule.pos_output_terminal.html#pos_output_terminal",
        "title": "pos_output_terminal",
        "section": "pos_output_terminal",
        "text": "str: Positive output terminal name for the power module.\npos_output_terminal\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.PowerModule.pos_output_terminal",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.PowerModule.pos_output_terminal.html#ansys.edb.core.layout.voltage_regulator.PowerModule.pos_output_terminal",
        "title": "pos_output_terminal > pos_output_terminal > pos_output_terminal",
        "section": "pos_output_terminal > pos_output_terminal",
        "text": "property PowerModule.pos_output_terminal\n\nstr: Positive output terminal name for the power module.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.layout_obj_type.html#layout_obj_type",
        "title": "layout_obj_type",
        "section": "layout_obj_type",
        "text": "layout_obj_type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.layout_obj_type.html#ansys.edb.core.primitive.primitive.PadstackInstance.layout_obj_type",
        "title": "layout_obj_type > layout_obj_type > layout_obj_type",
        "section": "layout_obj_type > layout_obj_type",
        "text": "PadstackInstance.layout_obj_type = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Edge.id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Edge.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Edge.id",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Edge.id.html#ansys.edb.core.terminal.terminals.Edge.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property Edge.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.create_hfss.html#create_hfss",
        "title": "create_hfss",
        "section": "create_hfss",
        "text": "Create an HFSS model from an MCAD file.\nHFSS model created.\ncreate_hfss\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.create_hfss.html#ansys.edb.core.terminal.terminals.Terminal.create_hfss",
        "title": "create_hfss > create_hfss > create_hfss",
        "section": "create_hfss > create_hfss",
        "text": "Terminal.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nReturns\n\nMcadModel\n\nHFSS model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.group",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.group.html#group",
        "title": "group",
        "section": "group",
        "text": "Group object.\ngroup\nGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.group",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PointTerminal.group.html#ansys.edb.core.terminal.terminals.PointTerminal.group",
        "title": "group > group > group",
        "section": "group > group",
        "text": "property PointTerminal.group\n\nGroup object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ViaStyle.FIELD",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ViaStyle.FIELD.html#field",
        "title": "FIELD",
        "section": "FIELD",
        "text": "FIELD"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ViaStyle.FIELD",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.ViaStyle.FIELD.html#ansys.edb.core.simulation_setup.simulation_settings.ViaStyle.FIELD",
        "title": "FIELD > FIELD > FIELD",
        "section": "FIELD > FIELD",
        "text": "ViaStyle.FIELD = 3\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballPlacement",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballPlacement.html#solderballplacement",
        "title": "SolderballPlacement",
        "section": "SolderballPlacement",
        "text": "Provides an enum representing solder ball placement.\nSolderballPlacement.ABOVE_PADSTACK\n\nSolderballPlacement.BELOW_PADSTACK\n\nSolderballPlacement.UNKNOWN_PLACEMENT\n\nSolderballPlacement\nSolderballPlacement.ABOVE_PADSTACK\nSolderballPlacement.BELOW_PADSTACK\nSolderballPlacement.UNKNOWN_PLACEMENT"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballPlacement",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.SolderballPlacement.html#ansys.edb.core.definition.padstack_def_data.SolderballPlacement",
        "title": "SolderballPlacement > SolderballPlacement > SolderballPlacement",
        "section": "SolderballPlacement > SolderballPlacement",
        "text": "class ansys.edb.core.definition.padstack_def_data.SolderballPlacement(value)\n\nProvides an enum representing solder ball placement.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nSolderballPlacement.ABOVE_PADSTACK\n\n\n\nSolderballPlacement.BELOW_PADSTACK\n\n\n\nSolderballPlacement.UNKNOWN_PLACEMENT\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.msg",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.msg",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.msg.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property CellInstance.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.source_amplitude",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.source_amplitude.html#source_amplitude",
        "title": "source_amplitude",
        "section": "source_amplitude",
        "text": "Value: Source amplitude of the terminal.\nsource_amplitude\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.source_amplitude",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.source_amplitude.html#ansys.edb.core.terminal.terminals.EdgeTerminal.source_amplitude",
        "title": "source_amplitude > source_amplitude > source_amplitude",
        "section": "source_amplitude > source_amplitude",
        "text": "property EdgeTerminal.source_amplitude\n\nValue: Source amplitude of the terminal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.id",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.id",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.id.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property VoltageRegulator.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.BasisFunctionOrder.ZERO_ORDER",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.BasisFunctionOrder.ZERO_ORDER.html#zero_order",
        "title": "ZERO_ORDER",
        "section": "ZERO_ORDER",
        "text": "ZERO_ORDER"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.BasisFunctionOrder.ZERO_ORDER",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.BasisFunctionOrder.ZERO_ORDER.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.BasisFunctionOrder.ZERO_ORDER",
        "title": "ZERO_ORDER > ZERO_ORDER > ZERO_ORDER",
        "section": "ZERO_ORDER > ZERO_ORDER",
        "text": "BasisFunctionOrder.ZERO_ORDER = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.heat_sink.HeatSink",
        "href": "api/_autosummary/ansys.edb.core.utility.heat_sink.HeatSink.html#heatsink",
        "title": "HeatSink",
        "section": "HeatSink",
        "text": "Represents a heat sink.\nFin thickness of the heat sink.\nFin spacing of the heat sink.\nBase elevation of the the heat sink.\nFin height of the heat sink.\nFin orientation of the heat sink if it is not set to the X axis.\nHeatSink\nHeatSinkFinOrientation"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.heat_sink.HeatSink",
        "href": "api/_autosummary/ansys.edb.core.utility.heat_sink.HeatSink.html#ansys.edb.core.utility.heat_sink.HeatSink",
        "title": "HeatSink > HeatSink > HeatSink",
        "section": "HeatSink > HeatSink",
        "text": "class ansys.edb.core.utility.heat_sink.HeatSink(fin_thickness=0, fin_spacing=0, fin_base_height=0, fin_height=0, fin_orientation=HeatSinkFinOrientation.X_ORIENTED)\n\nRepresents a heat sink.\n\nAttributes\n\nfin_thickness\n\nValueLike\n\nFin thickness of the heat sink.\n\nfin_spacing\n\nValueLike\n\nFin spacing of the heat sink.\n\nfin_base_height\n\nValueLike\n\nBase elevation of the the heat sink.\n\nfin_height\n\nValueLike\n\nFin height of the heat sink.\n\nfin_orientation\n\nHeatSinkFinOrientation\n\nFin orientation of the heat sink if it is not set to the X axis.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.name",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of simulation setup.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.name",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.name.html#ansys.edb.core.simulation_setup.siwave_simulation_setup.SIWaveSimulationSetup.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property SIWaveSimulationSetup.name\n\nstr: Name of simulation setup.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveGeneralSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveGeneralSettings.html#siwavegeneralsettings",
        "title": "SIWaveGeneralSettings",
        "section": "SIWaveGeneralSettings",
        "text": "Represents general settings for SIWave simulations.\nSIWaveGeneralSettings.msg\nEDBObjMessage: Protobuf message that represents this object's ID.\nSIWaveGeneralSettings.pi_slider_pos\nint: PI slider position value.\nSIWaveGeneralSettings.si_slider_pos\nint: SI slider position value.\nSIWaveGeneralSettings.use_custom_settings\nbool: Flag indicating if custom settings are used rather than SI or PI settings.\nSIWaveGeneralSettings.use_si_settings\nbool: Flag indicating if SI or PI settings are used.\nSIWaveGeneralSettings\nSIWaveGeneralSettings.msg\nEDBObjMessage\nSIWaveGeneralSettings.pi_slider_pos\nint\nSIWaveGeneralSettings.si_slider_pos\nint\nSIWaveGeneralSettings.use_custom_settings\nbool\nSIWaveGeneralSettings.use_si_settings\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveGeneralSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveGeneralSettings.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveGeneralSettings",
        "title": "SIWaveGeneralSettings > SIWaveGeneralSettings > SIWaveGeneralSettings",
        "section": "SIWaveGeneralSettings > SIWaveGeneralSettings",
        "text": "class ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveGeneralSettings(sim_setup)\n\nRepresents general settings for SIWave simulations.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nSIWaveGeneralSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object's ID.\n\nSIWaveGeneralSettings.pi_slider_pos\n\nint: PI slider position value.\n\nSIWaveGeneralSettings.si_slider_pos\n\nint: SI slider position value.\n\nSIWaveGeneralSettings.use_custom_settings\n\nbool: Flag indicating if custom settings are used rather than SI or PI settings.\n\nSIWaveGeneralSettings.use_si_settings\n\nbool: Flag indicating if SI or PI settings are used.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.id",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.id",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.id.html#ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property RaptorXSimulationSetup.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.inf_gnd_location",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.inf_gnd_location.html#inf_gnd_location",
        "title": "inf_gnd_location",
        "section": "inf_gnd_location",
        "text": "str: Infinite ground plane location.\ninf_gnd_location\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.inf_gnd_location",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.inf_gnd_location.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.inf_gnd_location",
        "title": "inf_gnd_location > inf_gnd_location > inf_gnd_location",
        "section": "inf_gnd_location > inf_gnd_location",
        "text": "property SIWaveAdvancedSettings.inf_gnd_location\n\nstr: Infinite ground plane location.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_padstack_instance_terminal",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_padstack_instance_terminal.html#get_padstack_instance_terminal",
        "title": "get_padstack_instance_terminal",
        "section": "get_padstack_instance_terminal",
        "text": "TerminalInstance:         Terminal of the padstack instance.\nget_padstack_instance_terminal\nTerminalInstance"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_padstack_instance_terminal",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.get_padstack_instance_terminal.html#ansys.edb.core.primitive.primitive.PadstackInstance.get_padstack_instance_terminal",
        "title": "get_padstack_instance_terminal > get_padstack_instance_terminal > get_padstack_instance_terminal",
        "section": "get_padstack_instance_terminal > get_padstack_instance_terminal",
        "text": "PadstackInstance.get_padstack_instance_terminal()\n\nTerminalInstance:         Terminal of the padstack instance.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.restrict_max_length",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.restrict_max_length.html#restrict_max_length",
        "title": "restrict_max_length",
        "section": "restrict_max_length",
        "text": "bool: Flag indicating if the maximum length of mesh elements is restricted.\nrestrict_max_length\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.restrict_max_length",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.restrict_max_length.html#ansys.edb.core.simulation_setup.mesh_operation.LengthMeshOperation.restrict_max_length",
        "title": "restrict_max_length > restrict_max_length > restrict_max_length",
        "section": "restrict_max_length > restrict_max_length",
        "text": "property LengthMeshOperation.restrict_max_length\n\nbool: Flag indicating if the maximum length of mesh elements is restricted.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.num_via_sides",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.num_via_sides.html#num_via_sides",
        "title": "num_via_sides",
        "section": "num_via_sides",
        "text": "int: Number of sides a via is considered to have.\nnum_via_sides\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.num_via_sides",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.num_via_sides.html#ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.num_via_sides",
        "title": "num_via_sides > num_via_sides > num_via_sides",
        "section": "num_via_sides > num_via_sides",
        "text": "property AdvancedSettings.num_via_sides\n\nint: Number of sides a via is considered to have.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.html#arcdata",
        "title": "ArcData",
        "section": "ArcData",
        "text": "Represents arc data.\nArcData.angle([arc])\nGet the angle between this arc and another arc if provided or the angle of this arc.\nArcData.closest_points(other)\nGet the closest points from this arc to another arc, and vice versa.\nArcData.is_big()\nDetermine if the arc is big.\nArcData.is_ccw()\nDetermine if the arc rotates counter-clockwise.\nArcData.is_cw()\nDetermine if the arc rotates clockwise.\nArcData.is_left()\nDetermine if the arc rotates clockwise.\nArcData.is_point([tolerance])\nDetermine if the arc is a point.\nArcData.is_segment([tolerance])\nDetermine if the arc is a straight line segment.\nArcData.tangent_at(point)\nGet the tangent vector of the arc at a given point.\nArcData.bbox\nPolygonData: Rectangular bounding box of the arc.\nArcData.center\nPointData: Center point of the arc.\nArcData.direction\nLiteral[\"cw\", \"ccw\", \"colinear\"]: Rotational direction of the arc.\nArcData.end\nPointData: End point of the arc.\nArcData.height\nfloat: Height of the arc.\nArcData.length\nstr: Circumference length of the arc.\nArcData.midpoint\nPointData: Midpoint of the arc.\nArcData.points\nlist of PointData: Geometric points representing the arc.\nArcData.radius\nfloat: Radius of the arc.\nArcData.start\nPointData: Start point of the arc.\nArcData\nArcData.angle\nArcData.closest_points\nArcData.is_big\nArcData.is_ccw\nArcData.is_cw\nArcData.is_left\nArcData.is_point\nArcData.is_segment\nArcData.tangent_at\nArcData.bbox\nPolygonData\nArcData.center\nPointData\nArcData.direction\nLiteral[\"cw\", \"ccw\", \"colinear\"]\nArcData.end\nPointData\nArcData.height\nfloat\nArcData.length\nstr\nArcData.midpoint\nPointData\nArcData.points\nlist\nPointData\nArcData.radius\nfloat\nArcData.start\nPointData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.html#ansys.edb.core.geometry.arc_data.ArcData",
        "title": "ArcData > ArcData > ArcData",
        "section": "ArcData > ArcData",
        "text": "class ansys.edb.core.geometry.arc_data.ArcData(start, end, **kwargs)\n\nRepresents arc data.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nArcData.angle([arc])\n\nGet the angle between this arc and another arc if provided or the angle of this arc.\n\nArcData.closest_points(other)\n\nGet the closest points from this arc to another arc, and vice versa.\n\nArcData.is_big()\n\nDetermine if the arc is big.\n\nArcData.is_ccw()\n\nDetermine if the arc rotates counter-clockwise.\n\nArcData.is_cw()\n\nDetermine if the arc rotates clockwise.\n\nArcData.is_left()\n\nDetermine if the arc rotates clockwise.\n\nArcData.is_point([tolerance])\n\nDetermine if the arc is a point.\n\nArcData.is_segment([tolerance])\n\nDetermine if the arc is a straight line segment.\n\nArcData.tangent_at(point)\n\nGet the tangent vector of the arc at a given point.\n\n\n\nAttributes\n\n\n\n\n\n\n\nArcData.bbox\n\nPolygonData: Rectangular bounding box of the arc.\n\nArcData.center\n\nPointData: Center point of the arc.\n\nArcData.direction\n\nLiteral[\"cw\", \"ccw\", \"colinear\"]: Rotational direction of the arc.\n\nArcData.end\n\nPointData: End point of the arc.\n\nArcData.height\n\nfloat: Height of the arc.\n\nArcData.length\n\nstr: Circumference length of the arc.\n\nArcData.midpoint\n\nPointData: Midpoint of the arc.\n\nArcData.points\n\nlist of PointData: Geometric points representing the arc.\n\nArcData.radius\n\nfloat: Radius of the arc.\n\nArcData.start\n\nPointData: Start point of the arc.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.delete",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the layout object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.delete",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.delete.html#ansys.edb.core.net.net.Net.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "Net.delete()\n\nDelete the layout object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.use_arc_chord_error_approx",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.use_arc_chord_error_approx.html#use_arc_chord_error_approx",
        "title": "use_arc_chord_error_approx",
        "section": "use_arc_chord_error_approx",
        "text": "bool: Flag indicating if arc chord error approximation is used.\nuse_arc_chord_error_approx\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.use_arc_chord_error_approx",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.use_arc_chord_error_approx.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSAdvancedMeshingSettings.use_arc_chord_error_approx",
        "title": "use_arc_chord_error_approx > use_arc_chord_error_approx > use_arc_chord_error_approx",
        "section": "use_arc_chord_error_approx > use_arc_chord_error_approx",
        "text": "property HFSSAdvancedMeshingSettings.use_arc_chord_error_approx\n\nbool: Flag indicating if arc chord error approximation is used.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.type.html#type",
        "title": "type",
        "section": "type",
        "text": "type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadEdge.type.html#ansys.edb.core.terminal.terminals.PadEdge.type",
        "title": "type > type > type",
        "section": "type > type",
        "text": "PadEdge.type = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.layer",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.layer.html#layer",
        "title": "layer",
        "section": "layer",
        "text": "Layer: Layer that the primitive object is on.\nlayer\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.layer",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.layer.html#ansys.edb.core.primitive.primitive.Path.layer",
        "title": "layer > layer > layer",
        "section": "layer > layer",
        "text": "property Path.layer\n\nLayer: Layer that the primitive object is on.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.find_by_id.html#find_by_id",
        "title": "find_by_id",
        "section": "find_by_id",
        "text": "Find a Connectable object by database ID in a given layout.\nLayout to search for the Connectable object.\nDatabase ID.\nConnectable object with the given database ID.\nfind_by_id\nLayout\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.find_by_id.html#ansys.edb.core.hierarchy.via_group.ViaGroup.find_by_id",
        "title": "find_by_id > find_by_id > find_by_id",
        "section": "find_by_id > find_by_id",
        "text": "classmethod ViaGroup.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the Connectable object.\n\nuid\n\npython:int\n\nDatabase ID.\n\nReturns\n\nConnectable\n\nConnectable object with the given database ID.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.TopBottomAssociation.INVALID_TOP_BOTTOM_ASSOCIATION",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.TopBottomAssociation.INVALID_TOP_BOTTOM_ASSOCIATION.html#invalid_top_bottom_association",
        "title": "INVALID_TOP_BOTTOM_ASSOCIATION",
        "section": "INVALID_TOP_BOTTOM_ASSOCIATION",
        "text": "INVALID_TOP_BOTTOM_ASSOCIATION"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.TopBottomAssociation.INVALID_TOP_BOTTOM_ASSOCIATION",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.TopBottomAssociation.INVALID_TOP_BOTTOM_ASSOCIATION.html#ansys.edb.core.layer.layer.TopBottomAssociation.INVALID_TOP_BOTTOM_ASSOCIATION",
        "title": "INVALID_TOP_BOTTOM_ASSOCIATION > INVALID_TOP_BOTTOM_ASSOCIATION > INVALID_TOP_BOTTOM_ASSOCIATION",
        "section": "INVALID_TOP_BOTTOM_ASSOCIATION > INVALID_TOP_BOTTOM_ASSOCIATION",
        "text": "TopBottomAssociation.INVALID_TOP_BOTTOM_ASSOCIATION = -1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_null",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_null",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Bondwire.is_null.html#ansys.edb.core.primitive.primitive.Bondwire.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property Bondwire.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.create",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a RaptorX simulation setup.\nCell to create the simulation setup in.\nName of the simulation setup.\nRaptorX simulation setup created.\ncreate\nCell\npython:str\nRaptorXSimulationSetup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.create",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.create.html#ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod RaptorXSimulationSetup.create(cell, name)\n\nCreate a RaptorX simulation setup.\n\nParameters\n\ncell\n\nCell\n\nCell to create the simulation setup in.\n\nname\n\npython:str\n\nName of the simulation setup.\n\nReturns\n\nRaptorXSimulationSetup\n\nRaptorX simulation setup created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.get_data",
        "href": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.get_data.html#get_data",
        "title": "get_data",
        "section": "get_data",
        "text": "Get a list of data points in the dataset definition.\nget_data\npython:list\nPointData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.get_data",
        "href": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.get_data.html#ansys.edb.core.definition.dataset_def.DatasetDef.get_data",
        "title": "get_data > get_data > get_data",
        "section": "get_data > get_data",
        "text": "DatasetDef.get_data()\n\nGet a list of data points in the dataset definition.\n\nReturns\n\npython:list[PointData]\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.can_be_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.can_be_zone_primitive.html#can_be_zone_primitive",
        "title": "can_be_zone_primitive",
        "section": "can_be_zone_primitive",
        "text": "bool: Flag indicating if the primitive can be a zone.\nThis property is read-only.\ncan_be_zone_primitive\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.can_be_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.can_be_zone_primitive.html#ansys.edb.core.primitive.primitive.BoardBendDef.can_be_zone_primitive",
        "title": "can_be_zone_primitive > can_be_zone_primitive > can_be_zone_primitive",
        "section": "can_be_zone_primitive > can_be_zone_primitive",
        "text": "property BoardBendDef.can_be_zone_primitive\n\nbool: Flag indicating if the primitive can be a zone.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.group",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.group.html#group",
        "title": "group",
        "section": "group",
        "text": "Group object.\ngroup\nGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.group",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.group.html#ansys.edb.core.primitive.primitive.Text.group",
        "title": "group > group > group",
        "section": "group > group",
        "text": "property Text.group\n\nGroup object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.group",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.group.html#group",
        "title": "group",
        "section": "group",
        "text": "Group object.\ngroup\nGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.group",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.group.html#ansys.edb.core.primitive.primitive.Primitive.group",
        "title": "group > group > group",
        "section": "group > group",
        "text": "property Primitive.group\n\nGroup object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SolverSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SolverSettings.html#solversettings",
        "title": "SolverSettings",
        "section": "SolverSettings",
        "text": "Class representing base solver simulation settings.\nSolverSettings.msg\nEDBObjMessage: Protobuf message that represents this object's ID.\nSolverSettings.thin_dielectric_layer_threshold\nstr: Value below which dielectric layers are merged with adjacent dielectric layers.\nSolverSettings.thin_signal_layer_threshold\nstr: Value below which signal layers are considered to have zero thickness.\nSolverSettings\nSolverSettings.msg\nEDBObjMessage\nSolverSettings.thin_dielectric_layer_threshold\nstr\nSolverSettings.thin_signal_layer_threshold\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SolverSettings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SolverSettings.html#ansys.edb.core.simulation_setup.simulation_settings.SolverSettings",
        "title": "SolverSettings > SolverSettings > SolverSettings",
        "section": "SolverSettings > SolverSettings",
        "text": "class ansys.edb.core.simulation_setup.simulation_settings.SolverSettings(sim_setup)\n\nClass representing base solver simulation settings.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nSolverSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object's ID.\n\nSolverSettings.thin_dielectric_layer_threshold\n\nstr: Value below which dielectric layers are merged with adjacent dielectric layers.\n\nSolverSettings.thin_signal_layer_threshold\n\nstr: Value below which signal layers are considered to have zero thickness.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_property.ComponentProperty.package_def",
        "href": "api/_autosummary/ansys.edb.core.definition.component_property.ComponentProperty.package_def.html#package_def",
        "title": "package_def",
        "section": "package_def",
        "text": "PackageDef: Package definition object.\npackage_def\nPackageDef"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.component_property.ComponentProperty.package_def",
        "href": "api/_autosummary/ansys.edb.core.definition.component_property.ComponentProperty.package_def.html#ansys.edb.core.definition.component_property.ComponentProperty.package_def",
        "title": "package_def > package_def > package_def",
        "section": "package_def > package_def",
        "text": "property ComponentProperty.package_def\n\nPackageDef: Package definition object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.set_product_property.html#set_product_property",
        "title": "set_product_property",
        "section": "set_product_property",
        "text": "Set the product property for the given product ID and attribute ID.\nProduct ID.\nAttribute ID.\nNew value for the product property.\nset_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.set_product_property",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.set_product_property.html#ansys.edb.core.definition.package_def.PackageDef.set_product_property",
        "title": "set_product_property > set_product_property > set_product_property",
        "section": "set_product_property > set_product_property",
        "text": "PackageDef.set_product_property(prod_id, attr_it, prop_value)\n\nSet the product property for the given product ID and attribute ID.\n\nParameters\n\nprod_id\n\nProductIdType\n\nProduct ID.\n\nattr_it\n\npython:int\n\nAttribute ID.\n\nprop_value\n\npython:str\n\nNew value for the product property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.ProductIdType.SIWAVE",
        "href": "api/_autosummary/ansys.edb.core.database.ProductIdType.SIWAVE.html#siwave",
        "title": "SIWAVE",
        "section": "SIWAVE",
        "text": "SIWAVE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.ProductIdType.SIWAVE",
        "href": "api/_autosummary/ansys.edb.core.database.ProductIdType.SIWAVE.html#ansys.edb.core.database.ProductIdType.SIWAVE",
        "title": "SIWAVE > SIWAVE > SIWAVE",
        "section": "SIWAVE > SIWAVE",
        "text": "ProductIdType.SIWAVE = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.name",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the net.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.name",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.name.html#ansys.edb.core.net.net.Net.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property Net.name\n\nstr: Name of the net.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.get_material",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.get_material.html#get_material",
        "title": "get_material",
        "section": "get_material",
        "text": "Get the name of the material of the layer.\nWhether to evaluate the material if it is parameterized.\nMaterial name.\nget_material\npython:True\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.get_material",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.get_material.html#ansys.edb.core.layer.via_layer.ViaLayer.get_material",
        "title": "get_material > get_material > get_material",
        "section": "get_material > get_material",
        "text": "ViaLayer.get_material(evaluated=True)\n\nGet the name of the material of the layer.\n\nParameters\n\nevaluated\n\nbool, default: python:True\n\nWhether to evaluate the material if it is parameterized.\n\nReturns\n\npython:str\n\nMaterial name.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.add_variable",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.add_variable.html#add_variable",
        "title": "add_variable",
        "section": "add_variable",
        "text": "Add a variable.\nVariable name.\nValue, which can be any type that can be converted to a Value\ninstance.\nWhether the new variable is a parameter. The default is False, which means it is a local variable.\nVariables can be added to the following EDB objects:\nDatabase (Variable names must begin with a ‘$’.)\nComponentDef\nCell\nLayout (Adds variable to the corresponding\nCell instance.)\nAdd variables to a cell and create a value that references these variables.\nadd_variable\npython:str\npython:str\npython:int\npython:float\ncomplex\nValue\nValue\npython:False\nFalse\nDatabase\nComponentDef\nCell\nLayout\nCell"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.add_variable",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.add_variable.html#ansys.edb.core.layout.layout.Layout.add_variable",
        "title": "add_variable > add_variable > add_variable",
        "section": "add_variable > add_variable",
        "text": "Layout.add_variable(name, value, is_param=False)\n\nAdd a variable.\n\nParameters\n\nname\n\npython:str\n\nVariable name.\n\nvalue\n\npython:str, python:int, python:float, complex, Value\n\nValue, which can be any type that can be converted to a Value\ninstance.\n\nis_param\n\nbool, default: python:False\n\nWhether the new variable is a parameter. The default is False, which means it is a local variable.\n\nNotes\n\nVariables can be added to the following EDB objects:\n\nDatabase (Variable names must begin with a ‘$’.)\n\nComponentDef\n\nCell\n\nLayout (Adds variable to the corresponding\nCell instance.)\n\nExamples\n\nAdd variables to a cell and create a value that references these variables.\n\n>>> param = Value(33.1)\n>>> cell.add_variable(\"blue1\", param)\n>>> cell.add_variable(\"blue2\", \"25mm\")\n>>> vv = cell.create_value(\"blue1 + blue2\")\n>>> print(vv.double)\n33.125\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database",
        "href": "api/_autosummary/ansys.edb.core.database.Database.html#database",
        "title": "Database",
        "section": "Database",
        "text": "Represents a database object.\nDatabase.add_menu_variable(name, values[, ...])\nAdd a menu variable.\nDatabase.add_variable(name, value[, is_param])\nAdd a variable.\nDatabase.close()\nClose the database.\nDatabase.copy_cells(cells_to_copy)\nCopy cells from other databases or this database into this database.\nDatabase.create(db_path)\nCreate a database in a given location.\nDatabase.create_value(val)\nCreate a value instance.\nDatabase.delete(db_path)\nDelete a database in a given specified location.\nDatabase.delete_variable(name)\nDelete a variable.\nDatabase.find_by_id(db_id)\nFind a database by ID.\nDatabase.get_all_variable_names()\nGet all variable names.\nDatabase.get_product_property(prod_id, attr_it)\nGet a product-specific property value.\nDatabase.get_product_property_ids(prod_id)\nGet a list of attribute IDs for a given product property ID.\nDatabase.get_variable_desc(name)\nGet the description of a variable.\nDatabase.get_variable_value(name)\nGet the value for a given variable.\nDatabase.get_version_by_release(release)\nGet the EDB version for a given release name.\nDatabase.import_material_from_control_file(...)\nImport materials from a control file.\nDatabase.is_parameter(name)\nDetermine if the variable is a parameter.\nDatabase.open(db_path, read_only)\nOpen a database in a given location.\nDatabase.save()\nSave any changes to the database.\nDatabase.save_as(path[, version])\nSave the database to a new location and older EDB version.\nDatabase.scale(scale_factor)\nScale all geometries and their locations uniformly by a positive factor.\nDatabase.set_product_property(prod_id, ...)\nSet the product property associated with the given product ID and attribute ID.\nDatabase.set_variable_desc(name, desc)\nSet a variable to have a new description.\nDatabase.set_variable_value(name, new_value)\nSet a variable to a new value.\nDatabase.apd_bondwire_defs\nlist of ApdBondwireDef: All APD bondwire definitions in the database.\nDatabase.circuit_cells\nlist of Cell: All circuit cells in the database.\nDatabase.component_defs\nlist of ComponentDef: All component definitions in the database.\nDatabase.dataset_defs\nlist of DatasetDef: All dataset definitions in the database.\nDatabase.directory\nstr: Directory where the database is located.\nDatabase.edb_uid\nint: Unique EDB ID of the database.\nDatabase.footprint_cells\nlist of Cell: All footprint cells in the database.\nDatabase.id\nint: Unique ID of the EDB object.\nDatabase.is_null\nbool: Flag indicating if the object exists in the database.\nDatabase.is_read_only\nbool: Flag indicating if the database is open in read-only mode.\nDatabase.jedec4_bondwire_defs\nlist of Jedec4BondwireDef: All JEDEC4 bondwire definitions in the database.\nDatabase.jedec5_bondwire_defs\nlist of:class:.Jedec5BondwireDef: All JEDEC5 bondwire definitions in the database.\nDatabase.material_defs\nlist of MaterialDef: All material definitions in the database.\nDatabase.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nDatabase.package_defs\nlist of PackageDef: All package definitions in the database.\nDatabase.padstack_defs\nlist of PadstackDef: All padstack definitions in the database.\nDatabase.source\nstr: Name of the source database.\nDatabase.source_version\nstr: Source version for the database.\nDatabase.top_circuit_cells\nlist of Cell: Top circuit cells in the database.\nDatabase.version\ntuple of (int, int): Version [major, minor] of the database.\nDatabase\nDatabase.add_menu_variable\nDatabase.add_variable\nDatabase.close\nDatabase.copy_cells\nDatabase.create\nDatabase.create_value\nDatabase.delete\nDatabase.delete_variable\nDatabase.find_by_id\nDatabase.get_all_variable_names\nDatabase.get_product_property\nDatabase.get_product_property_ids\nDatabase.get_variable_desc\nDatabase.get_variable_value\nDatabase.get_version_by_release\nDatabase.import_material_from_control_file\nDatabase.is_parameter\nDatabase.open\nDatabase.save\nDatabase.save_as\nDatabase.scale\nDatabase.set_product_property\nDatabase.set_variable_desc\nDatabase.set_variable_value\nDatabase.apd_bondwire_defs\nlist\nApdBondwireDef\nDatabase.circuit_cells\nlist\nCell\nDatabase.component_defs\nlist\nComponentDef\nDatabase.dataset_defs\nlist\nDatasetDef\nDatabase.directory\nstr\nDatabase.edb_uid\nint\nDatabase.footprint_cells\nlist\nCell\nDatabase.id\nint\nDatabase.is_null\nbool\nDatabase.is_read_only\nbool\nDatabase.jedec4_bondwire_defs\nlist\nJedec4BondwireDef\nDatabase.jedec5_bondwire_defs\nlist\nDatabase.material_defs\nlist\nMaterialDef\nDatabase.msg\nEDBObjMessage\nDatabase.package_defs\nlist\nPackageDef\nDatabase.padstack_defs\nlist\nPadstackDef\nDatabase.source\nstr\nDatabase.source_version\nstr\nDatabase.top_circuit_cells\nlist\nCell\nDatabase.version\ntuple\nint\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database",
        "href": "api/_autosummary/ansys.edb.core.database.Database.html#ansys.edb.core.database.Database",
        "title": "Database > Database > Database",
        "section": "Database > Database",
        "text": "class ansys.edb.core.database.Database(msg)\n\nRepresents a database object.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nDatabase.add_menu_variable(name, values[, ...])\n\nAdd a menu variable.\n\nDatabase.add_variable(name, value[, is_param])\n\nAdd a variable.\n\nDatabase.close()\n\nClose the database.\n\nDatabase.copy_cells(cells_to_copy)\n\nCopy cells from other databases or this database into this database.\n\nDatabase.create(db_path)\n\nCreate a database in a given location.\n\nDatabase.create_value(val)\n\nCreate a value instance.\n\nDatabase.delete(db_path)\n\nDelete a database in a given specified location.\n\nDatabase.delete_variable(name)\n\nDelete a variable.\n\nDatabase.find_by_id(db_id)\n\nFind a database by ID.\n\nDatabase.get_all_variable_names()\n\nGet all variable names.\n\nDatabase.get_product_property(prod_id, attr_it)\n\nGet a product-specific property value.\n\nDatabase.get_product_property_ids(prod_id)\n\nGet a list of attribute IDs for a given product property ID.\n\nDatabase.get_variable_desc(name)\n\nGet the description of a variable.\n\nDatabase.get_variable_value(name)\n\nGet the value for a given variable.\n\nDatabase.get_version_by_release(release)\n\nGet the EDB version for a given release name.\n\nDatabase.import_material_from_control_file(...)\n\nImport materials from a control file.\n\nDatabase.is_parameter(name)\n\nDetermine if the variable is a parameter.\n\nDatabase.open(db_path, read_only)\n\nOpen a database in a given location.\n\nDatabase.save()\n\nSave any changes to the database.\n\nDatabase.save_as(path[, version])\n\nSave the database to a new location and older EDB version.\n\nDatabase.scale(scale_factor)\n\nScale all geometries and their locations uniformly by a positive factor.\n\nDatabase.set_product_property(prod_id, ...)\n\nSet the product property associated with the given product ID and attribute ID.\n\nDatabase.set_variable_desc(name, desc)\n\nSet a variable to have a new description.\n\nDatabase.set_variable_value(name, new_value)\n\nSet a variable to a new value.\n\n\n\nAttributes\n\n\n\n\n\n\n\nDatabase.apd_bondwire_defs\n\nlist of ApdBondwireDef: All APD bondwire definitions in the database.\n\nDatabase.circuit_cells\n\nlist of Cell: All circuit cells in the database.\n\nDatabase.component_defs\n\nlist of ComponentDef: All component definitions in the database.\n\nDatabase.dataset_defs\n\nlist of DatasetDef: All dataset definitions in the database.\n\nDatabase.directory\n\nstr: Directory where the database is located.\n\nDatabase.edb_uid\n\nint: Unique EDB ID of the database.\n\nDatabase.footprint_cells\n\nlist of Cell: All footprint cells in the database.\n\nDatabase.id\n\nint: Unique ID of the EDB object.\n\nDatabase.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nDatabase.is_read_only\n\nbool: Flag indicating if the database is open in read-only mode.\n\nDatabase.jedec4_bondwire_defs\n\nlist of Jedec4BondwireDef: All JEDEC4 bondwire definitions in the database.\n\nDatabase.jedec5_bondwire_defs\n\nlist of:class:.Jedec5BondwireDef: All JEDEC5 bondwire definitions in the database.\n\nDatabase.material_defs\n\nlist of MaterialDef: All material definitions in the database.\n\nDatabase.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\nDatabase.package_defs\n\nlist of PackageDef: All package definitions in the database.\n\nDatabase.padstack_defs\n\nlist of PadstackDef: All padstack definitions in the database.\n\nDatabase.source\n\nstr: Name of the source database.\n\nDatabase.source_version\n\nstr: Source version for the database.\n\nDatabase.top_circuit_cells\n\nlist of Cell: Top circuit cells in the database.\n\nDatabase.version\n\ntuple of (int, int): Version [major, minor] of the database.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.subtract",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.subtract.html#subtract",
        "title": "subtract",
        "section": "subtract",
        "text": "Subtract a set of polygons from another set of polygons.\nList of base polygons.\nList of polygons to subtract.\nsubtract\npython:list\nPolygonData\nPolygonData\npython:list\nPolygonData\nPolygonData\npython:list\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.subtract",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.subtract.html#ansys.edb.core.geometry.polygon_data.PolygonData.subtract",
        "title": "subtract > subtract > subtract",
        "section": "subtract > subtract",
        "text": "classmethod PolygonData.subtract(polygons1, polygons2)\n\nSubtract a set of polygons from another set of polygons.\n\nParameters\n\npolygons1\n\npython:list[PolygonData], PolygonData\n\nList of base polygons.\n\npolygons2\n\npython:list[PolygonData], PolygonData\n\nList of polygons to subtract.\n\nReturns\n\npython:list[PolygonData]\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.create",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a voltage regulator.\nLayout to create the voltage regulator in.\nName of the voltage regulator.\nActive state of the voltage regulator.\nVoltage of the voltage regulator.\nLoad regulation current.\nLoad regulation percentage.\nVoltage regulator created.\ncreate\nLayout\npython:str\nVoltageRegulator"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.create",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.create.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod VoltageRegulator.create(layout, name, active, voltage, lrc, lrp)\n\nCreate a voltage regulator.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to create the voltage regulator in.\n\nname\n\npython:str\n\nName of the voltage regulator.\n\nactive\n\nbool\n\nActive state of the voltage regulator.\n\nvoltage\n\nValueLike\n\nVoltage of the voltage regulator.\n\nlrc\n\nValueLike\n\nLoad regulation current.\n\nlrp\n\nValueLike\n\nLoad regulation percentage.\n\nReturns\n\nVoltageRegulator\n\nVoltage regulator created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.make_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.make_zone_primitive.html#make_zone_primitive",
        "title": "make_zone_primitive",
        "section": "make_zone_primitive",
        "text": "Make the primitive a zone primitive with a zone specified by the provided ID.\nID of the zone primitive to use.\nmake_zone_primitive\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.make_zone_primitive",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.BoardBendDef.make_zone_primitive.html#ansys.edb.core.primitive.primitive.BoardBendDef.make_zone_primitive",
        "title": "make_zone_primitive > make_zone_primitive > make_zone_primitive",
        "section": "make_zone_primitive > make_zone_primitive",
        "text": "BoardBendDef.make_zone_primitive(zone_id)\n\nMake the primitive a zone primitive with a zone specified by the provided ID.\n\nParameters\n\nzone_id\n\npython:int\n\nID of the zone primitive to use.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.obj_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.obj_type.html#obj_type",
        "title": "obj_type",
        "section": "obj_type",
        "text": "LayoutObjType: Layout object type.\nThis property is read-only.\nobj_type\nLayoutObjType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.obj_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Terminal.obj_type.html#ansys.edb.core.terminal.terminals.Terminal.obj_type",
        "title": "obj_type > obj_type > obj_type",
        "section": "obj_type > obj_type",
        "text": "property Terminal.obj_type\n\nLayoutObjType: Layout object type.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.y",
        "href": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.y.html#y",
        "title": "y",
        "section": "y",
        "text": "Value: Y coordinate.\ny\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.y",
        "href": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.y.html#ansys.edb.core.geometry.point_data.PointData.y",
        "title": "y > y > y",
        "section": "y > y",
        "text": "property PointData.y\n\nValue: Y coordinate.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.lambda_target",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.lambda_target.html#lambda_target",
        "title": "lambda_target",
        "section": "lambda_target",
        "text": "float: Target lambda value for lambda refinement.\nlambda_target\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.lambda_target",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.lambda_target.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSettingsOptions.lambda_target",
        "title": "lambda_target > lambda_target > lambda_target",
        "section": "lambda_target > lambda_target",
        "text": "property HFSSSettingsOptions.lambda_target\n\nfloat: Target lambda value for lambda refinement.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.get_product_property.html#get_product_property",
        "title": "get_product_property",
        "section": "get_product_property",
        "text": "Get the product-specific property of the cell.\nID representing a product that supports the EDB.\nUser-defined ID that identifies the string value stored in the property.\nString stored in the product-specific property.\nget_product_property\nProductIdType\npython:int\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.cell.Cell.get_product_property",
        "href": "api/_autosummary/ansys.edb.core.layout.cell.Cell.get_product_property.html#ansys.edb.core.layout.cell.Cell.get_product_property",
        "title": "get_product_property > get_product_property > get_product_property",
        "section": "get_product_property > get_product_property",
        "text": "Cell.get_product_property(prod_id, attr_id)\n\nGet the product-specific property of the cell.\n\nParameters\n\nprod_id\n\nProductIdType\n\nID representing a product that supports the EDB.\n\nattr_id\n\npython:int\n\nUser-defined ID that identifies the string value stored in the property.\n\nReturns\n\npython:str\n\nString stored in the product-specific property.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeType.PRIMITIVE",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeType.PRIMITIVE.html#primitive",
        "title": "PRIMITIVE",
        "section": "PRIMITIVE",
        "text": "PRIMITIVE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeType.PRIMITIVE",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeType.PRIMITIVE.html#ansys.edb.core.terminal.terminals.EdgeType.PRIMITIVE",
        "title": "PRIMITIVE > PRIMITIVE > PRIMITIVE",
        "section": "PRIMITIVE > PRIMITIVE",
        "text": "EdgeType.PRIMITIVE = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.SolverType.NUM_SOLVER_TYPES",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.SolverType.NUM_SOLVER_TYPES.html#num_solver_types",
        "title": "NUM_SOLVER_TYPES",
        "section": "NUM_SOLVER_TYPES",
        "text": "NUM_SOLVER_TYPES"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.SolverType.NUM_SOLVER_TYPES",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.SolverType.NUM_SOLVER_TYPES.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.SolverType.NUM_SOLVER_TYPES",
        "title": "NUM_SOLVER_TYPES > NUM_SOLVER_TYPES > NUM_SOLVER_TYPES",
        "section": "NUM_SOLVER_TYPES > NUM_SOLVER_TYPES",
        "text": "SolverType.NUM_SOLVER_TYPES = 3\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollectionMode.MULTIZONE",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollectionMode.MULTIZONE.html#multizone",
        "title": "MULTIZONE",
        "section": "MULTIZONE",
        "text": "MULTIZONE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollectionMode.MULTIZONE",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollectionMode.MULTIZONE.html#ansys.edb.core.layer.layer_collection.LayerCollectionMode.MULTIZONE",
        "title": "MULTIZONE > MULTIZONE > MULTIZONE",
        "section": "MULTIZONE > MULTIZONE",
        "text": "LayerCollectionMode.MULTIZONE = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.delete",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the layout object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.delete",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.PadstackInstance.delete.html#ansys.edb.core.primitive.primitive.PadstackInstance.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "PadstackInstance.delete()\n\nDelete the layout object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.component_property",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.component_property.html#component_property",
        "title": "component_property",
        "section": "component_property",
        "text": "ComponentProperty: Component property of the component group.\nA copy is returned. Use the setter for any modifications to be reflected.\ncomponent_property\nComponentProperty"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.component_property",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.component_property.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.component_property",
        "title": "component_property > component_property > component_property",
        "section": "component_property > component_property",
        "text": "property ComponentGroup.component_property\n\nComponentProperty: Component property of the component group.\n\nA copy is returned. Use the setter for any modifications to be reflected.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings.percent_error",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings.percent_error.html#percent_error",
        "title": "percent_error",
        "section": "percent_error",
        "text": "float: Percent error during conduction adaptive passes.\npercent_error\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings.percent_error",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings.percent_error.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings.percent_error",
        "title": "percent_error > percent_error > percent_error",
        "section": "percent_error > percent_error",
        "text": "property HFSSDCRSettings.percent_error\n\nfloat: Percent error during conduction adaptive passes.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.id",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Path.id.html#ansys.edb.core.primitive.primitive.Path.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property Path.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.etch_factor",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.etch_factor.html#etch_factor",
        "title": "etch_factor",
        "section": "etch_factor",
        "text": "Value: Etch factor of the layer.\nThe setter accepts a ValueLike term.\netch_factor\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.etch_factor",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.etch_factor.html#ansys.edb.core.layer.via_layer.ViaLayer.etch_factor",
        "title": "etch_factor > etch_factor > etch_factor",
        "section": "etch_factor > etch_factor",
        "text": "property ViaLayer.etch_factor\n\nValue: Etch factor of the layer.\n\nThe setter accepts a ValueLike term.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetupType.SI_WAVE_DCIR",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetupType.SI_WAVE_DCIR.html#si_wave_dcir",
        "title": "SI_WAVE_DCIR",
        "section": "SI_WAVE_DCIR",
        "text": "SI_WAVE_DCIR"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetupType.SI_WAVE_DCIR",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_setup.SimulationSetupType.SI_WAVE_DCIR.html#ansys.edb.core.simulation_setup.simulation_setup.SimulationSetupType.SI_WAVE_DCIR",
        "title": "SI_WAVE_DCIR > SI_WAVE_DCIR > SI_WAVE_DCIR",
        "section": "SI_WAVE_DCIR > SI_WAVE_DCIR",
        "text": "SimulationSetupType.SI_WAVE_DCIR = 9\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.referencing_via_layer_ids",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.referencing_via_layer_ids.html#referencing_via_layer_ids",
        "title": "referencing_via_layer_ids",
        "section": "referencing_via_layer_ids",
        "text": "list[int]: Layer IDs for all via layers referencing the layer.\nThis property is read-only.\nreferencing_via_layer_ids\nlist\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.referencing_via_layer_ids",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.referencing_via_layer_ids.html#ansys.edb.core.layer.via_layer.ViaLayer.referencing_via_layer_ids",
        "title": "referencing_via_layer_ids > referencing_via_layer_ids > referencing_via_layer_ids",
        "section": "referencing_via_layer_ids > referencing_via_layer_ids",
        "text": "property ViaLayer.referencing_via_layer_ids\n\nlist[int]: Layer IDs for all via layers referencing the layer.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.RoughnessRegion.BOTTOM",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.RoughnessRegion.BOTTOM.html#bottom",
        "title": "BOTTOM",
        "section": "BOTTOM",
        "text": "BOTTOM"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.RoughnessRegion.BOTTOM",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.RoughnessRegion.BOTTOM.html#ansys.edb.core.layer.stackup_layer.RoughnessRegion.BOTTOM",
        "title": "BOTTOM > BOTTOM > BOTTOM",
        "section": "BOTTOM > BOTTOM",
        "text": "RoughnessRegion.BOTTOM = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_void",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_void.html#is_void",
        "title": "is_void",
        "section": "is_void",
        "text": "bool: Flag indicating if a primitive is a void.\nis_void\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_void",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.is_void.html#ansys.edb.core.primitive.primitive.Text.is_void",
        "title": "is_void > is_void > is_void",
        "section": "is_void > is_void",
        "text": "property Text.is_void\n\nbool: Flag indicating if a primitive is a void.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.primitives",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.primitives.html#primitives",
        "title": "primitives",
        "section": "primitives",
        "text": "list of Primitive: All primitives on the net.\nThis property is read-only.\nprimitives\nlist\nPrimitive"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net.Net.primitives",
        "href": "api/_autosummary/ansys.edb.core.net.net.Net.primitives.html#ansys.edb.core.net.net.Net.primitives",
        "title": "primitives > primitives > primitives",
        "section": "primitives > primitives",
        "text": "property Net.primitives\n\nlist of Primitive: All primitives on the net.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.ac_dc_merge_mode",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.ac_dc_merge_mode.html#ac_dc_merge_mode",
        "title": "ac_dc_merge_mode",
        "section": "ac_dc_merge_mode",
        "text": "int: AC/DC merge mode.\nac_dc_merge_mode\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.ac_dc_merge_mode",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.ac_dc_merge_mode.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveAdvancedSettings.ac_dc_merge_mode",
        "title": "ac_dc_merge_mode > ac_dc_merge_mode > ac_dc_merge_mode",
        "section": "ac_dc_merge_mode > ac_dc_merge_mode",
        "text": "property SIWaveAdvancedSettings.ac_dc_merge_mode\n\nint: AC/DC merge mode.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.nets",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.nets.html#nets",
        "title": "nets",
        "section": "nets",
        "text": "list of Net: List of all nets         in the layout.\nThis property is read-only.\nnets\nlist\nNet"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.nets",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.nets.html#ansys.edb.core.layout.layout.Layout.nets",
        "title": "nets > nets > nets",
        "section": "nets > nets",
        "text": "property Layout.nets\n\nlist of Net: List of all nets         in the layout.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.is_cw",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.is_cw.html#is_cw",
        "title": "is_cw",
        "section": "is_cw",
        "text": "Determine if the arc rotates clockwise.\nThis method is the same as the is_left method.\nTrue when the arc rotates clockwise, False otherwise.\nis_cw\nis_left\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.is_cw",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.is_cw.html#ansys.edb.core.geometry.arc_data.ArcData.is_cw",
        "title": "is_cw > is_cw > is_cw",
        "section": "is_cw > is_cw",
        "text": "ArcData.is_cw()\n\nDetermine if the arc rotates clockwise.\n\nThis method is the same as the is_left method.\n\nReturns\n\nbool\n\nTrue when the arc rotates clockwise, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.color",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.color.html#color",
        "title": "color",
        "section": "color",
        "text": "tuple[int, int, int]: Color of the layer in (R,G,B) format.\nTuple contains the color values in (R,G,B) format.\ncolor\ntuple\nint\nint\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.color",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.color.html#ansys.edb.core.layer.layer.Layer.color",
        "title": "color > color > color",
        "section": "color > color",
        "text": "property Layer.color\n\ntuple[int, int, int]: Color of the layer in (R,G,B) format.\n\nTuple contains the color values in (R,G,B) format.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_NSIDED_POLYGON",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_NSIDED_POLYGON.html#padgeomtype_nsided_polygon",
        "title": "PADGEOMTYPE_NSIDED_POLYGON",
        "section": "PADGEOMTYPE_NSIDED_POLYGON",
        "text": "PADGEOMTYPE_NSIDED_POLYGON"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_NSIDED_POLYGON",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_NSIDED_POLYGON.html#ansys.edb.core.definition.padstack_def_data.PadGeometryType.PADGEOMTYPE_NSIDED_POLYGON",
        "title": "PADGEOMTYPE_NSIDED_POLYGON > PADGEOMTYPE_NSIDED_POLYGON > PADGEOMTYPE_NSIDED_POLYGON",
        "section": "PADGEOMTYPE_NSIDED_POLYGON > PADGEOMTYPE_NSIDED_POLYGON",
        "text": "PadGeometryType.PADGEOMTYPE_NSIDED_POLYGON = 6\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.get_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.get_hfss_prop.html#get_hfss_prop",
        "title": "get_hfss_prop",
        "section": "get_hfss_prop",
        "text": "Get HFSS properties.\nName of the material property.\nWhether to solve inside.\nget_hfss_prop\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.get_hfss_prop",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.get_hfss_prop.html#ansys.edb.core.primitive.primitive.Circle.get_hfss_prop",
        "title": "get_hfss_prop > get_hfss_prop > get_hfss_prop",
        "section": "get_hfss_prop > get_hfss_prop",
        "text": "Circle.get_hfss_prop()\n\nGet HFSS properties.\n\nReturns\n\nmaterial\n\npython:str\n\nName of the material property.\n\nsolve_inside\n\nbool\n\nWhether to solve inside.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.create",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a bundle terminal.\ncreate\npython:list\nof\nTerminal\nBundleTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.create",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BundleTerminal.create.html#ansys.edb.core.terminal.terminals.BundleTerminal.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod BundleTerminal.create(terminals)\n\nCreate a bundle terminal.\n\nParameters\n\nterminals\n\npython:list of Terminal\n\n\n\nReturns\n\nBundleTerminal\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.terminal_instance",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.terminal_instance.html#terminal_instance",
        "title": "terminal_instance",
        "section": "terminal_instance",
        "text": "TerminalInstance: Terminal instance.\nterminal_instance\nTerminalInstance"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.terminal_instance",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.terminal_instance.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.terminal_instance",
        "title": "terminal_instance > terminal_instance > terminal_instance",
        "section": "terminal_instance > terminal_instance",
        "text": "property TerminalInstanceTerminal.terminal_instance\n\nTerminalInstance: Terminal instance.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.create_hfss.html#create_hfss",
        "title": "create_hfss",
        "section": "create_hfss",
        "text": "Create an HFSS model from an MCAD file.\nHFSS model created.\ncreate_hfss\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.create_hfss",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.create_hfss.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.create_hfss",
        "title": "create_hfss > create_hfss > create_hfss",
        "section": "create_hfss > create_hfss",
        "text": "VoltageRegulator.create_hfss()\n\nCreate an HFSS model from an MCAD file.\n\nReturns\n\nMcadModel\n\nHFSS model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents this object’s ID.\nThis property is read-only.\nmsg\nEDBObjMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.msg.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property HFSSSimulationSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object’s ID.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.has_voids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.has_voids.html#has_voids",
        "title": "has_voids",
        "section": "has_voids",
        "text": "bool: Flag indicating if a primitive has voids inside.\nThis property is read-only.\nhas_voids\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.has_voids",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.has_voids.html#ansys.edb.core.primitive.primitive.Primitive.has_voids",
        "title": "has_voids > has_voids > has_voids",
        "section": "has_voids > has_voids",
        "text": "property Primitive.has_voids\n\nbool: Flag indicating if a primitive has voids inside.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.theta_jb",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.theta_jb.html#theta_jb",
        "title": "theta_jb",
        "section": "theta_jb",
        "text": "Value: Theta JB (junction to board) of the package.\ntheta_jb\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.theta_jb",
        "href": "api/_autosummary/ansys.edb.core.definition.package_def.PackageDef.theta_jb.html#ansys.edb.core.definition.package_def.PackageDef.theta_jb",
        "title": "theta_jb > theta_jb > theta_jb",
        "section": "theta_jb > theta_jb",
        "text": "property PackageDef.theta_jb\n\nValue: Theta JB (junction to board) of the package.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.group",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.group.html#group",
        "title": "group",
        "section": "group",
        "text": "Group object.\ngroup\nGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.group",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.group.html#ansys.edb.core.primitive.primitive.Circle.group",
        "title": "group > group > group",
        "section": "group > group",
        "text": "property Circle.group\n\nGroup object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.definition_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.definition_terminal.html#definition_terminal",
        "title": "definition_terminal",
        "section": "definition_terminal",
        "text": "Terminal: Definition terminal, if any.\ndefinition_terminal\nTerminal"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.definition_terminal",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstance.definition_terminal.html#ansys.edb.core.terminal.terminals.TerminalInstance.definition_terminal",
        "title": "definition_terminal > definition_terminal > definition_terminal",
        "section": "definition_terminal > definition_terminal",
        "text": "property TerminalInstance.definition_terminal\n\nTerminal: Definition terminal, if any.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.msg",
        "href": "api/_autosummary/ansys.edb.core.definition.io_component_property.IOComponentProperty.msg.html#ansys.edb.core.definition.io_component_property.IOComponentProperty.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property IOComponentProperty.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.sparameter_model.SParameterModel.component_model",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.sparameter_model.SParameterModel.component_model.html#component_model",
        "title": "component_model",
        "section": "component_model",
        "text": "str: Name of the component model.\ncomponent_model\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.sparameter_model.SParameterModel.component_model",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.sparameter_model.SParameterModel.component_model.html#ansys.edb.core.hierarchy.sparameter_model.SParameterModel.component_model",
        "title": "component_model > component_model > component_model",
        "section": "component_model > component_model",
        "text": "property SParameterModel.component_model\n\nstr: Name of the component model.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SettingsOptions",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SettingsOptions.html#settingsoptions",
        "title": "SettingsOptions",
        "section": "SettingsOptions",
        "text": "Class representing options for base simulation settings.\nSettingsOptions.do_lambda_refine\nbool: Flag indicating if lambda refinement is used during meshing.\nSettingsOptions.lambda_target\nfloat: Target lambda value for lambda refinement.\nSettingsOptions.mesh_size_factor\nfloat: Mesh size factor used for lambda refinement.\nSettingsOptions.msg\nEDBObjMessage: Protobuf message that represents this object's ID.\nSettingsOptions.use_default_lambda_value\nbool: Flag indicating if the default lambda target value is used.\nSettingsOptions\nSettingsOptions.do_lambda_refine\nbool\nSettingsOptions.lambda_target\nfloat\nSettingsOptions.mesh_size_factor\nfloat\nSettingsOptions.msg\nEDBObjMessage\nSettingsOptions.use_default_lambda_value\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SettingsOptions",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.SettingsOptions.html#ansys.edb.core.simulation_setup.simulation_settings.SettingsOptions",
        "title": "SettingsOptions > SettingsOptions > SettingsOptions",
        "section": "SettingsOptions > SettingsOptions",
        "text": "class ansys.edb.core.simulation_setup.simulation_settings.SettingsOptions(sim_setup)\n\nClass representing options for base simulation settings.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nSettingsOptions.do_lambda_refine\n\nbool: Flag indicating if lambda refinement is used during meshing.\n\nSettingsOptions.lambda_target\n\nfloat: Target lambda value for lambda refinement.\n\nSettingsOptions.mesh_size_factor\n\nfloat: Mesh size factor used for lambda refinement.\n\nSettingsOptions.msg\n\nEDBObjMessage: Protobuf message that represents this object's ID.\n\nSettingsOptions.use_default_lambda_value\n\nbool: Flag indicating if the default lambda target value is used.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.remove_all_nets",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.remove_all_nets.html#remove_all_nets",
        "title": "remove_all_nets",
        "section": "remove_all_nets",
        "text": "Remove all nets from the extended net.\nremove_all_nets"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.remove_all_nets",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.remove_all_nets.html#ansys.edb.core.net.extended_net.ExtendedNet.remove_all_nets",
        "title": "remove_all_nets > remove_all_nets > remove_all_nets",
        "section": "remove_all_nets > remove_all_nets",
        "text": "ExtendedNet.remove_all_nets()\n\nRemove all nets from the extended net.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.directory",
        "href": "api/_autosummary/ansys.edb.core.database.Database.directory.html#directory",
        "title": "directory",
        "section": "directory",
        "text": "str: Directory where the database is located.\ndirectory\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.database.Database.directory",
        "href": "api/_autosummary/ansys.edb.core.database.Database.directory.html#ansys.edb.core.database.Database.directory",
        "title": "directory > directory > directory",
        "section": "directory > directory",
        "text": "property Database.directory\n\nstr: Directory where the database is located.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData.magnitude_sqr",
        "href": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData.magnitude_sqr.html#magnitude_sqr",
        "title": "magnitude_sqr",
        "section": "magnitude_sqr",
        "text": "float: Magnitude-square of the point.\nmagnitude_sqr\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData.magnitude_sqr",
        "href": "api/_autosummary/ansys.edb.core.geometry.point3d_data.Point3DData.magnitude_sqr.html#ansys.edb.core.geometry.point3d_data.Point3DData.magnitude_sqr",
        "title": "magnitude_sqr > magnitude_sqr > magnitude_sqr",
        "section": "magnitude_sqr > magnitude_sqr",
        "text": "property Point3DData.magnitude_sqr\n\nfloat: Magnitude-square of the point.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.all_diag_constant",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.all_diag_constant.html#all_diag_constant",
        "title": "all_diag_constant",
        "section": "all_diag_constant",
        "text": "bool: Flag indicating if all diagonal matrix entries are the same.\nThis property is read-only.\nall_diag_constant\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.all_diag_constant",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.all_diag_constant.html#ansys.edb.core.simulation_setup.adaptive_solutions.MatrixConvergenceData.all_diag_constant",
        "title": "all_diag_constant > all_diag_constant > all_diag_constant",
        "section": "all_diag_constant > all_diag_constant",
        "text": "property MatrixConvergenceData.all_diag_constant\n\nbool: Flag indicating if all diagonal matrix entries are the same.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSParameterSettings.interpolation",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSParameterSettings.interpolation.html#interpolation",
        "title": "interpolation",
        "section": "interpolation",
        "text": "SParamInterpolation: Interpolation type.\ninterpolation\nSParamInterpolation"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSParameterSettings.interpolation",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSParameterSettings.interpolation.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveSParameterSettings.interpolation",
        "title": "interpolation > interpolation > interpolation",
        "section": "interpolation > interpolation",
        "text": "property SIWaveSParameterSettings.interpolation\n\nSParamInterpolation: Interpolation type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.cast",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.cast.html#cast",
        "title": "cast",
        "section": "cast",
        "text": "Cast the group object to the correct concrete type.\ncast\nGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.cast",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.structure3d.Structure3D.cast.html#ansys.edb.core.hierarchy.structure3d.Structure3D.cast",
        "title": "cast > cast > cast",
        "section": "cast > cast",
        "text": "Structure3D.cast()\n\nCast the group object to the correct concrete type.\n\nReturns\n\nGroup\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.xor",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.xor.html#xor",
        "title": "xor",
        "section": "xor",
        "text": "Compute an exclusive OR between a set of polygons and another set of polygons.\nFirst list of polygons.\nSecond list of polygons.\nxor\npython:list\nPolygonData\nPolygonData\npython:list\nPolygonData\nPolygonData\npython:list\nPolygonData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.xor",
        "href": "api/_autosummary/ansys.edb.core.geometry.polygon_data.PolygonData.xor.html#ansys.edb.core.geometry.polygon_data.PolygonData.xor",
        "title": "xor > xor > xor",
        "section": "xor > xor",
        "text": "classmethod PolygonData.xor(polygons1, polygons2)\n\nCompute an exclusive OR between a set of polygons and another set of polygons.\n\nParameters\n\npolygons1\n\npython:list[PolygonData], PolygonData\n\nFirst list of polygons.\n\npolygons2\n\npython:list[PolygonData], PolygonData\n\nSecond list of polygons.\n\nReturns\n\npython:list[PolygonData]\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.num_pins",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.num_pins.html#num_pins",
        "title": "num_pins",
        "section": "num_pins",
        "text": "int: Number of pins in the component group.\nThis property is read-only.\nnum_pins\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.num_pins",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.num_pins.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.num_pins",
        "title": "num_pins > num_pins > num_pins",
        "section": "num_pins > num_pins",
        "text": "property ComponentGroup.num_pins\n\nint: Number of pins in the component group.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.clone",
        "href": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Clone a solder ball property.\nSolder ball property cloned.\nclone\nSolderBallProperty"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.clone",
        "href": "api/_autosummary/ansys.edb.core.definition.solder_ball_property.SolderBallProperty.clone.html#ansys.edb.core.definition.solder_ball_property.SolderBallProperty.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "SolderBallProperty.clone()\n\nClone a solder ball property.\n\nReturns\n\nSolderBallProperty\n\nSolder ball property cloned.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.options",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.options.html#options",
        "title": "options",
        "section": "options",
        "text": "HFSSSettingsOptions: HFSS simulation setting options.\noptions\nHFSSSettingsOptions"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.options",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.options.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.options",
        "title": "options > options > options",
        "section": "options > options",
        "text": "property HFSSSimulationSettings.options\n\nHFSSSettingsOptions: HFSS simulation setting options.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.AdaptiveFrequency",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.AdaptiveFrequency.html#adaptivefrequency",
        "title": "AdaptiveFrequency",
        "section": "AdaptiveFrequency",
        "text": "Represents an adaptive frequency.\nstr: Adaptive frequency.\nstr: Maximum delta S between adaptive passes.\ndict { str : str }: Map of output variable names to maximum delta S.\nAdaptiveFrequency.adaptive_frequency\nstr: Adaptive frequency.\nAdaptiveFrequency.max_delta\nstr: Maximum delta S between adaptive passes.\nAdaptiveFrequency.output_variables\ndict { str : str }: Map of output variable names to maximum delta S.\nAdaptiveFrequency\nadaptive_frequency\npython:str\nstr\nmax_delta\npython:str\nstr\noutput_variables\npython:dict\npython:str\npython:str\ndict\nstr\nstr\nAdaptiveFrequency.adaptive_frequency\nstr\nAdaptiveFrequency.max_delta\nstr\nAdaptiveFrequency.output_variables\ndict\nstr\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.AdaptiveFrequency",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.AdaptiveFrequency.html#ansys.edb.core.simulation_setup.adaptive_solutions.AdaptiveFrequency",
        "title": "AdaptiveFrequency > AdaptiveFrequency > AdaptiveFrequency",
        "section": "AdaptiveFrequency > AdaptiveFrequency",
        "text": "class ansys.edb.core.simulation_setup.adaptive_solutions.AdaptiveFrequency(adaptive_frequency, max_delta='0.02', output_variables=None)\n\nRepresents an adaptive frequency.\n\nAttributes\n\nadaptive_frequency\n\npython:str\n\nstr: Adaptive frequency.\n\nmax_delta\n\npython:str\n\nstr: Maximum delta S between adaptive passes.\n\noutput_variables\n\npython:dict{ python:str\n\npython:str }\n\ndict { str : str }: Map of output variable names to maximum delta S.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nAdaptiveFrequency.adaptive_frequency\n\nstr: Adaptive frequency.\n\nAdaptiveFrequency.max_delta\n\nstr: Maximum delta S between adaptive passes.\n\nAdaptiveFrequency.output_variables\n\ndict { str : str }: Map of output variable names to maximum delta S.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.nets",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.nets.html#nets",
        "title": "nets",
        "section": "nets",
        "text": "list of Net: List of nets in the net class.\nThis property is read-only.\nnets\nlist\nNet"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.nets",
        "href": "api/_autosummary/ansys.edb.core.net.extended_net.ExtendedNet.nets.html#ansys.edb.core.net.extended_net.ExtendedNet.nets",
        "title": "nets > nets > nets",
        "section": "nets > nets",
        "text": "property ExtendedNet.nets\n\nlist of Net: List of nets in the net class.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform.Transform.offset_y",
        "href": "api/_autosummary/ansys.edb.core.utility.transform.Transform.offset_y.html#offset_y",
        "title": "offset_y",
        "section": "offset_y",
        "text": "Value: Y offset property.\nThis property can be set to ValueLike.\noffset_y\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform.Transform.offset_y",
        "href": "api/_autosummary/ansys.edb.core.utility.transform.Transform.offset_y.html#ansys.edb.core.utility.transform.Transform.offset_y",
        "title": "offset_y > offset_y > offset_y",
        "section": "offset_y > offset_y",
        "text": "property Transform.offset_y\n\nValue: Y offset property.\n\nThis property can be set to ValueLike.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.triangle3d_data.Triangle3DData.point_1",
        "href": "api/_autosummary/ansys.edb.core.geometry.triangle3d_data.Triangle3DData.point_1.html#point_1",
        "title": "point_1",
        "section": "point_1",
        "text": "Point3DData: First 3D point.\npoint_1\nPoint3DData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.triangle3d_data.Triangle3DData.point_1",
        "href": "api/_autosummary/ansys.edb.core.geometry.triangle3d_data.Triangle3DData.point_1.html#ansys.edb.core.geometry.triangle3d_data.Triangle3DData.point_1",
        "title": "point_1 > point_1 > point_1",
        "section": "point_1 > point_1",
        "text": "property Triangle3DData.point_1\n\nPoint3DData: First 3D point.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.html#pinpairmodel",
        "title": "PinPairModel",
        "section": "PinPairModel",
        "text": "Represents a pin pair model object.\nPinPairModel.clone()\nClone a model.\nPinPairModel.create()\nCreate a pin pair model.\nPinPairModel.delete_rlc(pin_pair)\nDelete the RLC value for a pin pair.\nPinPairModel.pin_pairs()\nGet all pin pairs.\nPinPairModel.rlc(pin_pair)\nGet the RLC value for a pin pair.\nPinPairModel.set_rlc(pin_pair, rlc)\nSet the RLC value for a pin pair.\nPinPairModel.id\nint: Unique ID of the EDB object.\nPinPairModel.is_null\nbool: Flag indicating if the object exists in the database.\nPinPairModel.msg\nEDBObjMessage: Protobuf message that represents the object's ID.\nPinPairModel\nPinPairModel.clone\nPinPairModel.create\nPinPairModel.delete_rlc\nPinPairModel.pin_pairs\nPinPairModel.rlc\nPinPairModel.set_rlc\nPinPairModel.id\nint\nPinPairModel.is_null\nbool\nPinPairModel.msg\nEDBObjMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_pair_model.PinPairModel.html#ansys.edb.core.hierarchy.pin_pair_model.PinPairModel",
        "title": "PinPairModel > PinPairModel > PinPairModel",
        "section": "PinPairModel > PinPairModel",
        "text": "class ansys.edb.core.hierarchy.pin_pair_model.PinPairModel(msg)\n\nRepresents a pin pair model object.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nPinPairModel.clone()\n\nClone a model.\n\nPinPairModel.create()\n\nCreate a pin pair model.\n\nPinPairModel.delete_rlc(pin_pair)\n\nDelete the RLC value for a pin pair.\n\nPinPairModel.pin_pairs()\n\nGet all pin pairs.\n\nPinPairModel.rlc(pin_pair)\n\nGet the RLC value for a pin pair.\n\nPinPairModel.set_rlc(pin_pair, rlc)\n\nSet the RLC value for a pin pair.\n\n\n\nAttributes\n\n\n\n\n\n\n\nPinPairModel.id\n\nint: Unique ID of the EDB object.\n\nPinPairModel.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nPinPairModel.msg\n\nEDBObjMessage: Protobuf message that represents the object's ID.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Edge.is_null",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Edge.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.Edge.is_null",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.Edge.is_null.html#ansys.edb.core.terminal.terminals.Edge.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property Edge.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.edb_uid.html#edb_uid",
        "title": "edb_uid",
        "section": "edb_uid",
        "text": "int: Unique, persistent ID for the Connectable object.\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\nThis property is read-only.\nedb_uid\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.edb_uid.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.edb_uid",
        "title": "edb_uid > edb_uid > edb_uid",
        "section": "edb_uid > edb_uid",
        "text": "property TerminalInstanceTerminal.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.DrawOverride.WIREFRAME",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.DrawOverride.WIREFRAME.html#wireframe",
        "title": "WIREFRAME",
        "section": "WIREFRAME",
        "text": "WIREFRAME"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.DrawOverride.WIREFRAME",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.DrawOverride.WIREFRAME.html#ansys.edb.core.layer.layer.DrawOverride.WIREFRAME",
        "title": "WIREFRAME > WIREFRAME > WIREFRAME",
        "section": "WIREFRAME > WIREFRAME",
        "text": "DrawOverride.WIREFRAME = -1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollectionMode.OVERLAPPING",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollectionMode.OVERLAPPING.html#overlapping",
        "title": "OVERLAPPING",
        "section": "OVERLAPPING",
        "text": "OVERLAPPING"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollectionMode.OVERLAPPING",
        "href": "api/_autosummary/ansys.edb.core.layer.layer_collection.LayerCollectionMode.OVERLAPPING.html#ansys.edb.core.layer.layer_collection.LayerCollectionMode.OVERLAPPING",
        "title": "OVERLAPPING > OVERLAPPING > OVERLAPPING",
        "section": "OVERLAPPING > OVERLAPPING",
        "text": "LayerCollectionMode.OVERLAPPING = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.top_bottom_association",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.top_bottom_association.html#top_bottom_association",
        "title": "top_bottom_association",
        "section": "top_bottom_association",
        "text": "TopBottomAssociation: Top-bottom association of the layer.\ntop_bottom_association\nTopBottomAssociation"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.Layer.top_bottom_association",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.Layer.top_bottom_association.html#ansys.edb.core.layer.layer.Layer.top_bottom_association",
        "title": "top_bottom_association > top_bottom_association > top_bottom_association",
        "section": "top_bottom_association > top_bottom_association",
        "text": "property Layer.top_bottom_association\n\nTopBottomAssociation: Top-bottom association of the layer.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.is_ccw",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.is_ccw.html#is_ccw",
        "title": "is_ccw",
        "section": "is_ccw",
        "text": "Determine if the arc rotates counter-clockwise.\nTrue when the arc rotates counter-clockwise, False otherwise.\nis_ccw\nTrue\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.is_ccw",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.is_ccw.html#ansys.edb.core.geometry.arc_data.ArcData.is_ccw",
        "title": "is_ccw > is_ccw > is_ccw",
        "section": "is_ccw > is_ccw",
        "text": "ArcData.is_ccw()\n\nDetermine if the arc rotates counter-clockwise.\n\nReturns\n\nbool\n\nTrue when the arc rotates counter-clockwise, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.AdaptiveFrequency.max_delta",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.AdaptiveFrequency.max_delta.html#max_delta",
        "title": "max_delta",
        "section": "max_delta",
        "text": "str: Maximum delta S between adaptive passes.\nmax_delta\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.AdaptiveFrequency.max_delta",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.AdaptiveFrequency.max_delta.html#ansys.edb.core.simulation_setup.adaptive_solutions.AdaptiveFrequency.max_delta",
        "title": "max_delta > max_delta > max_delta",
        "section": "max_delta > max_delta",
        "text": "property AdaptiveFrequency.max_delta\n\nstr: Maximum delta S between adaptive passes.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.delete",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the layout object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.delete",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.delete.html#ansys.edb.core.hierarchy.inst_array.InstArray.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "InstArray.delete()\n\nDelete the layout object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.create_stride",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.create_stride.html#create_stride",
        "title": "create_stride",
        "section": "create_stride",
        "text": "Create a Stride model from an MCAD file.\nStride model created.\ncreate_stride\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.create_stride",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.pin_group.PinGroup.create_stride.html#ansys.edb.core.hierarchy.pin_group.PinGroup.create_stride",
        "title": "create_stride > create_stride > create_stride",
        "section": "create_stride > create_stride",
        "text": "PinGroup.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nReturns\n\nMcadModel\n\nStride model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.layer",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.layer.html#layer",
        "title": "layer",
        "section": "layer",
        "text": "Layer: Layer that the primitive object is on.\nlayer\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.layer",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.layer.html#ansys.edb.core.primitive.primitive.Circle.layer",
        "title": "layer > layer > layer",
        "section": "layer > layer",
        "text": "property Circle.layer\n\nLayer: Layer that the primitive object is on.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.center",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.center.html#center",
        "title": "center",
        "section": "center",
        "text": "PointData: Center point of the arc.\ncenter\nPointData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.center",
        "href": "api/_autosummary/ansys.edb.core.geometry.arc_data.ArcData.center.html#ansys.edb.core.geometry.arc_data.ArcData.center",
        "title": "center > center > center",
        "section": "center > center",
        "text": "property ArcData.center\n\nPointData: Center point of the arc.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents this object’s ID.\nThis property is read-only.\nmsg\nEDBObjMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings.msg.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SIWaveDCSettings.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property SIWaveDCSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object’s ID.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.PORT",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.PORT.html#port",
        "title": "PORT",
        "section": "PORT",
        "text": "PORT"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.PORT",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.BoundaryType.PORT.html#ansys.edb.core.terminal.terminals.BoundaryType.PORT",
        "title": "PORT > PORT > PORT",
        "section": "PORT > PORT",
        "text": "BoundaryType.PORT = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.members",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.members.html#members",
        "title": "members",
        "section": "members",
        "text": "list of Connectables: All group members.\nThis property is read-only.\nmembers\nlist"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.members",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.members.html#ansys.edb.core.hierarchy.via_group.ViaGroup.members",
        "title": "members > members > members",
        "section": "members > members",
        "text": "property ViaGroup.members\n\nlist of Connectables: All group members.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.defeature_ratio",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.defeature_ratio.html#defeature_ratio",
        "title": "defeature_ratio",
        "section": "defeature_ratio",
        "text": "float: Extent ratio used as tolerance when defeaturing polygons.\ndefeature_ratio\nfloat"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.defeature_ratio",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.defeature_ratio.html#ansys.edb.core.simulation_setup.simulation_settings.AdvancedSettings.defeature_ratio",
        "title": "defeature_ratio > defeature_ratio > defeature_ratio",
        "section": "defeature_ratio > defeature_ratio",
        "text": "property AdvancedSettings.defeature_ratio\n\nfloat: Extent ratio used as tolerance when defeaturing polygons.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.name",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the bondwire definition.\nThis property is read-only.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.name",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.name.html#ansys.edb.core.definition.bondwire_def.ApdBondwireDef.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property ApdBondwireDef.name\n\nstr: Name of the bondwire definition.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform.Transform.offset_x",
        "href": "api/_autosummary/ansys.edb.core.utility.transform.Transform.offset_x.html#offset_x",
        "title": "offset_x",
        "section": "offset_x",
        "text": "Value: X offset property.\nThis property can be set to ValueLike.\noffset_x\nValue"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform.Transform.offset_x",
        "href": "api/_autosummary/ansys.edb.core.utility.transform.Transform.offset_x.html#ansys.edb.core.utility.transform.Transform.offset_x",
        "title": "offset_x > offset_x > offset_x",
        "section": "offset_x > offset_x",
        "text": "property Transform.offset_x\n\nValue: X offset property.\n\nThis property can be set to ValueLike.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.data",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.data.html#data",
        "title": "data",
        "section": "data",
        "text": "PadstackDefData:         Data for the padstack definition.\ndata\nPadstackDefData"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.data",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def.PadstackDef.data.html#ansys.edb.core.definition.padstack_def.PadstackDef.data",
        "title": "data > data > data",
        "section": "data > data",
        "text": "property PadstackDef.data\n\nPadstackDefData:         Data for the padstack definition.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.MeshOperation.name",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.MeshOperation.name.html#name",
        "title": "name",
        "section": "name",
        "text": "str: Name of the mesh operation.\nname\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.MeshOperation.name",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.mesh_operation.MeshOperation.name.html#ansys.edb.core.simulation_setup.mesh_operation.MeshOperation.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property MeshOperation.name\n\nstr: Name of the mesh operation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.is_mcad_stride.html#is_mcad_stride",
        "title": "is_mcad_stride",
        "section": "is_mcad_stride",
        "text": "bool: Flag indicating if this is a Stride MCAD model.\nThis property is read-only.\nis_mcad_stride\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.is_mcad_stride",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.inst_array.InstArray.is_mcad_stride.html#ansys.edb.core.hierarchy.inst_array.InstArray.is_mcad_stride",
        "title": "is_mcad_stride > is_mcad_stride > is_mcad_stride",
        "section": "is_mcad_stride > is_mcad_stride",
        "text": "property InstArray.is_mcad_stride\n\nbool: Flag indicating if this is a Stride MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.msg",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.msg",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Text.msg.html#ansys.edb.core.primitive.primitive.Text.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property Text.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_extract_floating_metals_floating",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_extract_floating_metals_floating.html#use_extract_floating_metals_floating",
        "title": "use_extract_floating_metals_floating",
        "section": "use_extract_floating_metals_floating",
        "text": "bool: Flag indicating if floating metals are modeled as floating nets.\nuse_extract_floating_metals_floating\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_extract_floating_metals_floating",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_extract_floating_metals_floating.html#ansys.edb.core.simulation_setup.raptor_x_simulation_settings.RaptorXAdvancedSettings.use_extract_floating_metals_floating",
        "title": "use_extract_floating_metals_floating > use_extract_floating_metals_floating > use_extract_floating_metals_floating",
        "section": "use_extract_floating_metals_floating > use_extract_floating_metals_floating",
        "text": "property RaptorXAdvancedSettings.use_extract_floating_metals_floating\n\nbool: Flag indicating if floating metals are modeled as floating nets.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.product_solver_names",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.product_solver_names.html#product_solver_names",
        "title": "product_solver_names",
        "section": "product_solver_names",
        "text": "Get the list of solver names.\nID of the product.\nproduct_solver_names\nProductIdType\npython:list\nof\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.product_solver_names",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.product_solver_names.html#ansys.edb.core.terminal.terminals.EdgeTerminal.product_solver_names",
        "title": "product_solver_names > product_solver_names > product_solver_names",
        "section": "product_solver_names > product_solver_names",
        "text": "EdgeTerminal.product_solver_names(product_id)\n\nGet the list of solver names.\n\nParameters\n\nproduct_id\n\nProductIdType\n\nID of the product.\n\nReturns\n\npython:list of python:str\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.add_net",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.add_net.html#add_net",
        "title": "add_net",
        "section": "add_net",
        "text": "Add a net.\nThis method is invalid for a differential pair. Use\nansys.edb.core.net.differential_pair.DifferentialPair = (pos_net, neg_net) instead.\nadd_net\nansys.edb.core.net.differential_pair.DifferentialPair"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.add_net",
        "href": "api/_autosummary/ansys.edb.core.net.differential_pair.DifferentialPair.add_net.html#ansys.edb.core.net.differential_pair.DifferentialPair.add_net",
        "title": "add_net > add_net > add_net",
        "section": "add_net > add_net",
        "text": "DifferentialPair.add_net(net)\n\nAdd a net.\n\nThis method is invalid for a differential pair. Use\nansys.edb.core.net.differential_pair.DifferentialPair = (pos_net, neg_net) instead.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.SingleFrequencyAdaptiveSolution",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.SingleFrequencyAdaptiveSolution.html#singlefrequencyadaptivesolution",
        "title": "SingleFrequencyAdaptiveSolution",
        "section": "SingleFrequencyAdaptiveSolution",
        "text": "Represents a single frequency adaptive solution.\nstr: Adaptive frequency.\nstr: Maximum delta S between adaptive passes.\nint: Maximum number of adaptive passes.\nMatrixConvergenceData: Matrix convergence data.\nbool: Flag indicating whether matrix convergence data is used.\nSingleFrequencyAdaptiveSolution.adaptive_frequency\nstr: Adaptive frequency.\nSingleFrequencyAdaptiveSolution.max_delta\nstr: Maximum delta S between adaptive passes.\nSingleFrequencyAdaptiveSolution.max_passes\nint: Maximum number of adaptive passes.\nSingleFrequencyAdaptiveSolution.mx_conv_data\nMatrixConvergenceData: Matrix convergence data.\nSingleFrequencyAdaptiveSolution.use_mx_conv_data\nbool: Flag indicating whether matrix convergence data is used.\nSingleFrequencyAdaptiveSolution\nadaptive_frequency\npython:str\nstr\nmax_delta\npython:str\nstr\nmax_passes\npython:int\nint\nmx_conv_data\nMatrixConvergenceData\nMatrixConvergenceData\nuse_mx_conv_data\nbool\nSingleFrequencyAdaptiveSolution.adaptive_frequency\nstr\nSingleFrequencyAdaptiveSolution.max_delta\nstr\nSingleFrequencyAdaptiveSolution.max_passes\nint\nSingleFrequencyAdaptiveSolution.mx_conv_data\nMatrixConvergenceData\nSingleFrequencyAdaptiveSolution.use_mx_conv_data\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.SingleFrequencyAdaptiveSolution",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.adaptive_solutions.SingleFrequencyAdaptiveSolution.html#ansys.edb.core.simulation_setup.adaptive_solutions.SingleFrequencyAdaptiveSolution",
        "title": "SingleFrequencyAdaptiveSolution > SingleFrequencyAdaptiveSolution > SingleFrequencyAdaptiveSolution",
        "section": "SingleFrequencyAdaptiveSolution > SingleFrequencyAdaptiveSolution",
        "text": "class ansys.edb.core.simulation_setup.adaptive_solutions.SingleFrequencyAdaptiveSolution(adaptive_frequency='5GHz', max_delta='0.02', max_passes=10, mx_conv_data=None, use_mx_conv_data=False)\n\nRepresents a single frequency adaptive solution.\n\nAttributes\n\nadaptive_frequency\n\npython:str\n\nstr: Adaptive frequency.\n\nmax_delta\n\npython:str\n\nstr: Maximum delta S between adaptive passes.\n\nmax_passes\n\npython:int\n\nint: Maximum number of adaptive passes.\n\nmx_conv_data\n\nMatrixConvergenceData\n\nMatrixConvergenceData: Matrix convergence data.\n\nuse_mx_conv_data\n\nbool\n\nbool: Flag indicating whether matrix convergence data is used.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nSingleFrequencyAdaptiveSolution.adaptive_frequency\n\nstr: Adaptive frequency.\n\nSingleFrequencyAdaptiveSolution.max_delta\n\nstr: Maximum delta S between adaptive passes.\n\nSingleFrequencyAdaptiveSolution.max_passes\n\nint: Maximum number of adaptive passes.\n\nSingleFrequencyAdaptiveSolution.mx_conv_data\n\nMatrixConvergenceData: Matrix convergence data.\n\nSingleFrequencyAdaptiveSolution.use_mx_conv_data\n\nbool: Flag indicating whether matrix convergence data is used.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.is_null",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.is_null",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.is_null.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property ComponentGroup.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.placement_layer",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.placement_layer.html#placement_layer",
        "title": "placement_layer",
        "section": "placement_layer",
        "text": "Layer: Placement layer for the hierarchy object.\nplacement_layer\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.placement_layer",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.placement_layer.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.placement_layer",
        "title": "placement_layer > placement_layer > placement_layer",
        "section": "placement_layer > placement_layer",
        "text": "property CellInstance.placement_layer\n\nLayer: Placement layer for the hierarchy object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.edb_uid.html#edb_uid",
        "title": "edb_uid",
        "section": "edb_uid",
        "text": "int: Unique, persistent ID for the Connectable object.\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\nThis property is read-only.\nedb_uid\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.edb_uid.html#ansys.edb.core.primitive.primitive.Rectangle.edb_uid",
        "title": "edb_uid > edb_uid > edb_uid",
        "section": "edb_uid > edb_uid",
        "text": "property Rectangle.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.edb_uid.html#edb_uid",
        "title": "edb_uid",
        "section": "edb_uid",
        "text": "int: Unique, persistent ID for the Connectable object.\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\nThis property is read-only.\nedb_uid\nint"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.edb_uid",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.edb_uid.html#ansys.edb.core.hierarchy.via_group.ViaGroup.edb_uid",
        "title": "edb_uid > edb_uid > edb_uid",
        "section": "edb_uid > edb_uid",
        "text": "property ViaGroup.edb_uid\n\nint: Unique, persistent ID for the Connectable object.\n\nThis ID is unique across all Connectable objects in the cell and persistent across closing and         reopening the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.delete",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the layout object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.delete",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.delete.html#ansys.edb.core.terminal.terminals.TerminalInstanceTerminal.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "TerminalInstanceTerminal.delete()\n\nDelete the layout object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_parameterized",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_parameterized.html#is_parameterized",
        "title": "is_parameterized",
        "section": "is_parameterized",
        "text": "bool: Whether the primitive is parametrized.\nThis property is read-only.\nis_parameterized\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_parameterized",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Circle.is_parameterized.html#ansys.edb.core.primitive.primitive.Circle.is_parameterized",
        "title": "is_parameterized > is_parameterized > is_parameterized",
        "section": "is_parameterized > is_parameterized",
        "text": "property Circle.is_parameterized\n\nbool: Whether the primitive is parametrized.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.is_null",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.is_null",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.is_null.html#ansys.edb.core.simulation_setup.raptor_x_simulation_setup.RaptorXSimulationSetup.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property RaptorXSimulationSetup.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.enabled",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.enabled.html#enabled",
        "title": "enabled",
        "section": "enabled",
        "text": "bool: Flag indicating if the simulation setup is enabled.\nenabled\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.enabled",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.enabled.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSimulationSettings.enabled",
        "title": "enabled > enabled > enabled",
        "section": "enabled > enabled",
        "text": "property HFSSSimulationSettings.enabled\n\nbool: Flag indicating if the simulation setup is enabled.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.HfssPIType",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.HfssPIType.html#hfsspitype",
        "title": "HfssPIType",
        "section": "HfssPIType",
        "text": "Provides an enum representing HFSS PI types.\nHfssPIType.DEFAULT\n\nHfssPIType.COAXIAL_OPEN\n\nHfssPIType.COAXIAL_SHORTENED\n\nHfssPIType.GAP\n\nHfssPIType.LUMPED\n\nHfssPIType\nHfssPIType.DEFAULT\nHfssPIType.COAXIAL_OPEN\nHfssPIType.COAXIAL_SHORTENED\nHfssPIType.GAP\nHfssPIType.LUMPED"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.HfssPIType",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.HfssPIType.html#ansys.edb.core.terminal.terminals.HfssPIType",
        "title": "HfssPIType > HfssPIType > HfssPIType",
        "section": "HfssPIType > HfssPIType",
        "text": "class ansys.edb.core.terminal.terminals.HfssPIType(value)\n\nProvides an enum representing HFSS PI types.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nHfssPIType.DEFAULT\n\n\n\nHfssPIType.COAXIAL_OPEN\n\n\n\nHfssPIType.COAXIAL_SHORTENED\n\n\n\nHfssPIType.GAP\n\n\n\nHfssPIType.LUMPED\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.layout",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.layout.html#layout",
        "title": "layout",
        "section": "layout",
        "text": "Layout: Layout owning the object.\nThis property is read-only.\nlayout\nLayout"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.layout",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.cell_instance.CellInstance.layout.html#ansys.edb.core.hierarchy.cell_instance.CellInstance.layout",
        "title": "layout > layout > layout",
        "section": "layout > layout",
        "text": "property CellInstance.layout\n\nLayout: Layout owning the object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.msg",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.msg",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.component_group.ComponentGroup.msg.html#ansys.edb.core.hierarchy.component_group.ComponentGroup.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property ComponentGroup.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.magnitude",
        "href": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.magnitude.html#magnitude",
        "title": "magnitude",
        "section": "magnitude",
        "text": "Get the magnitude of the point vector.\nMagnitude of the point vector.\nmagnitude\npython:float"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.magnitude",
        "href": "api/_autosummary/ansys.edb.core.geometry.point_data.PointData.magnitude.html#ansys.edb.core.geometry.point_data.PointData.magnitude",
        "title": "magnitude > magnitude > magnitude",
        "section": "magnitude > magnitude",
        "text": "PointData.magnitude()\n\nGet the magnitude of the point vector.\n\nReturns\n\npython:float\n\nMagnitude of the point vector.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.PERMITTIVITY",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.PERMITTIVITY.html#permittivity",
        "title": "PERMITTIVITY",
        "section": "PERMITTIVITY",
        "text": "PERMITTIVITY"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.PERMITTIVITY",
        "href": "api/_autosummary/ansys.edb.core.definition.material_def.MaterialProperty.PERMITTIVITY.html#ansys.edb.core.definition.material_def.MaterialProperty.PERMITTIVITY",
        "title": "PERMITTIVITY > PERMITTIVITY > PERMITTIVITY",
        "section": "PERMITTIVITY > PERMITTIVITY",
        "text": "MaterialProperty.PERMITTIVITY = 3\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.part_count",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.part_count.html#part_count",
        "title": "part_count",
        "section": "part_count",
        "text": "Get the MCAD model part count.\nMCAD model part count.\npart_count\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.part_count",
        "href": "api/_autosummary/ansys.edb.core.layout.mcad_model.McadModel.part_count.html#ansys.edb.core.layout.mcad_model.McadModel.part_count",
        "title": "part_count > part_count > part_count",
        "section": "part_count > part_count",
        "text": "McadModel.part_count()\n\nGet the MCAD model part count.\n\nReturns\n\npython:int\n\nMCAD model part count.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.settings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.settings.html#settings",
        "title": "settings",
        "section": "settings",
        "text": "SIWaveSimulationSettings: Simulation settings of the simulation setup.\nsettings\nSIWaveSimulationSettings"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.settings",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.settings.html#ansys.edb.core.simulation_setup.siwave_dcir_simulation_setup.SIWaveDCIRSimulationSetup.settings",
        "title": "settings > settings > settings",
        "section": "settings > settings",
        "text": "property SIWaveDCIRSimulationSetup.settings\n\nSIWaveSimulationSettings: Simulation settings of the simulation setup.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge.cast",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge.cast.html#cast",
        "title": "cast",
        "section": "cast",
        "text": "Cast the base edge object to the correct subclass, if possible.\ncast\nEdge"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge.cast",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PrimitiveEdge.cast.html#ansys.edb.core.terminal.terminals.PrimitiveEdge.cast",
        "title": "cast > cast > cast",
        "section": "cast > cast",
        "text": "PrimitiveEdge.cast()\n\nCast the base edge object to the correct subclass, if possible.\n\nReturns\n\nEdge\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamInterpolation.STEP_IN",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamInterpolation.STEP_IN.html#step_in",
        "title": "STEP_IN",
        "section": "STEP_IN",
        "text": "STEP_IN"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamInterpolation.STEP_IN",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamInterpolation.STEP_IN.html#ansys.edb.core.simulation_setup.siwave_simulation_settings.SParamInterpolation.STEP_IN",
        "title": "STEP_IN > STEP_IN > STEP_IN",
        "section": "STEP_IN > STEP_IN",
        "text": "SParamInterpolation.STEP_IN = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.component",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.component.html#component",
        "title": "component",
        "section": "component",
        "text": "ComponentGroup:         Component of the Connectable object.\ncomponent\nComponentGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.component",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.component.html#ansys.edb.core.terminal.terminals.EdgeTerminal.component",
        "title": "component > component > component",
        "section": "component > component",
        "text": "property EdgeTerminal.component\n\nComponentGroup:         Component of the Connectable object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.is_null",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.is_null",
        "href": "api/_autosummary/ansys.edb.core.net.net_class.NetClass.is_null.html#ansys.edb.core.net.net_class.NetClass.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property NetClass.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.id",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.id",
        "href": "api/_autosummary/ansys.edb.core.layer.via_layer.ViaLayer.id.html#ansys.edb.core.layer.via_layer.ViaLayer.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property ViaLayer.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap.msg",
        "href": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents the object’s ID.\nThis property can only be set to None.\nmsg\nEDBObjMessage\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap.msg",
        "href": "api/_autosummary/ansys.edb.core.utility.layer_map.LayerMap.msg.html#ansys.edb.core.utility.layer_map.LayerMap.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property LayerMap.msg\n\nEDBObjMessage: Protobuf message that represents the object’s ID.\n\nThis property can only be set to None.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings.msg.html#msg",
        "title": "msg",
        "section": "msg",
        "text": "EDBObjMessage: Protobuf message that represents this object’s ID.\nThis property is read-only.\nmsg\nEDBObjMessage"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings.msg",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings.msg.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSDCRSettings.msg",
        "title": "msg > msg > msg",
        "section": "msg > msg",
        "text": "property HFSSDCRSettings.msg\n\nEDBObjMessage: Protobuf message that represents this object’s ID.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.layout_obj_type.html#layout_obj_type",
        "title": "layout_obj_type",
        "section": "layout_obj_type",
        "text": "layout_obj_type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.layout_obj_type.html#ansys.edb.core.terminal.terminals.PadstackInstanceTerminal.layout_obj_type",
        "title": "layout_obj_type > layout_obj_type > layout_obj_type",
        "section": "layout_obj_type > layout_obj_type",
        "text": "PadstackInstanceTerminal.layout_obj_type = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.create_stride",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.create_stride.html#create_stride",
        "title": "create_stride",
        "section": "create_stride",
        "text": "Create a Stride model from an MCAD file.\nStride model created.\ncreate_stride\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.create_stride",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.create_stride.html#ansys.edb.core.hierarchy.via_group.ViaGroup.create_stride",
        "title": "create_stride > create_stride > create_stride",
        "section": "create_stride > create_stride",
        "text": "ViaGroup.create_stride()\n\nCreate a Stride model from an MCAD file.\n\nReturns\n\nMcadModel\n\nStride model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.id",
        "href": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.id",
        "href": "api/_autosummary/ansys.edb.core.definition.dataset_def.DatasetDef.id.html#ansys.edb.core.definition.dataset_def.DatasetDef.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property DatasetDef.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/geometry",
        "href": "api/geometry.html#geometry",
        "title": "Geometry",
        "section": "Geometry",
        "text": "Geometry"
    },
    {
        "objectID": "api/geometry",
        "href": "api/geometry.html#classes",
        "title": "Geometry > Classes",
        "section": "Classes",
        "text": "arc_data.ArcData(start, end, **kwargs)\nRepresents arc data.\nr_tree.RTree(msg)\nProvides the base RTree class.\npolygon_data.PolygonData([points, arcs, ...])\nRepresents a polygon data object.\npoint_data.PointData(*data)\nRepresents arbitrary (x, y) coordinates that exist on a 2D space.\npoint3d_data.Point3DData(x, y, z)\nRepresents a point on a 3D coordinate system.\ntriangle3d_data.Triangle3DData(point_1, ...)\nRepresents a triangle defined by three 3D points.\nClasses\narc_data.ArcData\nr_tree.RTree\npolygon_data.PolygonData\npoint_data.PointData\npoint3d_data.Point3DData\ntriangle3d_data.Triangle3DData"
    },
    {
        "objectID": "api/geometry",
        "href": "api/geometry.html#enums",
        "title": "Geometry > Enums",
        "section": "Enums",
        "text": "polygon_data.ExtentType(value)\nProvides an enum representing extent types for geometries.\npolygon_data.PolygonSenseType(value)\nProvides an enum representing the direction of polygon sense.\nEnums\npolygon_data.ExtentType\npolygon_data.PolygonSenseType"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.connected_geometry",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.connected_geometry.html#connected_geometry",
        "title": "connected_geometry",
        "section": "connected_geometry",
        "text": "Find the connected geometries.\nIf a connections exists, the provided RTree object is returned in the connected list.\nR-tree data object with index in this form: (polygon, id pair).\nWhether to increment the visit counter for items returned in the connected list.\nList of connected geometries.\nconnected_geometry\nRTreeObj\n(polygon, id pair)\nlist\nof\nRTreeObj"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.connected_geometry",
        "href": "api/_autosummary/ansys.edb.core.geometry.r_tree.RTree.connected_geometry.html#ansys.edb.core.geometry.r_tree.RTree.connected_geometry",
        "title": "connected_geometry > connected_geometry > connected_geometry",
        "section": "connected_geometry > connected_geometry",
        "text": "RTree.connected_geometry(rtree_obj, increment_visit)\n\nFind the connected geometries.\n\nIf a connections exists, the provided RTree object is returned in the connected list.\n\nParameters\n\nrtree_obj\n\nRTreeObj\n\nR-tree data object with index in this form: (polygon, id pair).\n\nincrement_visit: bool\n\nWhether to increment the visit counter for items returned in the connected list.\n\nReturns\n\nlist of RTreeObj\n\nList of connected geometries.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.transform",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.transform.html#transform",
        "title": "transform",
        "section": "transform",
        "text": "Transform:         Transformation information of the hierarchy object.\ntransform\nTransform"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.transform",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.via_group.ViaGroup.transform.html#ansys.edb.core.hierarchy.via_group.ViaGroup.transform",
        "title": "transform > transform > transform",
        "section": "transform > transform",
        "text": "property ViaGroup.transform\n\nTransform:         Transformation information of the hierarchy object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.layout_obj_type.html#layout_obj_type",
        "title": "layout_obj_type",
        "section": "layout_obj_type",
        "text": "layout_obj_type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Rectangle.layout_obj_type.html#ansys.edb.core.primitive.primitive.Rectangle.layout_obj_type",
        "title": "layout_obj_type > layout_obj_type > layout_obj_type",
        "section": "layout_obj_type > layout_obj_type",
        "text": "Rectangle.layout_obj_type = 0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.TopBottomAssociation",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.TopBottomAssociation.html#topbottomassociation",
        "title": "TopBottomAssociation",
        "section": "TopBottomAssociation",
        "text": "Provides an enum representing the top-bottom association of layers.\nTopBottomAssociation.TOP_ASSOCIATED\n\nTopBottomAssociation.NO_TOP_BOTTOM_ASSOCIATED\n\nTopBottomAssociation.BOTTOM_ASSOCIATED\n\nTopBottomAssociation.TOP_BOTTOM_ASSOCIATION_COUNT\n\nTopBottomAssociation.INVALID_TOP_BOTTOM_ASSOCIATION\n\nTopBottomAssociation\nTopBottomAssociation.TOP_ASSOCIATED\nTopBottomAssociation.NO_TOP_BOTTOM_ASSOCIATED\nTopBottomAssociation.BOTTOM_ASSOCIATED\nTopBottomAssociation.TOP_BOTTOM_ASSOCIATION_COUNT\nTopBottomAssociation.INVALID_TOP_BOTTOM_ASSOCIATION"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.layer.TopBottomAssociation",
        "href": "api/_autosummary/ansys.edb.core.layer.layer.TopBottomAssociation.html#ansys.edb.core.layer.layer.TopBottomAssociation",
        "title": "TopBottomAssociation > TopBottomAssociation > TopBottomAssociation",
        "section": "TopBottomAssociation > TopBottomAssociation",
        "text": "class ansys.edb.core.layer.layer.TopBottomAssociation(value)\n\nProvides an enum representing the top-bottom association of layers.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nTopBottomAssociation.TOP_ASSOCIATED\n\n\n\nTopBottomAssociation.NO_TOP_BOTTOM_ASSOCIATED\n\n\n\nTopBottomAssociation.BOTTOM_ASSOCIATED\n\n\n\nTopBottomAssociation.TOP_BOTTOM_ASSOCIATION_COUNT\n\n\n\nTopBottomAssociation.INVALID_TOP_BOTTOM_ASSOCIATION\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.unite_primitives",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.unite_primitives.html#unite_primitives",
        "title": "unite_primitives",
        "section": "unite_primitives",
        "text": "Unite primitives on a layer.\nLayer to unite primitives on.\nunite_primitives\npython:str\nLayer"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.unite_primitives",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.unite_primitives.html#ansys.edb.core.layout.layout.Layout.unite_primitives",
        "title": "unite_primitives > unite_primitives > unite_primitives",
        "section": "unite_primitives > unite_primitives",
        "text": "Layout.unite_primitives(layer)\n\nUnite primitives on a layer.\n\nParameters\n\nlayer\n\npython:str or Layer\n\nLayer to unite primitives on.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.create",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a SPICE model.\nName of the SPICE model file.\nPath to the SPICE model file.\nSubcircuit name of the SPICE model.\ncreate\npython:str\npython:str\npython:str"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.create",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.spice_model.SPICEModel.create.html#ansys.edb.core.hierarchy.spice_model.SPICEModel.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod SPICEModel.create(name, path, sub_circuit)\n\nCreate a SPICE model.\n\nParameters\n\nname\n\npython:str\n\nName of the SPICE model file.\n\npath\n\npython:str\n\nPath to the SPICE model file.\n\nsub_circuit\n\npython:str\n\nSubcircuit name of the SPICE model.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.is_null.html#is_null",
        "title": "is_null",
        "section": "is_null",
        "text": "bool: Flag indicating if the object exists in the database.\nThis property is read-only.\nis_null\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.is_null",
        "href": "api/_autosummary/ansys.edb.core.definition.padstack_def_data.PadstackDefData.is_null.html#ansys.edb.core.definition.padstack_def_data.PadstackDefData.is_null",
        "title": "is_null > is_null > is_null",
        "section": "is_null > is_null",
        "text": "property PadstackDefData.is_null\n\nbool: Flag indicating if the object exists in the database.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier.create",
        "href": "api/_autosummary/ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier.create.html#create",
        "title": "create",
        "section": "create",
        "text": "Create a material property thermal modifier.\nBasic parameters needed for the thermal modifier.\nAdvanced parameeteres needed for the thermal modifier.\nMaterial property thermal modifier created.\ncreate\nBasicQuadraticParams\npython:None\nAdvancedQuadraticParams\npython:None\nMaterialPropertyThermalModifier"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier.create",
        "href": "api/_autosummary/ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier.create.html#ansys.edb.core.definition.material_property_thermal_modifier.MaterialPropertyThermalModifier.create",
        "title": "create > create > create",
        "section": "create > create",
        "text": "classmethod MaterialPropertyThermalModifier.create(basic_quadratic_params=None, advanced_quadratic_params=None)\n\nCreate a material property thermal modifier.\n\nParameters\n\nbasic_quadratic_params\n\nBasicQuadraticParams, default: python:None\n\nBasic parameters needed for the thermal modifier.\n\nadvanced_quadratic_params\n\nAdvancedQuadraticParams, default: python:None\n\nAdvanced parameeteres needed for the thermal modifier.\n\nReturns\n\nMaterialPropertyThermalModifier\n\nMaterial property thermal modifier created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_mcad_hfss.html#is_mcad_hfss",
        "title": "is_mcad_hfss",
        "section": "is_mcad_hfss",
        "text": "bool: Flag indicating if this is an HFSS MCAD model.\nThis property is read-only.\nis_mcad_hfss\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_mcad_hfss",
        "href": "api/_autosummary/ansys.edb.core.primitive.primitive.Primitive.is_mcad_hfss.html#ansys.edb.core.primitive.primitive.Primitive.is_mcad_hfss",
        "title": "is_mcad_hfss > is_mcad_hfss > is_mcad_hfss",
        "section": "is_mcad_hfss > is_mcad_hfss",
        "text": "property Primitive.is_mcad_hfss\n\nbool: Flag indicating if this is an HFSS MCAD model.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.port_property",
        "href": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.port_property.html#port_property",
        "title": "port_property",
        "section": "port_property",
        "text": "PortProperty: Port property.\nA copy is returned. Use the setter for any modifications to be reflected.\nport_property\nPortProperty"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.port_property",
        "href": "api/_autosummary/ansys.edb.core.definition.ic_component_property.ICComponentProperty.port_property.html#ansys.edb.core.definition.ic_component_property.ICComponentProperty.port_property",
        "title": "port_property > port_property > port_property",
        "section": "port_property > port_property",
        "text": "property ICComponentProperty.port_property\n\nPortProperty: Port property.\n\nA copy is returned. Use the setter for any modifications to be reflected.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.set_triangles_for_wave_port",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.set_triangles_for_wave_port.html#set_triangles_for_wave_port",
        "title": "set_triangles_for_wave_port",
        "section": "set_triangles_for_wave_port",
        "text": "bool: Flag indicating ifthe minimum and maximum triangle values for waveports are used.\nset_triangles_for_wave_port\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.set_triangles_for_wave_port",
        "href": "api/_autosummary/ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.set_triangles_for_wave_port.html#ansys.edb.core.simulation_setup.hfss_simulation_settings.HFSSSolverSettings.set_triangles_for_wave_port",
        "title": "set_triangles_for_wave_port > set_triangles_for_wave_port > set_triangles_for_wave_port",
        "section": "set_triangles_for_wave_port > set_triangles_for_wave_port",
        "text": "property HFSSSolverSettings.set_triangles_for_wave_port\n\nbool: Flag indicating ifthe minimum and maximum triangle values for waveports are used.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.use_reference_from_hierarchy",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.use_reference_from_hierarchy.html#use_reference_from_hierarchy",
        "title": "use_reference_from_hierarchy",
        "section": "use_reference_from_hierarchy",
        "text": "bool: Flag indicating if the terminal can use references from the hierarchy.\nuse_reference_from_hierarchy\nbool"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.use_reference_from_hierarchy",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.PinGroupTerminal.use_reference_from_hierarchy.html#ansys.edb.core.terminal.terminals.PinGroupTerminal.use_reference_from_hierarchy",
        "title": "use_reference_from_hierarchy > use_reference_from_hierarchy > use_reference_from_hierarchy",
        "section": "use_reference_from_hierarchy > use_reference_from_hierarchy",
        "text": "property PinGroupTerminal.use_reference_from_hierarchy\n\nbool: Flag indicating if the terminal can use references from the hierarchy.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.create_stride",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.create_stride.html#create_stride",
        "title": "create_stride",
        "section": "create_stride",
        "text": "Create a Stride model from an MCAD file.\nAbsolute path of the MCAD file.\nStride model created.\ncreate_stride\npython:str\nMcadModel"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.layout.Layout.create_stride",
        "href": "api/_autosummary/ansys.edb.core.layout.layout.Layout.create_stride.html#ansys.edb.core.layout.layout.Layout.create_stride",
        "title": "create_stride > create_stride > create_stride",
        "section": "create_stride > create_stride",
        "text": "Layout.create_stride(filename)\n\nCreate a Stride model from an MCAD file.\n\nParameters\n\nfilename\n\npython:str\n\nAbsolute path of the MCAD file.\n\nReturns\n\nMcadModel\n\nStride model created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.id",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.id.html#id",
        "title": "id",
        "section": "id",
        "text": "int: Unique ID of the EDB object.\nA 0 indicates an invalid object.\nThis property is read-only.\nid\nint\n0"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.id",
        "href": "api/_autosummary/ansys.edb.core.definition.bondwire_def.ApdBondwireDef.id.html#ansys.edb.core.definition.bondwire_def.ApdBondwireDef.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property ApdBondwireDef.id\n\nint: Unique ID of the EDB object.\n\nA 0 indicates an invalid object.\n\nThis property is read-only.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_from_transform_2d",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_from_transform_2d.html#create_from_transform_2d",
        "title": "create_from_transform_2d",
        "section": "create_from_transform_2d",
        "text": "Create a 3D transformation with transform data.\nTransform data.\nZ offset.\ncreate_from_transform_2d\nTransform\nfloat\nTransform3D"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_from_transform_2d",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_from_transform_2d.html#ansys.edb.core.utility.transform3d.Transform3D.create_from_transform_2d",
        "title": "create_from_transform_2d > create_from_transform_2d > create_from_transform_2d",
        "section": "create_from_transform_2d > create_from_transform_2d",
        "text": "classmethod Transform3D.create_from_transform_2d(transform, z_off)\n\nCreate a 3D transformation with transform data.\n\nParameters\n\ntransform\n\nTransform\n\nTransform data.\n\nz_off\n\nfloat\n\nZ offset.\n\nReturns\n\nTransform3D\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.find_by_id.html#find_by_id",
        "title": "find_by_id",
        "section": "find_by_id",
        "text": "Find a Connectable object by database ID in a given layout.\nLayout to search for the Connectable object.\nDatabase ID.\nConnectable object with the given database ID.\nfind_by_id\nLayout\npython:int"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.find_by_id",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.VoltageRegulator.find_by_id.html#ansys.edb.core.layout.voltage_regulator.VoltageRegulator.find_by_id",
        "title": "find_by_id > find_by_id > find_by_id",
        "section": "find_by_id > find_by_id",
        "text": "classmethod VoltageRegulator.find_by_id(layout, uid)\n\nFind a Connectable object by database ID in a given layout.\n\nParameters\n\nlayout\n\nLayout\n\nLayout to search for the Connectable object.\n\nuid\n\npython:int\n\nDatabase ID.\n\nReturns\n\nConnectable\n\nConnectable object with the given database ID.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_from_angle",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_from_angle.html#create_from_angle",
        "title": "create_from_angle",
        "section": "create_from_angle",
        "text": "Create a 3D transformation from ZYX decomposition.\nZYX decomposition.\ncreate_from_angle\nTransform3D"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_from_angle",
        "href": "api/_autosummary/ansys.edb.core.utility.transform3d.Transform3D.create_from_angle.html#ansys.edb.core.utility.transform3d.Transform3D.create_from_angle",
        "title": "create_from_angle > create_from_angle > create_from_angle",
        "section": "create_from_angle > create_from_angle",
        "text": "classmethod Transform3D.create_from_angle(zyx_decomposition)\n\nCreate a 3D transformation from ZYX decomposition.\n\nParameters\n\nzyx_decomposition\n\nPoint3DLike\n\nZYX decomposition.\n\nReturns\n\nTransform3D\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.add_member",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.add_member.html#add_member",
        "title": "add_member",
        "section": "add_member",
        "text": "Add an object to the group.\nObject to add to the group.\nadd_member"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.add_member",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.add_member.html#ansys.edb.core.hierarchy.group.Group.add_member",
        "title": "add_member > add_member > add_member",
        "section": "add_member > add_member",
        "text": "Group.add_member(member)\n\nAdd an object to the group.\n\nParameters\n\nmember\n\nConnectable\n\nObject to add to the group.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.draw_override",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.draw_override.html#draw_override",
        "title": "draw_override",
        "section": "draw_override",
        "text": "DrawOverride: Draw override of the layer.\ndraw_override\nDrawOverride"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.draw_override",
        "href": "api/_autosummary/ansys.edb.core.layer.stackup_layer.StackupLayer.draw_override.html#ansys.edb.core.layer.stackup_layer.StackupLayer.draw_override",
        "title": "draw_override > draw_override > draw_override",
        "section": "draw_override > draw_override",
        "text": "property StackupLayer.draw_override\n\nDrawOverride: Draw override of the layer.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.SourceTermToGroundType.NEGATIVE",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.SourceTermToGroundType.NEGATIVE.html#negative",
        "title": "NEGATIVE",
        "section": "NEGATIVE",
        "text": "NEGATIVE"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.SourceTermToGroundType.NEGATIVE",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.SourceTermToGroundType.NEGATIVE.html#ansys.edb.core.terminal.terminals.SourceTermToGroundType.NEGATIVE",
        "title": "NEGATIVE > NEGATIVE > NEGATIVE",
        "section": "NEGATIVE > NEGATIVE",
        "text": "SourceTermToGroundType.NEGATIVE = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.PowerModule.comp_group_name",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.PowerModule.comp_group_name.html#comp_group_name",
        "title": "comp_group_name",
        "section": "comp_group_name",
        "text": "str: Component group name of the power module.\ncomp_group_name\nstr"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.PowerModule.comp_group_name",
        "href": "api/_autosummary/ansys.edb.core.layout.voltage_regulator.PowerModule.comp_group_name.html#ansys.edb.core.layout.voltage_regulator.PowerModule.comp_group_name",
        "title": "comp_group_name > comp_group_name > comp_group_name",
        "section": "comp_group_name > comp_group_name",
        "text": "property PowerModule.comp_group_name\n\nstr: Component group name of the power module.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.layout_obj_type.html#layout_obj_type",
        "title": "layout_obj_type",
        "section": "layout_obj_type",
        "text": "layout_obj_type"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.layout_obj_type",
        "href": "api/_autosummary/ansys.edb.core.terminal.terminals.EdgeTerminal.layout_obj_type.html#ansys.edb.core.terminal.terminals.EdgeTerminal.layout_obj_type",
        "title": "layout_obj_type > layout_obj_type > layout_obj_type",
        "section": "layout_obj_type > layout_obj_type",
        "text": "EdgeTerminal.layout_obj_type = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.component",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.component.html#component",
        "title": "component",
        "section": "component",
        "text": "ComponentGroup:         Component of the Connectable object.\ncomponent\nComponentGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.component",
        "href": "api/_autosummary/ansys.edb.core.hierarchy.group.Group.component.html#ansys.edb.core.hierarchy.group.Group.component",
        "title": "component > component > component",
        "section": "component > component",
        "text": "property Group.component\n\nComponentGroup:         Component of the Connectable object.\n\n!! processed by numpydoc !!"
    }
]